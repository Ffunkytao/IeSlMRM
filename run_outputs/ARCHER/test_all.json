[
    {
        "id": 0,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nAt 12:47:02 on June 2, 2015, how many bike docks are not available at San Jose Citizen Center Station?the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.dock_count - B.docks_available AS n_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE B.time = \"2015-06-02 12:47:02\" AND A.name = \"San Jose Civic Center\"",
        "db_id": "bike_1"
    },
    {
        "id": 1,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nGive me the sum of unavailable bike docks at San Jose Citizen Center Station on 2 June 2015 at 12:47:02.the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.dock_count - B.docks_available AS n_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE B.time = \"2015-06-02 12:47:02\" AND A.name = \"San Jose Civic Center\"",
        "db_id": "bike_1"
    },
    {
        "id": 2,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C H question is as follows:\nAt 12:47:02 on June 2, 2015, how many bike docks are not available at San Jose Citizen Center Station if there were 20 docks in total?the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 20 - B.docks_available AS n_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE B.time = \"2015-06-02 12:47:02\" AND A.name = \"San Jose Civic Center\"",
        "db_id": "bike_1"
    },
    {
        "id": 3,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C H question is as follows:\nIf there are usually 20 docks at San Jose Citizen Center Station then how many will be unavailable on 2 June 2015 at 12:47:02 PM.the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 20 - B.docks_available AS n_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE B.time = \"2015-06-02 12:47:02\" AND A.name = \"San Jose Civic Center\"",
        "db_id": "bike_1"
    },
    {
        "id": 4,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nHow many bike stations are there in total in the City of the Golden Gate, and how many less than in the City of the Golden Gate in Palo Alto?the evidence is as follow:\nSan Francisco is known as city of the Golden Gate.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( SELECT COUNT ( * ) FROM station WHERE city = \"Palo Alto\" ) - COUNT ( * ) AS diff FROM station WHERE city = \"San Francisco\"",
        "db_id": "bike_1"
    },
    {
        "id": 5,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nWithin the city of the Golden Gate, what is the total number of bike stations and how many fewer here than in Palo Alto?the evidence is as follow:\nSan Francisco is known as city of the Golden Gate.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( SELECT COUNT ( * ) FROM station WHERE city = \"Palo Alto\" ) - COUNT ( * ) AS diff FROM station WHERE city = \"San Francisco\"",
        "db_id": "bike_1"
    },
    {
        "id": 6,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + * C H question is as follows:\nHow many bike stations does the city of the Golden Gate have in total,  and how many less than in the City of the Golden Gate in Palo Alto if Palo Alto has 10 more bike stations than twice its original number of bike stations?the evidence is as follow:\nSan Francisco is known as city of the Golden Gate.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( SELECT COUNT ( * ) * 2 + 10 FROM station WHERE city = \"Palo Alto\" ) - COUNT ( * ) AS diff FROM station WHERE city = \"San Francisco\"",
        "db_id": "bike_1"
    },
    {
        "id": 7,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + * C H question is as follows:\nGiven that Palo Alto has ten more bike stations than two times the original sum, how many bike stations are in the city of the Golden Gate and how much less is this sum than Palo Alto?the evidence is as follow:\nSan Francisco is known as city of the Golden Gate.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( SELECT COUNT ( * ) * 2 + 10 FROM station WHERE city = \"Palo Alto\" ) - COUNT ( * ) AS diff FROM station WHERE city = \"San Francisco\"",
        "db_id": "bike_1"
    },
    {
        "id": 8,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nAt 12:46:02 on June 2nd, 2015 , how many available docks are there in total in the stations built on August 20th, 2013, and what about the unavailable docks?the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( B.docks_available ) AS total_available , SUM ( A.dock_count ) - SUM ( B.docks_available ) AS total_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE A.installation_date = \"8/20/2013\" AND B.time = \"2015-06-02 12:46:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 9,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nProvide the total number of available docks and the total number of unavailable docks on 2nd June 2015 at 12:46:02 in the stations which are build on 20th August 2013.the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( B.docks_available ) AS total_available , SUM ( A.dock_count ) - SUM ( B.docks_available ) AS total_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE A.installation_date = \"8/20/2013\" AND B.time = \"2015-06-02 12:46:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 10,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * - C H question is as follows:\nIf the number of docks at each station built on August 20, 2013 is twice more than the number of docks at the \"Grant Avenue at Columbus Avenue\" station by five, how many available docks are there in total in the stations built on August 20, 2013 at the moment of 12:46:02 on June 2nd, 2015, and what about the unavailable docks?the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( B.docks_available ) AS total_available , SUM ( 2 * ( SELECT dock_count FROM station WHERE name = \"Grant Avenue at Columbus Avenue\" ) + 5 - B.docks_available ) AS total_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE A.installation_date = \"8/20/2013\" AND B.time = \"2015-06-02 12:46:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 11,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * - C H question is as follows:\nConsidering the stations constructed on 20th August 2013, which each have two times more the number of docks than \"Grant Avenue at Columbus Avenue\" station plus five, how many available and unavailable docks are there at 12:46:02 PM in 2015 on 2nd of June?the evidence is as follow:\nunavailable dock count= total dock count - available dock count\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( B.docks_available ) AS total_available , SUM ( 2 * ( SELECT dock_count FROM station WHERE name = \"Grant Avenue at Columbus Avenue\" ) + 5 - B.docks_available ) AS total_unavailable FROM station A JOIN status B ON A.id = B.station_id WHERE A.installation_date = \"8/20/2013\" AND B.time = \"2015-06-02 12:46:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 12,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * question is as follows:\nFind the trip ID whose duration is at least twice the average duration of the trips started from \"2nd at Folsom\" station.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT id FROM trip WHERE duration >= ( SELECT 2 * AVG ( duration ) FROM trip WHERE start_station_name = \"2nd at Folsom\" )",
        "db_id": "bike_1"
    },
    {
        "id": 13,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * question is as follows:\nReturn the trip ID with a duration minimum of twice the average trip duration starting at station \"2nd at Folsom\"?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT id FROM trip WHERE duration >= ( SELECT 2 * AVG ( duration ) FROM trip WHERE start_station_name = \"2nd at Folsom\" )",
        "db_id": "bike_1"
    },
    {
        "id": 14,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * H question is as follows:\nFind the trip ID whose duration is at least twice the average duration of the trips that is started from \"2nd at Folsom\" station, if the average duration of the trips started from \"2nd at Folsom\" station is 666.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT id FROM trip WHERE duration >= 2 * 666",
        "db_id": "bike_1"
    },
    {
        "id": 15,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * H question is as follows:\nGet me the ID of a trip with a duration at least twice as long as 666 which is the average trip duration starting from \"2nd at Folsom\".the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT id FROM trip WHERE duration >= 2 * 666",
        "db_id": "bike_1"
    },
    {
        "id": 16,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * question is as follows:\nAt 13:59:02 on June 2nd, 2015, which station has more than twice the available bike at \"2nd at Townsend\" station? Give the names of these stations.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.name FROM status A JOIN station B ON A.station_id = B.id WHERE A.bikes_available > 2 * ( SELECT A.bikes_available FROM status A JOIN station B ON A.station_id = B.id WHERE B.name = \"2nd at Townsend\" AND A.time = \"2015-06-02 13:59:02\" ) AND A.time = \"2015-06-02 13:59:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 17,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * question is as follows:\nTell me the names of the stations with more than twice available bikes at \"2nd at Townsend\" for the time 1:59:02 PM on 2nd June 2015.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.name FROM status A JOIN station B ON A.station_id = B.id WHERE A.bikes_available > 2 * ( SELECT A.bikes_available FROM status A JOIN station B ON A.station_id = B.id WHERE B.name = \"2nd at Townsend\" AND A.time = \"2015-06-02 13:59:02\" ) AND A.time = \"2015-06-02 13:59:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 18,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * H question is as follows:\nAt 13:59:02 on June 2nd, 2015, which station has more than twice the available bike at \"2nd at Townsend\" station, if \"2nd at Townsend\" station has 5 available bikes? Give the names of these stations.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.name FROM status A JOIN station B ON A.station_id = B.id WHERE A.bikes_available > 2 * 5 AND A.time = \"2015-06-02 13:59:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 19,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * H question is as follows:\nGiven that the \"2nd at Townsend\" station has five available bikes at 13:59:02 on June 2 in 2015, tell me the names of the stations with more than twice available bikes at \"2nd at Townsend\" station at that time.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.name FROM status A JOIN station B ON A.station_id = B.id WHERE A.bikes_available > 2 * 5 AND A.time = \"2015-06-02 13:59:02\"",
        "db_id": "bike_1"
    },
    {
        "id": 20,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nFor each station, list the station name, and find the minimum duration, maximum duration of the trips that ended at the station, and the difference between the maximumand and minimum duration.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT end_station_name , MAX ( duration ) AS max_duration , MIN ( duration ) AS min_duration , MAX ( duration ) - MIN ( duration ) AS diff FROM trip GROUP BY end_station_name",
        "db_id": "bike_1"
    },
    {
        "id": 21,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nList the names of all stations, and calculate the minimum duration, maximum duration and difference between the two for trips ending at each respective station.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT end_station_name , MAX ( duration ) AS max_duration , MIN ( duration ) AS min_duration , MAX ( duration ) - MIN ( duration ) AS diff FROM trip GROUP BY end_station_name",
        "db_id": "bike_1"
    },
    {
        "id": 22,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nIn the place with zip code 94107, which day has the largest temperature difference?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT date FROM weather WHERE zip_code = \"94107\" AND max_temperature_f - min_temperature_f = ( SELECT MAX ( max_temperature_f - min_temperature_f ) FROM weather WHERE zip_code = \"94107\" )",
        "db_id": "bike_1"
    },
    {
        "id": 23,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nWhich day of the year has the largest temperature difference for the 94107 zip code?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT date FROM weather WHERE zip_code = \"94107\" AND max_temperature_f - min_temperature_f = ( SELECT MAX ( max_temperature_f - min_temperature_f ) FROM weather WHERE zip_code = \"94107\" )",
        "db_id": "bike_1"
    },
    {
        "id": 24,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nOn Armistice Day in 2013, what is the zip code of the place that had the highest mean visibility miles, and what was the temperature difference there on that day?the evidence is as follow:\nArmistice Day is commemorated on 11th November every year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , tem_diff FROM ( SELECT zip_code , MAX ( mean_visibility_miles ) , max_temperature_f - min_temperature_f AS tem_diff FROM weather WHERE date = \"11/11/2013\" )",
        "db_id": "bike_1"
    },
    {
        "id": 25,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nFind the zip code of the place with the highest mean visibility (in miles) on the 2013 Armistice Day and also calculate the temperature difference there on that day.the evidence is as follow:\nArmistice Day is commemorated on 11th November every year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , tem_diff FROM ( SELECT zip_code , MAX ( mean_visibility_miles ) , max_temperature_f - min_temperature_f AS tem_diff FROM weather WHERE date = \"11/11/2013\" )",
        "db_id": "bike_1"
    },
    {
        "id": 26,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nOn Armistice Day in 2013, what is the zip code of the place that had the highest mean visibility miles, and what was the temperature difference there on that day if the minimum temperature is 52 degrees Fahrenheit there?the evidence is as follow:\nArmistice Day is commemorated on 11th November every year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , tem_diff FROM ( SELECT zip_code , MAX ( mean_visibility_miles ) , max_temperature_f - 52 AS tem_diff FROM weather WHERE date = \"11/11/2013\" )",
        "db_id": "bike_1"
    },
    {
        "id": 27,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nWhat is the zip code of the place with the highest mean visibility on Armistice Day 2013 as measured by miles and also what was the temperature difference there when the minimum was 52 F?the evidence is as follow:\nArmistice Day is commemorated on 11th November every year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , tem_diff FROM ( SELECT zip_code , MAX ( mean_visibility_miles ) , max_temperature_f - 52 AS tem_diff FROM weather WHERE date = \"11/11/2013\" )",
        "db_id": "bike_1"
    },
    {
        "id": 28,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * - C question is as follows:\nWhich day has the highest mean temperature in the place with zip code 94107? List the date and the mean temperature in Celsius.the evidence is as follow:\nTo convert Fahrenheit to celsius, the formula used is °C = 5/9(°F – 32).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT date , 1.0 * ( MAX ( mean_temperature_f ) - 32 ) * 5 / 9 AS celsius FROM weather WHERE zip_code = \"94107\"",
        "db_id": "bike_1"
    },
    {
        "id": 29,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * - C question is as follows:\nWhat was the day and mean temperature (in degrees C) of the day in area 94107 with the highest mean temperature?the evidence is as follow:\nTo convert Fahrenheit to celsius, the formula used is °C = 5/9(°F – 32).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT date , 1.0 * ( MAX ( mean_temperature_f ) - 32 ) * 5 / 9 AS celsius FROM weather WHERE zip_code = \"94107\"",
        "db_id": "bike_1"
    },
    {
        "id": 30,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nWhat are the zip code and average wind speed in kilometers per hour on January 1st, 2014 in each area?the evidence is as follow:\n1 miles per hour (mph) is equal to 1.609344 kilometres per hour (km/h).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , mean_wind_speed_mph * 1.609344 AS km_per_h FROM weather WHERE date = \"1/1/2014\"",
        "db_id": "bike_1"
    },
    {
        "id": 31,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nFor each area give me the zip code and average wind speed (in units kilometers per hour) for January 1 in 2014.the evidence is as follow:\n1 miles per hour (mph) is equal to 1.609344 kilometres per hour (km/h).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , mean_wind_speed_mph * 1.609344 AS km_per_h FROM weather WHERE date = \"1/1/2014\"",
        "db_id": "bike_1"
    },
    {
        "id": 32,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * C question is as follows:\nWhat are the zip code and the average wind speed in kilometers per hour on 1/1/2014 in each area,if the average wind speed on that day was increased by 20%?the evidence is as follow:\n1 miles per hour (mph) is equal to 1.609344 kilometres per hour (km/h).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , mean_wind_speed_mph * ( 1 + 0.2 ) * 1.609344 AS km_per_h FROM weather WHERE date = \"1/1/2014\"",
        "db_id": "bike_1"
    },
    {
        "id": 33,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * C question is as follows:\nOn January 1 2014 the average wind speed was increased by 20 percent so what are the zip code and the average wind speed per hour (in kilometers per hour) on this day?the evidence is as follow:\n1 miles per hour (mph) is equal to 1.609344 kilometres per hour (km/h).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , mean_wind_speed_mph * ( 1 + 0.2 ) * 1.609344 AS km_per_h FROM weather WHERE date = \"1/1/2014\"",
        "db_id": "bike_1"
    },
    {
        "id": 34,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * - C question is as follows:\nWhat is the precipitation in millimeters for the two days of November 12th, 2014 and Match 12th, 2014 at place with postcode address of 94041, and what is the difference?the evidence is as follow:\n25 mm equals one inch.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT mm_1 , mm_2 , ABS ( mm_1 - mm_2 ) AS diff FROM ( SELECT precipitation_inches * 25 AS mm_1 FROM weather WHERE zip_code = \"94041\" AND date = \"12/11/2014\" ) JOIN ( SELECT precipitation_inches * 25 AS mm_2 FROM weather WHERE zip_code = \"94041\" AND date = \"12/3/2014\" )",
        "db_id": "bike_1"
    },
    {
        "id": 35,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * - C question is as follows:\nCalculate the millimeter precipitation for 12th November and 12th March, both in 2014, in zip code area 94041 and the difference in precipitation between the two.the evidence is as follow:\n25 mm equals one inch.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT mm_1 , mm_2 , ABS ( mm_1 - mm_2 ) AS diff FROM ( SELECT precipitation_inches * 25 AS mm_1 FROM weather WHERE zip_code = \"94041\" AND date = \"12/11/2014\" ) JOIN ( SELECT precipitation_inches * 25 AS mm_2 FROM weather WHERE zip_code = \"94041\" AND date = \"12/3/2014\" )",
        "db_id": "bike_1"
    },
    {
        "id": 36,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * C H question is as follows:\nIf the precipitatio in the place with a postal code address of 94041 on November 12th, 2014 and Match 12th, 2014 decreases by 15%, how many millimeters are the precipitation on these two days, and what is the difference?the evidence is as follow:\n25 mm equals one inch.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT mm_1 , mm_2 , ABS ( mm_1 - mm_2 ) AS diff FROM ( SELECT precipitation_inches * ( 1 - 0.15 ) * 25 AS mm_1 FROM weather WHERE zip_code = \"94041\" AND date = \"12/11/2014\" ) JOIN ( SELECT precipitation_inches * ( 1 - 0.15 ) * 25 AS mm_2 FROM weather WHERE zip_code = \"94041\" AND date = \"12/3/2014\" )",
        "db_id": "bike_1"
    },
    {
        "id": 37,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * C H question is as follows:\nIn area 94041 the millimeter precipitation decreased by 15 percent on 2014 March 12th and November 12th; therefore calculate the millimeter precipitation on these days and the difference.the evidence is as follow:\n25 mm equals one inch.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT mm_1 , mm_2 , ABS ( mm_1 - mm_2 ) AS diff FROM ( SELECT precipitation_inches * ( 1 - 0.15 ) * 25 AS mm_1 FROM weather WHERE zip_code = \"94041\" AND date = \"12/11/2014\" ) JOIN ( SELECT precipitation_inches * ( 1 - 0.15 ) * 25 AS mm_2 FROM weather WHERE zip_code = \"94041\" AND date = \"12/3/2014\" )",
        "db_id": "bike_1"
    },
    {
        "id": 38,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nOn National Grief Awareness Day 2013, what is the zip code, maximum visibility, mean visibility, and minimum visibility in various places?the evidence is as follow:\n1 mile is equal to 1,609.344 meters. National Grief Awareness Day takes place on August 30th every year\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , max_visibility_miles * 1609.344 AS max_m , mean_visibility_miles * 1609.344 AS mean_m , min_visibility_miles * 1609.344 AS min_m FROM weather WHERE date = \"8/30/2013\"",
        "db_id": "bike_1"
    },
    {
        "id": 39,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nReturn the max, min and mean visibility, and the zip code from various places on the National Grief Awareness day in year 2013?the evidence is as follow:\n1 mile is equal to 1,609.344 meters. National Grief Awareness Day takes place on August 30th every year\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , max_visibility_miles * 1609.344 AS max_m , mean_visibility_miles * 1609.344 AS mean_m , min_visibility_miles * 1609.344 AS min_m FROM weather WHERE date = \"8/30/2013\"",
        "db_id": "bike_1"
    },
    {
        "id": 40,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + question is as follows:\nIf 10 docks were added to the station with the fewest docks, how many docks will it have?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MIN ( dock_count ) + 10 AS n_dock FROM station",
        "db_id": "bike_1"
    },
    {
        "id": 41,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + question is as follows:\nWhat is the sum of docks at the station with the fewest docks currently if we add ten more?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MIN ( dock_count ) + 10 AS n_dock FROM station",
        "db_id": "bike_1"
    },
    {
        "id": 42,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + C question is as follows:\nThe government plans to build four more stations in the third most populous city in California. How many stations will there be in total?the evidence is as follow:\nSan Jose is the third largest city by population in California.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) + 4 AS n_stations FROM station WHERE city = \"San Jose\"",
        "db_id": "bike_1"
    },
    {
        "id": 43,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + C question is as follows:\nIf we add four more, what will the total number of stations be in California's 3rd most populous city.the evidence is as follow:\nSan Jose is the third largest city by population in California.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) + 4 AS n_stations FROM station WHERE city = \"San Jose\"",
        "db_id": "bike_1"
    },
    {
        "id": 44,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nWhat is the zip code and highest temperature in various places on October 24th, 2014, and what is the difference between it and the highest temperature ever recorded on Earth?the evidence is as follow:\n57.8 °C (136 °F) is the hottest temperature ever recorded on Earth.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , max_temperature_f , ABS ( max_temperature_f - 136 ) AS diff FROM weather WHERE date = \"10/24/2014\"",
        "db_id": "bike_1"
    },
    {
        "id": 45,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nGiven me the zip code and the hottest temperature in various places for the 24th day in October in year 2014 and then compare this to the hottest temperature ever recorded on Earth.the evidence is as follow:\n57.8 °C (136 °F) is the hottest temperature ever recorded on Earth.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT zip_code , max_temperature_f , ABS ( max_temperature_f - 136 ) AS diff FROM weather WHERE date = \"10/24/2014\"",
        "db_id": "bike_1"
    },
    {
        "id": 46,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * question is as follows:\nWhat percentage of stations in San Francisco have more than 25 docks?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM station WHERE city = \"San Francisco\" ) AS propotion FROM station WHERE city = \"San Francisco\" AND dock_count > 25",
        "db_id": "bike_1"
    },
    {
        "id": 47,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * question is as follows:\nHow many stations, as a percentage of total stations, have more than 25 docks in San Francisco.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM station WHERE city = \"San Francisco\" ) AS propotion FROM station WHERE city = \"San Francisco\" AND dock_count > 25",
        "db_id": "bike_1"
    },
    {
        "id": 48,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * question is as follows:\nHow many times is the number of stations in the city with the most stations to the number of stations in the city with the least stations?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( n_station ) / MIN ( n_station ) AS times FROM ( SELECT city , COUNT ( * ) AS n_station FROM station GROUP BY city )",
        "db_id": "bike_1"
    },
    {
        "id": 49,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * question is as follows:\nWhat is the ratio between the number of stations in the city with the greatest stations to fewest stations?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( n_station ) / MIN ( n_station ) AS times FROM ( SELECT city , COUNT ( * ) AS n_station FROM station GROUP BY city )",
        "db_id": "bike_1"
    },
    {
        "id": 50,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / question is as follows:\nWhen the temperature difference is maximum, how many times is the maximum temperature higher than the minimum temperature?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * max_temperature_f / min_temperature_f AS times FROM weather WHERE max_temperature_f - min_temperature_f = ( SELECT MAX ( max_temperature_f - min_temperature_f ) FROM weather )",
        "db_id": "bike_1"
    },
    {
        "id": 51,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / question is as follows:\nWhat is the ratio of maximum temperature to minimum temperature when the temperature difference is maximized?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * max_temperature_f / min_temperature_f AS times FROM weather WHERE max_temperature_f - min_temperature_f = ( SELECT MAX ( max_temperature_f - min_temperature_f ) FROM weather )",
        "db_id": "bike_1"
    },
    {
        "id": 52,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * - C question is as follows:\nWhat is the average maximum temperature in degrees Celsius in the area with the postcode of 94063? How much higher than the average minimum temperature in degrees Celsius?the evidence is as follow:\nTo convert Fahrenheit to celsius, the formula used is °C = 5/9(°F – 32).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( AVG ( max_temperature_f ) - 32 ) * 5 / 9 AS avg_max_celsius , ( ( AVG ( max_temperature_f ) - AVG ( min_temperature_f ) ) ) * 5 / 9 AS diff_celsius FROM weather WHERE zip_code = \"94063\"",
        "db_id": "bike_1"
    },
    {
        "id": 53,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA / * - C question is as follows:\nWhat is the average maximum temperature (in C) for ZIP 94063 and how much higher is it than the minimum temperature?the evidence is as follow:\nTo convert Fahrenheit to celsius, the formula used is °C = 5/9(°F – 32).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( AVG ( max_temperature_f ) - 32 ) * 5 / 9 AS avg_max_celsius , ( ( AVG ( max_temperature_f ) - AVG ( min_temperature_f ) ) ) * 5 / 9 AS diff_celsius FROM weather WHERE zip_code = \"94063\"",
        "db_id": "bike_1"
    },
    {
        "id": 54,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nHow much has Sterling spent so far?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( C.order_quantity * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 55,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nWhat is the total spend for Sterling to date?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( C.order_quantity * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 56,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C H question is as follows:\nIf the unit price of all Gucci products is 600, how much has Sterling spent so far?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( cost ) FROM ( SELECT SUM ( C.order_quantity * 600 ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\" AND product_name = \"gucci\" UNION SELECT SUM ( C.order_quantity * D.product_price ) AS ost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\" AND product_name != \"gucci\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 57,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C H question is as follows:\nCalculate Sterling's total spend to date if all Gucci products cost 600 each.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( cost ) FROM ( SELECT SUM ( C.order_quantity * 600 ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\" AND product_name = \"gucci\" UNION SELECT SUM ( C.order_quantity * D.product_price ) AS ost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\" AND product_name != \"gucci\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 58,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C - / question is as follows:\nSterling is a member and gets a 20% discount on all products. How much has he spent so far?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( C.order_quantity * D.product_price * ( 1.0 - 1.0 * 20 / 100 ) ) AS cost_after_discount FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 59,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C - / question is as follows:\nCalculate Sterling's spend to date factoring in a 20% member price discount.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( C.order_quantity * D.product_price * ( 1.0 - 1.0 * 20 / 100 ) ) AS cost_after_discount FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 60,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / C question is as follows:\nSterling is a member and gets a 20% discount on all products. How much has he saved so far?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( C.order_quantity * D.product_price * ( 1.0 * 20 / 100 ) ) AS svaed_money FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 61,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / C question is as follows:\nCalculate how much Sterling has saved to date through their 20% member price discount.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( C.order_quantity * D.product_price * ( 1.0 * 20 / 100 ) ) AS svaed_money FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Sterling\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 62,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nList customer IDs, names, addresses, phone numbers, and email addresses in descending order of their total spending to date.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_id , A.customer_name , A.customer_address , A.customer_phone , A.customer_email , SUM ( C.order_quantity * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id GROUP BY A.customer_name ORDER BY cost DESC",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 63,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nSort customers by descending order of total spending to today and give me the total spend, name, email address, phone number, mail address and customer ID.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_id , A.customer_name , A.customer_address , A.customer_phone , A.customer_email , SUM ( C.order_quantity * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id GROUP BY A.customer_name ORDER BY cost DESC",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 64,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nWhat is the total price of Cleo's latest order?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cost FROM ( SELECT B.order_date , SUM ( C.order_quantity * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Cleo\" GROUP BY C.order_id ) ORDER BY order_date DESC LIMIT 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 65,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nCalculate the sum price of the lastest order from Cleo.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cost FROM ( SELECT B.order_date , SUM ( C.order_quantity * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Cleo\" GROUP BY C.order_id ) ORDER BY order_date DESC LIMIT 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 66,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C H question is as follows:\nWhat is the total price of Cleo's latest order if he purchased 5 of each product?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cost FROM ( SELECT B.order_date , SUM ( 5.0 * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Cleo\" GROUP BY C.order_id ) ORDER BY order_date DESC LIMIT 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 67,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C H question is as follows:\nIf Cleo purchased 5 of each product, then what is the total cost of Cleo's latest order?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cost FROM ( SELECT B.order_date , SUM ( 5.0 * D.product_price ) AS cost FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.customer_name = \"Cleo\" GROUP BY C.order_id ) ORDER BY order_date DESC LIMIT 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 68,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / C question is as follows:\nThe cost of Apple products is 40% of the selling price, Gucci products is 20% of the selling price, and other products is 50% of the selling price. Please list each product's ID, name, sales volume, sales revenue, and total gross profit.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity. Gross profit is calculated by substracting costs of goods from revenue.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 40.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"Apple\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 20.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 50.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name != \"Apple\" AND B.product_name != \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , 0 , 0 , 0 FROM ( SELECT product_id FROM Products A EXCEPT SELECT B.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id ) A JOIN Products B ON A.product_id = B.product_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 69,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / C question is as follows:\nList all products and product ID, name, volume of sales, sales revenue and total gross profit if Apple products cost 40% of selling price, Gucci products cost 20% of selling price and all other products cost half their sale price.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity. Gross profit is calculated by substracting costs of goods from revenue.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 40.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"Apple\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 20.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 50.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name != \"Apple\" AND B.product_name != \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , 0 , 0 , 0 FROM ( SELECT product_id FROM Products A EXCEPT SELECT B.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id ) A JOIN Products B ON A.product_id = B.product_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 70,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / C H question is as follows:\nThe cost of Apple products is 40% of the selling price, Gucci products is 20% of the selling price, and other products is 50% of the selling price. If all Apple products are discounted by 15%, please list each product's ID, name, sales volume, sales revenue, and total gross profit.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity. Gross profit is calculated by substracting costs of goods from revenue.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * ( B.product_price * ( 1.0 - 15.0 / 100 ) ) ) AS revenue , SUM ( A.order_quantity * ( B.product_price * ( 1.0 - 15.0 / 100 ) ) ) * ( 1.0 - 40.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"Apple\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 20.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 50.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name != \"Apple\" AND B.product_name != \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , 0 , 0 , 0 FROM ( SELECT product_id FROM Products A EXCEPT SELECT B.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id ) A JOIN Products B ON A.product_id = B.product_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 71,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / C H question is as follows:\nDuring an Apple sale discounting all product selling price by 15%, list all products and name, sales volume, product ID, revenue of sales and total profit gross if Apple products cost 40% of selling price, Gucci products cost 20% of selling price and all other products cost half their sale price.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity. Gross profit is calculated by substracting costs of goods from revenue.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * ( B.product_price * ( 1.0 - 15.0 / 100 ) ) ) AS revenue , SUM ( A.order_quantity * ( B.product_price * ( 1.0 - 15.0 / 100 ) ) ) * ( 1.0 - 40.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"Apple\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 20.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name = \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , SUM ( A.order_quantity ) AS quantity , SUM ( A.order_quantity * B.product_price ) AS revenue , SUM ( A.order_quantity * B.product_price ) * ( 1.0 - 50.0 / 100 ) AS profit FROM Order_Items A JOIN Products B ON A.product_id = B.product_id WHERE B.product_name != \"Apple\" AND B.product_name != \"gucci\" GROUP BY B.product_id UNION SELECT B.product_id , B.product_name , 0 , 0 , 0 FROM ( SELECT product_id FROM Products A EXCEPT SELECT B.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id ) A JOIN Products B ON A.product_id = B.product_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 72,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / question is as follows:\nWhat percentage of orders have been completed?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customer_Orders ) * 100 AS percent FROM Customer_Orders WHERE order_status_code = \"Completed\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 73,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / question is as follows:\nOf total orders, what percentage are completed?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customer_Orders ) * 100 AS percent FROM Customer_Orders WHERE order_status_code = \"Completed\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 74,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / H question is as follows:\nIf all orders before year 2000 have been completed, what percentage of orders have been completed?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100 - 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customer_Orders ) * 100 AS percent FROM Customer_Orders WHERE strftime ( \"%Y\" , order_date ) >= \"2000\" AND order_status_code != \"Completed\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 75,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / H question is as follows:\nOf total orders, what percentage are completed assuming all pre-2000 orders are completed?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100 - 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customer_Orders ) * 100 AS percent FROM Customer_Orders WHERE strftime ( \"%Y\" , order_date ) >= \"2000\" AND order_status_code != \"Completed\"",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 76,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nWhat are the names of users with multiple contact methods and the amount of their first order?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_name , price FROM ( SELECT M.customer_id , N.customer_name , M.price , MIN ( M.order_date ) FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) M JOIN Customers N ON M.customer_id = N.customer_id WHERE M.customer_id IN ( SELECT customer_id FROM Contacts GROUP BY customer_id HAVING COUNT ( * ) > 1 ) GROUP BY M.customer_id )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 77,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nTell me the names and first order cost of users only with multiple contact methods?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_name , price FROM ( SELECT M.customer_id , N.customer_name , M.price , MIN ( M.order_date ) FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) M JOIN Customers N ON M.customer_id = N.customer_id WHERE M.customer_id IN ( SELECT customer_id FROM Contacts GROUP BY customer_id HAVING COUNT ( * ) > 1 ) GROUP BY M.customer_id )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 78,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C H question is as follows:\nIf all Apple products before year 2000 were priced at 888, what is the amount of the first order for users with multiple contact methods?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_name , price FROM ( SELECT M.customer_id , N.customer_name , M.price , MIN ( M.order_date ) FROM ( SELECT customer_id , order_id , order_date , SUM ( price ) AS price FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * 888.0 ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id WHERE C.product_name = \"Apple\" AND strftime ( \"%Y\" , B.order_date ) < \"2000\" GROUP BY B.customer_id , B.order_id UNION SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id WHERE C.product_name != \"Apple\" OR strftime ( \"%Y\" , B.order_date ) >= \"2000\" GROUP BY B.customer_id , B.order_id ) GROUP BY customer_id , order_id ) M JOIN Customers N ON M.customer_id = N.customer_id WHERE M.customer_id IN ( SELECT customer_id FROM Contacts GROUP BY customer_id HAVING COUNT ( * ) > 1 ) GROUP BY M.customer_id )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 79,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C H question is as follows:\nTell me the amount of the initial order only for users with multiple contact methods if all Apple products cost 888 before 2000?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_name , price FROM ( SELECT M.customer_id , N.customer_name , M.price , MIN ( M.order_date ) FROM ( SELECT customer_id , order_id , order_date , SUM ( price ) AS price FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * 888.0 ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id WHERE C.product_name = \"Apple\" AND strftime ( \"%Y\" , B.order_date ) < \"2000\" GROUP BY B.customer_id , B.order_id UNION SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id WHERE C.product_name != \"Apple\" OR strftime ( \"%Y\" , B.order_date ) >= \"2000\" GROUP BY B.customer_id , B.order_id ) GROUP BY customer_id , order_id ) M JOIN Customers N ON M.customer_id = N.customer_id WHERE M.customer_id IN ( SELECT customer_id FROM Contacts GROUP BY customer_id HAVING COUNT ( * ) > 1 ) GROUP BY M.customer_id )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 80,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nWhat are the names of users who have had multiple different addresses, and which postcode have they used the longest?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_name, zip_postcode FROM (SELECT C.customer_name, B.zip_postcode, MAX (julianday (A.date_to) - julianday (A.date_from)) FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id JOIN Customers C ON C.customer_id = A.customer_id GROUP BY A.customer_id HAVING COUNT (*) > 1)",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 81,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nTell me the names of users who have held multiple addresses on file and which postcode each user has held the longest?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_name, zip_postcode FROM (SELECT C.customer_name, B.zip_postcode, MAX (julianday (A.date_to) - julianday (A.date_from)) FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id JOIN Customers C ON C.customer_id = A.customer_id GROUP BY A.customer_id HAVING COUNT (*) > 1)",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 82,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nWhat are the names of users have never had multiple different addresses, and which postcode have they used?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.customer_name, B.zip_postcode FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id JOIN Customers C ON C.customer_id = A.customer_id GROUP BY A.customer_id HAVING COUNT (*) = 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 83,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nTell me the names of users who have never had more than 1 address at any given time and which postcode each user held?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.customer_name, B.zip_postcode FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id JOIN Customers C ON C.customer_id = A.customer_id GROUP BY A.customer_id HAVING COUNT (*) = 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 84,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nWhich user has not placed an order since 2000? List their ID, name, email, and the amount of their last order.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id , customer_name , customer_email , price AS last_order_price FROM ( SELECT M.customer_id , N.customer_name , N.customer_email , M.price , MAX ( M.order_date ) FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) M JOIN Customers N ON M.customer_id = N.customer_id WHERE M.customer_id IN ( SELECT customer_id FROM Customer_Orders GROUP BY customer_id HAVING strftime ( \"%Y\" , MAX ( order_date ) ) < \"2000\" ) GROUP BY M.customer_id )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 85,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nTell me the name, email, customer ID and most recent order total of users who have not ordered anything since 2000?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id , customer_name , customer_email , price AS last_order_price FROM ( SELECT M.customer_id , N.customer_name , N.customer_email , M.price , MAX ( M.order_date ) FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) M JOIN Customers N ON M.customer_id = N.customer_id WHERE M.customer_id IN ( SELECT customer_id FROM Customer_Orders GROUP BY customer_id HAVING strftime ( \"%Y\" , MAX ( order_date ) ) < \"2000\" ) GROUP BY M.customer_id )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 86,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * C question is as follows:\nUsers can earn 222 points for a single order with a total price of over 1000 and another 666 points for a total price of over 2000. Which user currently has the most total points? Give me their ID.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id FROM ( SELECT customer_id , COUNT ( * ) * ( 666 + 222 ) AS points FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) WHERE price > 2000 GROUP BY customer_id UNION SELECT customer_id , COUNT ( * ) * 222 AS points FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) WHERE price > 1000 AND price < 2000 GROUP BY customer_id ) GROUP BY customer_id ORDER BY points DESC LIMIT 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 87,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * C question is as follows:\nTell me the ID of the user with the most total points if all orders over 1000 earn 222 points and orders over 2000 earn and additional 666 points?the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id FROM ( SELECT customer_id , COUNT ( * ) * ( 666 + 222 ) AS points FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) WHERE price > 2000 GROUP BY customer_id UNION SELECT customer_id , COUNT ( * ) * 222 AS points FROM ( SELECT B.customer_id , B.order_id , B.order_date , SUM ( A.order_quantity * C.product_price ) AS price FROM Order_Items A JOIN Customer_Orders B ON A.order_id = B.order_id JOIN Products C ON C.product_id = A.product_id GROUP BY B.customer_id , B.order_id ) WHERE price > 1000 AND price < 2000 GROUP BY customer_id ) GROUP BY customer_id ORDER BY points DESC LIMIT 1",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 88,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nHow much higher is the average unit price of clothing compared to hardware?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT clothes_avg - hw_avg AS diff FROM ( SELECT AVG ( product_price ) AS hw_avg FROM Products WHERE product_type_code = \"Hardware\" ) JOIN ( SELECT AVG ( product_price ) AS clothes_avg FROM Products WHERE product_type_code = \"Clothes\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 89,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nCalculate the difference in average prices between clothing and hardware?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT clothes_avg - hw_avg AS diff FROM ( SELECT AVG ( product_price ) AS hw_avg FROM Products WHERE product_type_code = \"Hardware\" ) JOIN ( SELECT AVG ( product_price ) AS clothes_avg FROM Products WHERE product_type_code = \"Clothes\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 90,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * - / H question is as follows:\nIf clothing prices increase by 20%, how much higher is the average unit price of clothing compared to hardware?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( 1 + 20.0 / 100 ) * clothes_avg - hw_avg AS diff FROM ( SELECT AVG ( product_price ) AS hw_avg FROM Products WHERE product_type_code = \"Hardware\" ) JOIN ( SELECT AVG ( product_price ) AS clothes_avg FROM Products WHERE product_type_code = \"Clothes\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 91,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * - / H question is as follows:\nCalculate how much higher the difference in average price is between clothing and hardware if clothing prices increase by 20%?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( 1 + 20.0 / 100 ) * clothes_avg - hw_avg AS diff FROM ( SELECT AVG ( product_price ) AS hw_avg FROM Products WHERE product_type_code = \"Hardware\" ) JOIN ( SELECT AVG ( product_price ) AS clothes_avg FROM Products WHERE product_type_code = \"Clothes\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 92,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / C question is as follows:\nHow many users have used an address in a state with a capital city of Frankfurt, and what is the proportion of females among them?the evidence is as follow:\nFrankfort is the capital city of Kentucky state.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_total , 1.0 * n_female / n_total AS female_ratio FROM ( SELECT COUNT ( DISTINCT ( A.customer_id ) ) AS n_female FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id JOIN Contacts C ON A.customer_id = C.customer_id WHERE B.state_province_county = \"Kentucky\" AND C.gender = \"female\" ) JOIN ( SELECT COUNT ( DISTINCT ( A.customer_id ) ) AS n_total FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id WHERE B.state_province_county = \"Kentucky\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 93,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / C question is as follows:\nWhat is the total number of users in the state with Frankfurt as the capital city? What proportion of this total are females?the evidence is as follow:\nFrankfort is the capital city of Kentucky state.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_total , 1.0 * n_female / n_total AS female_ratio FROM ( SELECT COUNT ( DISTINCT ( A.customer_id ) ) AS n_female FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id JOIN Contacts C ON A.customer_id = C.customer_id WHERE B.state_province_county = \"Kentucky\" AND C.gender = \"female\" ) JOIN ( SELECT COUNT ( DISTINCT ( A.customer_id ) ) AS n_total FROM Customer_Address_History A JOIN Addresses B ON A.address_id = B.address_id WHERE B.state_province_county = \"Kentucky\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 94,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nWhat are the ID, name, and sales volume of the product that has the highest sales volume, and how much higher is it compared to the product with the lowest sales volume?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.product_id , t1.product_name , MAX ( t1.quantity ) AS max_quantity , t2.diff FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) t1 JOIN ( SELECT MAX ( quantity ) - MIN ( quantity ) AS diff FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) ) t2",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 95,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nFind me the product ID and name with the highest volume of sales, and tell me its sales volumne, and how much higher this volume is than the product with the lowest sales volume?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.product_id , t1.product_name , MAX ( t1.quantity ) AS max_quantity , t2.diff FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) t1 JOIN ( SELECT MAX ( quantity ) - MIN ( quantity ) AS diff FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) ) t2",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 96,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + H question is as follows:\nWhat are the ID and name of product that has the highest sales volume? If its sales volume was increased by 500, what is its sales volume and how much higher is it compared to the product with the lowest sales volume?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.product_id , t1.product_name , MAX ( t1.quantity ) + 500 AS max_quantity , t2.diff + 500 FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) t1 JOIN ( SELECT MAX ( quantity ) - MIN ( quantity ) AS diff FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) ) t2",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 97,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + H question is as follows:\nFind me the ID and name of the product with the highest sales volume. What would its sales volume be if it increased by 500, and how much higher would its sale volume be , relative to the product with lowest sale?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.product_id , t1.product_name , MAX ( t1.quantity ) + 500 AS max_quantity , t2.diff + 500 FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) t1 JOIN ( SELECT MAX ( quantity ) - MIN ( quantity ) AS diff FROM ( SELECT A.product_id , B.product_name , SUM ( order_quantity ) AS quantity FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id UNION SELECT product_id , product_name , 0 AS quantity FROM Products WHERE product_id NOT IN ( SELECT A.product_id FROM Order_Items A JOIN Products B ON A.product_id = B.product_id GROUP BY A.product_id ) ) ) t2",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 98,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * / C question is as follows:\nA 5% service charge is required for credit card payments. List the name of each customer and how much each customer spent on each order along with the order id.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_name , B.order_id , ( C.order_quantity * D.product_price ) * ( 1 + 5.0 / 100 ) AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code = \"Credit Card\" GROUP BY A.customer_name , B.order_id UNION SELECT A.customer_name , B.order_id , C.order_quantity * D.product_price AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code != \"Credit Card\" GROUP BY A.customer_name , B.order_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 99,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * / C question is as follows:\nTell me the name of each customer and how much each customer spent on each order along with the order id, if a 5% service charge is required for all credit card payments.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_name , B.order_id , ( C.order_quantity * D.product_price ) * ( 1 + 5.0 / 100 ) AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code = \"Credit Card\" GROUP BY A.customer_name , B.order_id UNION SELECT A.customer_name , B.order_id , C.order_quantity * D.product_price AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code != \"Credit Card\" GROUP BY A.customer_name , B.order_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 100,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * / C H question is as follows:\nA 5% service charge is required for credit card payments. If the unit price of each product is 99, list the name of each customer and how much each customer spent on each order along with the order id.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_name , B.order_id , ( C.order_quantity * 99 ) * ( 1 + 5.0 / 100 ) AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code = \"Credit Card\" GROUP BY A.customer_name , B.order_id UNION SELECT A.customer_name , B.order_id , C.order_quantity * 99 AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code != \"Credit Card\" GROUP BY A.customer_name , B.order_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 101,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + * / C H question is as follows:\nTell me the name of each customer and how much each customer spent on each order along with the order id, given that the unit price of all products is 99 and we charge a 5% fee for credit card payments.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_name , B.order_id , ( C.order_quantity * 99 ) * ( 1 + 5.0 / 100 ) AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code = \"Credit Card\" GROUP BY A.customer_name , B.order_id UNION SELECT A.customer_name , B.order_id , C.order_quantity * 99 AS cost_plus_fee FROM Customers A JOIN Customer_Orders B ON A.customer_id = B.customer_id JOIN Order_Items C ON B.order_id = C.order_id JOIN Products D ON C.product_id = D.product_id WHERE A.payment_method_code != \"Credit Card\" GROUP BY A.customer_name , B.order_id",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 102,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nList the year in record and the annual sales revenue for each year.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , A.order_date ) AS year , SUM ( B.order_quantity * C.product_price ) AS annual_sales_revenue FROM Customer_Orders A JOIN Order_Items B ON A.order_id = B.order_id JOIN Products C ON B.product_id = C.product_id GROUP BY strftime ( \"%Y\" , A.order_date )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 103,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * C question is as follows:\nTell me the year in record and corresponding annual sales revenue.the evidence is as follow:\nTotal price is calculated by multiplying unit price to quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , A.order_date ) AS year , SUM ( B.order_quantity * C.product_price ) AS annual_sales_revenue FROM Customer_Orders A JOIN Order_Items B ON A.order_id = B.order_id JOIN Products C ON B.product_id = C.product_id GROUP BY strftime ( \"%Y\" , A.order_date )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 104,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / C question is as follows:\nList the highest price, lowest price, and variance of Apple products.the evidence is as follow:\nThe variance is mean squared difference between each data point and the centre of the distribution measured by the mean.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT max_price , min_price , variance FROM ( SELECT 1.0 * ( product_price - AVG ( product_price ) ) * ( product_price - AVG ( product_price ) ) / COUNT ( * ) AS variance FROM Products WHERE product_name = \"Apple\" ) JOIN ( SELECT MAX ( product_price ) AS max_price , MIN ( product_price ) AS min_price FROM Products WHERE product_name = \"Apple\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 105,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / C question is as follows:\nConsidering only Apple products tell me the highest and lowest prices and also the variance across the Apple range.the evidence is as follow:\nThe variance is mean squared difference between each data point and the centre of the distribution measured by the mean.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT max_price , min_price , variance FROM ( SELECT 1.0 * ( product_price - AVG ( product_price ) ) * ( product_price - AVG ( product_price ) ) / COUNT ( * ) AS variance FROM Products WHERE product_name = \"Apple\" ) JOIN ( SELECT MAX ( product_price ) AS max_price , MIN ( product_price ) AS min_price FROM Products WHERE product_name = \"Apple\" )",
        "db_id": "customers_and_products_contacts"
    },
    {
        "id": 106,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nList the IDs of customers and their ages when they signed up for the driving school.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id , strftime ( \"%Y\" , date_became_customer ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_became_customer ) < strftime ( \"%m-%d\" , date_of_birth ) ) AS age FROM Customers",
        "db_id": "driving_school"
    },
    {
        "id": 107,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nGive me IDs of all customers and their ages at the time of registering for driving school?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id , strftime ( \"%Y\" , date_became_customer ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_became_customer ) < strftime ( \"%m-%d\" , date_of_birth ) ) AS age FROM Customers",
        "db_id": "driving_school"
    },
    {
        "id": 108,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C H question is as follows:\nIf Damon Sanford was born on the first day of the 21st century, list the customer IDs and their ages when they signed up for the driving school.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date. The 21st century began on 1st January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id, strftime (\"%Y\", date_became_customer) - strftime (\"%Y\", date_of_birth) - (strftime (\"%m-%d\", date_became_customer) < strftime (\"%m-%d\", date_of_birth)) AS age FROM Customers WHERE NOT (first_name = \"Dameon\" AND last_name = \"Sanford\") UNION ALL SELECT customer_id, strftime (\"%Y\", date_became_customer) - strftime (\"%Y\", \"2001-01-01\") - (strftime (\"%m-%d\", date_became_customer) < strftime (\"%m-%d\", \"2001-01-01\")) AS age FROM Customers WHERE first_name = \"Dameon\" AND last_name = \"Sanford\"",
        "db_id": "driving_school"
    },
    {
        "id": 109,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C H question is as follows:\nGive me IDs of all customers and their ages when registering for driving school if Damon Sanford was born on the first day of the 21st Century.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date. The 21st century began on 1st January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id, strftime (\"%Y\", date_became_customer) - strftime (\"%Y\", date_of_birth) - (strftime (\"%m-%d\", date_became_customer) < strftime (\"%m-%d\", date_of_birth)) AS age FROM Customers WHERE NOT (first_name = \"Dameon\" AND last_name = \"Sanford\") UNION ALL SELECT customer_id, strftime (\"%Y\", date_became_customer) - strftime (\"%Y\", \"2001-01-01\") - (strftime (\"%m-%d\", date_became_customer) < strftime (\"%m-%d\", \"2001-01-01\")) AS age FROM Customers WHERE first_name = \"Dameon\" AND last_name = \"Sanford\"",
        "db_id": "driving_school"
    },
    {
        "id": 110,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / question is as follows:\nWhat percentage of customers with outstanding amounts larger than 2000 are good customers?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * good / n AS percent FROM ( SELECT COUNT ( * ) AS good FROM Customers WHERE amount_outstanding > 2000 AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n FROM Customers WHERE amount_outstanding > 2000 )",
        "db_id": "driving_school"
    },
    {
        "id": 111,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / question is as follows:\nGive me the percentage of customers with over 2000 in outstanding balance who are rated good?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * good / n AS percent FROM ( SELECT COUNT ( * ) AS good FROM Customers WHERE amount_outstanding > 2000 AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n FROM Customers WHERE amount_outstanding > 2000 )",
        "db_id": "driving_school"
    },
    {
        "id": 112,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / H question is as follows:\nIf all customers who registered in 2015 have an outstanding amount of 200, what percentage of customers with outstanding amounts greater than 2000 are good customers?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * good / n AS percent FROM ( SELECT COUNT ( * ) AS good FROM ( SELECT 200 AS amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) = \"2015\" UNION ALL SELECT amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) != \"2015\" ) WHERE amount_outstanding > 2000 AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n FROM ( SELECT 200 AS amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) = \"2015\" UNION ALL SELECT amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) != \"2015\" ) WHERE amount_outstanding > 2000 )",
        "db_id": "driving_school"
    },
    {
        "id": 113,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / H question is as follows:\nWhat percentage of customers are rated good with an outstanding balance of over 2000 if all customers registered in 2015 have an outstanding amount over 2000?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * good / n AS percent FROM ( SELECT COUNT ( * ) AS good FROM ( SELECT 200 AS amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) = \"2015\" UNION ALL SELECT amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) != \"2015\" ) WHERE amount_outstanding > 2000 AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n FROM ( SELECT 200 AS amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) = \"2015\" UNION ALL SELECT amount_outstanding , customer_status_code FROM Customers WHERE strftime ( \"%Y\" , date_became_customer ) != \"2015\" ) WHERE amount_outstanding > 2000 )",
        "db_id": "driving_school"
    },
    {
        "id": 114,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nList the ID and number of lessons scheduled for staffs who were older than 20 when they joined the driving school.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id, COUNT (*) AS n_lesson FROM Staff A JOIN Lessons B ON A.staff_id = B.staff_id WHERE strftime (\"%Y\", A.date_joined_staff) - strftime (\"%Y\", A.date_of_birth) - (strftime (\"%m-%d\", A.date_joined_staff) < strftime (\"%m-%d\", A.date_of_birth)) > 20 UNION ALL SELECT staff_id, 0 AS n_lesson FROM Staff WHERE strftime (\"%Y\", date_joined_staff) - strftime (\"%Y\", date_of_birth) - (strftime (\"%m-%d\", date_joined_staff) < strftime (\"%m-%d\", date_of_birth)) > 20 AND staff_id NOT IN (SELECT A.staff_id FROM Staff A JOIN Lessons B ON A.staff_id = B.staff_id)",
        "db_id": "driving_school"
    },
    {
        "id": 115,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nGive me the ID and number of scheduled lessons for all staff older than age 20 at the time of joining the driving school.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id, COUNT (*) AS n_lesson FROM Staff A JOIN Lessons B ON A.staff_id = B.staff_id WHERE strftime (\"%Y\", A.date_joined_staff) - strftime (\"%Y\", A.date_of_birth) - (strftime (\"%m-%d\", A.date_joined_staff) < strftime (\"%m-%d\", A.date_of_birth)) > 20 UNION ALL SELECT staff_id, 0 AS n_lesson FROM Staff WHERE strftime (\"%Y\", date_joined_staff) - strftime (\"%Y\", date_of_birth) - (strftime (\"%m-%d\", date_joined_staff) < strftime (\"%m-%d\", date_of_birth)) > 20 AND staff_id NOT IN (SELECT A.staff_id FROM Staff A JOIN Lessons B ON A.staff_id = B.staff_id)",
        "db_id": "driving_school"
    },
    {
        "id": 116,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C H question is as follows:\nIf the staffs who resigned on March 8th, 2018 all joined on March 8th, 2016, list the IDs and number of lessons scheduled for staffs who were older than 20 when they joined.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id, COUNT (*) AS n_lesson FROM (SELECT staff_id, date_of_birth, \"2016-03-08\" AS date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) = \"2018-03-08\" UNION ALL SELECT staff_id, date_of_birth, date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) != \"2018-03-08\" ) A JOIN Lessons B ON A.staff_id = B.staff_id WHERE strftime (\"%Y\", A.date_joined_staff) - strftime (\"%Y\", A.date_of_birth) - (strftime (\"%m-%d\", A.date_joined_staff) < strftime (\"%m-%d\", A.date_of_birth)) > 20 UNION ALL SELECT staff_id, 0 AS n_lesson FROM (SELECT staff_id, date_of_birth, \"2016-03-08\" AS date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) = \"2018-03-08\" UNION ALL SELECT staff_id, date_of_birth, date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) != \"2018-03-08\" ) WHERE strftime (\"%Y\", date_joined_staff) - strftime (\"%Y\", date_of_birth) - (strftime (\"%m-%d\", date_joined_staff) < strftime (\"%m-%d\", date_of_birth)) > 20 AND staff_id NOT IN (SELECT A.staff_id FROM Staff A JOIN Lessons B ON A.staff_id = B.staff_id)",
        "db_id": "driving_school"
    },
    {
        "id": 117,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C H question is as follows:\nGive me the ID and quantity of scheduled lessons for all staff older than age 20 at the time of commencing employment at the driving school if all staff who joined on March 8 2016 resigned on March 8 2018.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id, COUNT (*) AS n_lesson FROM (SELECT staff_id, date_of_birth, \"2016-03-08\" AS date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) = \"2018-03-08\" UNION ALL SELECT staff_id, date_of_birth, date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) != \"2018-03-08\" ) A JOIN Lessons B ON A.staff_id = B.staff_id WHERE strftime (\"%Y\", A.date_joined_staff) - strftime (\"%Y\", A.date_of_birth) - (strftime (\"%m-%d\", A.date_joined_staff) < strftime (\"%m-%d\", A.date_of_birth)) > 20 UNION ALL SELECT staff_id, 0 AS n_lesson FROM (SELECT staff_id, date_of_birth, \"2016-03-08\" AS date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) = \"2018-03-08\" UNION ALL SELECT staff_id, date_of_birth, date_joined_staff FROM Staff WHERE strftime (\"%Y-%m-%d\", date_left_staff) != \"2018-03-08\" ) WHERE strftime (\"%Y\", date_joined_staff) - strftime (\"%Y\", date_of_birth) - (strftime (\"%m-%d\", date_joined_staff) < strftime (\"%m-%d\", date_of_birth)) > 20 AND staff_id NOT IN (SELECT A.staff_id FROM Staff A JOIN Lessons B ON A.staff_id = B.staff_id)",
        "db_id": "driving_school"
    },
    {
        "id": 118,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nWhat's the ID of staff who has worked at the driving school the longest?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT staff_id FROM Staff ORDER BY julianday ( date_left_staff ) - julianday ( date_joined_staff ) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 119,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nTell me the ID of staff who have worked at the driving school the longest?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT staff_id FROM Staff ORDER BY julianday ( date_left_staff ) - julianday ( date_joined_staff ) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 120,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + * C H question is as follows:\nIf Lincoln Benny Carroll joined on his 21st birthday, list the ID of the staff who has worked at the driving school the longest? the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time. Age is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT staff_id FROM (SELECT staff_id, strftime (\"%Y-%m-%d\", julianday (date_of_birth) + 21 * 365.25) AS date_joined_staff, date_left_staff FROM Staff WHERE first_name = \"Lincoln\" AND middle_name = \"Benny\" AND last_name = \"Carroll\" UNION ALL SELECT staff_id, date_joined_staff, date_left_staff FROM Staff WHERE NOT (first_name = \"Lincoln\" AND middle_name = \"Benny\" AND last_name = \"Carroll\") ) ORDER BY julianday (date_left_staff) - julianday (date_joined_staff) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 121,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + * C H question is as follows:\nWhat's the ID of the staff member who has worked at the driving school longest if Lincoln Benny Carroll joined on their 21st birthday?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time. Age is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT staff_id FROM (SELECT staff_id, strftime (\"%Y-%m-%d\", julianday (date_of_birth) + 21 * 365.25) AS date_joined_staff, date_left_staff FROM Staff WHERE first_name = \"Lincoln\" AND middle_name = \"Benny\" AND last_name = \"Carroll\" UNION ALL SELECT staff_id, date_joined_staff, date_left_staff FROM Staff WHERE NOT (first_name = \"Lincoln\" AND middle_name = \"Benny\" AND last_name = \"Carroll\") ) ORDER BY julianday (date_left_staff) - julianday (date_joined_staff) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 122,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nAmong the customers who have never attended a class, how much more bad customers than good customers?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_bad - n_good AS diff FROM ( SELECT COUNT ( * ) AS n_good FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM Lessons WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n_bad FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM Lessons WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Bad Customer\" )",
        "db_id": "driving_school"
    },
    {
        "id": 123,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nHow many more customers are rated bad than good for only the customers who have never attended a class?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_bad - n_good AS diff FROM ( SELECT COUNT ( * ) AS n_good FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM Lessons WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n_bad FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM Lessons WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Bad Customer\" )",
        "db_id": "driving_school"
    },
    {
        "id": 124,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - H question is as follows:\nAssuming that all classes are not canceled on March 7, 2018, how much more bad customers than good customers among the customers who have never attended a class?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_bad - n_good AS diff FROM ( SELECT COUNT ( * ) AS n_good FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM ( SELECT customer_id , \"Completed\" AS lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) = \"2018-03-07\" UNION ALL SELECT customer_id , lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) != \"2018-03-07\" ) WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n_bad FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM ( SELECT customer_id , \"Completed\" AS lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) = \"2018-03-07\" UNION ALL SELECT customer_id , lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) != \"2018-03-07\" ) WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Bad Customer\" )",
        "db_id": "driving_school"
    },
    {
        "id": 125,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - H question is as follows:\nHow many more customers are rated bad than good for only the customers who have never attended a class if all classes were not canceled on March 7 2018?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_bad - n_good AS diff FROM ( SELECT COUNT ( * ) AS n_good FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM ( SELECT customer_id , \"Completed\" AS lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) = \"2018-03-07\" UNION ALL SELECT customer_id , lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) != \"2018-03-07\" ) WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Good Customer\" ) JOIN ( SELECT COUNT ( * ) AS n_bad FROM Customers WHERE customer_id NOT IN ( SELECT DISTINCT ( customer_id ) FROM ( SELECT customer_id , \"Completed\" AS lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) = \"2018-03-07\" UNION ALL SELECT customer_id , lesson_status_code FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) != \"2018-03-07\" ) WHERE lesson_status_code != \"Cancelled\" ) AND customer_status_code = \"Bad Customer\" )",
        "db_id": "driving_school"
    },
    {
        "id": 126,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nHow much is the average course fee for a staff who has no course schedule after March 5, 2018? What's his staff ID and how old is he this year?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id , AVG ( A.price ) AS avg_price , strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , B.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , B.date_of_birth ) ) AS age FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id NOT IN ( SELECT staff_id FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) > \"2018-03-05\" ) GROUP BY A.staff_id",
        "db_id": "driving_school"
    },
    {
        "id": 127,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nTell me the staff ID, average course fee, and age (this year) for staff with no course scheduled after 5 March 2018?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id , AVG ( A.price ) AS avg_price , strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , B.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , B.date_of_birth ) ) AS age FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id NOT IN ( SELECT staff_id FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) > \"2018-03-05\" ) GROUP BY A.staff_id",
        "db_id": "driving_school"
    },
    {
        "id": 128,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * + - C H question is as follows:\nIf the prices of all courses were increased by 8% in February 2018, how much is the average course fee for a staff who has no course schedule after March 5, 2018? What's his staff ID and how old is he this year?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id , AVG ( A.price ) AS avg_price , strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , B.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , B.date_of_birth ) ) AS age FROM ( SELECT staff_id , ( 1 + 0.08 ) * price AS price FROM Lessons WHERE strftime ( \"%Y-%m\" , lesson_date ) = \"2018-02\" UNION ALL SELECT staff_id , price FROM Lessons WHERE strftime ( \"%Y-%m\" , lesson_date ) != \"2018-02\" ) A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id NOT IN ( SELECT staff_id FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) > \"2018-03-05\" ) GROUP BY A.staff_id",
        "db_id": "driving_school"
    },
    {
        "id": 129,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * + - C H question is as follows:\nWhat is the staff ID, average course fee, and age this year, for staff with no course scheduled after March 5 2018 if all course prices were increased by 8% in February 2018?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id , AVG ( A.price ) AS avg_price , strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , B.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , B.date_of_birth ) ) AS age FROM ( SELECT staff_id , ( 1 + 0.08 ) * price AS price FROM Lessons WHERE strftime ( \"%Y-%m\" , lesson_date ) = \"2018-02\" UNION ALL SELECT staff_id , price FROM Lessons WHERE strftime ( \"%Y-%m\" , lesson_date ) != \"2018-02\" ) A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id NOT IN ( SELECT staff_id FROM Lessons WHERE strftime ( \"%Y-%m-%d\" , lesson_date ) > \"2018-03-05\" ) GROUP BY A.staff_id",
        "db_id": "driving_school"
    },
    {
        "id": 130,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nWhat's the ID of the coach who has the highest average course price and how much higher than that of the coach with the lowest average course price?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id , AVG ( A.price ) - ( SELECT AVG ( price ) FROM Lessons GROUP BY staff_id ORDER BY AVG ( price ) ASC LIMIT 1 ) AS diff FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id GROUP BY A.staff_id ORDER BY AVG ( A.price ) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 131,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nTell me the ID of the coach who has the highest average course price and how much more does this cost than the average price from the coach with the lowest average price?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.staff_id , AVG ( A.price ) - ( SELECT AVG ( price ) FROM Lessons GROUP BY staff_id ORDER BY AVG ( price ) ASC LIMIT 1 ) AS diff FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id GROUP BY A.staff_id ORDER BY AVG ( A.price ) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 132,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * H question is as follows:\nIf all courses offered by Winnifred Liam Jast were reduced by 12%, what's the ID of the coach who has the highest average course price and how much higher than that of the coach with the lowest average course price?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT staff_id , AVG ( price ) - ( SELECT AVG ( price ) FROM ( SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price * ( 1 - 0.12 ) AS price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" UNION ALL SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE NOT ( B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" ) ) GROUP BY staff_id ORDER BY AVG ( price ) ASC LIMIT 1 ) AS diff FROM ( SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price * ( 1 - 0.12 ) AS price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" UNION ALL SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE NOT ( B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" ) ) GROUP BY staff_id ORDER BY AVG ( price ) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 133,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * H question is as follows:\nTell me the ID of the coach who has the highest average price of a course and how much more this is than the price of a course from the coach with the lowest average price if courses from Winnifred Liam Jast were 12% cheaper?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT staff_id , AVG ( price ) - ( SELECT AVG ( price ) FROM ( SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price * ( 1 - 0.12 ) AS price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" UNION ALL SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE NOT ( B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" ) ) GROUP BY staff_id ORDER BY AVG ( price ) ASC LIMIT 1 ) AS diff FROM ( SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price * ( 1 - 0.12 ) AS price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" UNION ALL SELECT A.staff_id , B.first_name , B.middle_name , B.last_name , A.price FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE NOT ( B.first_name = \"Winnifred\" AND B.middle_name = \"Liam\" AND B.last_name = \"Jast\" ) ) GROUP BY staff_id ORDER BY AVG ( price ) DESC LIMIT 1",
        "db_id": "driving_school"
    },
    {
        "id": 134,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / question is as follows:\nWhat percentage of clients have multiple coaches?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customers ) AS percent FROM ( SELECT customer_id FROM Lessons GROUP BY customer_id HAVING COUNT ( DISTINCT ( staff_id ) ) >= 2 )",
        "db_id": "driving_school"
    },
    {
        "id": 135,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / question is as follows:\nCalculate the percentage of clients with more than one coach?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customers ) AS percent FROM ( SELECT customer_id FROM Lessons GROUP BY customer_id HAVING COUNT ( DISTINCT ( staff_id ) ) >= 2 )",
        "db_id": "driving_school"
    },
    {
        "id": 136,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / H question is as follows:\nIf the coach of the course with ID 12 is Winnifred Liam Jast, what percentage of clients have multiple coaches?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customers ) AS percent FROM ( SELECT customer_id FROM ( SELECT customer_id , ( SELECT staff_id FROM Staff WHERE first_name = \"Winnifred\" AND middle_name = \"Liam\" AND last_name = \"Jast\" ) AS staff_id FROM Lessons WHERE lesson_id = \"12\" UNION ALL SELECT customer_id , staff_id FROM Lessons WHERE lesson_id != \"12\" ) GROUP BY customer_id HAVING COUNT ( DISTINCT ( staff_id ) ) >= 2 )",
        "db_id": "driving_school"
    },
    {
        "id": 137,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * / H question is as follows:\nCalculate the percentage of clients with more than a single coach if course with ID 12 is coached by Winnifred Liam Jast.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Customers ) AS percent FROM ( SELECT customer_id FROM ( SELECT customer_id , ( SELECT staff_id FROM Staff WHERE first_name = \"Winnifred\" AND middle_name = \"Liam\" AND last_name = \"Jast\" ) AS staff_id FROM Lessons WHERE lesson_id = \"12\" UNION ALL SELECT customer_id , staff_id FROM Lessons WHERE lesson_id != \"12\" ) GROUP BY customer_id HAVING COUNT ( DISTINCT ( staff_id ) ) >= 2 )",
        "db_id": "driving_school"
    },
    {
        "id": 138,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nHow many years older is the oldest staff than the youngest staff?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , MAX ( date_of_birth ) ) - strftime ( \"%Y\" , MIN ( date_of_birth ) ) - ( strftime ( \"%m-%d\" , MAX ( date_of_birth ) ) < strftime ( \"%m-%d\" , MIN ( date_of_birth ) ) ) AS diff FROM Staff",
        "db_id": "driving_school"
    },
    {
        "id": 139,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nCalculate the difference in age between the oldest and youngest staff?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , MAX ( date_of_birth ) ) - strftime ( \"%Y\" , MIN ( date_of_birth ) ) - ( strftime ( \"%m-%d\" , MAX ( date_of_birth ) ) < strftime ( \"%m-%d\" , MIN ( date_of_birth ) ) ) AS diff FROM Staff",
        "db_id": "driving_school"
    },
    {
        "id": 140,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * - C H question is as follows:\nIf Camylle Icie Weissnat's age in 2020 is twice that of a person born in 2009, how many years older is the oldest staff than the youngest staff?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( date_of_birth ) - MIN ( date_of_birth ) AS diff FROM ( SELECT 2020 - ( 2020 - 2009 ) * 2 AS date_of_birth FROM Staff WHERE first_name = \"Camylle\" AND middle_name = \"Icie\" AND last_name = \"Weissnat\" UNION ALL SELECT date_of_birth FROM Staff WHERE NOT ( first_name = \"Camylle\" AND middle_name = \"Icie\" AND last_name = \"Weissnat\" ) ) ORDER BY date_of_birth DESC",
        "db_id": "driving_school"
    },
    {
        "id": 141,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA * - C H question is as follows:\nCalculate the difference in age between the oldest and youngest staff, if in 2020, Camylle Icie Weissnat was twice as old as someone born in 2009.the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( date_of_birth ) - MIN ( date_of_birth ) AS diff FROM ( SELECT 2020 - ( 2020 - 2009 ) * 2 AS date_of_birth FROM Staff WHERE first_name = \"Camylle\" AND middle_name = \"Icie\" AND last_name = \"Weissnat\" UNION ALL SELECT date_of_birth FROM Staff WHERE NOT ( first_name = \"Camylle\" AND middle_name = \"Icie\" AND last_name = \"Weissnat\" ) ) ORDER BY date_of_birth DESC",
        "db_id": "driving_school"
    },
    {
        "id": 142,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / question is as follows:\nWhat is the total number of courses arranged for the oldest coach when leaving the driving school, and what percentage of them were canceled?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT total, 1.0 * n_cancel / total AS ratio FROM ( SELECT COUNT ( * ) AS total FROM Lessons WHERE staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) ) JOIN ( SELECT COUNT ( * ) AS n_cancel FROM Lessons WHERE staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) AND lesson_status_code = \"Cancelled\" )",
        "db_id": "driving_school"
    },
    {
        "id": 143,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * / question is as follows:\nWhat is the sum total of scheduled courses for the oldest coach when leaving the driving school and how many of these were cancelled?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT total, 1.0 * n_cancel / total AS ratio FROM ( SELECT COUNT ( * ) AS total FROM Lessons WHERE staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) ) JOIN ( SELECT COUNT ( * ) AS n_cancel FROM Lessons WHERE staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) AND lesson_status_code = \"Cancelled\" )",
        "db_id": "driving_school"
    },
    {
        "id": 144,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + - * / H question is as follows:\nIf all coaches have no course scheduled within 60 days after joining, what is the total number of courses arranged for the oldest coach when leaving the driving school, and what percentage of them were canceled?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT total, 1.0 * n_cancel / total AS ratio FROM ( SELECT COUNT ( * ) AS total FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) AND A.lesson_date > strftime ( julianday ( B.date_joined_staff ) + 60 ) ) JOIN ( SELECT COUNT ( * ) AS n_cancel FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) AND A.lesson_status_code = \"Cancelled\" AND A.lesson_date > strftime ( julianday ( B.date_joined_staff ) + 60 ) )",
        "db_id": "driving_school"
    },
    {
        "id": 145,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA + - * / H question is as follows:\nGive me the total number of arranged courses, and the cancellation rate, for the oldest coach when leaving the driving school if all coaches have no course scheduled within 60 days after joining.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT total, 1.0 * n_cancel / total AS ratio FROM ( SELECT COUNT ( * ) AS total FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) AND A.lesson_date > strftime ( julianday ( B.date_joined_staff ) + 60 ) ) JOIN ( SELECT COUNT ( * ) AS n_cancel FROM Lessons A JOIN Staff B ON A.staff_id = B.staff_id WHERE A.staff_id = ( SELECT staff_id FROM Staff ORDER BY strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) DESC LIMIT 1 ) AND A.lesson_status_code = \"Cancelled\" AND A.lesson_date > strftime ( julianday ( B.date_joined_staff ) + 60 ) )",
        "db_id": "driving_school"
    },
    {
        "id": 146,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nWhat's the ID of the customer who paid the most, and how much more than the customer who paid the least?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_id , MAX ( A.amount_payment ) - ( SELECT MIN ( amount_payment ) FROM Customer_Payments ) AS payment_diff FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id",
        "db_id": "driving_school"
    },
    {
        "id": 147,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - question is as follows:\nTell me the ID of the customer who paid the highest fee and how much more was this than the customer paying the lowest fee?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.customer_id , MAX ( A.amount_payment ) - ( SELECT MIN ( amount_payment ) FROM Customer_Payments ) AS payment_diff FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id",
        "db_id": "driving_school"
    },
    {
        "id": 148,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + H question is as follows:\nIf Amya Spinka paid 5000 more on March 12th, 2018, what's the ID of the customer who paid the most, and how much more than the customer who paid the least?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id, MAX (amount_payment) - (SELECT MIN (amount_payment) FROM (SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\" UNION ALL SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE NOT (B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\") )) AS payment_diff FROM (SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\" UNION ALL SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE NOT (B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\") )",
        "db_id": "driving_school"
    },
    {
        "id": 149,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + H question is as follows:\nTell me the ID of the customer who paid the highest fee and how much more was this than the customer paying the lowest fee if Amya Spinka paid 5000 more on 12 March 2018?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT customer_id, MAX (amount_payment) - (SELECT MIN (amount_payment) FROM (SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\" UNION ALL SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE NOT (B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\") )) AS payment_diff FROM (SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\" UNION ALL SELECT A.customer_id, amount_payment + 5000 AS amount_payment FROM Customer_Payments A JOIN Customers B ON A.customer_id = B.customer_id WHERE NOT (B.first_name = \"Amya\" AND B.last_name = \"Spinka\" AND strftime (\"%Y-%m-%d\", A.datetime_payment) = \"2018-03-12\") )",
        "db_id": "driving_school"
    },
    {
        "id": 150,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nWhat is the average age of the coaches living in Lake Elaine, Georgia?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG ( strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , A.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , A.date_of_birth ) ) ) AS avg_age FROM Staff A JOIN Addresses B ON A.staff_address_id = B.address_id WHERE B.state_province_county = \"Georgia\" AND B.city = \"Lake Elaina\"",
        "db_id": "driving_school"
    },
    {
        "id": 151,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - C question is as follows:\nFor the coaches resident in Lake Elaine Georgia, calculate the average age.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG ( strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , A.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , A.date_of_birth ) ) ) AS avg_age FROM Staff A JOIN Addresses B ON A.staff_address_id = B.address_id WHERE B.state_province_county = \"Georgia\" AND B.city = \"Lake Elaina\"",
        "db_id": "driving_school"
    },
    {
        "id": 152,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * C H question is as follows:\nIf the average age of coaches living in Lake Elaine, Georgia is twice the average age of coaches living in Port Melyssa,Georgia, what is the average age of the coaches living in Lake Elaine, Georgia?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 2 * AVG ( strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , A.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , A.date_of_birth ) ) ) AS avg_age FROM Staff A JOIN Addresses B ON A.staff_address_id = B.address_id WHERE B.state_province_county = \"Georgia\" AND B.city = \"Port Melyssa\"",
        "db_id": "driving_school"
    },
    {
        "id": 153,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - * C H question is as follows:\nWhat is the average age of coaches in Lake Elaine Georgia if the average ages of coaches here is twice the average of coaches living in Port Melyssa, Georgia?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 2 * AVG ( strftime ( \"%Y\" , \"now\" ) - strftime ( \"%Y\" , A.date_of_birth ) - ( strftime ( \"%m-%d\" , \"now\" ) < strftime ( \"%m-%d\" , A.date_of_birth ) ) ) AS avg_age FROM Staff A JOIN Addresses B ON A.staff_address_id = B.address_id WHERE B.state_province_county = \"Georgia\" AND B.city = \"Port Melyssa\"",
        "db_id": "driving_school"
    },
    {
        "id": 154,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + C question is as follows:\nHow old is Janessa Amara Sawayn five years after she left office, and how many years younger than Camylle Icie Weissnat?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT 5 + strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) AS age FROM Staff WHERE first_name = \"Janessa\" AND middle_name = \"Amara\" AND last_name = \"Sawayn\" ) JOIN ( SELECT date_of_birth - ( SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND middle_name = \"Amara\" AND last_name = \"Sawayn\" ) AS diff FROM Staff WHERE first_name = \"Camylle\" AND middle_name = \"Icie\" AND last_name = \"Weissnat\" )",
        "db_id": "driving_school"
    },
    {
        "id": 155,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + C question is as follows:\nGive me Janessa Amara Sawayn's age five years after leaving office and how many years younger were they than Camylle Icie Weissnat?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT 5 + strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) AS age FROM Staff WHERE first_name = \"Janessa\" AND middle_name = \"Amara\" AND last_name = \"Sawayn\" ) JOIN ( SELECT date_of_birth - ( SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND middle_name = \"Amara\" AND last_name = \"Sawayn\" ) AS diff FROM Staff WHERE first_name = \"Camylle\" AND middle_name = \"Icie\" AND last_name = \"Weissnat\" )",
        "db_id": "driving_school"
    },
    {
        "id": 156,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + C H question is as follows:\nIf Camylle Icie Weissnat is 30 years old when Janessa Amara Sawayn leaves, how old is Janessa Amara Sawayn five years after she left office, and how many years younger than Camylle Icie Weissnat?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 5 + strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) AS age , 30 - ( strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) ) AS diff FROM Staff WHERE first_name = \"Janessa\" AND middle_name = \"Amara\" AND last_name = \"Sawayn\"",
        "db_id": "driving_school"
    },
    {
        "id": 157,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'station', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['2', '3', '4', '5', '6'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['San Jose Diridon Caltrain Station', 'San Jose Civic Center', 'Santa Clara at Almaden', 'Adobe on Almaden', 'San Pedro Square']}, {'column_name': 'lat', 'type': 'NUMERIC', 'column_example': ['37.329732', '37.330698', '37.333988', '37.331415', '37.336721']}, {'column_name': 'long', 'type': 'NUMERIC', 'column_example': ['-121.901782', '-121.888979', '-121.894902', '-121.8932', '-121.894074']}, {'column_name': 'dock_count', 'type': 'INTEGER', 'column_example': ['27', '15', '11', '19', '25']}, {'column_name': 'city', 'type': 'TEXT', 'column_example': ['San Jose', 'Redwood City', 'Mountain View', 'Palo Alto', 'San Francisco']}, {'column_name': 'installation_date', 'type': 'TEXT', 'column_example': ['8/6/2013', '8/5/2013', '8/7/2013', '8/12/2013', '8/15/2013']}]}, {'table_name': 'status', 'columns': [{'column_name': 'station_id', 'type': 'INTEGER', 'column_example': ['3', '4', '5', '6', '7']}, {'column_name': 'bikes_available', 'type': 'INTEGER', 'column_example': ['12', '6', '7', '5', '4']}, {'column_name': 'docks_available', 'type': 'INTEGER', 'column_example': ['3', '5', '4', '14', '10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['2015-06-02 12:46:02', '2015-06-02 12:47:02', '2015-06-02 12:48:02', '2015-06-02 12:49:02', '2015-06-02 12:50:02']}]}, {'table_name': 'trip', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['900504', '900505', '900506', '900507', '900508'], 'column_pk': True}, {'column_name': 'duration', 'type': 'INTEGER', 'column_example': ['384', '588', '196', '823', '1059']}, {'column_name': 'start_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:03', '8/21/2015 17:04', '8/21/2015 17:05', '8/21/2015 17:06', '8/21/2015 17:07']}, {'column_name': 'start_station_name', 'type': 'TEXT', 'column_example': ['Howard at 2nd', 'South Van Ness at Market', 'Market at Sansome', 'Washington at Kearny', 'Beale at Market']}, {'column_name': 'start_station_id', 'type': 'INTEGER', 'column_example': ['63', '66', '77', '46', '56']}, {'column_name': 'end_date', 'type': 'TEXT', 'column_example': ['8/21/2015 17:10', '8/21/2015 17:13', '8/21/2015 17:07', '8/21/2015 17:18', '8/21/2015 17:22']}, {'column_name': 'end_station_name', 'type': 'TEXT', 'column_example': ['San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', '2nd at Townsend', 'San Francisco Caltrain (Townsend at 4th)', 'Howard at 2nd']}, {'column_name': 'end_station_id', 'type': 'INTEGER', 'column_example': ['69', '50', '61', '70', '63']}, {'column_name': 'bike_id', 'type': 'INTEGER', 'column_example': ['454', '574', '636', '187', '363']}, {'column_name': 'subscription_type', 'type': 'TEXT', 'column_example': ['Subscriber', 'Customer']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94041', '95119', '94925', '94103', '94107']}]}, {'table_name': 'weather', 'columns': [{'column_name': 'date', 'type': 'TEXT', 'column_example': ['8/29/2013', '8/30/2013', '8/31/2013', '9/1/2013', '9/2/2013']}, {'column_name': 'max_temperature_f', 'type': 'INTEGER', 'column_example': ['74', '78', '71', '75', '73']}, {'column_name': 'mean_temperature_f', 'type': 'INTEGER', 'column_example': ['68', '69', '64', '66', '67']}, {'column_name': 'min_temperature_f', 'type': 'INTEGER', 'column_example': ['61', '60', '57', '58', '62']}, {'column_name': 'max_dew_point_f', 'type': 'INTEGER', 'column_example': ['61', '57', '60', '59', '64']}, {'column_name': 'mean_dew_point_f', 'type': 'INTEGER', 'column_example': ['58', '56', '60', '57', '51']}, {'column_name': 'min_dew_point_f', 'type': 'INTEGER', 'column_example': ['56', '54', '53', '58', '51']}, {'column_name': 'max_humidity', 'type': 'INTEGER', 'column_example': ['93', '90', '87', '84', '86']}, {'column_name': 'mean_humidity', 'type': 'INTEGER', 'column_example': ['75', '70', '68', '77', '65']}, {'column_name': 'min_humidity', 'type': 'INTEGER', 'column_example': ['57', '50', '49', '61', '46']}, {'column_name': 'max_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.07', '30.05', '30.0', '29.96', '29.97']}, {'column_name': 'mean_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['30.02', '30.0', '29.96', '29.93', '29.94']}, {'column_name': 'min_sea_level_pressure_inches', 'type': 'NUMERIC', 'column_example': ['29.97', '29.93', '29.92', '29.91', '29.9']}, {'column_name': 'max_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '20', '15']}, {'column_name': 'mean_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '5', '7']}, {'column_name': 'min_visibility_miles', 'type': 'INTEGER', 'column_example': ['10', '7', '6', '9', '2']}, {'column_name': 'max_wind_Speed_mph', 'type': 'INTEGER', 'column_example': ['23', '29', '26', '25', '24']}, {'column_name': 'mean_wind_speed_mph', 'type': 'INTEGER', 'column_example': ['11', '13', '15', '12', '19']}, {'column_name': 'max_gust_speed_mph', 'type': 'INTEGER', 'column_example': ['28', '35', '31', '29', '30']}, {'column_name': 'precipitation_inches', 'type': 'INTEGER', 'column_example': ['0', '0.23', 'T', '0.01', '0.28']}, {'column_name': 'cloud_cover', 'type': 'INTEGER', 'column_example': ['4', '2', '6', '3', '0']}, {'column_name': 'events', 'type': 'TEXT', 'column_example': ['Fog', 'Rain', 'Fog-Rain', 'rain']}, {'column_name': 'wind_dir_degrees', 'type': 'INTEGER', 'column_example': ['286', '291', '284', '277', '276']}, {'column_name': 'zip_code', 'type': 'INTEGER', 'column_example': ['94107', '94063', '94301', '94041', '95113']}]}]\nA - + C H question is as follows:\nHow old was Janessa Amara Sawayn five years after leaving office if Camylle Icie Weissnat was 30 years old when Janessa Amara Sawayn left? How much younger was Janessa Amara Sawayn than Camylle Icie Weissnat?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 5 + strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) AS age , 30 - ( strftime ( \"%Y\" , date_left_staff ) - strftime ( \"%Y\" , date_of_birth ) - ( strftime ( \"%m-%d\" , date_left_staff ) < strftime ( \"%m-%d\" , date_of_birth ) ) ) AS diff FROM Staff WHERE first_name = \"Janessa\" AND middle_name = \"Amara\" AND last_name = \"Sawayn\"",
        "db_id": "driving_school"
    },
    {
        "id": 158,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + - C question is as follows:\nFive years later, how old is Lewis Hamilton?the evidence is as follow:\nAge is computed by substracting the date of birth from the given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) + 5 - substr ( dob , 7 , 4 ) + ( strftime ( \"%m\" , \"now\" ) > substr ( dob , 4 , 2 ) OR ( strftime ( \"%m\" , \"now\" ) = substr ( dob , 4 , 2 ) AND strftime ( \"%d\" , \"now\" ) > substr ( dob , 1 , 2 ) ) ) AS age FROM drivers WHERE forename = \"Lewis\" and surname = \"Hamilton\"",
        "db_id": "formula_1"
    },
    {
        "id": 159,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + - C question is as follows:\nHow much older is Lewis Hamilton five years later?the evidence is as follow:\nAge is computed by substracting the date of birth from the given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) + 5 - substr ( dob , 7 , 4 ) + ( strftime ( \"%m\" , \"now\" ) > substr ( dob , 4 , 2 ) OR ( strftime ( \"%m\" , \"now\" ) = substr ( dob , 4 , 2 ) AND strftime ( \"%d\" , \"now\" ) > substr ( dob , 1 , 2 ) ) ) AS age FROM drivers WHERE forename = \"Lewis\" and surname = \"Hamilton\"",
        "db_id": "formula_1"
    },
    {
        "id": 160,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + - C H question is as follows:\nFive years later, how old is \"Lewis Hamilton\" assuming he was born in 01/01/2020?the evidence is as follow:\nAge is computed by substracting the date of birth from the given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) + 5 - 2020 + ( strftime ( \"%m\" , \"now\" ) > 1 OR ( strftime ( \"%m\" , \"now\" ) = substr ( dob , 4 , 2 ) AND strftime ( \"%d\" , \"now\" ) > 1 ) ) AS age FROM drivers WHERE forename = \"Lewis\" and surname = \"Hamilton\"",
        "db_id": "formula_1"
    },
    {
        "id": 161,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + - C H question is as follows:\nIf Lewis Hamilton was born on 01/01/2020 then how old are they five years later?the evidence is as follow:\nAge is computed by substracting the date of birth from the given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) + 5 - 2020 + ( strftime ( \"%m\" , \"now\" ) > 1 OR ( strftime ( \"%m\" , \"now\" ) = substr ( dob , 4 , 2 ) AND strftime ( \"%d\" , \"now\" ) > 1 ) ) AS age FROM drivers WHERE forename = \"Lewis\" and surname = \"Hamilton\"",
        "db_id": "formula_1"
    },
    {
        "id": 162,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + / question is as follows:\nWhat is the average lap time over the three sessions for the top ranked driver in the 2009 Australian Grand Prix qualifying?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT time ( ( strftime ( \"%s\" , \"00:0\" || q1 ) + strftime ( \"%s\" , \"00:0\" || q2 ) + strftime ( \"%s\" , \"00:0\" || q3 ) ) / 3.0 , \"unixepoch\" ) AS avg_lap FROM qualifying A JOIN races B ON A.raceId = B.raceId WHERE B.name = \"Australian Grand Prix\" AND B.year = \"2009\" AND A.position = \"1\"",
        "db_id": "formula_1"
    },
    {
        "id": 163,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + / question is as follows:\nFor the Australian Grand Prix qualifier in 2009, give me the lap time average from the three sessions of the top ranked driver.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT time ( ( strftime ( \"%s\" , \"00:0\" || q1 ) + strftime ( \"%s\" , \"00:0\" || q2 ) + strftime ( \"%s\" , \"00:0\" || q3 ) ) / 3.0 , \"unixepoch\" ) AS avg_lap FROM qualifying A JOIN races B ON A.raceId = B.raceId WHERE B.name = \"Australian Grand Prix\" AND B.year = \"2009\" AND A.position = \"1\"",
        "db_id": "formula_1"
    },
    {
        "id": 164,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + / H question is as follows:\nWhat is the average lap time over the three sessions for the top ranked driver in the 2009 Australian Grand Prix qualifying, assuming his lap time obtained in q1 was 1:26.026 instead?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT time ( ( strftime ( \"%s\" , \"00:0\" || \"1:26.026\" ) + strftime ( \"%s\" , \"00:0\" || q2 ) + strftime ( \"%s\" , \"00:0\" || q3 ) ) / 3.0 , \"unixepoch\" ) AS avg_lap FROM qualifying A JOIN races B ON A.raceId = B.raceId WHERE B.name = \"Australian Grand Prix\" AND B.year = \"2009\" AND A.position = \"1\"",
        "db_id": "formula_1"
    },
    {
        "id": 165,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + / H question is as follows:\nAssuming the top ranked driver of the 2009 Australian Grand Prix qualifier recorded a score of 1:26:026 in the first round then what would their average lap time over all three qualifiers be?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT time ( ( strftime ( \"%s\" , \"00:0\" || \"1:26.026\" ) + strftime ( \"%s\" , \"00:0\" || q2 ) + strftime ( \"%s\" , \"00:0\" || q3 ) ) / 3.0 , \"unixepoch\" ) AS avg_lap FROM qualifying A JOIN races B ON A.raceId = B.raceId WHERE B.name = \"Australian Grand Prix\" AND B.year = \"2009\" AND A.position = \"1\"",
        "db_id": "formula_1"
    },
    {
        "id": 166,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nWhat is the name and location of the circuit which is closest to Tropic of Cancer?the evidence is as follow:\nThe Tropic of Cancer lies at 23.4394 degrees north of the Equator. The north latitude is positive, and the south latitude is negative.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , location FROM circuits ORDER BY ABS ( lat - 23.4394 ) ASC LIMIT 1",
        "db_id": "formula_1"
    },
    {
        "id": 167,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nWhich circuit is closest in location to the Tropic of Cancer? Return this circuit name and location?the evidence is as follow:\nThe Tropic of Cancer lies at 23.4394 degrees north of the Equator. The north latitude is positive, and the south latitude is negative.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , location FROM circuits ORDER BY ABS ( lat - 23.4394 ) ASC LIMIT 1",
        "db_id": "formula_1"
    },
    {
        "id": 168,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nwhat is the name of the circuit which is furthest away from the Tropic of Capricorn?the evidence is as follow:\nThe Tropic of Capricorn lies at 23.4394 degrees south of the Equator. The north latitude is positive, and the south latitude is negative.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name FROM circuits ORDER BY ABS ( lat - ( - 23.4394 ) ) DESC LIMIT 1",
        "db_id": "formula_1"
    },
    {
        "id": 169,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nFind me the name of the circuit which is farthest in distance from the Tropic of Capricorn.the evidence is as follow:\nThe Tropic of Capricorn lies at 23.4394 degrees south of the Equator. The north latitude is positive, and the south latitude is negative.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name FROM circuits ORDER BY ABS ( lat - ( - 23.4394 ) ) DESC LIMIT 1",
        "db_id": "formula_1"
    },
    {
        "id": 170,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nHow many races were held in 2009 and 2010 respectively? What is the difference between them?the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , n_2010 , ABS ( n_2009 - n_2010 ) AS diff FROM ( SELECT COUNT ( * ) AS n_2009 FROM races WHERE year = \"2009\" ) JOIN ( SELECT COUNT ( * ) AS n_2010 FROM races WHERE year = \"2010\" )",
        "db_id": "formula_1"
    },
    {
        "id": 171,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nFind me the sum of races held in 2009 and separately then in 2010 and also return the difference.the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , n_2010 , ABS ( n_2009 - n_2010 ) AS diff FROM ( SELECT COUNT ( * ) AS n_2009 FROM races WHERE year = \"2009\" ) JOIN ( SELECT COUNT ( * ) AS n_2010 FROM races WHERE year = \"2010\" )",
        "db_id": "formula_1"
    },
    {
        "id": 172,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + C H question is as follows:\nHow many races were held in 2009 and 2010 respectively? What is the difference between them if 5 more races were held in 2010?the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , n_2010 + 5 , ABS ( n_2010 + 5 - n_2009 ) AS diff FROM ( SELECT COUNT ( * ) AS n_2009 FROM races WHERE year = \"2009\" ) JOIN ( SELECT COUNT ( * ) AS n_2010 FROM races WHERE year = \"2010\" )",
        "db_id": "formula_1"
    },
    {
        "id": 173,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + C H question is as follows:\nIf there were five more races held in 2010 than the actual amount then calculate the number of races in 2009, 2010 and the difference between the two.the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , n_2010 + 5 , ABS ( n_2010 + 5 - n_2009 ) AS diff FROM ( SELECT COUNT ( * ) AS n_2009 FROM races WHERE year = \"2009\" ) JOIN ( SELECT COUNT ( * ) AS n_2010 FROM races WHERE year = \"2010\" )",
        "db_id": "formula_1"
    },
    {
        "id": 174,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nHow many more races are held in France than in Italy?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_france - n_italy FROM ( SELECT COUNT ( * ) AS n_france FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.Country = \"France\" ) JOIN ( SELECT COUNT ( * ) AS n_italy FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.Country = \"Italy\" )",
        "db_id": "formula_1"
    },
    {
        "id": 175,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nCalculate the difference between the sum of races held in France and those held in Italy.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_france - n_italy FROM ( SELECT COUNT ( * ) AS n_france FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.Country = \"France\" ) JOIN ( SELECT COUNT ( * ) AS n_italy FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.Country = \"Italy\" )",
        "db_id": "formula_1"
    },
    {
        "id": 176,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nHow many races were held in the Northern Hemisphere and the Southern Hemisphere respectively? What is the difference between them?the evidence is as follow:\nThe Northern Hemisphere runs from 0 degree latitude to 90 degrees North and the Southern Hemisphere from 0 degree latitude to 90 degree South. The north latitude is positive, and the south latitude is negative.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_north , n_south , n_north - n_south FROM ( SELECT COUNT ( * ) AS n_north FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.lat > 0 ) JOIN ( SELECT COUNT ( * ) AS n_south FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.lat < 0 )",
        "db_id": "formula_1"
    },
    {
        "id": 177,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nWhat is the sum, and difference between, of races held in the Northern and Southern Hemispheres respectively?the evidence is as follow:\nThe Northern Hemisphere runs from 0 degree latitude to 90 degrees North and the Southern Hemisphere from 0 degree latitude to 90 degree South. The north latitude is positive, and the south latitude is negative.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_north , n_south , n_north - n_south FROM ( SELECT COUNT ( * ) AS n_north FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.lat > 0 ) JOIN ( SELECT COUNT ( * ) AS n_south FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.lat < 0 )",
        "db_id": "formula_1"
    },
    {
        "id": 178,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nWhat are the first name and last name of the fastest and slowest driver in the first round of the 2006 British Grand Prix qualifying race? What is the difference between their lap time?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT forename_slowest , surname_slowest , forename_fastest , surname_fastest , time ( ( strftime ( \"%s\" , \"00:0\" || slowest_q1 ) - strftime ( \"%s\" , \"00:0\" || fastest_q1 ) ) , \"unixepoch\" ) AS diff FROM ( SELECT MAX ( A.q1 ) AS slowest_q1 , D.forename AS forename_slowest , D.surname AS surname_slowest FROM qualifying A JOIN races B ON A.raceId = B.raceId JOIN drivers D ON A.driverId = D.driverId WHERE B.name = \"British Grand Prix\" AND B.year = \"2006\" ) JOIN ( SELECT MIN ( A.q1 ) AS fastest_q1 , D.forename AS forename_fastest , D.surname AS surname_fastest FROM qualifying A JOIN races B ON A.raceId = B.raceId JOIN drivers D ON A.driverId = D.driverId WHERE B.name = \"British Grand Prix\" AND B.year = \"2006\" AND A.q1 != \"\" )",
        "db_id": "formula_1"
    },
    {
        "id": 179,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nFor the British Grand Prix in 2006, which racer was the fastest and which racer was the slowest? Provide their first name, last name, and the difference in lap time between them?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT forename_slowest , surname_slowest , forename_fastest , surname_fastest , time ( ( strftime ( \"%s\" , \"00:0\" || slowest_q1 ) - strftime ( \"%s\" , \"00:0\" || fastest_q1 ) ) , \"unixepoch\" ) AS diff FROM ( SELECT MAX ( A.q1 ) AS slowest_q1 , D.forename AS forename_slowest , D.surname AS surname_slowest FROM qualifying A JOIN races B ON A.raceId = B.raceId JOIN drivers D ON A.driverId = D.driverId WHERE B.name = \"British Grand Prix\" AND B.year = \"2006\" ) JOIN ( SELECT MIN ( A.q1 ) AS fastest_q1 , D.forename AS forename_fastest , D.surname AS surname_fastest FROM qualifying A JOIN races B ON A.raceId = B.raceId JOIN drivers D ON A.driverId = D.driverId WHERE B.name = \"British Grand Prix\" AND B.year = \"2006\" AND A.q1 != \"\" )",
        "db_id": "formula_1"
    },
    {
        "id": 180,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nWhich countries have more than twice as many racing circuits as Japan?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.country FROM circuits B , ( SELECT COUNT ( * ) AS n_japan FROM circuits B WHERE B.country = \"Japan\" ) GROUP BY B.country HAVING COUNT ( * ) > 2 * n_japan",
        "db_id": "formula_1"
    },
    {
        "id": 181,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nFind me the countries with at least two times the quantity of racing circuits in Japan.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.country FROM circuits B , ( SELECT COUNT ( * ) AS n_japan FROM circuits B WHERE B.country = \"Japan\" ) GROUP BY B.country HAVING COUNT ( * ) > 2 * n_japan",
        "db_id": "formula_1"
    },
    {
        "id": 182,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * H question is as follows:\nAssuming Japan had 2 circuits, which countries have more than twice as many racing circuits as Japan?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT country FROM circuits GROUP BY country HAVING COUNT ( * ) > 2 * 2",
        "db_id": "formula_1"
    },
    {
        "id": 183,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * H question is as follows:\nWhich countries have more than twice as many racing circuits as the two racing circuits in Japan?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT country FROM circuits GROUP BY country HAVING COUNT ( * ) > 2 * 2",
        "db_id": "formula_1"
    },
    {
        "id": 184,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nList the first and last name of drivers with lap time 1.5 times more than the minimum lap time record.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT B.forename , B.surname FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE milliseconds != \"\" AND CAST ( milliseconds AS INT ) > 1.5 * ( SELECT MIN ( CAST ( milliseconds AS INT ) ) FROM results WHERE milliseconds != \"\" )",
        "db_id": "formula_1"
    },
    {
        "id": 185,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nWhich drivers have recorded a lap time 1.5 times greater than the record for minimum lap time? Provide their first and last names.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT B.forename , B.surname FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE milliseconds != \"\" AND CAST ( milliseconds AS INT ) > 1.5 * ( SELECT MIN ( CAST ( milliseconds AS INT ) ) FROM results WHERE milliseconds != \"\" )",
        "db_id": "formula_1"
    },
    {
        "id": 186,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nIf the minimum lap time record was 93000 milliseconds, list the first and last names of drivers with lap time 1.5 times more than the minimum lap time.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT B.forename , B.surname FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE CAST ( milliseconds AS INT ) > 1.5 * 93000",
        "db_id": "formula_1"
    },
    {
        "id": 187,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nTell me the first and last names of all the drivers with a lap time 1.5 times greater than the record of 93000 milliseconds.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT B.forename , B.surname FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE CAST ( milliseconds AS INT ) > 1.5 * 93000",
        "db_id": "formula_1"
    },
    {
        "id": 188,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C question is as follows:\nList locations and the number of races, where the locations held three times more races than that held in the Portuguese capital.the evidence is as follow:\nLisbon is the capital of Portugal.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.location , COUNT ( * ) AS num_races FROM races A JOIN circuits B ON A.circuitId = B.circuitId GROUP BY B.location HAVING COUNT ( * ) > 3 * ( SELECT COUNT ( * ) FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.location = \"Lisbon\" )",
        "db_id": "formula_1"
    },
    {
        "id": 189,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C question is as follows:\nWhich locations have held three times more races than the capital of Portugal? What is the number of races for each of these places?the evidence is as follow:\nLisbon is the capital of Portugal.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.location , COUNT ( * ) AS num_races FROM races A JOIN circuits B ON A.circuitId = B.circuitId GROUP BY B.location HAVING COUNT ( * ) > 3 * ( SELECT COUNT ( * ) FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE B.location = \"Lisbon\" )",
        "db_id": "formula_1"
    },
    {
        "id": 190,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C H question is as follows:\nIf 5 races were held in Lisbon, list locations and the number of races, where the locations held three times more races than that held in the Portuguese capital.the evidence is as follow:\nLisbon is the capital of Portugal.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.location , COUNT ( * ) AS num_races FROM races A JOIN circuits B ON A.circuitId = B.circuitId GROUP BY B.location HAVING COUNT ( * ) > 3 * 5",
        "db_id": "formula_1"
    },
    {
        "id": 191,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C H question is as follows:\nLisbon has held five races so give me the locations and race count of all locations which held three times more races than the quantity of races at the capital of Portugal.the evidence is as follow:\nLisbon is the capital of Portugal.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.location , COUNT ( * ) AS num_races FROM races A JOIN circuits B ON A.circuitId = B.circuitId GROUP BY B.location HAVING COUNT ( * ) > 3 * 5",
        "db_id": "formula_1"
    },
    {
        "id": 192,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nHow many races did Lewis Hamilton participate in? How many times did he win first place? What is the probability for him of winning first place?the evidence is as follow:\nProbability is calculated by dividing the number of ways the event can occur by the total number of outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT num_matches , num_no1 , 1.0 * num_no1 / num_matches AS possibility FROM ( SELECT COUNT ( * ) AS num_matches FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE B.surname = \"Albers\" AND B.forename = \"Christijan\" ) JOIN ( SELECT COUNT ( * ) AS num_no1 FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE B.surname = \"Hamilton\" AND B.forename = \"Lewis\" AND A.rank = \"1\" )",
        "db_id": "formula_1"
    },
    {
        "id": 193,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nCount the number of races Lewis Hamilton has participated in and then the amount he has ranked first place. Therefore, what is his probability of winning first?the evidence is as follow:\nProbability is calculated by dividing the number of ways the event can occur by the total number of outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT num_matches , num_no1 , 1.0 * num_no1 / num_matches AS possibility FROM ( SELECT COUNT ( * ) AS num_matches FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE B.surname = \"Albers\" AND B.forename = \"Christijan\" ) JOIN ( SELECT COUNT ( * ) AS num_no1 FROM results A JOIN drivers B ON A.driverId = B.driverId WHERE B.surname = \"Hamilton\" AND B.forename = \"Lewis\" AND A.rank = \"1\" )",
        "db_id": "formula_1"
    },
    {
        "id": 194,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA / * C question is as follows:\nHow many times is the number of circuits in the United States greater than that in the country with the largest land area in the world?the evidence is as follow:\nThe largest country in the world is Russia.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( SELECT COUNT ( * ) FROM circuits WHERE country = \"USA\" ) / COUNT ( * ) AS ratio FROM circuits WHERE country = \"Russia\"",
        "db_id": "formula_1"
    },
    {
        "id": 195,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA / * C question is as follows:\nWhat is the ratio between the number of circuits in the United States to the number of circuits in the largest country as measured by land area?the evidence is as follow:\nThe largest country in the world is Russia.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( SELECT COUNT ( * ) FROM circuits WHERE country = \"USA\" ) / COUNT ( * ) AS ratio FROM circuits WHERE country = \"Russia\"",
        "db_id": "formula_1"
    },
    {
        "id": 196,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C H question is as follows:\nAssuming there were 2 circuits in USA, how many times is the number of circuits in the United States greater than that in the country with the largest land area in the world?the evidence is as follow:\nThe largest country in the world is Russia.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * 2 / COUNT ( * ) AS ratio FROM circuits WHERE country = \"Russia\"",
        "db_id": "formula_1"
    },
    {
        "id": 197,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C H question is as follows:\nIf the USA has two circuits then how many times more circuits does this country have than the country with the largest area?the evidence is as follow:\nThe largest country in the world is Russia.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * 2 / COUNT ( * ) AS ratio FROM circuits WHERE country = \"Russia\"",
        "db_id": "formula_1"
    },
    {
        "id": 198,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nAmong the drivers who have the same nationality as the famous football player Cristiano Ronaldo, how many times is the number of players that participated in the 2006 United States Grand Prix greater than that of players who did not?the evidence is as follow:\nCristiano Ronaldo is a Portuguese professional footballer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_p / n_all FROM ( SELECT COUNT ( DISTINCT A.driverId ) AS n_p FROM drivers A JOIN results B ON A.driverId = B.driverId JOIN races C ON B.raceId = C.raceID WHERE A.nationality = \"Portuguese\" AND C.name = \"United States Grand Prix\" AND C.year = \"2006\" ) JOIN ( SELECT COUNT ( DISTINCT A.driverId ) AS n_all FROM drivers A JOIN results B ON A.driverId = B.driverId JOIN races C ON B.raceId = C.raceID WHERE A.nationality = \"Portuguese\" )",
        "db_id": "formula_1"
    },
    {
        "id": 199,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nAmong those professional drivers who share a nationality with Cristiano Ronaldo, what is the ratio between participating drivers to non-participating drivers for the 2006 Grand Prix in the United States?the evidence is as follow:\nCristiano Ronaldo is a Portuguese professional footballer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_p / n_all FROM ( SELECT COUNT ( DISTINCT A.driverId ) AS n_p FROM drivers A JOIN results B ON A.driverId = B.driverId JOIN races C ON B.raceId = C.raceID WHERE A.nationality = \"Portuguese\" AND C.name = \"United States Grand Prix\" AND C.year = \"2006\" ) JOIN ( SELECT COUNT ( DISTINCT A.driverId ) AS n_all FROM drivers A JOIN results B ON A.driverId = B.driverId JOIN races C ON B.raceId = C.raceID WHERE A.nationality = \"Portuguese\" )",
        "db_id": "formula_1"
    },
    {
        "id": 200,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nDuring George W. Bush's presidency, how many races did the United States host? How many times as many races as those held in the United Kingdom?the evidence is as follow:\nGeorge W. Bush’s tenure as the 43rd president of the United States began with his first inauguration on January 20, 2001, and ended on January 20, 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT 1.0 * COUNT ( * ) FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE A.year BETWEEN 2001 AND 2009 AND country = \"UK\" ) AS ratio FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE A.year BETWEEN 2001 AND 2009 AND country = \"USA\"",
        "db_id": "formula_1"
    },
    {
        "id": 201,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nWhat is the total count of races hosted in the U.S.A. during George W. Bush's tenure as President and how many times was this count greater than the number of races held in the U.K.?the evidence is as follow:\nGeorge W. Bush’s tenure as the 43rd president of the United States began with his first inauguration on January 20, 2001, and ended on January 20, 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT 1.0 * COUNT ( * ) FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE A.year BETWEEN 2001 AND 2009 AND country = \"UK\" ) AS ratio FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE A.year BETWEEN 2001 AND 2009 AND country = \"USA\"",
        "db_id": "formula_1"
    },
    {
        "id": 202,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C H question is as follows:\nDuring George W. Bush's presidency, how many races did the United States host? How many times as many races as those held in the UK assuming that there were 10 races held in UK during that time?the evidence is as follow:\nGeorge W. Bush’s tenure as the 43rd president of the United States began with his first inauguration on January 20, 2001, and ended on January 20, 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / 10 AS ratio FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE A.year BETWEEN 2001 AND 2009 AND country = \"USA\"",
        "db_id": "formula_1"
    },
    {
        "id": 203,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C H question is as follows:\nIf the U.K. hosted 10 races during George W. Bush's tenure then how many times more races did the U.S.A. host in the same time period?the evidence is as follow:\nGeorge W. Bush’s tenure as the 43rd president of the United States began with his first inauguration on January 20, 2001, and ended on January 20, 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / 10 AS ratio FROM races A JOIN circuits B ON A.circuitId = B.circuitId WHERE A.year BETWEEN 2001 AND 2009 AND country = \"USA\"",
        "db_id": "formula_1"
    },
    {
        "id": 204,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C question is as follows:\nProvide the ID, first name, and number of races for drivers who have competed in at least twice as many races as Allen Berg and have the same nationality as the famous singer Michael Jackson.the evidence is as follow:\nMichael Joseph Jackson was an American singer, songwriter, dancer, and philanthropist.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.driverId , forename AS first_name , COUNT ( * ) AS n_races FROM drivers A JOIN results B ON A.driverId = B.driverId GROUP BY A.driverId HAVING COUNT ( * ) >= 2 * ( SELECT COUNT ( * ) FROM drivers A JOIN results B ON A.driverId = B.driverId WHERE A.forename = \"Allen\" AND A.surname = \"Berg\" ) AND A.nationality = \"American\"",
        "db_id": "formula_1"
    },
    {
        "id": 205,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C question is as follows:\nOf the drivers sharing a nationality with late singer Michael Jackson, find me the ID, first name and race count for only those two competed in at least twice as many races as Allen Berg.the evidence is as follow:\nMichael Joseph Jackson was an American singer, songwriter, dancer, and philanthropist.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.driverId , forename AS first_name , COUNT ( * ) AS n_races FROM drivers A JOIN results B ON A.driverId = B.driverId GROUP BY A.driverId HAVING COUNT ( * ) >= 2 * ( SELECT COUNT ( * ) FROM drivers A JOIN results B ON A.driverId = B.driverId WHERE A.forename = \"Allen\" AND A.surname = \"Berg\" ) AND A.nationality = \"American\"",
        "db_id": "formula_1"
    },
    {
        "id": 206,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C H question is as follows:\nAssuming that Allen Berg participated in 10 races, provide the ID, first name, and number of races for drivers who have competed in at least twice as many races as Allen Berg and have the same nationality as the famous singer Michael Joseph Jackson.the evidence is as follow:\nMichael Joseph Jackson was an American singer, songwriter, dancer, and philanthropist.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.driverId , forename AS first_name , COUNT ( * ) AS n_races FROM drivers A JOIN results B ON A.driverId = B.driverId GROUP BY A.driverId HAVING COUNT ( * ) >= 2 * 10 AND A.nationality = \"American\"",
        "db_id": "formula_1"
    },
    {
        "id": 207,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C H question is as follows:\nReturn the ID, first name and race count only for drivers who competed in at least twice as many races at Allen Berg's 10 competitive races and only tell me about drivers with the same nationality as singer Michael Jackson.the evidence is as follow:\nMichael Joseph Jackson was an American singer, songwriter, dancer, and philanthropist.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.driverId , forename AS first_name , COUNT ( * ) AS n_races FROM drivers A JOIN results B ON A.driverId = B.driverId GROUP BY A.driverId HAVING COUNT ( * ) >= 2 * 10 AND A.nationality = \"American\"",
        "db_id": "formula_1"
    },
    {
        "id": 208,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nHow many days did John Smith stay in hospital?the evidence is as follow:\nDays in hospital is caculated by subtracting day of admission from day of discharge.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CAST ( julianday ( A.StayEnd ) - julianday ( A.StayStart ) AS INTEGER ) AS days_diff FROM Stay A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"John Smith\"",
        "db_id": "hospital_1"
    },
    {
        "id": 209,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nHow long was John Smith admitted to the hospital?the evidence is as follow:\nDays in hospital is caculated by subtracting day of admission from day of discharge.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CAST ( julianday ( A.StayEnd ) - julianday ( A.StayStart ) AS INTEGER ) AS days_diff FROM Stay A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"John Smith\"",
        "db_id": "hospital_1"
    },
    {
        "id": 210,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C H question is as follows:\nIf John Smith left the hospital on International Nurses Day, how many days did John Smith stay in the hospital?the evidence is as follow:\nDays in hospital is caculated by subtracting day of admission from day of dischargel. International Nurses Day is an international day observed around the world on 12 May each year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT julianday ( strftime ( \"%Y-\" , A.StayEnd ) || \"05-12\" ) - julianday ( strftime ( \"%Y-\" , A.StayStart ) || strftime ( \"%m-%d\" , A.StayStart ) ) AS date_diff FROM Stay A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"John Smith\"",
        "db_id": "hospital_1"
    },
    {
        "id": 211,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C H question is as follows:\nIf John Smith was discharged from the hospital on International Nurses Day, for how long was he admitted to the hospital?the evidence is as follow:\nDays in hospital is caculated by subtracting day of admission from day of dischargel. International Nurses Day is an international day observed around the world on 12 May each year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT julianday ( strftime ( \"%Y-\" , A.StayEnd ) || \"05-12\" ) - julianday ( strftime ( \"%Y-\" , A.StayStart ) || strftime ( \"%m-%d\" , A.StayStart ) ) AS date_diff FROM Stay A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"John Smith\"",
        "db_id": "hospital_1"
    },
    {
        "id": 212,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nHow many more patients have used Foo Labs branded drugs than those have used Baz Industries branded drugs?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( DISTINCT ( Patient ) ) - ( SELECT COUNT ( DISTINCT ( Patient ) ) FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = \"Baz Industries\" ) AS diff FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = \"Foo Labs\"",
        "db_id": "hospital_1"
    },
    {
        "id": 213,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nWhat is the difference in the number of patients who have used drugs branded by Foo Labs compared to those who have used drugs branded by Baz Industries?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( DISTINCT ( Patient ) ) - ( SELECT COUNT ( DISTINCT ( Patient ) ) FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = \"Baz Industries\" ) AS diff FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = \"Foo Labs\"",
        "db_id": "hospital_1"
    },
    {
        "id": 214,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - H question is as follows:\nIf there were 10 patients who used Foo Labs brand drugs, how many more patients have used Foo Labs branded drugs than those have used Baz Industries branded drugs?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 10 - ( SELECT COUNT ( DISTINCT ( Patient ) ) FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = \"Baz Industries\" ) AS diff",
        "db_id": "hospital_1"
    },
    {
        "id": 215,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - H question is as follows:\nIf 10 patients have used drugs branded by Foo Labs, how many additional patients have used Foo Labs branded drugs compared to the number of patients who have used drugs branded by Baz Industries?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 10 - ( SELECT COUNT ( DISTINCT ( Patient ) ) FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Brand = \"Baz Industries\" ) AS diff",
        "db_id": "hospital_1"
    },
    {
        "id": 216,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nHow many times is the number of appointments made by the physician with the highest number of appointments compared to the physician with the lowest number of appointments?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( c ) / MIN ( c ) AS times FROM ( SELECT Physician , COUNT ( * ) AS c FROM Appointment GROUP BY Physician )",
        "db_id": "hospital_1"
    },
    {
        "id": 217,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nWhat is the ratio between the number of appointments made by the physician with the highest and lowest appointments?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( c ) / MIN ( c ) AS times FROM ( SELECT Physician , COUNT ( * ) AS c FROM Appointment GROUP BY Physician )",
        "db_id": "hospital_1"
    },
    {
        "id": 218,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nIf the physician with the fewest appointments made 2 new appointments, how many times is the number of appointments made by the physician with the highest number of appointments compared to the physician with the lowest number of appointments?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( c ) / ( MIN ( c ) + 2 ) AS times FROM ( SELECT Physician , COUNT ( * ) AS c FROM Appointment GROUP BY Physician )",
        "db_id": "hospital_1"
    },
    {
        "id": 219,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nIf the physician who has the least number of appointments schedules 2 additional appointments, what is the ratio between the number of appointments made by the physician with the highest and him?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( c ) / ( MIN ( c ) + 2 ) AS times FROM ( SELECT Physician , COUNT ( * ) AS c FROM Appointment GROUP BY Physician )",
        "db_id": "hospital_1"
    },
    {
        "id": 220,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * C question is as follows:\nAll drugs are 2 dollars per dose. How much did Dennis Doe spend on all drugs and treatment in total?the evidence is as follow:\nTotal price is calculated by multiplying quantity with unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT med_cost + pro_cost AS total_cost FROM ( SELECT 2 * SUM ( A.dose ) AS med_cost FROM Prescribes A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"Dennis Doe\" ) JOIN ( SELECT SUM ( COST ) AS pro_cost FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON B.Patient = C.SSN WHERE C.name = \"Dennis Doe\" )",
        "db_id": "hospital_1"
    },
    {
        "id": 221,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * C question is as follows:\nIf all drugs cost 2 dollars per dose, what is the total amount spent by Dennis Doe on drugs and treatment?the evidence is as follow:\nTotal price is calculated by multiplying quantity with unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT med_cost + pro_cost AS total_cost FROM ( SELECT 2 * SUM ( A.dose ) AS med_cost FROM Prescribes A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"Dennis Doe\" ) JOIN ( SELECT SUM ( COST ) AS pro_cost FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON B.Patient = C.SSN WHERE C.name = \"Dennis Doe\" )",
        "db_id": "hospital_1"
    },
    {
        "id": 222,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * C H question is as follows:\nAll drugs are 2 dollars per dose. If Dennis Doe bought 10 more doses of Thesisin at 16:53 on April 30th, 2008, how much did Dennis Doe spend on all drugs and treatment in total?the evidence is as follow:\nTotal price is calculated by multiplying quantity with unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT med_cost + pro_cost + 10 * 2 AS total_cost FROM ( SELECT 2 * SUM ( A.dose ) AS med_cost FROM Prescribes A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"Dennis Doe\" AND A.Date != \"2008-04-30 16:53\" ) JOIN ( SELECT SUM ( COST ) AS pro_cost FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON B.Patient = C.SSN WHERE C.name = \"Dennis Doe\" )",
        "db_id": "hospital_1"
    },
    {
        "id": 223,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * C H question is as follows:\nIf all drugs cost 2 dollars per dose and Dennis Doe purchased 10 additional doses of Thesisin at 16:53 on April 30, 2008, what is the total amount spent by Dennis Doe on all drugs and treatment?the evidence is as follow:\nTotal price is calculated by multiplying quantity with unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT med_cost + pro_cost + 10 * 2 AS total_cost FROM ( SELECT 2 * SUM ( A.dose ) AS med_cost FROM Prescribes A JOIN Patient B ON A.Patient = B.SSN WHERE B.name = \"Dennis Doe\" AND A.Date != \"2008-04-30 16:53\" ) JOIN ( SELECT SUM ( COST ) AS pro_cost FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON B.Patient = C.SSN WHERE C.name = \"Dennis Doe\" )",
        "db_id": "hospital_1"
    },
    {
        "id": 224,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nHow long is the validity period of John Wen''s trained procedures qualification certificate?the evidence is as follow:\nLifetime of the certification is computed substacting certification start date from certification expire date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.name , CAST ( julianday ( A.CertificationExpires ) - julianday ( A.CertificationDate ) AS INTEGER ) AS lifetime FROM Trained_In A JOIN Physician B ON A.Physician = B.EmployeeID JOIN Procedures C ON C.code = A.Treatment WHERE B.name = \"John Wen\"",
        "db_id": "hospital_1"
    },
    {
        "id": 225,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nWhat is the validity period of John Wen''s trained procedure qualification certificate?the evidence is as follow:\nLifetime of the certification is computed substacting certification start date from certification expire date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.name , CAST ( julianday ( A.CertificationExpires ) - julianday ( A.CertificationDate ) AS INTEGER ) AS lifetime FROM Trained_In A JOIN Physician B ON A.Physician = B.EmployeeID JOIN Procedures C ON C.code = A.Treatment WHERE B.name = \"John Wen\"",
        "db_id": "hospital_1"
    },
    {
        "id": 226,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + C H question is as follows:\nHow long is the validity period of John Wen''s trained procedures qualification certificate, if the the validity period is extended by 180 days?the evidence is as follow:\nLifetime of the certification is computed substacting certification start date from certification expire date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.name , CAST ( julianday ( A.CertificationExpires ) - julianday ( A.CertificationDate ) AS INTEGER ) + 180 AS lifetime FROM Trained_In A JOIN Physician B ON A.Physician = B.EmployeeID JOIN Procedures C ON C.code = A.Treatment WHERE B.name = \"John Wen\"",
        "db_id": "hospital_1"
    },
    {
        "id": 227,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + C H question is as follows:\nIf the validity period of John Wen's trained procedures qualification certificate is extended by 180 days, what is the new validity period of the certificate?the evidence is as follow:\nLifetime of the certification is computed substacting certification start date from certification expire date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.name , CAST ( julianday ( A.CertificationExpires ) - julianday ( A.CertificationDate ) AS INTEGER ) + 180 AS lifetime FROM Trained_In A JOIN Physician B ON A.Physician = B.EmployeeID JOIN Procedures C ON C.code = A.Treatment WHERE B.name = \"John Wen\"",
        "db_id": "hospital_1"
    },
    {
        "id": 228,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA / * question is as follows:\nWhat is the proportion of physicians who belong to both Surgery department and General Medicine department out of physicians who belong to Surgery department?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Affiliated_With WHERE Department = ( SELECT DepartmentID FROM Department WHERE Name = \"Surgery\" ) ) AS prop FROM ( select * from Affiliated_With as A join department as B on A.Department = B.DepartmentID WHERE B.Name = \"Surgery\" or B.Name = \"General Medicine\" GROUP BY Physician HAVING COUNT ( DISTINCT ( B.Name ) ) = 2 )",
        "db_id": "hospital_1"
    },
    {
        "id": 229,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA / * question is as follows:\nWhat is the ratio of physicians who are members of both the Surgery department and the General Medicine department, compared to the total number of physicians in the Surgery department?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Affiliated_With WHERE Department = ( SELECT DepartmentID FROM Department WHERE Name = \"Surgery\" ) ) AS prop FROM ( select * from Affiliated_With as A join department as B on A.Department = B.DepartmentID WHERE B.Name = \"Surgery\" or B.Name = \"General Medicine\" GROUP BY Physician HAVING COUNT ( DISTINCT ( B.Name ) ) = 2 )",
        "db_id": "hospital_1"
    },
    {
        "id": 230,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + / * H question is as follows:\nIf Keith Dudermeister belongs to both the Surgery department and the General Medicine department, what is the proportion of physicians who belong to both the Surgery department and the General Medicine department among physicians who belong to the Surgery department?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( 1 + COUNT ( * ) ) / ( 1 + ( SELECT COUNT ( * ) FROM Affiliated_With as A join Physician as B on A.Physician = B.EmployeeID WHERE B.Name != \"Keith Dudermeister\" and Department = ( SELECT DepartmentID FROM Department WHERE Name = \"Surgery\" ) ) ) AS prop FROM ( select * from Affiliated_With as A join department as B on A.Department = B.DepartmentID join Physician as C on A.Physician = C.EmployeeID WHERE C.Name != \"Keith Dudermeister\" and ( B.Name = \"Surgery\" or B.Name = \"General Medicine\" ) GROUP BY Physician HAVING COUNT ( DISTINCT ( B.Name ) ) = 2 )",
        "db_id": "hospital_1"
    },
    {
        "id": 231,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + / * H question is as follows:\nIf Keith Dudermeister is a member of both the Surgery and General Medicine departments, what is the proportion of physicians who belong to both departments out of the total number of physicians in the Surgery department?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( 1 + COUNT ( * ) ) / ( 1 + ( SELECT COUNT ( * ) FROM Affiliated_With as A join Physician as B on A.Physician = B.EmployeeID WHERE B.Name != \"Keith Dudermeister\" and Department = ( SELECT DepartmentID FROM Department WHERE Name = \"Surgery\" ) ) ) AS prop FROM ( select * from Affiliated_With as A join department as B on A.Department = B.DepartmentID join Physician as C on A.Physician = C.EmployeeID WHERE C.Name != \"Keith Dudermeister\" and ( B.Name = \"Surgery\" or B.Name = \"General Medicine\" ) GROUP BY Physician HAVING COUNT ( DISTINCT ( B.Name ) ) = 2 )",
        "db_id": "hospital_1"
    },
    {
        "id": 232,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nHow many times is the highest price of the treatments compared to the lowest price?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( Cost ) / MIN ( Cost ) AS times FROM Procedures",
        "db_id": "hospital_1"
    },
    {
        "id": 233,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nWhat is the ratio between the highest and lowest prices of the treatments?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( Cost ) / MIN ( Cost ) AS times FROM Procedures",
        "db_id": "hospital_1"
    },
    {
        "id": 234,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nHow many times is the highest price of the treatments compared to the lowest price, if the the lowest price was increased by 75%?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( Cost ) / ( ( 1 + 0.75 ) * MIN ( Cost ) ) AS times FROM Procedures",
        "db_id": "hospital_1"
    },
    {
        "id": 235,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nIf the lowest price of the treatments was increased by 75%, what would be the new ratio between the highest and lowest prices?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * MAX ( Cost ) / ( ( 1 + 0.75 ) * MIN ( Cost ) ) AS times FROM Procedures",
        "db_id": "hospital_1"
    },
    {
        "id": 236,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nHow many treatments with a cost higher than 1000 account for the total number of treatments?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Procedures ) FROM Procedures WHERE Cost > 1000",
        "db_id": "hospital_1"
    },
    {
        "id": 237,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nWhat proportion of treatments, out of the total number of treatments, cost higher than 1000?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Procedures ) FROM Procedures WHERE Cost > 1000",
        "db_id": "hospital_1"
    },
    {
        "id": 238,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - * / question is as follows:\nWhat is the proportion of patients who do not use Procrastin-X in the total number of patients?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 - 1.0 * COUNT ( DISTINCT ( Patient ) ) / ( SELECT COUNT ( DISTINCT ( SSN ) ) FROM Patient ) AS prop FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Name = \"Procrastin-X\"",
        "db_id": "hospital_1"
    },
    {
        "id": 239,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - * / question is as follows:\nWhat proportion of patients, out of the total number of patients, do not use Procrastin-X?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 - 1.0 * COUNT ( DISTINCT ( Patient ) ) / ( SELECT COUNT ( DISTINCT ( SSN ) ) FROM Patient ) AS prop FROM Medication A JOIN Prescribes B ON A.code = B.Medication WHERE A.Name = \"Procrastin-X\"",
        "db_id": "hospital_1"
    },
    {
        "id": 240,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nHow much is the difference between Dennis Doe's most expensive treatment and his cheapest treatment?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( A.Cost ) - MIN ( A.Cost ) AS diff FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON C.SSN = B.Patient WHERE C.Name = \"Dennis Doe\"",
        "db_id": "hospital_1"
    },
    {
        "id": 241,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nWhat is the difference between Dennis Doe's most expensive and least expensive treatments?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( A.Cost ) - MIN ( A.Cost ) AS diff FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON C.SSN = B.Patient WHERE C.Name = \"Dennis Doe\"",
        "db_id": "hospital_1"
    },
    {
        "id": 242,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + * H question is as follows:\nIf the price of each treatment was increased by 50%, how much is the difference between Dennis Doe's most expensive treatment and his cheapest treatment?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( ( 1 + 0.5 ) * MAX ( A.Cost ) ) - ( ( 1 + 0.5 ) * MIN ( A.Cost ) ) AS diff FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON C.SSN = B.Patient WHERE C.Name = \"Dennis Doe\"",
        "db_id": "hospital_1"
    },
    {
        "id": 243,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + * H question is as follows:\nIf the price of each treatment was increased by 50%, what would be the difference between Dennis Doe's most expensive and least expensive treatments?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( ( 1 + 0.5 ) * MAX ( A.Cost ) ) - ( ( 1 + 0.5 ) * MIN ( A.Cost ) ) AS diff FROM Procedures A JOIN Undergoes B ON A.Code = B.Procedures JOIN Patient C ON C.SSN = B.Patient WHERE C.Name = \"Dennis Doe\"",
        "db_id": "hospital_1"
    },
    {
        "id": 244,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nHow many available rooms account for the total number of rooms?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Room ) AS prop FROM Room WHERE Unavailable = \"0\"",
        "db_id": "hospital_1"
    },
    {
        "id": 245,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nWhat is the proportion of available rooms to the total number of rooms?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM Room ) AS prop FROM Room WHERE Unavailable = \"0\"",
        "db_id": "hospital_1"
    },
    {
        "id": 246,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nIf there are two beds in each room, how many people can be accommodated in the available room in total?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 2 * COUNT ( * ) AS n_people FROM Room WHERE Unavailable = \"0\"",
        "db_id": "hospital_1"
    },
    {
        "id": 247,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nIf each room has two beds, what is the total number of people that can be accommodated in all the available rooms?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 2 * COUNT ( * ) AS n_people FROM Room WHERE Unavailable = \"0\"",
        "db_id": "hospital_1"
    },
    {
        "id": 248,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - / C question is as follows:\nWhat is the duration in minutes of an appointment with an appointment ID of 13216584?the evidence is as follow:\nOne hour is 60 minutes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( strftime ( \"%s\" , End ) - strftime ( \"%s\" , Start ) ) / 60.0 AS time FROM Appointment WHERE AppointmentID = \"13216584\"",
        "db_id": "hospital_1"
    },
    {
        "id": 249,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - / C question is as follows:\nHow long is the appointment with appointment ID 13216584 in minutes?the evidence is as follow:\nOne hour is 60 minutes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( strftime ( \"%s\" , End ) - strftime ( \"%s\" , Start ) ) / 60.0 AS time FROM Appointment WHERE AppointmentID = \"13216584\"",
        "db_id": "hospital_1"
    },
    {
        "id": 250,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + / C H question is as follows:\nIf the duration of the appointment with an appointment ID 13216584 is extended for half an hour, how many minutes will it last?the evidence is as follow:\nHalf an hour is 30 minutes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( strftime ( \"%s\" , End ) - strftime ( \"%s\" , Start ) ) / 60.0 + 30 AS time FROM Appointment WHERE AppointmentID = \"13216584\"",
        "db_id": "hospital_1"
    },
    {
        "id": 251,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + / C H question is as follows:\nIf the appointment with appointment ID 13216584 is extended by 30 minutes, what will be the new total duration of the appointment in minutes?the evidence is as follow:\nHalf an hour is 30 minutes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( strftime ( \"%s\" , End ) - strftime ( \"%s\" , Start ) ) / 60.0 + 30 AS time FROM Appointment WHERE AppointmentID = \"13216584\"",
        "db_id": "hospital_1"
    },
    {
        "id": 252,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nIf the training fee for each training is 50, who is the physician who spent the most on training? List his name, position, and training expenses.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Name , A.Position , 50 * COUNT ( * ) AS cost FROM Physician A JOIN Trained_In B ON A.EmployeeID = B.Physician GROUP BY A.EmployeeID HAVING COUNT ( * ) = ( SELECT MAX ( training_count ) FROM ( SELECT COUNT ( * ) AS training_count FROM Trained_In GROUP BY Physician ) )",
        "db_id": "hospital_1"
    },
    {
        "id": 253,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * question is as follows:\nWhich physician has incurred the highest training expenses, if the training fee for each session is 50? Provide their name, position, and total training expense.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Name , A.Position , 50 * COUNT ( * ) AS cost FROM Physician A JOIN Trained_In B ON A.EmployeeID = B.Physician GROUP BY A.EmployeeID HAVING COUNT ( * ) = ( SELECT MAX ( training_count ) FROM ( SELECT COUNT ( * ) AS training_count FROM Trained_In GROUP BY Physician ) )",
        "db_id": "hospital_1"
    },
    {
        "id": 254,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nHow many more rooms are available on the top floor than on the bottom floor?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) - ( SELECT COUNT ( * ) FROM Room WHERE Unavailable = \"0\" AND BlockFloor = ( SELECT MIN ( BlockFloor ) FROM Room ) ) AS diff FROM Room WHERE Unavailable = \"0\" AND BlockFloor = ( SELECT MAX ( BlockFloor ) FROM Room )",
        "db_id": "hospital_1"
    },
    {
        "id": 255,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nWhat is the difference in the number of available rooms on the top and bottom floors?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) - ( SELECT COUNT ( * ) FROM Room WHERE Unavailable = \"0\" AND BlockFloor = ( SELECT MIN ( BlockFloor ) FROM Room ) ) AS diff FROM Room WHERE Unavailable = \"0\" AND BlockFloor = ( SELECT MAX ( BlockFloor ) FROM Room )",
        "db_id": "hospital_1"
    },
    {
        "id": 256,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - H question is as follows:\nSuppose there are 20 available rooms on the top floor, how many more rooms are available on the top floor than on the bottom floor?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 20 - ( SELECT COUNT ( * ) FROM Room WHERE Unavailable = \"0\" AND BlockFloor = ( SELECT MIN ( BlockFloor ) FROM Room ) ) AS diff",
        "db_id": "hospital_1"
    },
    {
        "id": 257,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - H question is as follows:\nIf the top floor has 20 available rooms, what is the difference in the number of available rooms between the top and bottom floors?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 20 - ( SELECT COUNT ( * ) FROM Room WHERE Unavailable = \"0\" AND BlockFloor = ( SELECT MIN ( BlockFloor ) FROM Room ) ) AS diff",
        "db_id": "hospital_1"
    },
    {
        "id": 258,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nWhat is the percentage of players with coaches in the total number of players?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( DISTINCT ( Player_ID ) ) / ( SELECT COUNT ( DISTINCT ( Player_ID ) ) FROM player ) AS ratio FROM player_coach",
        "db_id": "riding_club"
    },
    {
        "id": 259,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nWhat percentage of total players have coaches?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( DISTINCT ( Player_ID ) ) / ( SELECT COUNT ( DISTINCT ( Player_ID ) ) FROM player ) AS ratio FROM player_coach",
        "db_id": "riding_club"
    },
    {
        "id": 260,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nIf Jim Maloway's coach is Joe Fabbri, what is the percentage of players with coaches in the total number of players?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * ( COUNT ( DISTINCT ( A.Player_ID ) ) + 1 ) / ( SELECT COUNT ( DISTINCT ( Player_ID ) ) FROM player ) AS ratio FROM player_coach A JOIN player B ON A.Player_ID = B.Player_ID WHERE B.Player_name != \"Jim Maloway\"",
        "db_id": "riding_club"
    },
    {
        "id": 261,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nWhat percentage of players have a coach under the premise of Joe Fabbri coaching Jim Maloway?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * ( COUNT ( DISTINCT ( A.Player_ID ) ) + 1 ) / ( SELECT COUNT ( DISTINCT ( Player_ID ) ) FROM player ) AS ratio FROM player_coach A JOIN player B ON A.Player_ID = B.Player_ID WHERE B.Player_name != \"Jim Maloway\"",
        "db_id": "riding_club"
    },
    {
        "id": 262,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nWhat percentage of the total number of clubs were built before the year the Bitcoin Network was first launched?the evidence is as follow:\nBitcoin Network was first launched in January 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM club ) AS ratio FROM club WHERE Start_year < \"2009\"",
        "db_id": "riding_club"
    },
    {
        "id": 263,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nHow many clubs, out of the total number, were constructed and opened prior to the launching of the Bitcoin Network?the evidence is as follow:\nBitcoin Network was first launched in January 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM club ) AS ratio FROM club WHERE Start_year < \"2009\"",
        "db_id": "riding_club"
    },
    {
        "id": 264,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / C H question is as follows:\nIf the Helsingborgs IF Club was established in 2000 instead, what percentage of the total number of clubs were built before the year the Bitcoin Network was first launched?the evidence is as follow:\nBitcoin Network was first launched in January 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * ( COUNT ( * ) + 1 ) / ( SELECT COUNT ( * ) FROM club ) AS ratio FROM club WHERE Start_year < \"2009\" AND Club_name != \"Helsingborgs IF\"",
        "db_id": "riding_club"
    },
    {
        "id": 265,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / C H question is as follows:\nWhich clubs, as a percentage of total clubs, existed prior to the foundation of the Bitcoin Network if the Helsingborgs IF Club was actuallly established in 2000?the evidence is as follow:\nBitcoin Network was first launched in January 2009.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * ( COUNT ( * ) + 1 ) / ( SELECT COUNT ( * ) FROM club ) AS ratio FROM club WHERE Start_year < \"2009\" AND Club_name != \"Helsingborgs IF\"",
        "db_id": "riding_club"
    },
    {
        "id": 266,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + C question is as follows:\nHow many medals have all the clubs in the country that owns the world's longest railway won?the evidence is as follow:\nThe Trans-Siberian Railway located at Russia is the longest railway line in the world.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( Gold + Big_Silver + Small_Silver + Bronze ) AS total_medals FROM club A JOIN match_result B ON A.Club_ID = B.Club_ID WHERE A.Region = \"Russia\"",
        "db_id": "riding_club"
    },
    {
        "id": 267,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + C question is as follows:\nWhat is the medal count for all clubs located in the same country as the longest railway in the world?the evidence is as follow:\nThe Trans-Siberian Railway located at Russia is the longest railway line in the world.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( Gold + Big_Silver + Small_Silver + Bronze ) AS total_medals FROM club A JOIN match_result B ON A.Club_ID = B.Club_ID WHERE A.Region = \"Russia\"",
        "db_id": "riding_club"
    },
    {
        "id": 268,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * C H question is as follows:\nHow many medals have all the clubs in the country that owns the world's longest railway won if the number of gold medal of each club was doubled?the evidence is as follow:\nThe Trans-Siberian Railway located at Russia is the longest railway line in the world.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( 2 * Gold + Big_Silver + Small_Silver + Bronze ) AS total_medals FROM club A JOIN match_result B ON A.Club_ID = B.Club_ID WHERE A.Region = \"Russia\"",
        "db_id": "riding_club"
    },
    {
        "id": 269,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * C H question is as follows:\nAssuming the number of gold medal of each club was doubled, what is the medal count for all clubs located in the same country as the longest railway in the world?the evidence is as follow:\nThe Trans-Siberian Railway located at Russia is the longest railway line in the world.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM ( 2 * Gold + Big_Silver + Small_Silver + Bronze ) AS total_medals FROM club A JOIN match_result B ON A.Club_ID = B.Club_ID WHERE A.Region = \"Russia\"",
        "db_id": "riding_club"
    },
    {
        "id": 270,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / question is as follows:\nHow many times more medals does the top ranked club have than the third ranked club?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_1 / n_3 AS times FROM ( SELECT Gold + Big_Silver + Small_Silver + Bronze AS n_1 FROM match_result WHERE rank = \"1\" ) JOIN ( SELECT Gold + Big_Silver + Small_Silver + Bronze AS n_3 FROM match_result WHERE rank = \"3\" )",
        "db_id": "riding_club"
    },
    {
        "id": 271,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / question is as follows:\nWhat is the ratio of medals between the top ranked and third ranked club?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_1 / n_3 AS times FROM ( SELECT Gold + Big_Silver + Small_Silver + Bronze AS n_1 FROM match_result WHERE rank = \"1\" ) JOIN ( SELECT Gold + Big_Silver + Small_Silver + Bronze AS n_3 FROM match_result WHERE rank = \"3\" )",
        "db_id": "riding_club"
    },
    {
        "id": 272,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nHow many times more medals does the top ranked club have than the third ranked club, if the number of bronze medals of the top ranked club was tripled?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_1 / n_3 AS times FROM ( SELECT Gold + Big_Silver + Small_Silver + 3 * Bronze AS n_1 FROM match_result WHERE rank = \"1\" ) JOIN ( SELECT Gold + Big_Silver + Small_Silver + Bronze AS n_3 FROM match_result WHERE rank = \"3\" )",
        "db_id": "riding_club"
    },
    {
        "id": 273,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nIf the number of bronze medals for the highest-ranking club was tripled, how many times more medals does the highest-ranking club club have compared to the thrid ranked club?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_1 / n_3 AS times FROM ( SELECT Gold + Big_Silver + Small_Silver + 3 * Bronze AS n_1 FROM match_result WHERE rank = \"1\" ) JOIN ( SELECT Gold + Big_Silver + Small_Silver + Bronze AS n_3 FROM match_result WHERE rank = \"3\" )",
        "db_id": "riding_club"
    },
    {
        "id": 274,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * question is as follows:\nIf a gold medal equals 5 points, a big silver medal equals 3 points, a small silver equals 2 points, and a bronze equals 1 point, where is the club with the highest number of points located, when was it established, and how many male and female coaches does it have?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT A.Region , A.Start_year , COUNT ( * ) AS n_M FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze ) AS new_points , Club_ID FROM match_result ) ) AND B.Gender = \"M\" ) JOIN ( SELECT COUNT ( * ) AS n_F FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze ) AS new_points , Club_ID FROM match_result ) ) AND B.Gender = \"F\" )",
        "db_id": "riding_club"
    },
    {
        "id": 275,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * question is as follows:\nAssuming you converted a gold medal to 5 points, a big silver medal to 3 points, a small silver to two points and a bronze medal to 1 point, where is the highest scoring club located, when was it established, and what are the male coach count and the female coach count for the club?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT A.Region , A.Start_year , COUNT ( * ) AS n_M FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze ) AS new_points , Club_ID FROM match_result ) ) AND B.Gender = \"M\" ) JOIN ( SELECT COUNT ( * ) AS n_F FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze ) AS new_points , Club_ID FROM match_result ) ) AND B.Gender = \"F\" )",
        "db_id": "riding_club"
    },
    {
        "id": 276,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * H question is as follows:\nIf a gold medal equals 5 points, a big silver medal equals 3 points, a small silver equals 2 points, a bronze equals 1 point and the number of bronze medals of clubs that have the most and fewest number of gold medals were the same, where is the club with the highest number of points located, when was it established, and how many male and female coaches does it have?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT A.Region , A.Start_year , COUNT ( * ) AS n_M FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( new_points ) , Club_ID FROM ( SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze AS new_points , Club_ID FROM match_result WHERE Club_ID != ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) UNION SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * ( SELECT Bronze FROM ( SELECT MAX ( Gold ) , Bronze FROM match_result ) ) AS new_points , Club_ID FROM match_result WHERE Club_ID = ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) ) ) ) AND B.Gender = \"M\" ) JOIN ( SELECT COUNT ( * ) AS n_F FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( new_points ) , Club_ID FROM ( SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze AS new_points , Club_ID FROM match_result WHERE Club_ID != ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) UNION SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * ( SELECT Bronze FROM ( SELECT MAX ( Gold ) , Bronze FROM match_result ) ) AS new_points , Club_ID FROM match_result WHERE Club_ID = ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) ) ) ) AND B.Gender = \"F\" )",
        "db_id": "riding_club"
    },
    {
        "id": 277,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * H question is as follows:\nIf the clubs with the highest and lowest number of gold medals had an equivalent number of bronze medals --- find me where the highest scoring club is located, when it was established, and the male coach count and the female coach count for the club if you converted all medals to points when a gold medal is 5 points, a big silver medal is 3 points, a small silver medal is 2 points and a bronze medal is 1 point.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT A.Region , A.Start_year , COUNT ( * ) AS n_M FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( new_points ) , Club_ID FROM ( SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze AS new_points , Club_ID FROM match_result WHERE Club_ID != ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) UNION SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * ( SELECT Bronze FROM ( SELECT MAX ( Gold ) , Bronze FROM match_result ) ) AS new_points , Club_ID FROM match_result WHERE Club_ID = ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) ) ) ) AND B.Gender = \"M\" ) JOIN ( SELECT COUNT ( * ) AS n_F FROM club A JOIN coach B ON A.Club_ID = B.Club_ID WHERE A.Club_ID = ( SELECT Club_ID FROM ( SELECT MAX ( new_points ) , Club_ID FROM ( SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * Bronze AS new_points , Club_ID FROM match_result WHERE Club_ID != ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) UNION SELECT 5 * Gold + 3 * Big_Silver + 2 * Small_Silver + 1 * ( SELECT Bronze FROM ( SELECT MAX ( Gold ) , Bronze FROM match_result ) ) AS new_points , Club_ID FROM match_result WHERE Club_ID = ( SELECT Club_ID FROM ( SELECT MIN ( Gold ) , Club_ID FROM match_result ) ) ) ) ) AND B.Gender = \"F\" )",
        "db_id": "riding_club"
    },
    {
        "id": 278,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nWhat is the proportion of small businessman among the contestants who have won the championship?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM ( SELECT * FROM player WHERE Rank = \"1st\" GROUP BY Player_ID ) ) AS propotion FROM ( SELECT * FROM player WHERE Rank = \"1st\" AND Occupation = \"Small Businessman\" GROUP BY Player_ID )",
        "db_id": "riding_club"
    },
    {
        "id": 279,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / question is as follows:\nOut of contestants winning the championship, how many of them are small businessman as a proportion?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM ( SELECT * FROM player WHERE Rank = \"1st\" GROUP BY Player_ID ) ) AS propotion FROM ( SELECT * FROM player WHERE Rank = \"1st\" AND Occupation = \"Small Businessman\" GROUP BY Player_ID )",
        "db_id": "riding_club"
    },
    {
        "id": 280,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nIf Ross Eadie won the first place instead, what is the proportion of small businessman among the contestants who have won the championship?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) FROM player WHERE Player_name = \"Ross Eadie\" AND Occupation = \"Small Businessman\" ) ) / ( ( SELECT COUNT ( * ) FROM ( SELECT * FROM player WHERE Rank = \"1st\" and Player_name != \"Ross Eadie\" GROUP BY Player_ID ) ) + ( SELECT COUNT ( * ) FROM player WHERE Player_name = \"Ross Eadie\" ) ) AS propotion FROM ( SELECT * FROM player WHERE Rank = \"1st\" AND Occupation = \"Small Businessman\" AND Player_name != \"Ross Eadie\" GROUP BY Player_ID )",
        "db_id": "riding_club"
    },
    {
        "id": 281,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / H question is as follows:\nWhat proportion of the winning contestants are small businessmen if Ross Eadie won first place instead of their actual placement?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) FROM player WHERE Player_name = \"Ross Eadie\" AND Occupation = \"Small Businessman\" ) ) / ( ( SELECT COUNT ( * ) FROM ( SELECT * FROM player WHERE Rank = \"1st\" and Player_name != \"Ross Eadie\" GROUP BY Player_ID ) ) + ( SELECT COUNT ( * ) FROM player WHERE Player_name = \"Ross Eadie\" ) ) AS propotion FROM ( SELECT * FROM player WHERE Rank = \"1st\" AND Occupation = \"Small Businessman\" AND Player_name != \"Ross Eadie\" GROUP BY Player_ID )",
        "db_id": "riding_club"
    },
    {
        "id": 282,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nWhat is the probability of a contestant guided by Jameson Tomas winning the championship?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" ) AS prob FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" AND A.Rank = \"1st\"",
        "db_id": "riding_club"
    },
    {
        "id": 283,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nIf a contestant is guided by Jameson Tomas then what probability is there of this contestant winning the championship?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" ) AS prob FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" AND A.Rank = \"1st\"",
        "db_id": "riding_club"
    },
    {
        "id": 284,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / C H question is as follows:\nIf Fiona Shiells won the first place instead, what is the probability of a contestant guided by Jameson Tomas winning the championship?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" AND A.Player_name = \"Fiona Shiells\" ) ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" ) AS prob FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" AND A.Rank = \"1st\" AND A.Player_name != \"Fiona Shiells\"",
        "db_id": "riding_club"
    },
    {
        "id": 285,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / C H question is as follows:\nImagine if Fiona Shiells won the championship then what would the probability be for a contestant winning if they are guided by Jameson Tomas?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" AND A.Player_name = \"Fiona Shiells\" ) ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" ) AS prob FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE C.Coach_name = \"Jameson Tomas\" AND A.Rank = \"1st\" AND A.Player_name != \"Fiona Shiells\"",
        "db_id": "riding_club"
    },
    {
        "id": 286,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nWhat's the name of the coach who has guided the most number of champions, and how many more has he produced than the coach who has guided the fewest?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Coach_name , n_1st - ( SELECT MIN ( n_1st ) FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) ) AS diff FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) WHERE n_1st = ( SELECT MAX ( n_1st ) FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) )",
        "db_id": "riding_club"
    },
    {
        "id": 287,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - question is as follows:\nFind me the name of the coach with the most winning contestants and then find me how many more champions this coach has trained than the coach with the fewest winning contestants.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Coach_name , n_1st - ( SELECT MIN ( n_1st ) FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) ) AS diff FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) WHERE n_1st = ( SELECT MAX ( n_1st ) FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) )",
        "db_id": "riding_club"
    },
    {
        "id": 288,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * question is as follows:\nCoaches earn $100 for every champion they guided, $60 for every runner-up and $20 for every third-place finisher. What's the name of the coach who gets the most bonuses and how much does they earn?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.Coach_name , MAX ( 100 * n_1st + 60 * n_2nd + 20 * n_3rd ) AS money FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) t1 JOIN ( SELECT Coach_name , COUNT ( * ) AS n_2nd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" GROUP BY C.Coach_ID ) ) t2 ON t1.Coach_name = t2.Coach_name JOIN ( SELECT Coach_name , COUNT ( * ) AS n_3rd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID ) ) t3 ON t2.Coach_name = t3.Coach_name",
        "db_id": "riding_club"
    },
    {
        "id": 289,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * question is as follows:\nFind me the name and bonus of the highest bonus earning coach if each champion earns $100, a runner-up earns $60 and a third place earns $20.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.Coach_name , MAX ( 100 * n_1st + 60 * n_2nd + 20 * n_3rd ) AS money FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) t1 JOIN ( SELECT Coach_name , COUNT ( * ) AS n_2nd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" GROUP BY C.Coach_ID ) ) t2 ON t1.Coach_name = t2.Coach_name JOIN ( SELECT Coach_name , COUNT ( * ) AS n_3rd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID ) ) t3 ON t2.Coach_name = t3.Coach_name",
        "db_id": "riding_club"
    },
    {
        "id": 290,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * H question is as follows:\nCoaches earn $100 for every champion they guided, $60 for every runner-up and $20 for every third-place finisher. If Rachel Heinrichs won the runner-up, what's the name of the coach who gets the most bonuses and how much does he earn?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.Coach_name , MAX ( 100 * n_1st + 60 * n_2nd + 20 * n_3rd ) AS money FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) t1 JOIN ( SELECT Coach_name , COUNT ( * ) AS n_2nd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" AND C.Coach_ID != ( SELECT C.Coach_ID FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Player_name = \"Rachel Heinrichs\" ) GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" GROUP BY C.Coach_ID ) AND Coach_ID != ( SELECT C.Coach_ID FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Player_name = \"Rachel Heinrichs\" ) UNION SELECT ( SELECT C.Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Player_name = \"Rachel Heinrichs\" ) AS Coach_name , COUNT ( * ) + 1 AS n_2nd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" AND A.Player_name = \"Rachel Heinrichs\" ) t2 ON t1.Coach_name = t2.Coach_name JOIN ( SELECT Coach_name , COUNT ( * ) AS n_3rd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID ) ) t3 ON t2.Coach_name = t3.Coach_name",
        "db_id": "riding_club"
    },
    {
        "id": 291,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * H question is as follows:\nWhat is the name and bonus of the coach with the highest bonus of Rachel Heinrichs won runner-up? Convert a champion into $100 bonus, a runner-up to $60 bonus and a third-place position to a $20 bonus.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.Coach_name , MAX ( 100 * n_1st + 60 * n_2nd + 20 * n_3rd ) AS money FROM ( SELECT Coach_name , COUNT ( * ) AS n_1st FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"1st\" GROUP BY C.Coach_ID ) ) t1 JOIN ( SELECT Coach_name , COUNT ( * ) AS n_2nd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" AND C.Coach_ID != ( SELECT C.Coach_ID FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Player_name = \"Rachel Heinrichs\" ) GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" GROUP BY C.Coach_ID ) AND Coach_ID != ( SELECT C.Coach_ID FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Player_name = \"Rachel Heinrichs\" ) UNION SELECT ( SELECT C.Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Player_name = \"Rachel Heinrichs\" ) AS Coach_name , COUNT ( * ) + 1 AS n_2nd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"2nd\" AND A.Player_name = \"Rachel Heinrichs\" ) t2 ON t1.Coach_name = t2.Coach_name JOIN ( SELECT Coach_name , COUNT ( * ) AS n_3rd FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID UNION SELECT Coach_name , 0 FROM coach WHERE Coach_name NOT IN ( SELECT Coach_name FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON C.Coach_ID = B.Coach_ID WHERE A.Rank = \"3rd\" GROUP BY C.Coach_ID ) ) t3 ON t2.Coach_name = t3.Coach_name",
        "db_id": "riding_club"
    },
    {
        "id": 292,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nWhat percentage of clubs were established before the 21st century?the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM club ) AS percent FROM club WHERE Start_year < 2001",
        "db_id": "riding_club"
    },
    {
        "id": 293,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nWhat percentage of clubs were founded prior to the 21st Century?the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM club ) AS percent FROM club WHERE Start_year < 2001",
        "db_id": "riding_club"
    },
    {
        "id": 294,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / C H question is as follows:\nIf all the clubs in USA were established in 2000, what percentage of clubs were established before the 21st century?the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) FROM club WHERE Region = \"USA\" ) ) / ( SELECT COUNT ( * ) FROM club ) AS percent FROM club WHERE Start_year < 2001 AND Region != \"USA\"",
        "db_id": "riding_club"
    },
    {
        "id": 295,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA + * / C H question is as follows:\nWhat percentage of clubs were founded before the 21st Century given that all clubs in the USA were founded in 2000.the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) FROM club WHERE Region = \"USA\" ) ) / ( SELECT COUNT ( * ) FROM club ) AS percent FROM club WHERE Start_year < 2001 AND Region != \"USA\"",
        "db_id": "riding_club"
    },
    {
        "id": 296,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C question is as follows:\nWhat are the names of players living in the capital of Manitoba provincee in Cnanda received more than twice as many votes as Ross C. Martin?the evidence is as follow:\nWinnipeg is the capital of the Manitoba province of Canada.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Player_name FROM player WHERE Residence = \"Winnipeg\" AND Votes > 2 * ( SELECT Votes FROM player WHERE Player_name = \"Ross C. Martin\" )",
        "db_id": "riding_club"
    },
    {
        "id": 297,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C question is as follows:\nOf the players living in Manitona province's capital city, what are the names of players who received more than twice the votes that Ross C. Martin recieved?the evidence is as follow:\nWinnipeg is the capital of the Manitoba province of Canada.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Player_name FROM player WHERE Residence = \"Winnipeg\" AND Votes > 2 * ( SELECT Votes FROM player WHERE Player_name = \"Ross C. Martin\" )",
        "db_id": "riding_club"
    },
    {
        "id": 298,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C H question is as follows:\nWhat are the names of players living in the capital of Manitoba provincee in Cnanda received more than twice as many votes as Ross C. Martin, if Ross C. Martin obtained 2000 votes instead?the evidence is as follow:\nWinnipeg is the capital of the Manitoba province of Canada.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Player_name FROM player WHERE Residence = \"Winnipeg\" AND Votes > 2 * 2000 AND Player_name != \"Ross C. Martin\"",
        "db_id": "riding_club"
    },
    {
        "id": 299,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * C H question is as follows:\nOf the players living in Manitona province's capital city, what are the names of players who received more than twice the votes that Ross C. Martin recieved, if if Ross C. Martin obtained 2000 votes instead?the evidence is as follow:\nWinnipeg is the capital of the Manitoba province of Canada.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Player_name FROM player WHERE Residence = \"Winnipeg\" AND Votes > 2 * 2000 AND Player_name != \"Ross C. Martin\"",
        "db_id": "riding_club"
    },
    {
        "id": 300,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nWhat are the names of the players whose coaches come from clubs established before the 21st Century, and how much higher are their votes than the lowest?the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Player_name , A.Votes - ( SELECT MIN ( Votes ) FROM player ) AS diff FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID JOIN club D ON C.Club_ID = D.Club_ID WHERE D.Start_year < 2006",
        "db_id": "riding_club"
    },
    {
        "id": 301,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C question is as follows:\nFind me the names of players who have coaches that come from clubs established prior to the 21st Century and then calculate how much higher their respective votes are than the lowest number of votes.the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Player_name , A.Votes - ( SELECT MIN ( Votes ) FROM player ) AS diff FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID JOIN club D ON C.Club_ID = D.Club_ID WHERE D.Start_year < 2006",
        "db_id": "riding_club"
    },
    {
        "id": 302,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C H question is as follows:\nWhat are the names of players who are guided by coaches from clubs established before the 21st Century, and how much higher are their votes than the lowest if the lowest votes count is 1000?the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Player_name , A.Votes - 1000 AS diff FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID JOIN club D ON C.Club_ID = D.Club_ID WHERE D.Start_year < 2006",
        "db_id": "riding_club"
    },
    {
        "id": 303,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - C H question is as follows:\nIf the lowest vote count is 1000 then find what are the names of the players who have coaches from pre-21st-century clubs and calculate how much higher these players votes are than the minimum vote count.the evidence is as follow:\nThe 21st century begins with 1 January 2001.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Player_name , A.Votes - 1000 AS diff FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID JOIN club D ON C.Club_ID = D.Club_ID WHERE D.Start_year < 2006",
        "db_id": "riding_club"
    },
    {
        "id": 304,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nWhat is the probability of a player without a coach winning the championship?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) ) AS ratio FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND Rank = \"1st\"",
        "db_id": "riding_club"
    },
    {
        "id": 305,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA * / C question is as follows:\nIf a player has no coach then how likely is it that they will win the championship?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) ) AS ratio FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND Rank = \"1st\"",
        "db_id": "riding_club"
    },
    {
        "id": 306,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - * / C question is as follows:\nHow much more likely is the coached player to finish in the top two than the uncoached player?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) - ( SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) ) FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND ( Rank = \"1st\" OR Rank = \"2nd\" ) ) AS diff FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE ( A.Rank = \"1st\" OR A.Rank = \"2nd\" )",
        "db_id": "riding_club"
    },
    {
        "id": 307,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - * / C question is as follows:\nWhat is the difference in likelihood of a coached player finishing in the top two versus an uncoached player?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) - ( SELECT 1.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) ) FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND ( Rank = \"1st\" OR Rank = \"2nd\" ) ) AS diff FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE ( A.Rank = \"1st\" OR A.Rank = \"2nd\" )",
        "db_id": "riding_club"
    },
    {
        "id": 308,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + * / C H question is as follows:\nIf Niki Ashton was an uncoached player, how much more likely is the coached player to finish in the top two than the uncoached player?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT prob_1 - prob_2 AS diff FROM ( SELECT 1.0 * ( COUNT ( * ) - ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE ( A.Rank = \"1st\" OR A.Rank = \"2nd\" ) AND A.Player_name = \"Niki Ashton\" ) ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE A.Player_name != \"Niki Ashton\" ) AS prob_1 FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE ( A.Rank = \"1st\" OR A.Rank = \"2nd\" ) ) JOIN ( SELECT 1.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) From player WHERE ( Rank = \"1st\" OR Rank = \"2nd\" ) AND Player_name = \"Niki Ashton\" ) ) / ( SELECT COUNT ( * ) + 1 FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND Player_name != \"Niki Ashton\" ) AS prob_2 FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND ( Rank = \"1st\" OR Rank = \"2nd\" ) AND Player_name != \"Niki Ashton\" )",
        "db_id": "riding_club"
    },
    {
        "id": 309,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'circuits', 'columns': [{'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'circuitRef', 'type': 'TEXT', 'column_example': ['albert_park', 'sepang', 'bahrain', 'catalunya', 'istanbul']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit', 'Circuit de Barcelona-Catalunya', 'Istanbul Park']}, {'column_name': 'location', 'type': 'TEXT', 'column_example': ['Melbourne', 'Kuala Lumpur', 'Sakhir', 'Montmel_', 'Istanbul']}, {'column_name': 'country', 'type': 'TEXT', 'column_example': ['Australia', 'Malaysia', 'Bahrain', 'Spain', 'Turkey']}, {'column_name': 'lat', 'type': 'REAL', 'column_example': ['-37.8497', '2.76083', '26.0325', '41.57', '40.9517']}, {'column_name': 'lng', 'type': 'REAL', 'column_example': ['144.968', '101.738', '50.5106', '2.26111', '29.405']}, {'column_name': 'alt', 'type': 'TEXT', 'column_example': ['10']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'constructorResults', 'columns': [{'column_name': 'constructorResultsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['NULL', 'D']}]}, {'table_name': 'constructorStandings', 'columns': [{'column_name': 'constructorStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['14.0', '8.0', '9.0', '5.0', '2.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '3', '2', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'constructors', 'columns': [{'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'constructorRef', 'type': 'TEXT', 'column_example': ['mclaren', 'bmw_sauber', 'williams', 'renault', 'toro_rosso']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['McLaren', 'BMW Sauber', 'Williams', 'Renault', 'Toro Rosso']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'French', 'Italian', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'driverStandings', 'columns': [{'column_name': 'driverStandingsId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'wins', 'type': 'INTEGER', 'column_example': ['1', '0', '2', '3', '4']}]}, {'table_name': 'drivers', 'columns': [{'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'driverRef', 'type': 'TEXT', 'column_example': ['hamilton', 'heidfeld', 'rosberg', 'alonso', 'kovalainen']}, {'column_name': 'number', 'type': 'TEXT', 'column_example': ['44', '6', '14', '7']}, {'column_name': 'code', 'type': 'TEXT', 'column_example': ['HAM', 'HEI', 'ROS', 'ALO', 'KOV']}, {'column_name': 'forename', 'type': 'TEXT', 'column_example': ['Lewis', 'Nick', 'Nico', 'Fernando', 'Heikki']}, {'column_name': 'surname', 'type': 'TEXT', 'column_example': ['Hamilton', 'Heidfeld', 'Rosberg', 'Alonso', 'Kovalainen']}, {'column_name': 'dob', 'type': 'TEXT', 'column_example': ['07/01/1985', '10/05/1977', '27/06/1985', '29/07/1981', '19/10/1981']}, {'column_name': 'nationality', 'type': 'TEXT', 'column_example': ['British', 'German', 'Spanish', 'Finnish', 'Japanese']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'lapTimes', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'pitStops', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'stop', 'type': 'INTEGER', 'column_example': [], 'column_pk': True}, {'column_name': 'lap', 'type': 'INTEGER', 'column_example': []}, {'column_name': 'time', 'type': 'TEXT', 'column_example': []}, {'column_name': 'duration', 'type': 'TEXT', 'column_example': []}, {'column_name': 'milliseconds', 'type': 'INTEGER', 'column_example': []}]}, {'table_name': 'qualifying', 'columns': [{'column_name': 'qualifyId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '9', '5', '13', '2']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '6', '7', '3']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '4', '23', '2', '3']}, {'column_name': 'position', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'q1', 'type': 'TEXT', 'column_example': ['1:26.572', '1:26.103', '1:25.664', '1:25.994', '1:25.960']}, {'column_name': 'q2', 'type': 'TEXT', 'column_example': ['1:25.187', '1:25.315', '1:25.452', '1:25.691', '1:25.518']}, {'column_name': 'q3', 'type': 'TEXT', 'column_example': ['1:26.714', '1:26.869', '1:27.079', '1:27.178', '1:27.236']}]}, {'table_name': 'races', 'columns': [{'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'year', 'type': 'INTEGER', 'column_example': ['2009', '2008', '2007', '2006', '2005']}, {'column_name': 'round', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'circuitId', 'type': 'INTEGER', 'column_example': ['1', '2', '17', '3', '4']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix', 'Bahrain Grand Prix', 'Spanish Grand Prix']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2009-03-29', '2009-04-05', '2009-04-19', '2009-04-26', '2009-05-10']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['06:00:00', '09:00:00', '07:00:00', '12:00:00', '05:00:00']}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'results', 'columns': [{'column_name': 'resultId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'raceId', 'type': 'INTEGER', 'column_example': ['18', '19', '20', '21', '22']}, {'column_name': 'driverId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'constructorId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'number', 'type': 'INTEGER', 'column_example': ['22', '3', '7', '5', '23']}, {'column_name': 'grid', 'type': 'INTEGER', 'column_example': ['1', '5', '7', '11', '3']}, {'column_name': 'position', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionText', 'type': 'TEXT', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'positionOrder', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'points', 'type': 'REAL', 'column_example': ['10.0', '8.0', '6.0', '5.0', '4.0']}, {'column_name': 'laps', 'type': 'TEXT', 'column_example': ['58', '57', '55', '53', '47']}, {'column_name': 'time', 'type': 'TEXT', 'column_example': ['34:50.6', '5.478', '8.163', '17.181', '18.014']}, {'column_name': 'milliseconds', 'type': 'TEXT', 'column_example': ['5690616', '5696094', '5698779', '5707797', '5708630']}, {'column_name': 'fastestLap', 'type': 'TEXT', 'column_example': ['39', '41', '58', '43', '50']}, {'column_name': 'rank', 'type': 'TEXT', 'column_example': ['2', '3', '5', '7', '1']}, {'column_name': 'fastestLapTime', 'type': 'TEXT', 'column_example': ['01:27.5', '01:27.7', '01:28.1', '01:28.6', '01:27.4']}, {'column_name': 'fastestLapSpeed', 'type': 'TEXT', 'column_example': ['218.3', '217.586', '216.719', '215.464', '218.385']}, {'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '11', '5', '4', '3']}]}, {'table_name': 'seasons', 'columns': [{'column_name': 'year', 'type': 'INTEGER', 'column_example': ['1950', '1951', '1952', '1953', '1954'], 'column_pk': True}, {'column_name': 'url', 'type': 'TEXT', 'column_example': []}]}, {'table_name': 'status', 'columns': [{'column_name': 'statusId', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'status', 'type': 'TEXT', 'column_example': ['Finished', 'Disqualified', 'Accident', 'Collision', 'Engine']}]}]\nA - + * / C H question is as follows:\nHow much likelier is it that a coached player ranks in the top two than a player without a coach if Niki Ashton has no coach?the evidence is as follow:\nA simple probability is calculated by dividing a specific outcome by all the possible outcomes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT prob_1 - prob_2 AS diff FROM ( SELECT 1.0 * ( COUNT ( * ) - ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE ( A.Rank = \"1st\" OR A.Rank = \"2nd\" ) AND A.Player_name = \"Niki Ashton\" ) ) / ( SELECT COUNT ( * ) FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE A.Player_name != \"Niki Ashton\" ) AS prob_1 FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID WHERE ( A.Rank = \"1st\" OR A.Rank = \"2nd\" ) ) JOIN ( SELECT 1.0 * ( COUNT ( * ) + ( SELECT COUNT ( * ) From player WHERE ( Rank = \"1st\" OR Rank = \"2nd\" ) AND Player_name = \"Niki Ashton\" ) ) / ( SELECT COUNT ( * ) + 1 FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND Player_name != \"Niki Ashton\" ) AS prob_2 FROM player WHERE Player_ID NOT IN ( SELECT A.Player_ID AS player_with_coach FROM player A JOIN player_coach B ON A.Player_ID = B.Player_ID JOIN coach C ON B.Coach_ID = C.Coach_ID ) AND ( Rank = \"1st\" OR Rank = \"2nd\" ) AND Player_name != \"Niki Ashton\" )",
        "db_id": "riding_club"
    },
    {
        "id": 310,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + - * C question is as follows:\nThe passing rating consists of 5% curve, 5% free kick accuracy, 15% long passing, 20% crossing, 20% vision, and 35% short passing. List the name and current age of the top 10 players who have the highest passing rating.the evidence is as follow:\nCurrent age is computed by substracting the date of birth from current date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , age FROM ( SELECT B.player_name AS name , MAX ( 0.05 * A.curve + 0.05 * A.free_kick_accuracy + 0.15 * A.long_passing + 0.2 * A.crossing + 0.2 * A.vision + 0.35 * A.short_passing ) AS passing_rating , DATE ( \"now\" ) - strftime ( \"%Y-%m-%d\" , B.birthday ) AS age FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ORDER BY passing_rating DESC LIMIT 10 )",
        "db_id": "soccer_1"
    },
    {
        "id": 311,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + - * C question is as follows:\nFind me the name and age today of the top 10 players who have the current highest passing rating as measured by 5% curve, 5% free kick accuracy, 15% long passing, 20% crossing, 20% vision and 40% short passing.the evidence is as follow:\nCurrent age is computed by substracting the date of birth from current date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , age FROM ( SELECT B.player_name AS name , MAX ( 0.05 * A.curve + 0.05 * A.free_kick_accuracy + 0.15 * A.long_passing + 0.2 * A.crossing + 0.2 * A.vision + 0.35 * A.short_passing ) AS passing_rating , DATE ( \"now\" ) - strftime ( \"%Y-%m-%d\" , B.birthday ) AS age FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ORDER BY passing_rating DESC LIMIT 10 )",
        "db_id": "soccer_1"
    },
    {
        "id": 312,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + - * C H question is as follows:\nThe passing rating consists of 5% curve, 5% free kick accuracy, 15% long passing, 20% crossing, 20% vision, and 35% short passing. Assuming ratings of vision attribute for all players are 80, list the name and current age of the top 10 players who have the highest passing rating.the evidence is as follow:\nCurrent age is computed by substracting the date of birth from current date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , age FROM ( SELECT B.player_name AS name , MAX ( 0.05 * A.curve + 0.05 * A.free_kick_accuracy + 0.15 * A.long_passing + 0.2 * A.crossing + 0.2 * 80 + 0.35 * A.short_passing ) AS passing_rating , DATE ( \"now\" ) - strftime ( \"%Y-%m-%d\" , B.birthday ) AS age FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ORDER BY passing_rating DESC LIMIT 10 )",
        "db_id": "soccer_1"
    },
    {
        "id": 313,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + - * C H question is as follows:\nWhat are the names and present day ages for the top ten players as measured by passing rating if all players have equivalent vision attribute of 80? Calculate passing rating according to sum of 35% short passing, 20% vision, 20% corssing, 15% long passing, 5% free kick accuracy and 5% curve.the evidence is as follow:\nCurrent age is computed by substracting the date of birth from current date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , age FROM ( SELECT B.player_name AS name , MAX ( 0.05 * A.curve + 0.05 * A.free_kick_accuracy + 0.15 * A.long_passing + 0.2 * A.crossing + 0.2 * 80 + 0.35 * A.short_passing ) AS passing_rating , DATE ( \"now\" ) - strftime ( \"%Y-%m-%d\" , B.birthday ) AS age FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ORDER BY passing_rating DESC LIMIT 10 )",
        "db_id": "soccer_1"
    },
    {
        "id": 314,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * / C question is as follows:\nThe pace rating consists of 45% acceleration rating and 55% sprint speed rating. List the names of the top three players in terms of pace, and list their height, weight and the body mass index.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , height , weight , BMI FROM ( SELECT B.player_name , MAX ( 0.45 * A.acceleration + 0.55 * A.sprint_speed ) AS pace_rating , B.height , B.weight , B.weight * 0.45 / ( ( 1.0 * B.height / 100 ) * ( 1.0 * B.height / 100 ) ) AS BMI FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ) ORDER BY pace_rating DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 315,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * / C question is as follows:\nWhat is the name, height, weight and body mass index of the top three players in terms of pace as measured by summing 45% acceleration rating and 55% sprint speed rating.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , height , weight , BMI FROM ( SELECT B.player_name , MAX ( 0.45 * A.acceleration + 0.55 * A.sprint_speed ) AS pace_rating , B.height , B.weight , B.weight * 0.45 / ( ( 1.0 * B.height / 100 ) * ( 1.0 * B.height / 100 ) ) AS BMI FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ) ORDER BY pace_rating DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 316,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * / C H question is as follows:\nThe pace rating consists of 45% acceleration rating and 55% sprint speed rating. Assuming rating of acceleration attribute for all players is 75, list the names of the top three players in terms of pace, and list their height, weight and the body mass index.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , height , weight , BMI FROM ( SELECT B.player_name , MAX ( 0.45 * 75 + 0.55 * A.sprint_speed ) AS pace_rating , B.height , B.weight , B.weight * 0.45 / ( ( 1.0 * B.height / 100 ) * ( 1.0 * B.height / 100 ) ) AS BMI FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ) ORDER BY pace_rating DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 317,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * / C H question is as follows:\nGive me the names, body mass index, height and weight of the top three players measured by pace (sum 45% acceleration rating and 55% sprint speed rating) when all players have acceleration attribute of 75.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , height , weight , BMI FROM ( SELECT B.player_name , MAX ( 0.45 * 75 + 0.55 * A.sprint_speed ) AS pace_rating , B.height , B.weight , B.weight * 0.45 / ( ( 1.0 * B.height / 100 ) * ( 1.0 * B.height / 100 ) ) AS BMI FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ) ORDER BY pace_rating DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 318,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - C question is as follows:\nList names of the top three players with the largest difference between overall rating and potential ability, and list the differences.the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , MAX ( ABS ( A.potential - A.overall_rating ) ) AS difference FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ORDER BY difference DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 319,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - C question is as follows:\nWhat are the names of the players with the largest discrepancy between overall rating and potential ability? Return only the top 3 and list the difference between rating and ability.the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , MAX ( ABS ( A.potential - A.overall_rating ) ) AS difference FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ORDER BY difference DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 320,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + - C H question is as follows:\nAssuming players with an overall rating below 70 are increased by 5 in their overall rating, list names of the top three players with the largest difference between overall rating and potential ability.the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , MAX ( difference ) FROM ( SELECT B.player_name , ABS ( A.overall_rating - A.potential ) AS difference FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.overall_rating >= 70 UNION SELECT B.player_name , ABS ( A.overall_rating + 5 - A.potential ) AS difference FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.overall_rating < 70 ) GROUP BY player_name ORDER BY difference DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 321,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + - C H question is as follows:\nList the top three players with the largest absolute difference between potential ability and overall rating if all players with an overall rating of 70 get an increase in rating of 5.the evidence is as follow:\nDiffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , MAX ( difference ) FROM ( SELECT B.player_name , ABS ( A.overall_rating - A.potential ) AS difference FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.overall_rating >= 70 UNION SELECT B.player_name , ABS ( A.overall_rating + 5 - A.potential ) AS difference FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.overall_rating < 70 ) GROUP BY player_name ORDER BY difference DESC LIMIT 3",
        "db_id": "soccer_1"
    },
    {
        "id": 322,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - C question is as follows:\nRating 80 to 89 points means very good. Among players that are very good at passing without conceding the ball, how many are left-footed and how many are right-footed, and what is the difference between them?the evidence is as follow:\n(1) Dribbling attribute describes how well a player can pass without conceding the ball and (2) diffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT left_footed , right_footed , ABS ( left_footed - right_footed ) AS difference FROM ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS left_footed FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.dribbling BETWEEN 80 AND 89 AND A.preferred_foot = \"left\" ) JOIN ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS right_footed FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.dribbling BETWEEN 80 AND 89 AND A.preferred_foot = \"right\" )",
        "db_id": "soccer_1"
    },
    {
        "id": 323,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - C question is as follows:\nWhat is the sum of players that are left-footed and right-footed (and the difference between the two sums) for players rated very good at passing without conceding the ball (rating 80 to 89 points is very good).the evidence is as follow:\n(1) Dribbling attribute describes how well a player can pass without conceding the ball and (2) diffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT left_footed , right_footed , ABS ( left_footed - right_footed ) AS difference FROM ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS left_footed FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.dribbling BETWEEN 80 AND 89 AND A.preferred_foot = \"left\" ) JOIN ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS right_footed FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.dribbling BETWEEN 80 AND 89 AND A.preferred_foot = \"right\" )",
        "db_id": "soccer_1"
    },
    {
        "id": 324,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + C question is as follows:\nWhat is the name of the goalkeeper with the highest ratingin terms of the ability of catching the ball clean and positioning correctly for saves?the evidence is as follow:\nPosition attribute for a goalkeeper is the ability to position correctly for saves. Handling is an exclusive goalkeeper attribute used to measure how clean he catches the ball.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name FROM ( SELECT B.player_name , MAX ( A.positioning + A.gk_handling ) AS goalkeeper_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ) ORDER BY goalkeeper_rating DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 325,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + C question is as follows:\nConsidering ability of catching the ball clean and correct positioning for saves, which goalkeeper has the highest rating? Give me his name.the evidence is as follow:\nPosition attribute for a goalkeeper is the ability to position correctly for saves. Handling is an exclusive goalkeeper attribute used to measure how clean he catches the ball.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name FROM ( SELECT B.player_name , MAX ( A.positioning + A.gk_handling ) AS goalkeeper_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id GROUP BY B.player_name ) ORDER BY goalkeeper_rating DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 326,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + C question is as follows:\nFor the player who gets tired during a game at the highest rate, what is his name and his total rating in terms of long shots and short power?the evidence is as follow:\nStamina attribute determines the rate at which a player will tire during a game.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , A.long_shots + A.shot_power AS total_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE NOT ( A.stamina IS NULL ) ORDER BY A.stamina ASC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 327,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + C question is as follows:\nGive me the name and total rating in long shots and short power of the player with the maximum rate of tiredness increase during a game?the evidence is as follow:\nStamina attribute determines the rate at which a player will tire during a game.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , A.long_shots + A.shot_power AS total_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE NOT ( A.stamina IS NULL ) ORDER BY A.stamina ASC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 328,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + C H question is as follows:\nFor the player who gets tired during a game at the highest rate, what is his name and his total rating in terms of long shots and short power, if his long shots rating was assumed to be 90?the evidence is as follow:\nStamina attribute determines the rate at which a player will tire during a game.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , 90 + A.shot_power AS total_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE NOT ( A.stamina IS NULL ) ORDER BY A.stamina ASC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 329,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + C H question is as follows:\nFind me the name of the player who tires the fastest during a game and then calculate their total rating with respect to long shots and short power if the long shots rating is now 90.the evidence is as follow:\nStamina attribute determines the rate at which a player will tire during a game.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , 90 + A.shot_power AS total_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE NOT ( A.stamina IS NULL ) ORDER BY A.stamina ASC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 330,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + question is as follows:\nThe defensive rating is composed of ratings for pressure, aggression, and team width. Provide the short names of the teams with the highest and lowest defensive ratings.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT best_team_name , lowest_team_name FROM ( SELECT B.team_short_name AS best_team_name , A.defencePressure + A.defenceAggression + A.defenceTeamWidth AS defensive_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id ORDER BY defensive_rating DESC LIMIT 1 ) JOIN ( SELECT B.team_short_name AS lowest_team_name , A.defencePressure + A.defenceAggression + A.defenceTeamWidth AS defensive_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id ORDER BY defensive_rating ASC LIMIT 1 )",
        "db_id": "soccer_1"
    },
    {
        "id": 331,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + question is as follows:\nWhat are the short names of the teams with highest and lowest defensive rating as measured by ratings for pressure, aggression and width of team.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT best_team_name , lowest_team_name FROM ( SELECT B.team_short_name AS best_team_name , A.defencePressure + A.defenceAggression + A.defenceTeamWidth AS defensive_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id ORDER BY defensive_rating DESC LIMIT 1 ) JOIN ( SELECT B.team_short_name AS lowest_team_name , A.defencePressure + A.defenceAggression + A.defenceTeamWidth AS defensive_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id ORDER BY defensive_rating ASC LIMIT 1 )",
        "db_id": "soccer_1"
    },
    {
        "id": 332,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + question is as follows:\nOut of the teams that utilize the free-form chance creation position tactic, which team has the highest combined rating for build-up play speed and dribbling? Please provide the long name of the team and the combined rating.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.team_long_name , A.buildUpPlaySpeed + A.buildUpPlayDribbling AS combined_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id WHERE A.chanceCreationPositioningClass = \"Free Form\" ORDER BY A.buildUpPlaySpeed + A.buildUpPlayDribbling DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 333,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + question is as follows:\nWhat is the long team name and highest rating for the team with the highest combined rating for build-up play speed and dribbling out of all the teams using the free-form chance creation position tactic?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.team_long_name , A.buildUpPlaySpeed + A.buildUpPlayDribbling AS combined_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id WHERE A.chanceCreationPositioningClass = \"Free Form\" ORDER BY A.buildUpPlaySpeed + A.buildUpPlayDribbling DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 334,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + H question is as follows:\nAssuming all teams have a dribbling rating of 60, which team has the highest combined rating for build-up play speed and dribbling among teams that utilize the free-form chance creation position tactic? Please provide the full name of the team and the combined rating.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.team_long_name , A.buildUpPlaySpeed + 60 AS combined_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id WHERE A.chanceCreationPositioningClass = \"Free Form\" ORDER BY A.buildUpPlaySpeed + 60 DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 335,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + H question is as follows:\nTell me the long name and combined rating for the team with the highest combined rating as measured by build-up play speed and dribbling. Include only the teams using a free-form chance creation position tactic and assume all teams have a 60 dribbling rate.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.team_long_name , A.buildUpPlaySpeed + 60 AS combined_rating FROM Team_Attributes A JOIN Team B ON A.team_fifa_api_id = B.team_fifa_api_id WHERE A.chanceCreationPositioningClass = \"Free Form\" ORDER BY A.buildUpPlaySpeed + 60 DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 336,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * question is as follows:\nThe shooting rating is comprised of 6 attributes, including 45% finishing, 20% long shots, 5% penalties, 5% positioning, 20% shot power, and 5% volleys. What is the name and shooting rating of the top 1 player in terms of shooting rating?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , 0.45 * A.finishing + 0.2 * A.long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id ORDER BY shooting_rating DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 337,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * question is as follows:\nWhich is the top 1 player as measured by shooting rate calculated as 5% volleys, 20% shot power, 5% positioning, 5% penalties, 20% long shots and 45% finishing.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , 0.45 * A.finishing + 0.2 * A.long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id ORDER BY shooting_rating DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 338,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * H question is as follows:\nThe shooting rating is comprised of 6 attributes, including 45% finishing, 20% long shots, 5% penalties, 5% positioning, 20% shot power, and 5% volleys. What is the name and shooting rating of the top 1 player in terms of shooting rating if weakest shooting attributes of all players could be impoved by 5 points?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , MAX ( shooting_rating ) FROM ( SELECT B.player_name , MAX ( 0.45 * ( finishing + 5 ) + 0.2 * long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE finishing <= long_shots AND finishing <= penalties AND finishing <= positioning AND finishing <= shot_power AND finishing <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * ( long_shots + 5 ) + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE long_shots <= finishing AND long_shots <= penalties AND long_shots <= positioning AND long_shots <= shot_power AND long_shots <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * ( penalties + 5 ) + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE penalties <= finishing AND penalties <= long_shots AND penalties <= positioning AND penalties <= shot_power AND penalties <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * penalties + 0.05 * ( positioning + 5 ) + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE positioning <= finishing AND positioning <= long_shots AND positioning <= penalties AND positioning <= shot_power AND positioning <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * ( shot_power + 5 ) + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE shot_power <= finishing AND shot_power <= long_shots AND shot_power <= penalties AND shot_power <= positioning AND shot_power <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * ( volleys + 5 ) ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE volleys <= finishing AND volleys <= long_shots AND volleys <= penalties AND volleys <= positioning AND volleys <= shot_power )",
        "db_id": "soccer_1"
    },
    {
        "id": 339,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA + * H question is as follows:\nGive me the name and shooting rating of the best player (ranked top 1) if all players received a 5 point increase to their weakest attribute. Shooting rating can be calculated as 45% finishing, 20% long shots, 5% penalties, 5% positioning, 20% shot power and 5% volleys.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT player_name , MAX ( shooting_rating ) FROM ( SELECT B.player_name , MAX ( 0.45 * ( finishing + 5 ) + 0.2 * long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE finishing <= long_shots AND finishing <= penalties AND finishing <= positioning AND finishing <= shot_power AND finishing <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * ( long_shots + 5 ) + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE long_shots <= finishing AND long_shots <= penalties AND long_shots <= positioning AND long_shots <= shot_power AND long_shots <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * ( penalties + 5 ) + 0.05 * positioning + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE penalties <= finishing AND penalties <= long_shots AND penalties <= positioning AND penalties <= shot_power AND penalties <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * penalties + 0.05 * ( positioning + 5 ) + 0.2 * shot_power + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE positioning <= finishing AND positioning <= long_shots AND positioning <= penalties AND positioning <= shot_power AND positioning <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * ( shot_power + 5 ) + 0.05 * volleys ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE shot_power <= finishing AND shot_power <= long_shots AND shot_power <= penalties AND shot_power <= positioning AND shot_power <= volleys UNION ALL SELECT B.player_name , MAX ( 0.45 * finishing + 0.2 * long_shots + 0.05 * penalties + 0.05 * positioning + 0.2 * shot_power + 0.05 * ( volleys + 5 ) ) AS shooting_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE volleys <= finishing AND volleys <= long_shots AND volleys <= penalties AND volleys <= positioning AND volleys <= shot_power )",
        "db_id": "soccer_1"
    },
    {
        "id": 340,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - C question is as follows:\nWhat are the long passing ratings for the players with the best and worst awareness of the position of their teammates and opponents around them? What is the difference?the evidence is as follow:\n(1) Vision ranks the player’s awareness of the position of his teammates and opponents around him and (2) diffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT best_vision_long_passing , worst_vision_long_passing , ABS ( worst_vision_long_passing - best_vision_long_passing ) AS diff FROM ( SELECT A.long_passing AS best_vision_long_passing , MAX ( A.vision ) FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id ) JOIN ( SELECT A.long_passing AS worst_vision_long_passing , MIN ( A.vision ) FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id )",
        "db_id": "soccer_1"
    },
    {
        "id": 341,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - C question is as follows:\nFor the players with the best and worst position-awareness of their teammates and opponents, find me the long passing ratings and calculate the distance between these ratings.the evidence is as follow:\n(1) Vision ranks the player’s awareness of the position of his teammates and opponents around him and (2) diffenrence between two values should be an absolute value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT best_vision_long_passing , worst_vision_long_passing , ABS ( worst_vision_long_passing - best_vision_long_passing ) AS diff FROM ( SELECT A.long_passing AS best_vision_long_passing , MAX ( A.vision ) FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id ) JOIN ( SELECT A.long_passing AS worst_vision_long_passing , MIN ( A.vision ) FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id )",
        "db_id": "soccer_1"
    },
    {
        "id": 342,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / C question is as follows:\nAmong the players with medium attack rating, what is the ratio between the highest and lowest scores which measure the quality of physical strength?the evidence is as follow:\nStrength is about the quality or state of physical strength.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * max_strength / min_strength AS ratio FROM ( SELECT MAX ( A.strength ) AS max_strength FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"medium\" ) JOIN ( SELECT MIN ( A.strength ) AS min_strength FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"medium\" )",
        "db_id": "soccer_1"
    },
    {
        "id": 343,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / C question is as follows:\nFind me the ratio of highest to lowest scores as measured by quality of physical strength out of only the players with a medium attack rating.the evidence is as follow:\nStrength is about the quality or state of physical strength.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * max_strength / min_strength AS ratio FROM ( SELECT MAX ( A.strength ) AS max_strength FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"medium\" ) JOIN ( SELECT MIN ( A.strength ) AS min_strength FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"medium\" )",
        "db_id": "soccer_1"
    },
    {
        "id": 344,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA / * C question is as follows:\nRating between 80 to 89 points means very good. Rating between 70 to 79 points means good. What is the proportion of players with very good accuracy to those with good accuracy when shooting from inside the penalty area?the evidence is as follow:\nPenalties attribute measures the accuracy of shots from inside the penalty area.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * very_good / good AS proportion FROM ( SELECT COUNT ( * ) AS very_good FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.penalties BETWEEN 80 AND 89 ) JOIN ( SELECT COUNT ( * ) AS good FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.penalties BETWEEN 70 AND 79 )",
        "db_id": "soccer_1"
    },
    {
        "id": 345,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA / * C question is as follows:\nCalculate the proportion of players with very good accuracy (80 to 89 points) to players with good accuracy (70 to 79 points) when only shooting from inside the penalty area.the evidence is as follow:\nPenalties attribute measures the accuracy of shots from inside the penalty area.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * very_good / good AS proportion FROM ( SELECT COUNT ( * ) AS very_good FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.penalties BETWEEN 80 AND 89 ) JOIN ( SELECT COUNT ( * ) AS good FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.penalties BETWEEN 70 AND 79 )",
        "db_id": "soccer_1"
    },
    {
        "id": 346,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / question is as follows:\nHow many times does the tallest player weigh as much as the shortest player?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * highest_weight / lowest_weight AS times FROM ( SELECT weight AS highest_weight , MAX ( height ) FROM Player ) JOIN ( SELECT weight AS lowest_weight , MIN ( height ) FROM Player )",
        "db_id": "soccer_1"
    },
    {
        "id": 347,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / question is as follows:\nHow many more times is the weight of the tallest player to the weight of the shortest player as a proportion?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * highest_weight / lowest_weight AS times FROM ( SELECT weight AS highest_weight , MAX ( height ) FROM Player ) JOIN ( SELECT weight AS lowest_weight , MIN ( height ) FROM Player )",
        "db_id": "soccer_1"
    },
    {
        "id": 348,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA / H question is as follows:\nHow many times does the tallest player weigh as much as the shortest player, if the the tallest player weighed 170 lbs instead?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 170.0 / lowest_weight AS times FROM ( SELECT weight AS lowest_weight , MIN ( height ) FROM Player )",
        "db_id": "soccer_1"
    },
    {
        "id": 349,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA / H question is as follows:\nIf the tallest player has a weight of 170lbs then calculate the ratio of the tallest players weight to the shortest players weight.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 170.0 / lowest_weight AS times FROM ( SELECT weight AS lowest_weight , MIN ( height ) FROM Player )",
        "db_id": "soccer_1"
    },
    {
        "id": 350,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA / * C question is as follows:\nList the name, height, weight and overall rating of players with the highest body mass index.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , B.height , B.weight , A.overall_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id JOIN ( SELECT B.player_fifa_api_id , B.weight * 0.45 / ( ( B.height / 100 ) * ( B.height / 100 ) ) AS BMI FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id ) AS C ON A.player_fifa_api_id = C.player_fifa_api_id ORDER BY C.BMI DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 351,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA / * C question is as follows:\nAs sorted by highest body mass index, give me the name, height, weight and rating overall of players.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , B.height , B.weight , A.overall_rating FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id JOIN ( SELECT B.player_fifa_api_id , B.weight * 0.45 / ( ( B.height / 100 ) * ( B.height / 100 ) ) AS BMI FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id ) AS C ON A.player_fifa_api_id = C.player_fifa_api_id ORDER BY C.BMI DESC LIMIT 1",
        "db_id": "soccer_1"
    },
    {
        "id": 352,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - question is as follows:\nAmong players who have both \"low\" attacking and defensive work rate, how many players are right-footed? How many players are left-footed? What is the difference between them?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT left_count , right_count , ABS ( left_count - right_count ) FROM ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS left_count FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"low\" and A.defensive_work_rate = \"low\" and A.preferred_foot = \"left\" ) JOIN ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS right_count FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"low\" and A.defensive_work_rate = \"low\" and A.preferred_foot = \"right\" )",
        "db_id": "soccer_1"
    },
    {
        "id": 353,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA - question is as follows:\nWhat is the count, and difference between, of the right-footed players and the left footed players only considering players with \"low\" attacking and defensive foot work rate?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT left_count , right_count , ABS ( left_count - right_count ) FROM ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS left_count FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"low\" and A.defensive_work_rate = \"low\" and A.preferred_foot = \"left\" ) JOIN ( SELECT COUNT ( DISTINCT ( B.player_name ) ) AS right_count FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.attacking_work_rate = \"low\" and A.defensive_work_rate = \"low\" and A.preferred_foot = \"right\" )",
        "db_id": "soccer_1"
    },
    {
        "id": 354,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * question is as follows:\nProvide a list of player names, their overall ratings, and their attribute record dates, where Crossing ratings of the players surpass that of Fabio Cannavaro recorded on 30th August 2007 by two times.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , A.overall_rating , A.date FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id , ( SELECT A.crossing AS FC_crossing FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE B.player_name = \"Fabio Cannavaro\" and date ( A.date ) = \"2007-08-30\" ) WHERE A.crossing > 2.0 * FC_crossing",
        "db_id": "soccer_1"
    },
    {
        "id": 355,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * question is as follows:\nWhat are the names of the players with their overall ratings and attribute record dates only for the players who have a \"Crossing\" rating surpassing by two the rating of Fabio Cannavaro from August 30th 2007.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , A.overall_rating , A.date FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id , ( SELECT A.crossing AS FC_crossing FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE B.player_name = \"Fabio Cannavaro\" and date ( A.date ) = \"2007-08-30\" ) WHERE A.crossing > 2.0 * FC_crossing",
        "db_id": "soccer_1"
    },
    {
        "id": 356,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * H question is as follows:\nAssuming that Fabio Cannavaro obtained 45 crossing rating on 30th Aug 2007 instead, provide a list of player names, their overall ratings, and their attribute record dates, where crossing ratings of them surpassed Fabio Cannavaro crossing rating recorded on 30 August 2007 by two times.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , A.overall_rating , A.date FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.crossing > 2.0 * 45",
        "db_id": "soccer_1"
    },
    {
        "id": 357,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * H question is as follows:\nGet me the player names, overall ratings and attribute record dates for all players which surpass by two times the recorded \"Crossing\" rating of 45 from Fabio Cannavaro recorded on August 30th in 2007.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.player_name , A.overall_rating , A.date FROM Player_Attributes A JOIN Player B ON A.player_fifa_api_id = B.player_fifa_api_id WHERE A.crossing > 2.0 * 45",
        "db_id": "soccer_1"
    },
    {
        "id": 358,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / C question is as follows:\nWhat is the body mass index of Jonathan Leko?the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT weight * 0.45 / ( ( 1.0 * height / 100 ) * ( height / 100 ) ) AS BMI FROM Player WHERE player_name = \"Jonathan Leko\"",
        "db_id": "soccer_1"
    },
    {
        "id": 359,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / C question is as follows:\nFor the player Jonathan Leko, return their body mass index.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT weight * 0.45 / ( ( 1.0 * height / 100 ) * ( height / 100 ) ) AS BMI FROM Player WHERE player_name = \"Jonathan Leko\"",
        "db_id": "soccer_1"
    },
    {
        "id": 360,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / C H question is as follows:\nWhat is the body mass index of \"Jonathan Leko\", if he was 190cm instead?the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT weight * 0.45 / ( ( 190.0 / 100 ) * ( 190.0 / 100 ) ) AS BMI FROM Player WHERE player_name = \"Jonathan Leko\"",
        "db_id": "soccer_1"
    },
    {
        "id": 361,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'Country', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium', 'England', 'France', 'Germany', 'Italy']}]}, {'table_name': 'League', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257'], 'column_pk': True}, {'column_name': 'country_id', 'type': 'INTEGER', 'column_example': ['1', '1729', '4769', '7809', '10257']}, {'column_name': 'name', 'type': 'TEXT', 'column_example': ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']}]}, {'table_name': 'Player', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['3879', '401', '9179', '6356', '5034'], 'column_pk': True}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['2625', '2752', '2768', '2770', '2790']}, {'column_name': 'player_name', 'type': 'TEXT', 'column_example': ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran', 'Aaron Galindo', 'Aaron Hughes']}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['2', '6', '11', '16', '27']}, {'column_name': 'birthday', 'type': 'TEXT', 'column_example': ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00', '1982-05-08 00:00:00', '1979-11-08 00:00:00']}, {'column_name': 'height', 'type': 'INTEGER', 'column_example': ['182.88', '170.18', '172.72', '165.1', '190.5']}, {'column_name': 'weight', 'type': 'INTEGER', 'column_example': ['187', '146', '163', '198', '154']}]}, {'table_name': 'Player_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'player_fifa_api_id', 'type': 'INTEGER', 'column_example': ['218353', '189615', '186170', '140161', '17725']}, {'column_name': 'player_api_id', 'type': 'INTEGER', 'column_example': ['505942', '155782', '162549', '30572', '23780']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00', '2015-03-20 00:00:00', '2007-02-22 00:00:00']}, {'column_name': 'overall_rating', 'type': 'INTEGER', 'column_example': ['67', '62', '61', '74', '73']}, {'column_name': 'potential', 'type': 'INTEGER', 'column_example': ['71', '66', '65', '76', '75']}, {'column_name': 'preferred_foot', 'type': 'TEXT', 'column_example': ['right', 'left']}, {'column_name': 'attacking_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', 'None']}, {'column_name': 'defensive_work_rate', 'type': 'TEXT', 'column_example': ['medium', 'high', 'low', '_0']}, {'column_name': 'crossing', 'type': 'INTEGER', 'column_example': ['49', '48', '80', '79', '78']}, {'column_name': 'finishing', 'type': 'INTEGER', 'column_example': ['44', '43', '53', '52', '51']}, {'column_name': 'heading_accuracy', 'type': 'INTEGER', 'column_example': ['71', '70', '58', '57', '56']}, {'column_name': 'short_passing', 'type': 'INTEGER', 'column_example': ['61', '60', '71', '70', '69']}, {'column_name': 'volleys', 'type': 'INTEGER', 'column_example': ['44', '43', '40', '32', '29']}, {'column_name': 'dribbling', 'type': 'INTEGER', 'column_example': ['51', '50', '73', '71', '67']}, {'column_name': 'curve', 'type': 'INTEGER', 'column_example': ['45', '44', '70', '68', '67']}, {'column_name': 'free_kick_accuracy', 'type': 'INTEGER', 'column_example': ['39', '38', '69', '68', '43']}, {'column_name': 'long_passing', 'type': 'INTEGER', 'column_example': ['64', '63', '68', '67', '65']}, {'column_name': 'ball_control', 'type': 'INTEGER', 'column_example': ['49', '48', '71', '70', '68']}, {'column_name': 'acceleration', 'type': 'INTEGER', 'column_example': ['60', '79', '80', '84', '85']}, {'column_name': 'sprint_speed', 'type': 'INTEGER', 'column_example': ['64', '78', '82', '81', '72']}, {'column_name': 'agility', 'type': 'INTEGER', 'column_example': ['59', '78', '79', '81', '77']}, {'column_name': 'reactions', 'type': 'INTEGER', 'column_example': ['47', '46', '67', '71', '69']}, {'column_name': 'balance', 'type': 'INTEGER', 'column_example': ['65', '90', '87', '62', '92']}, {'column_name': 'shot_power', 'type': 'INTEGER', 'column_example': ['55', '54', '71', '70', '65']}, {'column_name': 'jumping', 'type': 'INTEGER', 'column_example': ['58', '85', '84', '77', '73']}, {'column_name': 'stamina', 'type': 'INTEGER', 'column_example': ['54', '79', '80', '77', '76']}, {'column_name': 'strength', 'type': 'INTEGER', 'column_example': ['76', '56', '50', '49', '48']}, {'column_name': 'long_shots', 'type': 'INTEGER', 'column_example': ['35', '34', '62', '60', '59']}, {'column_name': 'aggression', 'type': 'INTEGER', 'column_example': ['71', '63', '62', '68', '67']}, {'column_name': 'interceptions', 'type': 'INTEGER', 'column_example': ['70', '41', '40', '67', '66']}, {'column_name': 'positioning', 'type': 'INTEGER', 'column_example': ['45', '44', '60', '58', '57']}, {'column_name': 'vision', 'type': 'INTEGER', 'column_example': ['54', '53', '66', '65', '64']}, {'column_name': 'penalties', 'type': 'INTEGER', 'column_example': ['48', '47', '59', '58', '35']}, {'column_name': 'marking', 'type': 'INTEGER', 'column_example': ['65', '62', '76', '73', '72']}, {'column_name': 'standing_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '63', '75', '72']}, {'column_name': 'sliding_tackle', 'type': 'INTEGER', 'column_example': ['69', '66', '78', '72', '67']}, {'column_name': 'gk_diving', 'type': 'INTEGER', 'column_example': ['6', '5', '14', '13', '16']}, {'column_name': 'gk_handling', 'type': 'INTEGER', 'column_example': ['11', '10', '7', '6', '22']}, {'column_name': 'gk_kicking', 'type': 'INTEGER', 'column_example': ['10', '9', '8', '45', '46']}, {'column_name': 'gk_positioning', 'type': 'INTEGER', 'column_example': ['8', '7', '9', '22', '21']}, {'column_name': 'gk_reflexes', 'type': 'INTEGER', 'column_example': ['8', '7', '12', '11', '22']}]}, {'table_name': 'Team', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['31446', '1513', '31456', '35774', '31453'], 'column_pk': True}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['1601', '1773', '1957', '2033', '2182']}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['673', '675', '15005', '2007', '1750']}, {'column_name': 'team_long_name', 'type': 'TEXT', 'column_example': ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem', 'Sporting Lokeren', 'KSV Cercle Brugge']}, {'column_name': 'team_short_name', 'type': 'TEXT', 'column_example': ['GEN', 'BAC', 'ZUL', 'LOK', 'CEB']}]}, {'table_name': 'Team_Attributes', 'columns': [{'column_name': 'id', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'team_fifa_api_id', 'type': 'INTEGER', 'column_example': ['434', '77', '614', '47', '1901']}, {'column_name': 'team_api_id', 'type': 'INTEGER', 'column_example': ['9930', '8485', '8576', '8564', '10215']}, {'column_name': 'date', 'type': 'TEXT', 'column_example': ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00', '2011-02-22 00:00:00', '2012-02-22 00:00:00']}, {'column_name': 'buildUpPlaySpeed', 'type': 'INTEGER', 'column_example': ['60', '52', '47', '70', '58']}, {'column_name': 'buildUpPlaySpeedClass', 'type': 'TEXT', 'column_example': ['Balanced', 'Fast', 'Slow']}, {'column_name': 'buildUpPlayDribbling', 'type': 'INTEGER', 'column_example': ['48', '41', '64', '57']}, {'column_name': 'buildUpPlayDribblingClass', 'type': 'TEXT', 'column_example': ['Little', 'Normal', 'Lots']}, {'column_name': 'buildUpPlayPassing', 'type': 'INTEGER', 'column_example': ['50', '56', '54', '70', '52']}, {'column_name': 'buildUpPlayPassingClass', 'type': 'TEXT', 'column_example': ['Mixed', 'Long', 'Short']}, {'column_name': 'buildUpPlayPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'chanceCreationPassing', 'type': 'INTEGER', 'column_example': ['60', '54', '70', '53', '45']}, {'column_name': 'chanceCreationPassingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Risky', 'Safe']}, {'column_name': 'chanceCreationCrossing', 'type': 'INTEGER', 'column_example': ['65', '63', '70', '48', '50']}, {'column_name': 'chanceCreationCrossingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationShooting', 'type': 'INTEGER', 'column_example': ['55', '64', '70', '52', '57']}, {'column_name': 'chanceCreationShootingClass', 'type': 'TEXT', 'column_example': ['Normal', 'Lots', 'Little']}, {'column_name': 'chanceCreationPositioningClass', 'type': 'TEXT', 'column_example': ['Organised', 'Free Form']}, {'column_name': 'defencePressure', 'type': 'INTEGER', 'column_example': ['50', '47', '60', '40', '42']}, {'column_name': 'defencePressureClass', 'type': 'TEXT', 'column_example': ['Medium', 'Deep', 'High']}, {'column_name': 'defenceAggression', 'type': 'INTEGER', 'column_example': ['55', '44', '70', '47', '40']}, {'column_name': 'defenceAggressionClass', 'type': 'TEXT', 'column_example': ['Press', 'Double', 'Contain']}, {'column_name': 'defenceTeamWidth', 'type': 'INTEGER', 'column_example': ['45', '54', '70', '52', '60']}, {'column_name': 'defenceTeamWidthClass', 'type': 'TEXT', 'column_example': ['Normal', 'Wide', 'Narrow']}, {'column_name': 'defenceDefenderLineClass', 'type': 'TEXT', 'column_example': ['Cover', 'Offside Trap']}]}]\nA * / C H question is as follows:\nIf you imagine that \"Jonathan Leko\" is 190cm tall then recalculate their body mass index.the evidence is as follow:\nBody mass index is weight in pounds divided by height in meters squared and multiplying by a conversion factor 0.45.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT weight * 0.45 / ( ( 190.0 / 100 ) * ( 190.0 / 100 ) ) AS BMI FROM Player WHERE player_name = \"Jonathan Leko\"",
        "db_id": "soccer_1"
    },
    {
        "id": 362,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nHow many cases of wine were produced in total in 2009, and what percentage was the increase over 2007?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , 100.0 * ( n_2009 - n_2007 ) / n_2007 AS growth_rate FROM ( SELECT SUM ( Cases ) AS n_2009 FROM wine WHERE Year = \"2009\" ) JOIN ( SELECT SUM ( Cases ) AS n_2007 FROM wine WHERE Year = \"2007\" )",
        "db_id": "wine_1"
    },
    {
        "id": 363,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nWhat is the total case quantity of wine production in 2009 and how does this compare (in percentage change) relative to 2007 production?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , 100.0 * ( n_2009 - n_2007 ) / n_2007 AS growth_rate FROM ( SELECT SUM ( Cases ) AS n_2009 FROM wine WHERE Year = \"2009\" ) JOIN ( SELECT SUM ( Cases ) AS n_2007 FROM wine WHERE Year = \"2007\" )",
        "db_id": "wine_1"
    },
    {
        "id": 364,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / H question is as follows:\nIf no Sauvignon Blanc was produced in 2009, how many cases of wine were produced in 2009, and what percentage was the increase over 2007?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , 100.0 * ( n_2009 - n_2007 ) / n_2007 AS growth_rate FROM ( SELECT SUM ( Cases ) AS n_2009 FROM wine WHERE Year = \"2009\" AND Name != \"Sauvignon Blanc\" ) JOIN ( SELECT SUM ( Cases ) AS n_2007 FROM wine WHERE Year = \"2007\" )",
        "db_id": "wine_1"
    },
    {
        "id": 365,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / H question is as follows:\nWhat is the total case production of wine in 2009 and respective increase from 2007 if no Sauvignon Blanc was produced in 2009?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT n_2009 , 100.0 * ( n_2009 - n_2007 ) / n_2007 AS growth_rate FROM ( SELECT SUM ( Cases ) AS n_2009 FROM wine WHERE Year = \"2009\" AND Name != \"Sauvignon Blanc\" ) JOIN ( SELECT SUM ( Cases ) AS n_2007 FROM wine WHERE Year = \"2007\" )",
        "db_id": "wine_1"
    },
    {
        "id": 366,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nHow many types of wine are not produced in American Viticultural Area, and how much more is that compared to wines produced in American Viticultural Area?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT no_ava , no_ava - ava AS diff FROM ( SELECT COUNT ( * ) AS no_ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"N\" ) JOIN ( SELECT COUNT ( * ) AS ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"Y\" )",
        "db_id": "wine_1"
    },
    {
        "id": 367,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nWhat is the total number of wine types produced outside the American Viticultural Area and how many more types are produced here than inside this area?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT no_ava , no_ava - ava AS diff FROM ( SELECT COUNT ( * ) AS no_ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"N\" ) JOIN ( SELECT COUNT ( * ) AS ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"Y\" )",
        "db_id": "wine_1"
    },
    {
        "id": 368,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - H question is as follows:\nIf wines priced more than 10 dollars less than the average price of wine were all produced in non-American Viticultural Area, how many types of wine are not produced in American Viticultural Area, and how much more is that compared to wines produced in American Viticultural Area?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT no_ava , no_ava - ava AS diff FROM ( SELECT COUNT ( * ) AS no_ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"N\" OR B.Price <= ( SELECT AVG ( Price ) FROM wine ) - 10 ) JOIN ( SELECT COUNT ( * ) AS ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"Y\" AND B.Price > ( SELECT AVG ( Price ) FROM wine ) - 10 )",
        "db_id": "wine_1"
    },
    {
        "id": 369,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - H question is as follows:\nHow many types of wine are produced not inside the American Viticultural Area and how many more types is this than the number of wine types from inside this area? Assume all wines priced more than $10 USD less than the average price of wine are produced outside this respective area.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT no_ava , no_ava - ava AS diff FROM ( SELECT COUNT ( * ) AS no_ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"N\" OR B.Price <= ( SELECT AVG ( Price ) FROM wine ) - 10 ) JOIN ( SELECT COUNT ( * ) AS ava FROM appellations A JOIN wine B ON A.Appelation = B.Appelation WHERE A.isAVA = \"Y\" AND B.Price > ( SELECT AVG ( Price ) FROM wine ) - 10 )",
        "db_id": "wine_1"
    },
    {
        "id": 370,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / question is as follows:\nHow many times was the production of red wine in 2008 compared to white wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_red / n_white AS times FROM ( SELECT SUM ( A.Cases ) AS n_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND A.Year = \"2008\" ) JOIN ( SELECT SUM ( A.Cases ) AS n_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" AND A.Year = \"2008\" )",
        "db_id": "wine_1"
    },
    {
        "id": 371,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / question is as follows:\nWhat is the ratio of wine production for red wine compared to white wine for 2008?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_red / n_white AS times FROM ( SELECT SUM ( A.Cases ) AS n_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND A.Year = \"2008\" ) JOIN ( SELECT SUM ( A.Cases ) AS n_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" AND A.Year = \"2008\" )",
        "db_id": "wine_1"
    },
    {
        "id": 372,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nIf the production of each type of wine increases by 100 boxes, how many times was the production of red wine in 2008 compared to white wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_red / n_white AS times FROM ( SELECT SUM ( A.Cases + 100 ) AS n_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND A.Year = \"2008\" ) JOIN ( SELECT SUM ( A.Cases + 100 ) AS n_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" AND A.Year = \"2008\" )",
        "db_id": "wine_1"
    },
    {
        "id": 373,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nHow many times more was red wine produced in 2008 compared to white wine in the same period if all wine type production increases by 100 boxes?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.0 * n_red / n_white AS times FROM ( SELECT SUM ( A.Cases + 100 ) AS n_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND A.Year = \"2008\" ) JOIN ( SELECT SUM ( A.Cases + 100 ) AS n_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" AND A.Year = \"2008\" )",
        "db_id": "wine_1"
    },
    {
        "id": 374,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nWhat is the difference between the highest and lowest prices of a 98 rated wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( Price ) - MIN ( Price ) AS diff FROM wine WHERE Score = \"98\"",
        "db_id": "wine_1"
    },
    {
        "id": 375,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nOut of wines with a 98 rating, give me the difference between highest and lowest priced wine.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( Price ) - MIN ( Price ) AS diff FROM wine WHERE Score = \"98\"",
        "db_id": "wine_1"
    },
    {
        "id": 376,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * H question is as follows:\nWhat is the difference between the highest and lowest prices of 98 rated wines if all the wines from Carlisle Winery were increased by 10% in price?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( Price ) - MIN ( Price ) AS diff FROM ( SELECT price * ( 1 + 0.1 ) AS price , Score FROM wine WHERE Winery = \"Carlisle\" UNION ALL SELECT price , Score FROM wine WHERE Winery != \"Carlisle\" ) WHERE Score = \"98\"",
        "db_id": "wine_1"
    },
    {
        "id": 377,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * H question is as follows:\nIf you only consider wines with a 98 rating, what is the difference between the most expensive and cheapest wine if all Carlisle Winery wines increased in price by 10%.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MAX ( Price ) - MIN ( Price ) AS diff FROM ( SELECT price * ( 1 + 0.1 ) AS price , Score FROM wine WHERE Winery = \"Carlisle\" UNION ALL SELECT price , Score FROM wine WHERE Winery != \"Carlisle\" ) WHERE Score = \"98\"",
        "db_id": "wine_1"
    },
    {
        "id": 378,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nWhat is the name of the appellation in American Viticultural Area that has a total wine production that did not reach twice the production of Calaveras County?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Appelation FROM wine A JOIN appellations B ON A.Appelation = B.Appelation WHERE B.isAVA = \"Y\" GROUP BY A.Appelation HAVING SUM ( A.Cases ) < 2 * ( SELECT SUM ( Cases ) FROM wine WHERE Appelation = \"Calaveras County\" )",
        "db_id": "wine_1"
    },
    {
        "id": 379,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nTell me the name of the appelation in the American Viticultural Area with a total production of wine less than double the producton of Calaveras county?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Appelation FROM wine A JOIN appellations B ON A.Appelation = B.Appelation WHERE B.isAVA = \"Y\" GROUP BY A.Appelation HAVING SUM ( A.Cases ) < 2 * ( SELECT SUM ( Cases ) FROM wine WHERE Appelation = \"Calaveras County\" )",
        "db_id": "wine_1"
    },
    {
        "id": 380,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * H question is as follows:\nIf the production of wine produced in 2009 doubled, which appelation in American Viticultural Area has a total wine production that did not reach twice the production of Calaveras County?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Appelation FROM (SELECT Appelation, Cases FROM wine WHERE YEAR != \"2009\" UNION ALL SELECT Appelation, 2 * Cases FROM wine WHERE YEAR = \"2009\" ) A JOIN appellations B ON A.Appelation = B.Appelation WHERE B.isAVA = \"Y\" GROUP BY A.Appelation HAVING SUM (A.Cases) < 2 * (SELECT SUM(Cases) FROM (SELECT SUM (Cases) AS Cases FROM wine WHERE Appelation = \"Calaveras County\" AND Year!= 2009 UNION ALL SELECT 2*SUM (Cases) AS Cases FROM wine WHERE Appelation = \"Calaveras County\" AND Year= 2009))",
        "db_id": "wine_1"
    },
    {
        "id": 381,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * H question is as follows:\nWhich appelation in the American Viticultural Area did not surpass twice the production of Calaveras county if all production in 2009 doubled?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.Appelation FROM (SELECT Appelation, Cases FROM wine WHERE YEAR != \"2009\" UNION ALL SELECT Appelation, 2 * Cases FROM wine WHERE YEAR = \"2009\" ) A JOIN appellations B ON A.Appelation = B.Appelation WHERE B.isAVA = \"Y\" GROUP BY A.Appelation HAVING SUM (A.Cases) < 2 * (SELECT SUM(Cases) FROM (SELECT SUM (Cases) AS Cases FROM wine WHERE Appelation = \"Calaveras County\" AND Year!= 2009 UNION ALL SELECT 2*SUM (Cases) AS Cases FROM wine WHERE Appelation = \"Calaveras County\" AND Year= 2009))",
        "db_id": "wine_1"
    },
    {
        "id": 382,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / question is as follows:\nWhat percentage of wines priced lower than 40 have a rating higher than 85?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * n1 / n2 AS ratio FROM ( SELECT COUNT ( * ) AS n1 FROM wine WHERE Price < \"40\" AND Score > \"85\" ) JOIN ( SELECT COUNT ( * ) AS n2 FROM wine WHERE Price < \"40\" )",
        "db_id": "wine_1"
    },
    {
        "id": 383,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / question is as follows:\nOf the wines cheaper than 40, what percentage have a rating above 85?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * n1 / n2 AS ratio FROM ( SELECT COUNT ( * ) AS n1 FROM wine WHERE Price < \"40\" AND Score > \"85\" ) JOIN ( SELECT COUNT ( * ) AS n2 FROM wine WHERE Price < \"40\" )",
        "db_id": "wine_1"
    },
    {
        "id": 384,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nIf the price of all the wines made from Zinfandel grapes goes up 15 percent, what percentage of wines priced below 40 have a rating above 85?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * n1 / n2 AS ratio FROM ( SELECT COUNT ( * ) AS n1 FROM ( SELECT Price , Score FROM wine WHERE Grape != \"Zinfandel\" UNION ALL SELECT Price + 15 , Score FROM wine WHERE Grape = \"Zinfandel\" ) WHERE Price < \"40\" AND Score > \"85\" ) JOIN ( SELECT COUNT ( * ) AS n2 FROM ( SELECT Price , Score FROM wine WHERE Grape != \"Zinfandel\" UNION ALL SELECT Price + 15 , Score FROM wine WHERE Grape = \"Zinfandel\" ) WHERE Price < \"40\" )",
        "db_id": "wine_1"
    },
    {
        "id": 385,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nConsidering only wines cheaper than 40, what percentage of these have an above 85 rating if the price of all Zinfandel grape-derived wines goes up by 15%?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * n1 / n2 AS ratio FROM ( SELECT COUNT ( * ) AS n1 FROM ( SELECT Price , Score FROM wine WHERE Grape != \"Zinfandel\" UNION ALL SELECT Price + 15 , Score FROM wine WHERE Grape = \"Zinfandel\" ) WHERE Price < \"40\" AND Score > \"85\" ) JOIN ( SELECT COUNT ( * ) AS n2 FROM ( SELECT Price , Score FROM wine WHERE Grape != \"Zinfandel\" UNION ALL SELECT Price + 15 , Score FROM wine WHERE Grape = \"Zinfandel\" ) WHERE Price < \"40\" )",
        "db_id": "wine_1"
    },
    {
        "id": 386,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + question is as follows:\nWhat are the No. and names of wines that are from the appellation with the most expensive wine have a rating that is more than 10 points higher than the lowest rating of the highest-priced wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT No, name FROM wine WHERE Appelation IN ( SELECT Appelation FROM wine WHERE Price = ( SELECT MAX ( Price ) FROM wine ) ) AND Score > ( SELECT MIN ( Score ) FROM wine WHERE Price = ( SELECT MAX ( Price ) FROM wine ) ) + 10",
        "db_id": "wine_1"
    },
    {
        "id": 387,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + question is as follows:\nList me the No. and names of all wines from the appelation which also produces the most expensive wine which also have a rating at least 10 points above the lowest rating of the highest-priced wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT No, name FROM wine WHERE Appelation IN ( SELECT Appelation FROM wine WHERE Price = ( SELECT MAX ( Price ) FROM wine ) ) AND Score > ( SELECT MIN ( Score ) FROM wine WHERE Price = ( SELECT MAX ( Price ) FROM wine ) ) + 10",
        "db_id": "wine_1"
    },
    {
        "id": 388,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * H question is as follows:\nIf the price of wine produced in 2008 was increased by 15%, what are the No. and names wines from the appellation with the most expensive wine have a rating that is more than 10 points higher than the lowest rating of the highest-priced wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT No, Name FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" ) WHERE Appelation IN (SELECT Appelation FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" ) WHERE Price = (SELECT MAX (Price) FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" )) ) AND Score > (SELECT MIN (Score) FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" ) WHERE Price = (SELECT MAX (Price) FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" )) ) + 10",
        "db_id": "wine_1"
    },
    {
        "id": 389,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * H question is as follows:\nList the No. and names of all wines from the appelation also producing the most expensive wine which have a rating over 10 points above the lowest rating of the highest-priced wine if all 2008 wine increased in price by 15%.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT No, Name FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" ) WHERE Appelation IN (SELECT Appelation FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" ) WHERE Price = (SELECT MAX (Price) FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" )) ) AND Score > (SELECT MIN (Score) FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" ) WHERE Price = (SELECT MAX (Price) FROM (SELECT No, Name, Appelation, Price, Score FROM wine WHERE YEAR != \"2008\" UNION ALL SELECT No, Name, Appelation, (1 + 0.15) * Price, Score FROM wine WHERE YEAR = \"2008\" )) ) + 10",
        "db_id": "wine_1"
    },
    {
        "id": 390,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nIt takes 1.2 kilograms of grapes to make a bottle of red wine. How many tons of grapes were used to produce red wine in 2005?the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Year = \"2005\" AND B.Color = \"Red\"",
        "db_id": "wine_1"
    },
    {
        "id": 391,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nHow many tons of grapes were used for red wine in 2005 if it takes 1.2 kilograms of grapes for a single bottle of red wine?the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Year = \"2005\" AND B.Color = \"Red\"",
        "db_id": "wine_1"
    },
    {
        "id": 392,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIt takes 1.2 kilograms of grapes to make a bottle of red wine. If Paloma Winery did not produce wine in 2005, how many tons of grapes were used to produce red wine in 2005?the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Year = \"2005\" AND B.Color = \"Red\" AND A.Winery != \"Paloma\"",
        "db_id": "wine_1"
    },
    {
        "id": 393,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nHow many tons of grapes were used for red wine in 2005 if it takes 1.2 kilograms of grapes for a single bottle of red wine and Paloma Winery had zero production in 2005?the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Year = \"2005\" AND B.Color = \"Red\" AND A.Winery != \"Paloma\"",
        "db_id": "wine_1"
    },
    {
        "id": 394,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nIt takes 1.2 kilograms of grapes to make a bottle of wine. How many tons of red grapes and how many tons of white grapes are used to produce wine in Napa County?the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_red FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"Red\" ) JOIN ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_while FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"White\" )",
        "db_id": "wine_1"
    },
    {
        "id": 395,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nTell me how many tons of red and white grapes were used to make wine in Napa Valley if it takes 1.2 kilograms of grapes per bottle?the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_red FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"Red\" ) JOIN ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_while FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"White\" )",
        "db_id": "wine_1"
    },
    {
        "id": 396,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIt takes 1.2kg of grapes to make a bottle of wine. If all Carneros wines were produced outside Napa County, how many tons of red grapes and how many tons of white grapes are used to produce wine in Napa County?the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_red FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"Red\" AND A.Appelation != \"Carneros\" ) JOIN ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_while FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"White\" AND A.Appelation != \"Carneros\" )",
        "db_id": "wine_1"
    },
    {
        "id": 397,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nHow many tones of red and white grapes were used to make wine in Napa Valley if it takes 1.2 kilograms of grapes per bottle and all Carneros wines were produced somewhere else? the evidence is as follow:\n1 case equals to 12 bottles and 1 ton equals to 1000 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_red FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"Red\" AND A.Appelation != \"Carneros\" ) JOIN ( SELECT 1.2 * SUM ( A.Cases ) * 12 / 1000 AS tons_while FROM wine A JOIN grapes B ON A.Grape = B.Grape JOIN appellations C ON A.Appelation = C.Appelation WHERE C.County = \"Napa\" AND B.Color = \"White\" AND A.Appelation != \"Carneros\" )",
        "db_id": "wine_1"
    },
    {
        "id": 398,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nWhich wineries do the highest-rated Cabernet sauvignon wines come from, and how much more do they cost than the average price of Cabernet Sauvignon?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Winery , Price - ( SELECT AVG ( Price ) FROM wine WHERE name = \"Cabernet Sauvignon\" ) AS diff FROM wine WHERE name = \"Cabernet Sauvignon\" AND Score = ( SELECT MAX ( Score ) FROM wine WHERE name = \"Cabernet Sauvignon\" )",
        "db_id": "wine_1"
    },
    {
        "id": 399,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nList the wineries providing the highest-rated Cabernet Sauvignon and how much more do these bottles cost than the average price of Cabernet Sauvignon?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Winery , Price - ( SELECT AVG ( Price ) FROM wine WHERE name = \"Cabernet Sauvignon\" ) AS diff FROM wine WHERE name = \"Cabernet Sauvignon\" AND Score = ( SELECT MAX ( Score ) FROM wine WHERE name = \"Cabernet Sauvignon\" )",
        "db_id": "wine_1"
    },
    {
        "id": 400,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - H question is as follows:\nIf the scores of all wines produced in 2005 were decreased by 10 points, which wineries do the highest-rated Cabernet sauvignon wines come from, and how much more do they cost than the average price of Cabernet Sauvignon?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Winery , Price - ( SELECT AVG ( Price ) FROM wine WHERE name = \"Cabernet Sauvignon\" ) AS diff FROM ( SELECT Winery , Price , Score - 10 AS Score , Name FROM wine WHERE Year = \"2005\" UNION ALL SELECT Winery , Price , Score , Name FROM wine WHERE Year != \"2005\" ) WHERE name = \"Cabernet Sauvignon\" AND Score = ( SELECT MAX ( Score ) FROM ( SELECT Winery , Price , Score - 10 AS Score , Name FROM wine WHERE Year = \"2005\" UNION ALL SELECT Winery , Price , Score , Name FROM wine WHERE Year != \"2005\" ) WHERE name = \"Cabernet Sauvignon\" )",
        "db_id": "wine_1"
    },
    {
        "id": 401,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - H question is as follows:\nList the wineries making the Cabernet Sauvignon with the higest rating and how much more expensive these are than the average price for Cabernet Sauvignon if all 2005 wines decrease in score by 10 points.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Winery , Price - ( SELECT AVG ( Price ) FROM wine WHERE name = \"Cabernet Sauvignon\" ) AS diff FROM ( SELECT Winery , Price , Score - 10 AS Score , Name FROM wine WHERE Year = \"2005\" UNION ALL SELECT Winery , Price , Score , Name FROM wine WHERE Year != \"2005\" ) WHERE name = \"Cabernet Sauvignon\" AND Score = ( SELECT MAX ( Score ) FROM ( SELECT Winery , Price , Score - 10 AS Score , Name FROM wine WHERE Year = \"2005\" UNION ALL SELECT Winery , Price , Score , Name FROM wine WHERE Year != \"2005\" ) WHERE name = \"Cabernet Sauvignon\" )",
        "db_id": "wine_1"
    },
    {
        "id": 402,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nHow much more expensive is the most expensive red wine than the most expensive white wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT max_red - max_white AS diff FROM ( SELECT MAX ( A.Price ) AS max_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" ) JOIN ( SELECT MAX ( A.Price ) AS max_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" )",
        "db_id": "wine_1"
    },
    {
        "id": 403,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nWhat is the price difference between the most expensive red and white wine respectively?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT max_red - max_white AS diff FROM ( SELECT MAX ( A.Price ) AS max_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" ) JOIN ( SELECT MAX ( A.Price ) AS max_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" )",
        "db_id": "wine_1"
    },
    {
        "id": 404,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * H question is as follows:\nIf the price of Ampelos Winery's wine was reduced by 20%, how much more expensive is the most expensive red wine than the most expensive white wine?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT max_red - max_white AS diff FROM ( SELECT MAX ( Price ) AS max_red FROM ( SELECT B.Color , A.Price * ( 1 - 0.2 ) AS Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery = \"Ampelos\" UNION ALL SELECT B.Color , A.Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery != \"Ampelos\" ) WHERE Color = \"Red\" ) JOIN ( SELECT MAX ( Price ) AS max_white FROM ( SELECT B.Color , A.Price * ( 1 - 0.2 ) AS Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery = \"Ampelos\" UNION ALL SELECT B.Color , A.Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery != \"Ampelos\" ) WHERE Color = \"White\" )",
        "db_id": "wine_1"
    },
    {
        "id": 405,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * H question is as follows:\nWhat is the price increase between the most expensive red and white wines if Ampelos Winery wine costs 20% less?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT max_red - max_white AS diff FROM ( SELECT MAX ( Price ) AS max_red FROM ( SELECT B.Color , A.Price * ( 1 - 0.2 ) AS Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery = \"Ampelos\" UNION ALL SELECT B.Color , A.Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery != \"Ampelos\" ) WHERE Color = \"Red\" ) JOIN ( SELECT MAX ( Price ) AS max_white FROM ( SELECT B.Color , A.Price * ( 1 - 0.2 ) AS Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery = \"Ampelos\" UNION ALL SELECT B.Color , A.Price FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE A.Winery != \"Ampelos\" ) WHERE Color = \"White\" )",
        "db_id": "wine_1"
    },
    {
        "id": 406,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nIf a winery has produced wine for three consecutive years without a rating below 90, it is rated as a \"premium winery\". What percentage of wineries are premium winery?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( DISTINCT ( Winery ) ) / ( SELECT COUNT ( DISTINCT ( Winery ) ) FROM wine ) AS percent FROM ( SELECT A.Winery , A.No , A.Year , A.Score , B.No , B.Year , B.Score , C.No , C.Year , C.Score FROM wine A JOIN wine B ON A.Winery = B.Winery JOIN wine C ON A.Winery = C.Winery WHERE A.Score >= 90 AND B.Score >= 90 AND C.Score >= 90 AND B.Year - A.Year = 1 AND C.Year - B.Year = 1 )",
        "db_id": "wine_1"
    },
    {
        "id": 407,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nWhich wineries are considered premium as measured by producing no wine with a rating lower than 90 for three consecutive years?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( DISTINCT ( Winery ) ) / ( SELECT COUNT ( DISTINCT ( Winery ) ) FROM wine ) AS percent FROM ( SELECT A.Winery , A.No , A.Year , A.Score , B.No , B.Year , B.Score , C.No , C.Year , C.Score FROM wine A JOIN wine B ON A.Winery = B.Winery JOIN wine C ON A.Winery = C.Winery WHERE A.Score >= 90 AND B.Score >= 90 AND C.Score >= 90 AND B.Year - A.Year = 1 AND C.Year - B.Year = 1 )",
        "db_id": "wine_1"
    },
    {
        "id": 408,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / H question is as follows:\nIf a winery has produced wine for three consecutive years without a rating below 90, it is rated as a \"premium winery\". If the score of wine made from Pinot Noir grapes was decreased by 5 points, what percentage of wineries are premium winery?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( DISTINCT ( Winery ) ) / ( SELECT COUNT ( DISTINCT ( Winery ) ) FROM wine ) AS percent FROM ( SELECT A.Winery , A.No , A.Year , A.Score , B.No , B.Year , B.Score , C.No , C.Year , C.Score FROM ( SELECt Winery , No , Year , Score - 5 AS Score FROM wine WHERE Grape = \"Pinot Noir\" UNION ALL SELECt Winery , No , Year , Score FROM wine WHERE Grape != \"Pinot Noir\" ) A JOIN ( SELECt Winery , No , Year , Score - 5 AS Score FROM wine WHERE Grape = \"Pinot Noir\" UNION ALL SELECt Winery , No , Year , Score FROM wine WHERE Grape != \"Pinot Noir\" ) B ON A.Winery = B.Winery JOIN ( SELECt Winery , No , Year , Score - 5 AS Score FROM wine WHERE Grape = \"Pinot Noir\" UNION ALL SELECt Winery , No , Year , Score FROM wine WHERE Grape != \"Pinot Noir\" ) C ON A.Winery = C.Winery WHERE A.Score >= 90 AND B.Score >= 90 AND C.Score >= 90 AND B.Year - A.Year = 1 AND C.Year - B.Year = 1 )",
        "db_id": "wine_1"
    },
    {
        "id": 409,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / H question is as follows:\nWhich wineries are considered premium, by only producing wines with ratings of at least 90 for three consecutive years, if you decrease the score of all Pinot Noir grape wines by 5 points?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( DISTINCT ( Winery ) ) / ( SELECT COUNT ( DISTINCT ( Winery ) ) FROM wine ) AS percent FROM ( SELECT A.Winery , A.No , A.Year , A.Score , B.No , B.Year , B.Score , C.No , C.Year , C.Score FROM ( SELECt Winery , No , Year , Score - 5 AS Score FROM wine WHERE Grape = \"Pinot Noir\" UNION ALL SELECt Winery , No , Year , Score FROM wine WHERE Grape != \"Pinot Noir\" ) A JOIN ( SELECt Winery , No , Year , Score - 5 AS Score FROM wine WHERE Grape = \"Pinot Noir\" UNION ALL SELECt Winery , No , Year , Score FROM wine WHERE Grape != \"Pinot Noir\" ) B ON A.Winery = B.Winery JOIN ( SELECt Winery , No , Year , Score - 5 AS Score FROM wine WHERE Grape = \"Pinot Noir\" UNION ALL SELECt Winery , No , Year , Score FROM wine WHERE Grape != \"Pinot Noir\" ) C ON A.Winery = C.Winery WHERE A.Score >= 90 AND B.Score >= 90 AND C.Score >= 90 AND B.Year - A.Year = 1 AND C.Year - B.Year = 1 )",
        "db_id": "wine_1"
    },
    {
        "id": 410,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nIn which year was the production of white wine the highest, and how much higher than the production of red wine in that year?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Year , cases_white - cases_red AS diff FROM ( SELECT A.Year , SUM ( A.Cases ) AS cases_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) JOIN ( SELECT SUM ( A.Cases ) AS cases_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND Year = ( SELECT A.Year FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) )",
        "db_id": "wine_1"
    },
    {
        "id": 411,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nCalculate the year in which white wine production peaked and how much more white wine was produced than red wine on this year?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Year , cases_white - cases_red AS diff FROM ( SELECT A.Year , SUM ( A.Cases ) AS cases_white FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) JOIN ( SELECT SUM ( A.Cases ) AS cases_red FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND Year = ( SELECT A.Year FROM wine A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) )",
        "db_id": "wine_1"
    },
    {
        "id": 412,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * - H question is as follows:\nIf the production of all wines at the Beringer Winery doubled, in which year was the production of white wine the highest, and how much higher than the production of red wine in that year?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Year , cases_white - cases_red AS diff FROM ( SELECT A.Year , SUM ( A.Cases ) AS cases_white FROM ( SELECT Grape , Year , 2 * Cases AS Cases FROM wine WHERE Winery = \"Beringer\" UNION ALL SELECT Grape , Year , Cases AS Cases FROM wine WHERE Winery != \"Beringer\" ) A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) JOIN ( SELECT SUM ( A.Cases ) AS cases_red FROM ( SELECT Grape , Year , 2 * Cases AS Cases FROM wine WHERE Winery = \"Beringer\" UNION ALL SELECT Grape , Year , Cases AS Cases FROM wine WHERE Winery != \"Beringer\" ) A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND Year = ( SELECT A.Year FROM ( SELECT Grape , Year , 2 * Cases AS Cases FROM wine WHERE Winery = \"Beringer\" UNION ALL SELECT Grape , Year , Cases AS Cases FROM wine WHERE Winery != \"Beringer\" ) A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) )",
        "db_id": "wine_1"
    },
    {
        "id": 413,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * - H question is as follows:\nCalculate the year of peak white wine production and how much greater this production was than red wine if the Beringer Winery doubled production.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Year , cases_white - cases_red AS diff FROM ( SELECT A.Year , SUM ( A.Cases ) AS cases_white FROM ( SELECT Grape , Year , 2 * Cases AS Cases FROM wine WHERE Winery = \"Beringer\" UNION ALL SELECT Grape , Year , Cases AS Cases FROM wine WHERE Winery != \"Beringer\" ) A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) JOIN ( SELECT SUM ( A.Cases ) AS cases_red FROM ( SELECT Grape , Year , 2 * Cases AS Cases FROM wine WHERE Winery = \"Beringer\" UNION ALL SELECT Grape , Year , Cases AS Cases FROM wine WHERE Winery != \"Beringer\" ) A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"Red\" AND Year = ( SELECT A.Year FROM ( SELECT Grape , Year , 2 * Cases AS Cases FROM wine WHERE Winery = \"Beringer\" UNION ALL SELECT Grape , Year , Cases AS Cases FROM wine WHERE Winery != \"Beringer\" ) A JOIN grapes B ON A.Grape = B.Grape WHERE B.Color = \"White\" GROUP BY A.Year ORDER BY SUM ( A.Cases ) DESC LIMIT 1 ) )",
        "db_id": "wine_1"
    },
    {
        "id": 414,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C question is as follows:\nList the name and age of each singer at the time of the release of the song \"Gentleman\".the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , Age + ( SELECT Song_release_year FROM singer WHERE Song_Name = \"Gentleman\" ) - strftime ( \"%Y\" , \"now\" ) AS target_age FROM singer",
        "db_id": "concert_singer"
    },
    {
        "id": 415,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C question is as follows:\nWhat were the names and ages of all singers of the release of the song \"Gentleman\"the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , Age + ( SELECT Song_release_year FROM singer WHERE Song_Name = \"Gentleman\" ) - strftime ( \"%Y\" , \"now\" ) AS target_age FROM singer",
        "db_id": "concert_singer"
    },
    {
        "id": 416,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C H question is as follows:\nIf the song \"Gentleman\" was released in the first year of the 21st century, list the name and age of each singer at the time of the song's release.the evidence is as follow:\n21st century began on 1 January 2001. Age is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , Age + 2001 - strftime ( \"%Y\" , \"now\" ) AS target_age FROM singer",
        "db_id": "concert_singer"
    },
    {
        "id": 417,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C H question is as follows:\nAssuming that the song \"Gentleman\" was released in the first year of the 21st century, what were the names and ages of all its singers at the time of its release?the evidence is as follow:\n21st century began on 1 January 2001. Age is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , Age + 2001 - strftime ( \"%Y\" , \"now\" ) AS target_age FROM singer",
        "db_id": "concert_singer"
    },
    {
        "id": 418,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C question is as follows:\nWhat are the names and ages of the participating singers in the concert with the theme of \"Free choice\" at that time?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , C.Age + ( A.Year - strftime ( \"%Y\" , \"now\" ) ) AS age_at_concert FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.Theme = \"Free choice\"",
        "db_id": "concert_singer"
    },
    {
        "id": 419,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C question is as follows:\nWhat were the names and ages of all singers who participated in the \"Free Choice\" themed concert at the time of the concert?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , C.Age + ( A.Year - strftime ( \"%Y\" , \"now\" ) ) AS age_at_concert FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.Theme = \"Free choice\"",
        "db_id": "concert_singer"
    },
    {
        "id": 420,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C H question is as follows:\nIf all singers born before 1985 participated in the \"Free Choice\" themed concert, what are the names and ages of the participating singers in the concert with the theme of \"Free choice\" at that time?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , C.Age + ( ( SELECT Year FROM concert WHERE Theme = \"Free choice\" ) - strftime ( \"%Y\" , \"now\" ) ) AS age_at_concert FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.Theme = \"Free choice\" OR strftime ( \"%Y\" , \"now\" ) - C.Age < 1985 GROUP BY C.Name",
        "db_id": "concert_singer"
    },
    {
        "id": 421,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C H question is as follows:\nAssuming that all the singers born before 1985 participated in the \"Free Choice\" themed concert, what were the names and ages of all the singers who took part at the time of the concert?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , C.Age + ( ( SELECT Year FROM concert WHERE Theme = \"Free choice\" ) - strftime ( \"%Y\" , \"now\" ) ) AS age_at_concert FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.Theme = \"Free choice\" OR strftime ( \"%Y\" , \"now\" ) - C.Age < 1985 GROUP BY C.Name",
        "db_id": "concert_singer"
    },
    {
        "id": 422,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - C question is as follows:\nHow many years has it been since the earliest concert?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) - MIN ( Year ) AS years FROM concert",
        "db_id": "concert_singer"
    },
    {
        "id": 423,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - C question is as follows:\nHow many years ago did the first concert occur?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) - MIN ( Year ) AS years FROM concert",
        "db_id": "concert_singer"
    },
    {
        "id": 424,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - C H question is as follows:\nIf the \"Wide Awake\" themed concert was held three years earlier, how many years has it been since the earliest concert?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) - MIN ( Year ) AS years FROM ( SELECt Year - 3 AS Year FROM concert WHERE Theme = \"Wide Awake\" UNION ALL SELECT Year FROM concert WHERE Theme != \"Wide Awake\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 425,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - C H question is as follows:\nHow many years ago did the earliest concert occur if the concert with the theme \"Wide Awake\" took place three years earlier?the evidence is as follow:\nThe time duration is calculated by substracting the start time from the end time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT strftime ( \"%Y\" , \"now\" ) - MIN ( Year ) AS years FROM ( SELECt Year - 3 AS Year FROM concert WHERE Theme = \"Wide Awake\" UNION ALL SELECT Year FROM concert WHERE Theme != \"Wide Awake\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 426,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C question is as follows:\nWhat are the names of the singer participating in the \"Home Visits\" concert, and how old will they be on its 20th anniversary?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , A.Year - strftime ( \"%Y\" , \"now\" ) + C.Age + 20 AS target_age FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.concert_Name = \"Home Visits\"",
        "db_id": "concert_singer"
    },
    {
        "id": 427,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C question is as follows:\nWhat are the names of the \"Home Visits\" concert singer, and how old will they be on its 20th anniversary?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , A.Year - strftime ( \"%Y\" , \"now\" ) + C.Age + 20 AS target_age FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.concert_Name = \"Home Visits\"",
        "db_id": "concert_singer"
    },
    {
        "id": 428,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C H question is as follows:\nIf all the singers who participated in concerts held in Stark Park also participated in the \"Home Visits\" concert, what are the names of the singer participating in the \"Home Visits\" concert, and how old will they be on its 20th anniversary?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , ( SELECT Year FROM concert WHERE concert_Name = \"Home Visits\" ) - strftime ( \"%Y\" , \"now\" ) + C.Age + 20 AS target_age FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.concert_Name = \"Home Visits\" OR B.Singer_ID IN ( SELECT C.Singer_ID FROM concert A JOIN stadium B ON A.Stadium_ID = B.Stadium_ID JOIN singer_in_concert C ON A.concert_ID = C.concert_ID WHERE B.Name = \"Stark's Park\" ) GROUP BY B.Singer_ID",
        "db_id": "concert_singer"
    },
    {
        "id": 429,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + C H question is as follows:\nWhat will be the ages and names of the \"Home Visits\" concert singers on its 20th anniversary, if all the singers who performed at concerts in Stark Park also took part in it?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name , ( SELECT Year FROM concert WHERE concert_Name = \"Home Visits\" ) - strftime ( \"%Y\" , \"now\" ) + C.Age + 20 AS target_age FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID WHERE A.concert_Name = \"Home Visits\" OR B.Singer_ID IN ( SELECT C.Singer_ID FROM concert A JOIN stadium B ON A.Stadium_ID = B.Stadium_ID JOIN singer_in_concert C ON A.concert_ID = C.concert_ID WHERE B.Name = \"Stark's Park\" ) GROUP BY B.Singer_ID",
        "db_id": "concert_singer"
    },
    {
        "id": 430,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * C question is as follows:\nWhen all tickets sold out, how much money can be made from ticket sales at the Balmoor stadium with a ticket price of 20 dollars and the Hampden Park stadium with a ticket price of 5.5 dollars?the evidence is as follow:\nTotal price is calculated by multiplying quantity to unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity * 20 + ( SELECT Capacity * 5.5 FROM stadium WHERE Name = \"Hampden Park\" ) AS total FROM stadium WHERE Name = \"Balmoor\"",
        "db_id": "concert_singer"
    },
    {
        "id": 431,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * C question is as follows:\nIf the ticket price for Balmoor stadium is $20 and for Hampden Park stadium is $5.5, and all tickets are sold out, how much money can be generated from ticket sales?the evidence is as follow:\nTotal price is calculated by multiplying quantity to unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity * 20 + ( SELECT Capacity * 5.5 FROM stadium WHERE Name = \"Hampden Park\" ) AS total FROM stadium WHERE Name = \"Balmoor\"",
        "db_id": "concert_singer"
    },
    {
        "id": 432,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * C H question is as follows:\nIf the capacity of the Hampden Park stadium is twice that of the Balmoor stadium, when all tickets sold out, how much money can be made from ticket sales at the Balmoor stadium with a ticket price of 20 dollars and the Hampden Park stadium with a ticket price of 5.5 dollars?the evidence is as follow:\nTotal price is calculated by multiplying quantity to unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity * 20 + 2 * Capacity * 5.5 AS total FROM stadium WHERE Name = \"Balmoor\"",
        "db_id": "concert_singer"
    },
    {
        "id": 433,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * C H question is as follows:\nAssuming the ticket price for Balmoor stadium is $20 and for Hampden Park stadium is $5.5, and if the Hampden Park stadium has twice the capacity of the Balmoor stadium, what would be the total revenue generated from ticket sales if all tickets are sold out at both stadiums?the evidence is as follow:\nTotal price is calculated by multiplying quantity to unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity * 20 + 2 * Capacity * 5.5 AS total FROM stadium WHERE Name = \"Balmoor\"",
        "db_id": "concert_singer"
    },
    {
        "id": 434,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + * C question is as follows:\nSingers born before 1980 earn $355 per concert, while singers born after 1980 earn $228 per concert. How much was spent on paying the singers for the concerts held in Somerset Park stadium?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p1 + p2 AS cost FROM ( SELECT 355 * ( COUNT ( * ) ) AS p1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND strftime ( \"%Y\" , \"now\" ) - C.Age < 1980 ) JOIN ( SELECT 228 * ( COUNT ( * ) ) AS p2 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND strftime ( \"%Y\" , \"now\" ) - C.Age >= 1980 )",
        "db_id": "concert_singer"
    },
    {
        "id": 435,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + * C question is as follows:\nWhat was the total expenditure on paying singers for concerts held at Somerset Park stadium, given that singers born before 1980 earned $355 per concert and those born after 1980 earned $228 per concert?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p1 + p2 AS cost FROM ( SELECT 355 * ( COUNT ( * ) ) AS p1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND strftime ( \"%Y\" , \"now\" ) - C.Age < 1980 ) JOIN ( SELECT 228 * ( COUNT ( * ) ) AS p2 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND strftime ( \"%Y\" , \"now\" ) - C.Age >= 1980 )",
        "db_id": "concert_singer"
    },
    {
        "id": 436,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + * C H question is as follows:\nSingers born before 1980 earn $355 per concert, while singers born after 1980 earn $228 per concert. If Justin Brown is 3 years older than John Nizinik, how much was spent on paying the singers for the concerts held in Somerset Park stadium?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p1 + p2 AS cost FROM ( SELECT 355 * ( COUNT ( * ) ) AS p1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN ( SELECT Singer_ID , Name , strftime ( \"%Y\" , \"now\" ) - Age AS birth_year FROM singer WHERE Name != \"Justin Brown\" UNION ALL SELECT Singer_ID , Name , ( SELECT strftime ( \"%Y\" , \"now\" ) - Age FROM singer WHERE Name = \"John Nizinik\" ) - 3 AS birth_year FROM singer WHERE Name = \"Justin Brown\" ) C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.birth_year < 1980 ) JOIN ( SELECT 228 * ( COUNT ( * ) ) AS p2 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN ( SELECT Singer_ID , Name , strftime ( \"%Y\" , \"now\" ) - Age AS birth_year FROM singer WHERE Name != \"Justin Brown\" UNION ALL SELECT Singer_ID , Name , ( SELECT strftime ( \"%Y\" , \"now\" ) - Age FROM singer WHERE Name = \"John Nizinik\" ) - 3 AS birth_year FROM singer WHERE Name = \"Justin Brown\" ) C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.birth_year >= 1980 )",
        "db_id": "concert_singer"
    },
    {
        "id": 437,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + * C H question is as follows:\nIf Justin Brown was 3 years older than John Nizinik, what was the total expenditure on paying singers for concerts held at Somerset Park stadium, given that singers born before 1980 earned $355 per concert and those born after 1980 earned $228 per concert?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p1 + p2 AS cost FROM ( SELECT 355 * ( COUNT ( * ) ) AS p1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN ( SELECT Singer_ID , Name , strftime ( \"%Y\" , \"now\" ) - Age AS birth_year FROM singer WHERE Name != \"Justin Brown\" UNION ALL SELECT Singer_ID , Name , ( SELECT strftime ( \"%Y\" , \"now\" ) - Age FROM singer WHERE Name = \"John Nizinik\" ) - 3 AS birth_year FROM singer WHERE Name = \"Justin Brown\" ) C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.birth_year < 1980 ) JOIN ( SELECT 228 * ( COUNT ( * ) ) AS p2 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN ( SELECT Singer_ID , Name , strftime ( \"%Y\" , \"now\" ) - Age AS birth_year FROM singer WHERE Name != \"Justin Brown\" UNION ALL SELECT Singer_ID , Name , ( SELECT strftime ( \"%Y\" , \"now\" ) - Age FROM singer WHERE Name = \"John Nizinik\" ) - 3 AS birth_year FROM singer WHERE Name = \"Justin Brown\" ) C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON A.Stadium_ID = D.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.birth_year >= 1980 )",
        "db_id": "concert_singer"
    },
    {
        "id": 438,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhich stadiums have the lowest and highest average attendance rates respectively, and how many concerts have they each held?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT Name AS highest_name FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_highest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) ) JOIN ( SELECT Name AS lowest_name FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_lowest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) )",
        "db_id": "concert_singer"
    },
    {
        "id": 439,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhat are the names of the stadiums with the highest and lowest average attendance rates, and how many concerts have been held in each of them?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT Name AS highest_name FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_highest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) ) JOIN ( SELECT Name AS lowest_name FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_lowest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM stadium GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) )",
        "db_id": "concert_singer"
    },
    {
        "id": 440,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nSuppose Gayfield Park stadium had a tenth of the capacity of Hampden Park stadium, which stadiums have the lowest and highest average attendance rates respectively, and how many concerts have they each held?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT Name AS highest_name FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_highest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) ) JOIN ( SELECT Name AS lowest_name FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_lowest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) )",
        "db_id": "concert_singer"
    },
    {
        "id": 441,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nWhat are the names of the stadiums with the highest and lowest average attendance rates, if Gayfield Park stadium has one-tenth the capacity of Hampden Park stadium, and how many concerts have been held in each of them?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM ( SELECT Name AS highest_name FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_highest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity DESC LIMIT 1 ) ) JOIN ( SELECT Name AS lowest_name FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) JOIN ( SELECT COUNT ( * ) AS concerts_in_lowest_stadium FROM stadium A JOIN concert B ON A.Stadium_ID = B.Stadium_ID WHERE A.Stadium_ID = ( SELECT Stadium_ID FROM ( SELECT Stadium_ID , Name , ( SELECT Capacity FROM stadium WHERE Name = \"Hampden Park\" ) / 10 AS Capacity , Average FROM stadium WHERE Name = \"Gayfield Park\" UNION ALL SELECt Stadium_ID , Name , Capacity , Average FROM stadium WHERE Name != \"Gayfield Park\" ) GROUP BY Stadium_ID ORDER BY 100.0 * Average / Capacity ASC LIMIT 1 ) )",
        "db_id": "concert_singer"
    },
    {
        "id": 442,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / question is as follows:\nWhat are the ID and name of each concert held at Somerset Park stadium, and what percentage of the singers in each of these concert are female singers?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.concert_ID, t1.concert_Name, 100.0 * n_female / n AS female_proportion FROM (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.Is_male = \"F\" GROUP BY A.concert_ID UNION ALL SELECT A.concert_ID, A.concert_Name, 0 AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" AND A.concert_ID NOT IN (SELECT A.concert_ID FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.Is_male = \"F\" GROUP BY A.concert_ID) GROUP BY A.concert_ID) t1 JOIN (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" GROUP BY A.concert_ID) t2 ON t1.concert_ID = t2.concert_ID",
        "db_id": "concert_singer"
    },
    {
        "id": 443,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / question is as follows:\nWhat are the ID and name of each concert held at Somerset Park stadium, and what is the percentage of female singers in each of these concert held at Somerset Park?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.concert_ID, t1.concert_Name, 100.0 * n_female / n AS female_proportion FROM (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.Is_male = \"F\" GROUP BY A.concert_ID UNION ALL SELECT A.concert_ID, A.concert_Name, 0 AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" AND A.concert_ID NOT IN (SELECT A.concert_ID FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" AND C.Is_male = \"F\" GROUP BY A.concert_ID) GROUP BY A.concert_ID) t1 JOIN (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE D.Name = \"Somerset Park\" GROUP BY A.concert_ID) t2 ON t1.concert_ID = t2.concert_ID",
        "db_id": "concert_singer"
    },
    {
        "id": 444,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nIf the \"Week 2\" concert was held at Somerset Park stadium, what are the ID and name of each concert held at Somerset Park stadium, and what percentage of the singers in each concert held at Somerset Park stadium are female singers?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.concert_ID, t1.concert_Name, 100.0 * n_female / n AS female_proportion FROM (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") AND C.Is_male = \"F\" GROUP BY A.concert_ID UNION ALL SELECT A.concert_ID, A.concert_Name, 0 AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") AND A.concert_ID NOT IN (SELECT A.concert_ID FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") AND C.Is_male = \"F\" GROUP BY A.concert_ID) GROUP BY A.concert_ID) t1 JOIN (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") GROUP BY A.concert_ID) t2 ON t1.concert_ID = t2.concert_ID",
        "db_id": "concert_singer"
    },
    {
        "id": 445,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nWhat are the ID and name of each concert held at Somerset Park stadium, and what is the percentage of female singers in each concert held at Somerset Park, if the \"Week 2\" concert was held there?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t1.concert_ID, t1.concert_Name, 100.0 * n_female / n AS female_proportion FROM (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") AND C.Is_male = \"F\" GROUP BY A.concert_ID UNION ALL SELECT A.concert_ID, A.concert_Name, 0 AS n_female FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") AND A.concert_ID NOT IN (SELECT A.concert_ID FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") AND C.Is_male = \"F\" GROUP BY A.concert_ID) GROUP BY A.concert_ID) t1 JOIN (SELECT A.concert_ID, A.concert_Name, COUNT (*) AS n FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN singer C ON B.Singer_ID = C.Singer_ID JOIN stadium D ON D.Stadium_ID = A.Stadium_ID WHERE (D.Name = \"Somerset Park\" OR A.concert_Name = \"Week 2\") GROUP BY A.concert_ID) t2 ON t1.concert_ID = t2.concert_ID",
        "db_id": "concert_singer"
    },
    {
        "id": 446,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhat percentage of the concerts were held in the top three stadiums in terms of average attendance rate?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM concert ) AS percent FROM concert WHERE Stadium_ID IN ( SELECT Stadium_ID FROM stadium ORDER BY 100.0 * Average / Capacity DESC LIMIT 3 )",
        "db_id": "concert_singer"
    },
    {
        "id": 447,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhat is the percentage of concerts that took place in the three stadiums with the highest average attendance rates?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM concert ) AS percent FROM concert WHERE Stadium_ID IN ( SELECT Stadium_ID FROM stadium ORDER BY 100.0 * Average / Capacity DESC LIMIT 3 )",
        "db_id": "concert_singer"
    },
    {
        "id": 448,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIf the \"Bleeding Love\" themed concert was held at Glebe Park stadium, what percentage of the concerts were held in the top three stadiums in terms of average attendance rate?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM concert ) AS percent FROM ( SELECT Stadium_ID FROM stadium WHERE Name = \"Glebe Park\" UNION ALL SELECT Stadium_ID FROM concert WHERE Theme != \"Bleeding Love\" ) WHERE Stadium_ID IN ( SELECT Stadium_ID FROM stadium ORDER BY 100.0 * Average / Capacity DESC LIMIT 3 )",
        "db_id": "concert_singer"
    },
    {
        "id": 449,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nWhat percentage of concerts took place in the three stadiums with the highest average attendance rates, assuming that the concert with the theme \"Bleeding Love\" took place at the Glebe Park stadium?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100.0 * COUNT ( * ) / ( SELECT COUNT ( * ) FROM concert ) AS percent FROM ( SELECT Stadium_ID FROM stadium WHERE Name = \"Glebe Park\" UNION ALL SELECT Stadium_ID FROM concert WHERE Theme != \"Bleeding Love\" ) WHERE Stadium_ID IN ( SELECT Stadium_ID FROM stadium ORDER BY 100.0 * Average / Capacity DESC LIMIT 3 )",
        "db_id": "concert_singer"
    },
    {
        "id": 450,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nWhich stadium has at least three times the number of singers who have sung at the Glebe Park stadium?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID GROUP BY C.Stadium_ID HAVING COUNT ( DISTINCT ( B.Singer_ID ) ) >= 3 * ( SELECT COUNT ( DISTINCT ( B.Singer_ID ) ) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID WHERE C.name = \"Glebe Park\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 451,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nWhich stadium has had a minimum of three times more singers than Glebe Park does?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT C.Name FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID GROUP BY C.Stadium_ID HAVING COUNT ( DISTINCT ( B.Singer_ID ) ) >= 3 * ( SELECT COUNT ( DISTINCT ( B.Singer_ID ) ) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID WHERE C.name = \"Glebe Park\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 452,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * H question is as follows:\nIf all the singers who have performed at Somerset Park stadium also performed at Balmoor stadium, what is the name of the stadium with at least three times the number of singers who have sung at the Glebe Park stadium?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM ( SELECT C.Stadium_ID , B.Singer_ID , C.Name FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID UNION ALL SELECT ( SELECT Stadium_ID FROM stadium WHERE Name = \"Balmoor\" ) , B.Singer_ID , C.Name FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID WHERE C.name = \"Somerset Park\" ) GROUP BY Stadium_ID HAVING COUNT ( DISTINCT ( Singer_ID ) ) >= 3 * ( SELECT COUNT ( DISTINCT ( B.Singer_ID ) ) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID WHERE C.name = \"Glebe Park\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 453,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * H question is as follows:\nWhat is the name of the stadium that has a minimum of three times more singers than Glebe Park if the singers who have performed at Somerset Park also performed at the Balmoor stadium?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM ( SELECT C.Stadium_ID , B.Singer_ID , C.Name FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID UNION ALL SELECT ( SELECT Stadium_ID FROM stadium WHERE Name = \"Balmoor\" ) , B.Singer_ID , C.Name FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID WHERE C.name = \"Somerset Park\" ) GROUP BY Stadium_ID HAVING COUNT ( DISTINCT ( Singer_ID ) ) >= 3 * ( SELECT COUNT ( DISTINCT ( B.Singer_ID ) ) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID JOIN stadium C ON A.Stadium_ID = C.Stadium_ID WHERE C.name = \"Glebe Park\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 454,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhat is the name of the stadium that has a highest attendance rate more than twice the highest attendance rate of the Balmoor stadium?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM stadium WHERE 100.0 * Highest / Capacity > 2 * ( SELECT 100.0 * Highest / Capacity FROM stadium WHERE Name = \"Balmoor\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 455,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhich stadium's maximum attendance rate is more than double the Balmoor stadium's highest attendance rate? Give the the stadium names.the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM stadium WHERE 100.0 * Highest / Capacity > 2 * ( SELECT 100.0 * Highest / Capacity FROM stadium WHERE Name = \"Balmoor\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 456,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIf the capacity of the Balmoor stadium is 5600, what is the name of the stadium that has a highest attendance rate more than twice the highest attendance rate of the Balmoor stadium?the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM stadium WHERE 100.0 * Highest / Capacity > 2 * ( SELECT 100.0 * Highest / 5600 FROM stadium WHERE Name = \"Balmoor\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 457,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nWhich stadium's maximum attendance rate is more than double the Balmoor stadium's highest attendance rate, given its capacity of 5600? List the stadium names.the evidence is as follow:\nAttendance rate is calculated by divding attendance amount by the capacity of the stadium.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM stadium WHERE 100.0 * Highest / Capacity > 2 * ( SELECT 100.0 * Highest / 5600 FROM stadium WHERE Name = \"Balmoor\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 458,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / question is as follows:\nWhat are the IDs and names of the concerts held after 2012 and has more singers than the \"Happy Tonight\" themed concert, and how many times is it?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.concert_ID, A.concert_Name, 1.0 * COUNT (DISTINCT (B.Singer_ID)) / (SELECT COUNT (DISTINCT (B.Singer_ID)) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" ) AS times FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Year > 2012 GROUP BY A.concert_ID HAVING COUNT (DISTINCT (B.Singer_ID)) > (SELECT COUNT (DISTINCT (B.Singer_ID)) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 459,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / question is as follows:\nWhat are the ID and name of the post-2012 concert features more singers than the \"Happy Tonight\" themed concert, what is the ratio of the number of singers in both concerts?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.concert_ID, A.concert_Name, 1.0 * COUNT (DISTINCT (B.Singer_ID)) / (SELECT COUNT (DISTINCT (B.Singer_ID)) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" ) AS times FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Year > 2012 GROUP BY A.concert_ID HAVING COUNT (DISTINCT (B.Singer_ID)) > (SELECT COUNT (DISTINCT (B.Singer_ID)) FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 460,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nIf singer Joe Sharp performed in every concert, what are the IDs and names of concerts held after 2012 has more singers than the \"Happy Tonight\" themed concert, and and how many times is it?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.concert_ID, A.concert_Name, 1.0 * (COUNT (DISTINCT (B.Singer_ID)) + 1) / (SELECT COUNT (DISTINCT (B.Singer_ID)) + 1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" AND B.Singer_ID != (SELECT Singer_ID FROM singer WHERE Name = \"Joe Sharp\" ) ) AS times FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Year > 2012 AND B.Singer_ID != (SELECT Singer_ID FROM singer WHERE Name = \"Joe Sharp\" ) GROUP BY A.concert_ID HAVING (COUNT (DISTINCT (B.Singer_ID)) + 1) > (SELECT COUNT (DISTINCT (B.Singer_ID)) + 1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" AND B.Singer_ID != (SELECT Singer_ID FROM singer WHERE Name = \"Joe Sharp\" ) )",
        "db_id": "concert_singer"
    },
    {
        "id": 461,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / H question is as follows:\nAssuming that Joe Sharp performed in all concerts, what are the ID and name of post-2012 concert features more singers than the \"Happy Tonight\" themed concert, and what is the ratio of the number of singers in both concerts?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT A.concert_ID, A.concert_Name, 1.0 * (COUNT (DISTINCT (B.Singer_ID)) + 1) / (SELECT COUNT (DISTINCT (B.Singer_ID)) + 1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" AND B.Singer_ID != (SELECT Singer_ID FROM singer WHERE Name = \"Joe Sharp\" ) ) AS times FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Year > 2012 AND B.Singer_ID != (SELECT Singer_ID FROM singer WHERE Name = \"Joe Sharp\" ) GROUP BY A.concert_ID HAVING (COUNT (DISTINCT (B.Singer_ID)) + 1) > (SELECT COUNT (DISTINCT (B.Singer_ID)) + 1 FROM concert A JOIN singer_in_concert B ON A.concert_ID = B.concert_ID WHERE A.Theme = \"Happy Tonight\" AND B.Singer_ID != (SELECT Singer_ID FROM singer WHERE Name = \"Joe Sharp\" ) )",
        "db_id": "concert_singer"
    },
    {
        "id": 462,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * C question is as follows:\nAt the time of the release of the song \"Love,\" what are the names of singers who were more than twice as old as the singer of the song?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM singer WHERE ( SELECT Song_release_year FROM singer WHERE Song_Name = \"Love\" ) - ( strftime ( \"%Y\" , \"now\" ) - Age ) > 2 * ( SELECT Age - ( strftime ( \"%Y\" , \"now\" ) - Song_release_year ) FROM singer WHERE Song_Name = \"Love\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 463,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * C question is as follows:\nWhich singers, at the time when \"Love\" was released, had an age more than double that of the singer who performed the song? List their names.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM singer WHERE ( SELECT Song_release_year FROM singer WHERE Song_Name = \"Love\" ) - ( strftime ( \"%Y\" , \"now\" ) - Age ) > 2 * ( SELECT Age - ( strftime ( \"%Y\" , \"now\" ) - Song_release_year ) FROM singer WHERE Song_Name = \"Love\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 464,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * C H question is as follows:\nIf \"Love\" was released in 2010, at the time of the release of the song \"Love,\" what are the names of singers who were more than twice as old as the singer of the song?the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM singer WHERE 2010 - ( strftime ( \"%Y\" , \"now\" ) - Age ) > 2 * ( SELECT Age - ( strftime ( \"%Y\" , \"now\" ) - 2010 ) FROM singer WHERE Song_Name = \"Love\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 465,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * C H question is as follows:\nAssuming \"Love\" was released in 2010, which singers, at that time, had an age that was more than twice the age of the singer who performed the song? List their names.the evidence is as follow:\nAge is calculated by substracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM singer WHERE 2010 - ( strftime ( \"%Y\" , \"now\" ) - Age ) > 2 * ( SELECT Age - ( strftime ( \"%Y\" , \"now\" ) - 2010 ) FROM singer WHERE Song_Name = \"Love\" )",
        "db_id": "concert_singer"
    },
    {
        "id": 466,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhich continent is the country with the highest GNP per capita located in?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM country ORDER BY 1.0 * GNP / Population DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 467,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nIn which continent can we find the country with the highest GNP per capita?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM country ORDER BY 1.0 * GNP / Population DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 468,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIf the gross national product of the country where Korla City is located is 1982268.0, which continent is the country with the highest GNP per capita located in?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM (SELECT \"1982268.0\" AS GNP, Population, Continent FROM country WHERE name = (SELECT A.name FROM country A JOIN city B ON A.Code = B.CountryCode WHERE B.name = \"Korla\" ) UNION ALL SELECT GNP, Population, Continent FROM country WHERE name != (SELECT A.name FROM country A JOIN city B ON A.Code = B.CountryCode WHERE B.name = \"Korla\" ) ) ORDER BY 1.0 * GNP / Population DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 469,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIn which continent can we find the country with the highest GNP per capita, if the GNP of the country containing Korla City is 1982268?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM (SELECT \"1982268.0\" AS GNP, Population, Continent FROM country WHERE name = (SELECT A.name FROM country A JOIN city B ON A.Code = B.CountryCode WHERE B.name = \"Korla\" ) UNION ALL SELECT GNP, Population, Continent FROM country WHERE name != (SELECT A.name FROM country A JOIN city B ON A.Code = B.CountryCode WHERE B.name = \"Korla\" ) ) ORDER BY 1.0 * GNP / Population DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 470,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nAmong the countries that became independent after 1979, which country has the highest growth rate of GNP?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE IndepYear > 1979 ORDER BY 1.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 471,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nWhich country, among those that gained independence after 1979, has the highest gross national product growth rate?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE IndepYear > 1979 ORDER BY 1.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 472,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / H question is as follows:\nAmong the countries that became independent after 1979, which country has the highest growth rate in GNP if all countries in Oceania have an increase in curretn GNP of 1,000,000?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name FROM ( SELECT name , GNP + 1000000 AS GNP , GNPOld , IndepYear FROM country WHERE Continent = \"Oceania\" UNION ALL SELECT name , GNP , GNPOld , IndepYear FROM country WHERE Continent != \"Oceania\" ) WHERE IndepYear > 1979 ORDER BY 1.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 473,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / H question is as follows:\nAssuming all countries in Oceania have an increase of 1,000,000 in their current GNP, which country among those that gained independence after 1979 has the highest gross national product growth rate?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name FROM ( SELECT name , GNP + 1000000 AS GNP , GNPOld , IndepYear FROM country WHERE Continent = \"Oceania\" UNION ALL SELECT name , GNP , GNPOld , IndepYear FROM country WHERE Continent != \"Oceania\" ) WHERE IndepYear > 1979 ORDER BY 1.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 474,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nWhich country where the majority of people speak English has the highest population density, how many times larger than the country with the lowest population density?the evidence is as follow:\nThe density of population is the ratio between the numbers of people to the size of land.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , ( 100.0 * Population / SurfaceArea ) / ( SELECT MIN ( 100.0 * Population / SurfaceArea ) FROM country WHERE 100.0 * Population / SurfaceArea > 0 ) AS times FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT * , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"English\" ) ORDER BY 100.0 * Population / SurfaceArea DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 475,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C question is as follows:\nAmong the countries in which English is the most spoken language, which country has the highest population density? What is the ratio between the highest and lowest population density?the evidence is as follow:\nThe density of population is the ratio between the numbers of people to the size of land.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , ( 100.0 * Population / SurfaceArea ) / ( SELECT MIN ( 100.0 * Population / SurfaceArea ) FROM country WHERE 100.0 * Population / SurfaceArea > 0 ) AS times FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT * , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"English\" ) ORDER BY 100.0 * Population / SurfaceArea DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 476,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIf no one in Ireland speaks English, which country where the majority of people speak English has the highest population density, how many times larger than the country with the lowest population density?the evidence is as follow:\nThe density of population is the ratio between the numbers of people to the size of land.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , ( 100.0 * Population / SurfaceArea ) / ( SELECT MIN ( 100.0 * Population / SurfaceArea ) FROM country WHERE 100.0 * Population / SurfaceArea > 0 ) AS times FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT * , MAX ( Percentage ) FROM countrylanguage A JOIN country B ON A.CountryCode = B.Code WHERE B.name != \"Ireland\" GROUP BY A.CountryCode ) WHERE Language = \"English\" ) ORDER BY 100.0 * Population / SurfaceArea DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 477,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIf English is not spoken in Ireland, which country among those in which English is the most spoken language has the highest population density? What is the ratio between the highest and lowest population density?the evidence is as follow:\nThe density of population is the ratio between the numbers of people to the size of land.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name , ( 100.0 * Population / SurfaceArea ) / ( SELECT MIN ( 100.0 * Population / SurfaceArea ) FROM country WHERE 100.0 * Population / SurfaceArea > 0 ) AS times FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT * , MAX ( Percentage ) FROM countrylanguage A JOIN country B ON A.CountryCode = B.Code WHERE B.name != \"Ireland\" GROUP BY A.CountryCode ) WHERE Language = \"English\" ) ORDER BY 100.0 * Population / SurfaceArea DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 478,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nIn countries where Arabic is not the official language, which country has the largest increase rate in GNP?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = \"Arabic\" AND IsOfficial = \"T\" ) ORDER BY 100.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 479,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nAmong countries with non-Arabic official languages, what is the name of the country that has experienced the greatest growth rate in GNP?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = \"Arabic\" AND IsOfficial = \"T\" ) ORDER BY 100.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 480,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + * / H question is as follows:\nAmong the countries where Arabic is not the official language, which country has the largest growth rate of GNP if the old GNP of all countries in South America increased by 9999.0?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM ( SELECT Name , Code , GNP , GNPOld + 9999.0 AS GNPOld FROM country WHERE Continent = \"South America\" UNION ALL SELECT Name , Code , GNP , GNPOld FROM country WHERE Continent != \"South America\" ) WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = \"Arabic\" AND IsOfficial = \"T\" ) ORDER BY 100.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 481,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - + * / H question is as follows:\nIf all South American countries have an increase of 9999.0 in their previous GNP, which country, among those with non-Arabic official languages, has the highest Gross National Product growth rate?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM ( SELECT Name , Code , GNP , GNPOld + 9999.0 AS GNPOld FROM country WHERE Continent = \"South America\" UNION ALL SELECT Name , Code , GNP , GNPOld FROM country WHERE Continent != \"South America\" ) WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = \"Arabic\" AND IsOfficial = \"T\" ) ORDER BY 100.0 * ( GNP - GNPOld ) / GNPOld DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 482,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nWhich city in North America has a population at least twice that of Kang-won?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.name FROM country A JOIN city B ON A.Code = B.CountryCode WHERE A.Continent = \"North America\" AND B.Population >= 2 * ( SELECT SUM ( Population ) FROM city WHERE District = \"Kang-won\" )",
        "db_id": "world_1"
    },
    {
        "id": 483,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nWhat North American city has a population that is at least double the population of Kang-won?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT B.name FROM country A JOIN city B ON A.Code = B.CountryCode WHERE A.Continent = \"North America\" AND B.Population >= 2 * ( SELECT SUM ( Population ) FROM city WHERE District = \"Kang-won\" )",
        "db_id": "world_1"
    },
    {
        "id": 484,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * + H question is as follows:\nIf the population of North American countries where English is the official language was increased by 1%, which city in North America has a population at least twice that of Kang-won?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT ( name ) FROM ( SELECT B.name , B.Population * ( 1 + 0.01 ) AS Population FROM country A JOIN city B ON A.Code = B.CountryCode JOIN countrylanguage C ON A.Code = C.CountryCode WHERE A.Continent = \"North America\" AND C.Language = \"English\" AND C.IsOfficial = \"T\" UNION ALL SELECT B.name , B.Population FROM country A JOIN city B ON A.Code = B.CountryCode JOIN countrylanguage C ON A.Code = C.CountryCode WHERE A.Continent = \"North America\" AND NOT ( C.Language = \"English\" AND C.IsOfficial = \"T\" ) ) WHERE Population >= 2 * ( SELECT SUM ( Population ) FROM city WHERE District = \"Kang-won\" )",
        "db_id": "world_1"
    },
    {
        "id": 485,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * + H question is as follows:\nIf all countries in North America with English as the official language experienced a population increase of 1%, what North American city would have a population that is at least double the population of Kang-won?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT ( name ) FROM ( SELECT B.name , B.Population * ( 1 + 0.01 ) AS Population FROM country A JOIN city B ON A.Code = B.CountryCode JOIN countrylanguage C ON A.Code = C.CountryCode WHERE A.Continent = \"North America\" AND C.Language = \"English\" AND C.IsOfficial = \"T\" UNION ALL SELECT B.name , B.Population FROM country A JOIN city B ON A.Code = B.CountryCode JOIN countrylanguage C ON A.Code = C.CountryCode WHERE A.Continent = \"North America\" AND NOT ( C.Language = \"English\" AND C.IsOfficial = \"T\" ) ) WHERE Population >= 2 * ( SELECT SUM ( Population ) FROM city WHERE District = \"Kang-won\" )",
        "db_id": "world_1"
    },
    {
        "id": 486,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nWhich continent has a GNP growth rate at least 1.5 times that of Africa?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM country GROUP BY Continent HAVING 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) > 1.5 * ( SELECT 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) FROM country WHERE Continent = \"Africa\" )",
        "db_id": "world_1"
    },
    {
        "id": 487,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - * / question is as follows:\nName the continent whose rate of growth of GNP is no less than 1.5 times that of Africa?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM country GROUP BY Continent HAVING 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) > 1.5 * ( SELECT 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) FROM country WHERE Continent = \"Africa\" )",
        "db_id": "world_1"
    },
    {
        "id": 488,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / H question is as follows:\nIf the current GNP of countries where the majority of people speak Czech was increased by 0.5%, which continent has a GNP growth rate at least 1.5 times that of Africa?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM ( SELECT Code , GNP * ( 1 + 0.005 ) AS GNP , GNPOld , Continent FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Czech\" ) UNION ALL SELECT Code , GNP , GNPOld , Continent FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Czech\" ) ) GROUP BY Continent HAVING 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) > 1.5 * ( SELECT 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) FROM country WHERE Continent = \"Africa\" )",
        "db_id": "world_1"
    },
    {
        "id": 489,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / H question is as follows:\nWhich continent would have a GNP growth rate that is at least 1.5 times greater than Africa if the GNP of countries where Czech is the dominant language increased by 0.5%?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM ( SELECT Code , GNP * ( 1 + 0.005 ) AS GNP , GNPOld , Continent FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Czech\" ) UNION ALL SELECT Code , GNP , GNPOld , Continent FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Czech\" ) ) GROUP BY Continent HAVING 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) > 1.5 * ( SELECT 100.0 * ( SUM ( GNP ) - SUM ( GNPOld ) ) / SUM ( GNPOld ) FROM country WHERE Continent = \"Africa\" )",
        "db_id": "world_1"
    },
    {
        "id": 490,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nWhich country has a life expectancy no less than 1.5 times that of Zambia?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE LifeExpectancy >= 1.5 * ( SELECT LifeExpectancy FROM country WHERE name = \"Zambia\" )",
        "db_id": "world_1"
    },
    {
        "id": 491,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * question is as follows:\nWhat country has an average life expectancy that is at least 1.5 times that of Zambia?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE LifeExpectancy >= 1.5 * ( SELECT LifeExpectancy FROM country WHERE name = \"Zambia\" )",
        "db_id": "world_1"
    },
    {
        "id": 492,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nIf the top 20 countries in terms of per capita GNP in the world has a life expectancy of 90, which country has a life expectancy no less than 1.5 times that of Zambia?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM ( SELECT Name , 90 AS LifeExpectancy FROM country WHERE Code IN ( SELECT Code FROM country ORDER BY 1.0 * GNP / Population DESC LIMIT 20 ) UNION ALL SELECT Name , LifeExpectancy FROM country WHERE Code NOT IN ( SELECT Code FROM country ORDER BY 1.0 * GNP / Population DESC LIMIT 20 ) ) WHERE LifeExpectancy >= 1.5 * ( SELECT LifeExpectancy FROM country WHERE name = \"Zambia\" )",
        "db_id": "world_1"
    },
    {
        "id": 493,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA * / C H question is as follows:\nWhich country has a life expectancy that is at least 1.5 times that of Zambia, given that the top 20 countries in the world with the highest per capita GNP have a life expectancy of 90?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM ( SELECT Name , 90 AS LifeExpectancy FROM country WHERE Code IN ( SELECT Code FROM country ORDER BY 1.0 * GNP / Population DESC LIMIT 20 ) UNION ALL SELECT Name , LifeExpectancy FROM country WHERE Code NOT IN ( SELECT Code FROM country ORDER BY 1.0 * GNP / Population DESC LIMIT 20 ) ) WHERE LifeExpectancy >= 1.5 * ( SELECT LifeExpectancy FROM country WHERE name = \"Zambia\" )",
        "db_id": "world_1"
    },
    {
        "id": 494,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nIn countries where Dutch is not the main language, which country has the largest reduction in GNP?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Dutch\" ) ORDER BY GNPOld - GNP DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 495,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nWhich country, among those where Dutch is not the primary language, has experienced the most significant decrease in Gross National Product (GNP)?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Dutch\" ) ORDER BY GNPOld - GNP DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 496,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - H question is as follows:\nIf everyone in Aruba spoke Dutch, in countries where Dutch is not the main language, which country has the largest reduction in GNP?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Dutch\" UNION SELECT Code FROM country WHERE name = \"Aruba\" ) ORDER BY GNPOld - GNP DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 497,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - H question is as follows:\nAssuming every person in Aruba speaks Dutch, which country, among those where Dutch is not the primary language, has experienced the most significant decrease in Gross National Product (GNP)?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Dutch\" UNION SELECT Code FROM country WHERE name = \"Aruba\" ) ORDER BY GNPOld - GNP DESC LIMIT 1",
        "db_id": "world_1"
    },
    {
        "id": 498,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nHow many more countries in North America than in South America have a declining GNP?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) - ( SELECT COUNT ( * ) FROM country WHERE GNP < GNPOld AND Continent = \"South America\" ) AS diff FROM country WHERE GNP < GNPOld AND Continent = \"North America\"",
        "db_id": "world_1"
    },
    {
        "id": 499,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA - question is as follows:\nWhat is the difference in the number of countries with a decreasing GNP in North America compared to South America?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) - ( SELECT COUNT ( * ) FROM country WHERE GNP < GNPOld AND Continent = \"South America\" ) AS diff FROM country WHERE GNP < GNPOld AND Continent = \"North America\"",
        "db_id": "world_1"
    },
    {
        "id": 500,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * H question is as follows:\nSuppose the current GNP of the top two most populous countries in North America increases by 2%, how many more countries in North America than in South America have a declining GNP?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) - ( SELECT COUNT ( * ) FROM country WHERE GNP < GNPOld AND Continent = \"South America\" ) AS diff FROM ( SELECT Name , GNP * ( 1 + 0.02 ) AS GNP , GNPOld , Continent FROM country WHERE Continent = \"North America\" AND Code IN ( SELECT Code FROM country WHERE Continent = \"North America\" ORDER BY Population DESC LIMIT 2 ) UNION ALL SELECT Name , GNP , GNPOld , Continent FROM country WHERE Continent = \"North America\" AND Code NOT IN ( SELECT Code FROM country WHERE Continent = \"North America\" ORDER BY Population DESC LIMIT 2 ) ) WHERE GNP < GNPOld AND Continent = \"North America\"",
        "db_id": "world_1"
    },
    {
        "id": 501,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * H question is as follows:\nIf the two most populated North American countries experience a 2% increase in GNP, what is the difference in the number of countries with a decreasing GNP between North and South America?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT ( * ) - ( SELECT COUNT ( * ) FROM country WHERE GNP < GNPOld AND Continent = \"South America\" ) AS diff FROM ( SELECT Name , GNP * ( 1 + 0.02 ) AS GNP , GNPOld , Continent FROM country WHERE Continent = \"North America\" AND Code IN ( SELECT Code FROM country WHERE Continent = \"North America\" ORDER BY Population DESC LIMIT 2 ) UNION ALL SELECT Name , GNP , GNPOld , Continent FROM country WHERE Continent = \"North America\" AND Code NOT IN ( SELECT Code FROM country WHERE Continent = \"North America\" ORDER BY Population DESC LIMIT 2 ) ) WHERE GNP < GNPOld AND Continent = \"North America\"",
        "db_id": "world_1"
    },
    {
        "id": 502,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / C question is as follows:\nWhich continent has a per capita GNP growth rate at least two percentage points higher than Europe?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM country GROUP BY Continent HAVING 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) >= ( SELECT 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) FROM country WHERE Continent = \"Europe\" ) + 0.02",
        "db_id": "world_1"
    },
    {
        "id": 503,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / C question is as follows:\nName a continent whose per capita GNP growth rate exceeds Europe by at least two percentage points?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM country GROUP BY Continent HAVING 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) >= ( SELECT 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) FROM country WHERE Continent = \"Europe\" ) + 0.02",
        "db_id": "world_1"
    },
    {
        "id": 504,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / C H question is as follows:\nIf the GNP of the top three countries with the longest life expectancy decreases by 2%, which continent has a per capita GNP growth rate at least two points higher than Europe?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM ( SELECT name , Continent , GNP * ( 1 - 0.02 ) AS GNP , Population , GNPOld FROM country WHERE Code IN ( SELECT Code FROM country ORDER BY LifeExpectancy DESC LIMIT 3 ) UNION ALL SELECT name , Continent , GNP , Population , GNPOld FROM country WHERE Code NOT IN ( SELECT Code FROM country ORDER BY LifeExpectancy DESC LIMIT 3 ) ) GROUP BY Continent HAVING 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) >= ( SELECT 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) FROM country WHERE Continent = \"Europe\" ) + 0.02",
        "db_id": "world_1"
    },
    {
        "id": 505,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - * / C H question is as follows:\nAssuming a 2% decrease in the GNP of the top three countries with the highest life expectancy, which continent has a per capita GNP growth rate that exceeds Europe by at least two points?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Continent FROM ( SELECT name , Continent , GNP * ( 1 - 0.02 ) AS GNP , Population , GNPOld FROM country WHERE Code IN ( SELECT Code FROM country ORDER BY LifeExpectancy DESC LIMIT 3 ) UNION ALL SELECT name , Continent , GNP , Population , GNPOld FROM country WHERE Code NOT IN ( SELECT Code FROM country ORDER BY LifeExpectancy DESC LIMIT 3 ) ) GROUP BY Continent HAVING 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) >= ( SELECT 1.0 * ( SUM ( GNP ) / SUM ( Population ) - SUM ( GNPOld ) / SUM ( Population ) ) / ( SUM ( GNPOld ) / SUM ( Population ) ) FROM country WHERE Continent = \"Europe\" ) + 0.02",
        "db_id": "world_1"
    },
    {
        "id": 506,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - question is as follows:\nList name, the past and current gross national product of each country in Asia, and estimate the future gross national product if the growth rate remains unchanged.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , GNPOld , GNP , GNP + ( GNP - GNPOld ) AS GNPFuture FROM country WHERE Continent = \"Asia\"",
        "db_id": "world_1"
    },
    {
        "id": 507,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - question is as follows:\nFor each country in Asia, provide a list of their name, the past and current GNP, and estimate their future Gross National Product assuming a constant growth rate.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , GNPOld , GNP , GNP + ( GNP - GNPOld ) AS GNPFuture FROM country WHERE Continent = \"Asia\"",
        "db_id": "world_1"
    },
    {
        "id": 508,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - H question is as follows:\nIf the current gross national product of a country with Chinese as its main language is 1000000.0, list name, the past and current gross national product of each country in Asia, and estimate the future gross national product if the growth rate remains unchanged.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , GNPOld , GNP , GNP + ( GNP - GNPOld ) AS GNPFuture FROM ( SELECT name , GNPOld , 1000000.0 AS GNP , Continent FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Chinese\" ) UNION ALL SELECT name , GNPOld , GNP , Continent FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Chinese\" ) ) WHERE Continent = \"Asia\"",
        "db_id": "world_1"
    },
    {
        "id": 509,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + - H question is as follows:\nAssuming that the country with Chinese as its primary language has a current GNP of 1000000.0, provide a list of their name, the past and current GNP for each Asian country, and estimate their future Gross National Product assuming a constant growth rate.the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT name , GNPOld , GNP , GNP + ( GNP - GNPOld ) AS GNPFuture FROM ( SELECT name , GNPOld , 1000000.0 AS GNP , Continent FROM country WHERE Code IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Chinese\" ) UNION ALL SELECT name , GNPOld , GNP , Continent FROM country WHERE Code NOT IN ( SELECT CountryCode FROM ( SELECT CountryCode , Language , MAX ( Percentage ) FROM countrylanguage GROUP BY CountryCode ) WHERE Language = \"Chinese\" ) ) WHERE Continent = \"Asia\"",
        "db_id": "world_1"
    },
    {
        "id": 510,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * question is as follows:\nThe annual population growth rate in the UK is 0.4%. What is the population size in the UK one year later?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Population * ( 1 + 0.004 ) AS population_in_1year FROM country WHERE name = \"United Kingdom\"",
        "db_id": "world_1"
    },
    {
        "id": 511,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * question is as follows:\nWhat will be the population size of UK after one year, given that the UK has an annual growth rate of 0.4%?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Population * ( 1 + 0.004 ) AS population_in_1year FROM country WHERE name = \"United Kingdom\"",
        "db_id": "world_1"
    },
    {
        "id": 512,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * H question is as follows:\nThe annual population growth rate in the UK is 0.4%. If the population of countries with a life expectancy greater than 75 in Europe is 103000, what is the population size in the UK one year later?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Population * ( 1 + 0.004 ) AS population_in_1year FROM ( SELECT Continent , name , 103000 AS Population FROM country WHERE Continent = \"Europe\" AND LifeExpectancy > 75 UNION SELECT Continent , name , Population FROM country WHERE Continent = \"Europe\" AND LifeExpectancy <= 75 ) WHERE name = \"United Kingdom\"",
        "db_id": "world_1"
    },
    {
        "id": 513,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * H question is as follows:\nWhat will be the population size of the UK after one year, given that the UK has an annual population growth rate of 0.4% and all European countries with a life expectancy greater than 75 have a population of 103000?the evidence is as follow:\n\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Population * ( 1 + 0.004 ) AS population_in_1year FROM ( SELECT Continent , name , 103000 AS Population FROM country WHERE Continent = \"Europe\" AND LifeExpectancy > 75 UNION SELECT Continent , name , Population FROM country WHERE Continent = \"Europe\" AND LifeExpectancy <= 75 ) WHERE name = \"United Kingdom\"",
        "db_id": "world_1"
    },
    {
        "id": 514,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + C question is as follows:\nAccording to Zambia's life expectancy, what is the expected year of death for people born in the year of Zambia's independence?the evidence is as follow:\nAge is calculated by subtracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CAST ( IndepYear + LifeExpectancy AS INT ) AS death_year FROM country WHERE name = \"Zambia\"",
        "db_id": "world_1"
    },
    {
        "id": 515,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + C question is as follows:\nBased on Zambia's life expectancy, what is the predicted year of death for individuals born in the year of it's independence?the evidence is as follow:\nAge is calculated by subtracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CAST ( IndepYear + LifeExpectancy AS INT ) AS death_year FROM country WHERE name = \"Zambia\"",
        "db_id": "world_1"
    },
    {
        "id": 516,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / C H question is as follows:\nIf life expectancy increases by 10 years in countries with per capita GNP greater than the average per capita GNP of all European countries, what is the expected year of death for people born in the year of Zambia's independence asccording to Zambia's life expectancy?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.  Age is calculated by subtracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CAST ( IndepYear + LifeExpectancy AS INT ) AS death_year FROM ( SELECT name , IndepYear , LifeExpectancy + 10 AS LifeExpectancy FROM country WHERE 1.0 * GNP / Population > ( SELECT 1.0 * SUM ( GNP ) / SUM ( Population ) FROM country WHERE Continent = \"Europe\" ) UNION ALL SELECT name , IndepYear , LifeExpectancy FROM country WHERE NOT ( 1.0 * GNP / Population > ( SELECT 1.0 * SUM ( GNP ) / SUM ( Population ) FROM country WHERE Continent = \"Europe\" ) ) ) WHERE name = \"Zambia\"",
        "db_id": "world_1"
    },
    {
        "id": 517,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n[{'table_name': 'appellations', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['Alexander Valley', 'Amador County', 'Amador-Mendocino-Sonoma Counties', 'Anderson Valley', 'Arroyo Grande Valley']}, {'column_name': 'County', 'type': 'TEXT', 'column_example': ['Sonoma', 'Amador', 'N/A', 'Mendocino', 'San Luis Obispo']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Area', 'type': 'TEXT', 'column_example': ['North Coast', 'Sierra Foothills', 'N/A', 'Central Coast', 'California']}, {'column_name': 'isAVA', 'type': 'TEXT', 'column_example': ['Y', 'N']}]}, {'table_name': 'grapes', 'columns': [{'column_name': 'ID', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5'], 'column_pk': True}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Barbera', 'Cabernet Franc', 'Cabernet Sauvingnon', 'Chardonnay', 'Grenache']}, {'column_name': 'Color', 'type': 'TEXT', 'column_example': ['Red', 'White']}]}, {'table_name': 'wine', 'columns': [{'column_name': 'No', 'type': 'INTEGER', 'column_example': ['1', '2', '3', '4', '5']}, {'column_name': 'Grape', 'type': 'TEXT', 'column_example': ['Zinfandel', 'Sauvignon Blanc', 'Cabernet Sauvingnon', 'Pinot Noir', 'Syrah']}, {'column_name': 'Winery', 'type': 'TEXT', 'column_example': ['Robert Biale', 'Chiarello Family', 'Pedroncelli', 'Rutherford Ranch', 'Altamura']}, {'column_name': 'Appelation', 'type': 'TEXT', 'column_example': ['St. Helena', 'Napa Valley', 'Dry Creek Valley', 'Sonoma County', 'Santa Ynez Valley']}, {'column_name': 'State', 'type': 'TEXT', 'column_example': ['California']}, {'column_name': 'Name', 'type': 'TEXT', 'column_example': ['Old Kraft Vineyard', 'Giana', 'Black Chicken', 'Napa Ranches', 'Varozza Vineyard']}, {'column_name': 'Year', 'type': 'INTEGER', 'column_example': ['2008', '2007', '2009', '2006', '2005']}, {'column_name': 'Price', 'type': 'INTEGER', 'column_example': ['44', '35', '40', '38', '15']}, {'column_name': 'Score', 'type': 'INTEGER', 'column_example': ['93', '91', '89', '88', '87']}, {'column_name': 'Cases', 'type': 'INTEGER', 'column_example': ['275', '480', '2700', '525', '6000']}, {'column_name': 'Drink', 'type': 'TEXT', 'column_example': ['now', '2012', '2010', '2001', '2011']}]}]\nA + * / C H question is as follows:\nWhat is the predicted year of death for individuals born during the year of Zambia's independence, according to the country's life expectancy, if countries with a per capita GNP higher than the average per capita GNP of all European countries experience a 10-year increase in life expectancy?the evidence is as follow:\nGNP per capita is computed by dividing the GNP by the population.  Age is calculated by subtracting date of birth from a given date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CAST ( IndepYear + LifeExpectancy AS INT ) AS death_year FROM ( SELECT name , IndepYear , LifeExpectancy + 10 AS LifeExpectancy FROM country WHERE 1.0 * GNP / Population > ( SELECT 1.0 * SUM ( GNP ) / SUM ( Population ) FROM country WHERE Continent = \"Europe\" ) UNION ALL SELECT name , IndepYear , LifeExpectancy FROM country WHERE NOT ( 1.0 * GNP / Population > ( SELECT 1.0 * SUM ( GNP ) / SUM ( Population ) FROM country WHERE Continent = \"Europe\" ) ) ) WHERE name = \"Zambia\"",
        "db_id": "world_1"
    }
]