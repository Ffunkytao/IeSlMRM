[
    {
        "id": 0,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner model AC-1234', 'indoor temperature 30°C', 'target temperature 25°C', 'cooling mode'], 'relations': ['model_to_ac_id (AC-1234 → ac_id in air_conditioner_info)', 'ac_id_to_usage (ac_id → usage_records)', 'temperature_difference (ΔT=5°C)', 'operating_mode (cooling mode)'], 'intent': 'calculate_energy_required_for_cooling', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30, 25], 'units': {'temperature': '°C (Celsius)', 'power': 'watts', 'time': 'hours', 'energy': 'kWh', 'conversion': 'energy (kWh) = (power (watts) × time (hours)) / 1000'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.usage_records': [{'column': 'ac_id'}, {'column': 'indoor_temperature_celsius'}, {'column': 'temperature_setting_celsius'}, {'column': 'mode'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA physical knowledge question is as follows:\nCalculate the energy required to cool the air conditioner model AC-1234 from an indoor temperature of 30°C to 25°C in cooling mode.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (cooling_capacity_btu * usage_duration_hours / energy_efficiency_ratio) AS required_energy_btu FROM air_conditioner_info JOIN usage_records ON air_conditioner_info.ac_id = usage_records.ac_id WHERE air_conditioner_info.model = 'AC-1234' AND usage_records.mode = '制冷' AND usage_records.indoor_temperature_celsius = 30 AND usage_records.temperature_setting_celsius = 25;",
        "db_id": "air_conditioner"
    },
    {
        "id": 1,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'total energy consumption', 'one year', '8 hours per day', 'average power consumption of 1500 watts'], 'relations': ['appliance_to_energy (air conditioner → total energy consumption)', 'usage_duration (8 hours/day for one year)', 'power_to_energy (1500 watts → energy via time)'], 'intent': 'calculate_total_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 1500, 365], 'units': {'power': 'watts (W)', 'time': 'hours (h), days', 'energy': 'kilowatt-hours (kWh)', 'conversion_formulas': ['kilowatts = watts / 1000', 'daily_energy_kwh = (power_watts / 1000) * hours_per_day', 'annual_energy_kwh = daily_energy_kwh * days_per_year']}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of an air conditioner over one year, assuming it is used for 8 hours per day with an average power consumption of 1500 watts per day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1500 * 8 * 365 / 1000) AS total_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 2,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner AC-5678', 'energy efficiency ratio (EER)', 'high-temperature environment', 'high-humidity environment'], 'relations': ['model_to_environment_impact (AC-5678 → EER sensitivity)', 'environmental_effect (temperature/humidity → EER degradation)'], 'intent': 'determine_eer_degradation_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'humidity': '% (percent relative humidity)', 'efficiency': 'dimensionless (EER = BTU/h per watt)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}], 'air_conditioner.energy_consumption': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}], 'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'indoor_temperature_celsius'}, {'column': 'humidity_percent'}]}}\nA common sense reasoning question is as follows:\nDetermine whether the energy efficiency ratio of the air conditioner with ID AC-5678 will decrease in a high-temperature and high-humidity environment.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT energy_efficiency_ratio * (1 - 0.1) AS energy_efficiency_ratio_high_humidity FROM air_conditioner_info WHERE ac_id = 'AC-5678';",
        "db_id": "air_conditioner"
    },
    {
        "id": 3,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'cooling capacity 100,000 BTU', 'energy efficiency ratio 20', 'runtime 100 hours', 'extreme temperature 50°C'], 'relations': ['capacity_to_consumption (cooling capacity → energy consumption)', 'eer_to_efficiency (EER → energy conversion factor)', 'runtime_to_total_energy (hours → total consumption)'], 'intent': 'calculate_energy_consumption_for_specs', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 20, 100, 50], 'units': {'cooling_capacity': 'BTU (British Thermal Units)', 'energy_efficiency': 'BTU/Wh (EER ratio)', 'runtime': 'hours', 'temperature': '°C (Celsius)', 'energy': 'kWh (kilowatt-hours)', 'conversion': '1 kWh = 3412.14 BTU (energy unit conversion)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner has a cooling capacity of 100,000 BTU and an energy efficiency ratio of 20, calculate its energy consumption when running continuously for 100 hours in an extreme high-temperature environment (50°C).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100000 * 100 / 20 * 1.5) AS extreme_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 4,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'cooling mode', 'indoor temperature 35°C', 'target temperature 20°C', 'indoor space volume 50 m³', 'air density 1.225 kg/m³', 'air specific heat capacity 1005 J/(kg·K)', 'cooling capacity 12000 BTU/h'], 'relations': ['temperature_reduction (35°C → 20°C, ΔT=15K)', 'cooling_process (air conditioner → space volume)', 'heat_calculation (mass × specific_heat × ΔT)', 'time_calculation (total_heat ÷ cooling_power)'], 'intent': 'calculate_cooling_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [35, 20, 50, 1.225, 1005, 12000], 'units': {'temperature': '°C (Celsius), ΔT in Kelvin (K)', 'volume': 'cubic meters (m³)', 'density': 'kg/m³', 'specific_heat': 'J/(kg·K)', 'cooling_capacity': 'BTU/h', 'conversion': '1 BTU/h = 0.293071 W, 1 W = 1 J/s', 'energy': 'Joules (J)', 'time': 'seconds or hours (derived)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nCalculate the time required for an air conditioner in cooling mode to reduce the indoor temperature from 35°C to 20°C, assuming an indoor space volume of 50 cubic meters, air density of 1.225 kg/m³, air specific heat capacity of 1005 J/(kg·K), and an air conditioning cooling capacity of 12000 BTU/h.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (50 * 1.225 * 1005 * (35 - 20)) / (12000 * 1055.06 / 3600) AS required_time_hours;",
        "db_id": "air_conditioner"
    },
    {
        "id": 5,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'summer', 'winter', 'spring', 'autumn', 'daily usage hours', 'power consumption', 'annual energy consumption'], 'relations': ['seasonal_usage (summer: 12h/day, winter: 6h/day, spring/autumn: 4h/day)', 'seasonal_power_consumption (summer: 1800W, winter: 1200W, spring/autumn: 800W)', 'time_to_energy (power × time = energy)'], 'intent': 'calculate_total_annual_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [12, 6, 4, 1800, 1200, 800], 'units': {'power': 'watts (W)', 'time': 'hours (h)', 'energy': 'kilowatt-hours (kWh)', 'conversion': '1 kWh = 1000W × 1h'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nCalculate the total annual energy consumption of an air conditioner, assuming daily usage varies by season: 12 hours per day in summer, 6 hours per day in winter, and 4 hours per day in spring and autumn, with power consumption of 1800 watts in summer, 1200 watts in winter, and 800 watts in spring and autumn.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((90 * 12 * 1800) + (90 * 6 * 1200) + (185 * 4 * 800)) / 1000 AS total_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 6,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['heating capacity', 'air conditioner', 'extreme low-temperature environment (-10°C)'], 'relations': ['temperature_dependency (heating capacity vs outdoor temperature)', 'refrigerant_performance (refrigerant properties at low temperatures)', 'system_operation (AC performance in specified conditions)'], 'intent': 'determine_heating_capacity_reduction_at_low_temp_and_explain_causes', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [-10], 'units': {'temperature': '°C (Celsius)', 'capacity': 'BTU (British Thermal Units)', 'temperature_differential': 'ΔT between outdoor temp and refrigerant limits'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'refrigerant_properties', 'pk_column': 'refrigerant_type'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'heating_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['13000', '10000', '15000', '12000', '11000']}, {'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}], 'air_conditioner.refrigerant_properties': [{'column': 'phase_change_heat_kj_per_kg', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}, {'column': 'refrigerant_flow_rate_kg_per_s', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA common sense reasoning question is as follows:\nTo determine whether the heating capacity of an air conditioner will significantly decrease when operating in extreme low-temperature environments (-10°C), and to explain the reasons.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT heating_capacity_btu * (1 - 0.4) AS heating_capacity_low_temp FROM air_conditioner_info WHERE ac_id = '某空调ID';",
        "db_id": "air_conditioner"
    },
    {
        "id": 7,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner with cooling capacity 50,000 BTU', 'energy efficiency ratio (EER) of 15', 'operating time 200 hours', 'extreme high-temperature conditions (60°C)', 'cooling efficiency reduced to 30%'], 'relations': ['cooling_capacity_to_EER (50,000 BTU and 15 EER define base performance)', 'temperature_impact_on_efficiency (60°C reduces cooling efficiency to 30%)'], 'intent': 'calculate_energy_consumption_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50000, 15, 200, 60, 0.3], 'units': {'cooling_capacity': 'BTU (British Thermal Units per hour)', 'EER': 'BTU per watt-hour (BTU/Wh)', 'time': 'hours', 'temperature': '°C (Celsius)', 'efficiency_factor': 'unitless (30% = 0.3 multiplier)', 'energy': 'kWh (kilowatt-hours)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner has a cooling capacity of 50,000 BTU and an energy efficiency ratio (EER) of 15, calculate its energy consumption when operating continuously for 200 hours under extreme high-temperature conditions (60°C). Assume the air conditioner can still function under such extreme conditions, but its cooling efficiency is reduced to 30% of the normal value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (50000 * 200 / (15 * 0.3)) * 1055.06 / 1000 AS extreme_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 8,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'indoor temperature reduction (32°C to 24°C)', 'outdoor-indoor temperature difference (12°C)', 'energy efficiency ratio (4.0)', 'operating time (8 hours)', 'humidity impact rule (5% energy increase per 10% humidity increase)'], 'relations': ['air_conditioner_to_eer (air conditioner → energy efficiency ratio)', 'temperature_reduction_relationship (ΔT=8°C cooling requirement)', 'humidity_energy_relationship (5% energy increase per 10% humidity increase)'], 'intent': 'calculate_cooling_energy_consumption_with_humidity_impact', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [32, 24, 12, 4.0, 8, 5, 10], 'units': {'temperature': '°C (Celsius)', 'time': 'hours', 'energy_efficiency_ratio': 'BTU/(W·h)', 'energy': 'kWh', 'humidity': 'percent (%)', 'cooling_capacity': 'BTU (British Thermal Units)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}], 'air_conditioner.usage_records': [{'column': 'humidity_percent'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA physical knowledge question is as follows:\nCalculate the energy consumption required for a certain air conditioner to reduce the indoor temperature from 32°C to 24°C in cooling mode, assuming a temperature difference of 12°C between indoors and outdoors, an energy efficiency ratio of 4.0, and an operating time of 8 hours. Additionally, account for the impact of humidity on energy consumption, assuming a 5% increase in energy consumption for every 10% increase in humidity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (aci.power_consumption_watts * 8 / 4.0) / 1000 * (1 + 0.05 * (ec.humidity_percent / 10)) AS energy_consumption_kwh FROM air_conditioner_info aci JOIN energy_consumption ec ON aci.ac_id = ec.ac_id WHERE aci.ac_id = 'AC-5678' AND ec.mode = '制冷';",
        "db_id": "air_conditioner"
    },
    {
        "id": 9,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'seasonal daily usage (summer: 12h, winter: 10h, spring/autumn: 8h)', 'seasonal power consumption (summer: 2500W, winter: 2000W, spring/autumn: 1500W)', 'seasonal humidity (summer: 70%, winter: 40%, spring/autumn: 50%)', 'humidity impact rule (5% energy increase per 10% humidity increase)'], 'relations': ['season_to_usage (season → hours per day)', 'season_to_power (season → watts)', 'season_to_humidity (season → percent)', 'humidity_impact (humidity_percent → energy_adjustment_factor)'], 'intent': 'calculate_total_annual_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12, 10, 8, 2500, 2000, 1500, 70, 40, 50, 10, 5], 'units': {'time': 'hours (usage duration), days (season length)', 'power': 'watts', 'energy': 'kilowatt-hours (kWh)', 'humidity': 'percent', 'impact_ratio': 'percent per 10% humidity increase'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nCalculate the total annual energy consumption of an air conditioner, assuming daily usage varies by season: 12 hours per day in summer, 10 hours in winter, and 8 hours in spring and autumn. The power consumption is 2500 watts in summer, 2000 watts in winter, and 1500 watts in spring and autumn. Additionally, account for the impact of seasonal humidity on energy usage: 70% in summer, 40% in winter, and 50% in spring and autumn, with the assumption that every 10% increase in humidity raises energy consumption by 5%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((90 * 12 * 2500 * (1 + 0.05 * (70 / 10))) + (90 * 10 * 2000 * (1 + 0.05 * (40 / 10))) + (185 * 8 * 1500 * (1 + 0.05 * (50 / 10)))) / 1000 AS total_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 10,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'energy consumption', 'high-temperature conditions', 'high-humidity conditions', 'fan speeds (high, medium, low)'], 'relations': ['temperature_impact_on_energy_consumption (high-temperature → increased consumption)', 'humidity_impact_on_energy_consumption (high-humidity → increased dehumidification load)', 'fan_speed_impact (speed settings → energy variation)'], 'intent': 'evaluate_energy_consumption_impact_under_different_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 5, 0], 'units': {'temperature': '°C (Celsius)', 'humidity': 'percent', 'energy_consumption': 'kWh/kilowatt-hours', 'power': 'watts', 'fan_speed_change': 'percent variation'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'fan_speed', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['High', 'Medium', 'Low']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}]}}\nA common sense reasoning question is as follows:\nDetermine if the energy consumption of an air conditioner would significantly increase under high-temperature and high-humidity conditions, and explain the reasons. Additionally, consider how energy consumption varies at different fan speeds, assuming a 10% increase at high speed, a 5% increase at medium speed, and no change in energy consumption at low speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.energy_consumption_kwh * (1 + 0.05 * (hr.indoor_humidity_percent / 10)) * (1 + CASE WHEN ec.fan_speed = '高' THEN 0.10 WHEN ec.fan_speed = '中' THEN 0.05 ELSE 0 END) AS energy_consumption_high_humidity FROM air_conditioner_info aci JOIN energy_consumption ec ON aci.ac_id = ec.ac_id JOIN humidity_records hr ON aci.ac_id = hr.ac_id WHERE aci.ac_id = 'AC-5678' AND ec.mode = '制冷';",
        "db_id": "air_conditioner"
    },
    {
        "id": 11,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner power consumption 6000 watts', 'energy efficiency ratio 2.5', 'operating time 150 hours', 'extreme high-temperature 65°C', 'cooling efficiency drop 15%', 'humidity 90%', 'humidity impact: 5% increase per 10% humidity rise'], 'relations': ['temperature_on_efficiency (65°C → 15% efficiency)', 'humidity_on_consumption (90% humidity → energy increase)', 'power_to_energy_conversion (watts × hours → kWh)'], 'intent': 'calculate_energy_consumption_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [6000, 2.5, 150, 65, 15, 90, 5, 10], 'units': {'power': 'watts', 'time': 'hours', 'temperature': '°C', 'humidity': 'percent', 'energy': 'kWh', 'conversion': '1 kWh = 1000 watts × 1 hour'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'usage_duration_hours'}, {'column': 'power_consumption_watts'}, {'column': 'outdoor_temperature_celsius'}, {'column': 'humidity_percent'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power consumption of an air conditioner is 6000 watts with an energy efficiency ratio of 2.5, calculate its energy consumption when operating continuously for 150 hours under extreme high-temperature conditions (65°C). Suppose the air conditioner can still run under extreme conditions, but its cooling efficiency drops to 15% of the normal value. Additionally, consider the impact of humidity on energy consumption, assuming the humidity is 90% and that for every 10% increase in humidity, energy consumption increases by 5%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (6000 * 150 / (2.5 * 0.15)) / 1000 * (1 + 0.05 * (90 / 10)) AS extreme_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 12,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner cooling capacity 15000 BTU/h', 'indoor temperature 35°C', 'target temperature 25°C', 'indoor space volume 60 cubic meters', 'air density 1.225 kg/m³', 'specific heat capacity 1005 J/(kg·K)', 'outdoor temperature (from database)', 'cooling efficiency reduction rule (10% per 5°C outdoor increase)'], 'relations': ['ac_capacity_match (cooling_capacity_btu=15000 → ac_id)', 'ac_temperature_link (ac_id → outdoor_temperature_celsius)'], 'intent': 'calculate_time_required_for_cooling', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [35, 25, 60, 1.225, 1005, 15000], 'units': {'temperature': '°C (Celsius)', 'volume': 'm³ (cubic meters)', 'density': 'kg/m³ (kilograms per cubic meter)', 'specific_heat': 'J/(kg·K) (Joules per kilogram per Kelvin)', 'cooling_capacity': 'BTU/h (British Thermal Units per hour)', 'energy': 'J (Joules)', 'conversion': '1 BTU = 1055.06 J, 1 hour = 3600 seconds'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}], 'air_conditioner.temperature_records': [{'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}]}}\nA physical knowledge question is as follows:\nCalculate the time required for an air conditioner to reduce the indoor temperature from 35°C to 25°C in cooling mode, given that the indoor space volume is 60 cubic meters, air density is 1.225 kg/m³, specific heat capacity of air is 1005 J/(kg·K), and the cooling capacity of the air conditioner is 15000 BTU/h. Additionally, take into account the impact of outdoor temperature on cooling efficiency, assuming that for every 5°C increase in outdoor temperature, the cooling efficiency decreases by 10%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (60 * 1.225 * 1005 * (35 - 25)) / (15000 * 1055.06 / 3600 * (1 - 0.1 * (tr.outdoor_temperature_celsius - 25) / 5)) AS required_time_hours FROM air_conditioner_info aci JOIN temperature_records tr ON aci.ac_id = tr.ac_id WHERE aci.ac_id = 'AC-5678' AND tr.mode = '制冷';",
        "db_id": "air_conditioner"
    },
    {
        "id": 13,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'summer', 'winter', 'spring', 'autumn', 'daily usage duration', 'power consumption', 'outdoor temperature', 'energy consumption impact factor'], 'relations': ['season_to_usage_duration (season → hours/day)', 'season_to_power_consumption (season → watts)', 'season_to_temperature (season → °C)', 'temperature_impact_on_energy (10% increase per 5°C rise)'], 'intent': 'calculate_total_annual_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [14, 12, 10, 3000, 2500, 2000, 35, 5, 20, 10, 5], 'units': {'usage_duration': 'hours', 'power': 'watts', 'temperature': '°C', 'energy': 'kWh (kilowatt-hours)', 'temperature_impact': '% per °C (10% increase per 5°C rise)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nCalculate the total annual energy consumption of an air conditioner, assuming daily usage duration varies by season: 14 hours per day in summer, 12 hours per day in winter, and 10 hours per day in spring and autumn. The power consumption is 3000 watts in summer, 2500 watts in winter, and 2000 watts in spring and autumn. Additionally, consider the impact of outdoor temperature on energy consumption: 35°C in summer, 5°C in winter, and 20°C in spring and autumn, assuming a 10% increase in energy consumption for every 5°C rise in outdoor temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((90 * 14 * 3000 * (1 + 0.1 * (35 - 25) / 5)) + (90 * 12 * 2500 * (1 + 0.1 * (5 - 25) / 5)) + (185 * 10 * 2000 * (1 + 0.1 * (20 - 25) / 5))) / 1000 AS total_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 14,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['heating capacity', 'extremely low-temperature environments (-15°C)', 'fan speeds (high, medium, low)', 'heating effect percentage changes'], 'relations': ['temperature_impact_on_capacity (lower temperature → reduced heating capacity)', 'fan_speed_impact (higher fan speed → increased heating effect)'], 'intent': 'evaluate_heating_performance_degradation_in_low_temperature_and_fan_speed_impact', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [-15, 10, 5, 0], 'units': {'temperature': '°C (Celsius)', 'heating_capacity': 'BTU (British Thermal Units)', 'performance_change': '% (percentage)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'refrigerant_properties', 'pk_column': 'refrigerant_type'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'heating_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['13000', '10000', '15000', '12000', '11000']}, {'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}], 'air_conditioner.refrigerant_properties': [{'column': 'phase_change_heat_kj_per_kg', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}, {'column': 'refrigerant_flow_rate_kg_per_s', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA common sense reasoning question is as follows:\nDetermine whether the heating capacity of an air conditioner decreases significantly when operating in extremely low-temperature environments (-15°C), and explain the reasons. Also, consider the heating performance of the air conditioner at different fan speeds, assuming a 10% increase in heating effect at high speed, a 5% increase at medium speed, and no change at low speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT aci.heating_capacity_btu * (1 - 0.5) * (1 + CASE WHEN ec.fan_speed = '高' THEN 0.10 WHEN ec.fan_speed = '中' THEN 0.05 ELSE 0 END) AS heating_capacity_low_temp FROM air_conditioner_info aci JOIN energy_consumption ec ON aci.ac_id = ec.ac_id WHERE aci.ac_id = 'AC-5678' AND ec.mode = '制热';",
        "db_id": "air_conditioner"
    },
    {
        "id": 15,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'cooling capacity 60,000 BTU', 'energy efficiency ratio 2.0', 'runtime 200 hours', 'extreme high-temperature 70°C', 'cooling efficiency drop 10%', 'humidity level 95%', 'humidity-energy rule: 5% increase per 10% humidity rise'], 'relations': ['efficiency_to_consumption (EER → power calculation)', 'temperature_impact (70°C → efficiency drop)', 'humidity_impact (95% → energy adjustment)'], 'intent': 'calculate_energy_consumption_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [60000, 2.0, 200, 70, 10, 95, 5, 10], 'units': {'cooling_capacity': 'BTU', 'efficiency_ratio': 'dimensionless (BTU per watt-hour)', 'time': 'hours', 'temperature': '°C', 'efficiency_drop': 'percent', 'humidity': 'percent', 'energy_consumption': 'kWh or watt-hours'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner has a cooling capacity of 60,000 BTU and an energy efficiency ratio of 2.0, calculate its energy consumption when running continuously for 200 hours under extreme high-temperature conditions (70°C). Assume the air conditioner can still operate under extreme conditions, but its cooling efficiency drops to 10% of the normal value. Additionally, consider the impact of humidity on energy consumption, assuming a humidity level of 95%, and for every 10% increase in humidity, energy consumption increases by 5%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (60000 * 200 / (2.0 * 0.1)) * 1055.06 / 1000 * (1 + 0.05 * (95 / 10)) AS Extreme_energy_consumption_kwh;",
        "db_id": "air_conditioner"
    },
    {
        "id": 16,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'indoor humidity 60%', 'indoor humidity 40%', 'indoor temperature 25°C'], 'relations': ['humidity_reduction (60% to 40%)', 'constant_temperature_during_process (25°C)'], 'intent': 'calculate_mass_of_water_removed_during_dehumidification', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [60, 40, 25], 'units': {'humidity': '% (percent)', 'temperature': '°C (Celsius)', 'mass': 'kg (kilograms)', 'psychrometric_calculations': 'requires absolute humidity conversion via vapor pressure'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'humidity_percent'}, {'column': 'indoor_temperature_celsius'}, {'column': 'usage_duration_hours'}], 'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}]}}\nA physical knowledge question is as follows:\nIf an air conditioner is operating in cooling mode, reducing indoor humidity from 60% to 40% with an indoor temperature of 25°C, calculate the mass of water removed from the air during the dehumidification process.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM((1000 * 0.001 * (hr1.indoor_humidity_percent - hr2.indoor_humidity_percent) * (101325 / (287 * (tr.indoor_temperature_celsius + 273.15))))) AS removed_water_mass FROM humidity_records hr1 JOIN humidity_records hr2 ON hr1.ac_id = hr2.ac_id AND hr1.record_date = hr2.record_date JOIN temperature_records tr ON hr1.ac_id = tr.ac_id AND hr1.record_date = tr.record_date WHERE hr1.mode = 'cooling' AND hr1.indoor_humidity_percent = 60 AND hr2.indoor_humidity_percent = 40 AND tr.indoor_temperature_celsius = 25 AND tr.mode = 'cooling' GROUP BY hr1.ac_id;",
        "db_id": "air_conditioner"
    },
    {
        "id": 17,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'the day', 'power consumption values (800W, 1200W, 1500W)', 'run times (4 hours, 3 hours, 5 hours)'], 'relations': ['values_recorded_for_air_conditioner', 'values_recorded_on_day'], 'intent': 'calculate_total_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [800, 4, 1200, 3, 1500, 5], 'units': {'power': 'W (watts)', 'time': 'hours', 'energy': 'kWh (kilowatt-hours)', 'conversion_formula': 'energy_kwh = (power_watts × time_hours) / 1000'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA mathematical logic question is as follows:\nA known air conditioner operates at different fan speeds and temperature settings within a day. The recorded power consumption values are 800W, 1200W, and 1500W, with corresponding run times of 4 hours, 3 hours, and 5 hours, respectively. Calculate the total energy consumption of this air conditioner for that day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(power_consumption_watts * usage_duration_hours / 1000) AS total_energy_consumption_kwh FROM usage_records WHERE power_consumption_watts IN (800, 1200, 1500) AND usage_duration_hours IN (4, 3, 5);",
        "db_id": "air_conditioner"
    },
    {
        "id": 18,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'cooling mode', 'temperature setting', 'energy consumption', 'hot summer weather'], 'relations': ['temperature_setting_to_energy (lower setting → higher consumption)', 'outdoor_temperature_to_workload (high heat → increased AC workload)'], 'intent': 'explain_energy_consumption_increase_with_lower_setting', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': None, 'units': {'temperature': '°C (Celsius, from temperature_setting_celsius fields)', 'energy': 'kWh (energy_consumption_kwh), watts (power_consumption_watts)', 'workload_metric': 'cooling_capacity_btu (heat removal capacity)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}, {'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}], 'air_conditioner.temperature_records': [{'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}], 'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}]}}\nA common sense reasoning question is as follows:\nIn hot summer weather, why does setting the air conditioner to a lower temperature in cooling mode result in higher energy consumption?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(power_consumption_watts * usage_duration_hours / 1000) AS total_energy_consumption_kwh FROM usage_records WHERE mode = 'cooling' AND temperature_setting_celsius < outdoor_temperature_celsius GROUP BY temperature_setting_celsius ORDER BY temperature_setting_celsius;",
        "db_id": "air_conditioner"
    },
    {
        "id": 19,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner cooling capacity 10000 BTU', 'outdoor temperature 60°C', 'indoor set temperature -10°C'], 'relations': ['cooling_capacity_to_energy (10000 BTU → energy_efficiency_ratio/power_consumption)', 'temperature_differential (ΔT = 70°C)'], 'intent': 'calculate_theoretical_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 60, -10], 'units': {'cooling_capacity': 'BTU/h (British Thermal Units per hour)', 'temperature': '°C (Celsius)', 'energy_consumption': 'kWh (kilowatt-hours)', 'temperature_differential': 'ΔT = 70°C (outdoor 60°C - indoor -10°C)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA hypothetical reasoning question is as follows:\nIf an air conditioner has a cooling capacity of 10,000 BTU, assuming in extreme conditions where the outdoor temperature reaches 60°C and the indoor temperature is set to -10°C, calculate the theoretical energy consumption of this air conditioner under such extreme conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cooling_capacity_btu * ((60 - (-10)) / 20) * 1 AS theoretical_energy_consumption_btu FROM air_conditioner_info WHERE cooling_capacity_btu = 10000;",
        "db_id": "air_conditioner"
    },
    {
        "id": 20,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['heating mode operation', 'indoor temperature rise from 10°C to 20°C', 'power consumption 1500W'], 'relations': ['operation_mode_relation (heating mode → heat transfer)', 'temperature_difference (ΔT=10°C)', 'power_to_energy_conversion (1500W → joules/kWh)'], 'intent': 'calculate_heat_transferred_to_indoor_space', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 20, 1500], 'units': {'temperature': '°C (Celsius)', 'power': 'W (watts)', 'energy': 'J (joules) or kWh (kilowatt-hours)', 'conversion_formulas': ['1 W = 1 J/s', '1 kWh = 3.6e6 J', 'ΔT = 10°C (temperature differential)']}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'usage_duration_hours'}, {'column': 'mode'}, {'column': 'indoor_temperature_celsius'}, {'column': 'power_consumption_watts'}], 'air_conditioner.air_conditioner_info': [{'column': 'heating_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['13000', '10000', '15000', '12000', '11000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}]}}\nA physical knowledge question is as follows:\nIf an air conditioner is operating in heating mode, with the indoor temperature rising from 10°C to 20°C and a power consumption of 1500W, calculate the amount of heat transferred to the indoor space during the operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT power_consumption_watts * usage_duration_hours * 3600 AS heat_transfer_joules FROM usage_records WHERE mode = 'heating' AND power_consumption_watts = 1500 AND indoor_temperature_celsius = 10 AND temperature_setting_celsius = 20;",
        "db_id": "air_conditioner"
    },
    {
        "id": 21,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'cooling mode', 'heating mode', 'dehumidifying mode'], 'relations': ['mode_operation (air conditioner → cooling/heating/dehumidifying)', 'power_duration_association (cooling:1000W/2h, heating:1200W/3h, dehumidifying:800W/4h)'], 'intent': 'calculate_daily_average_power_consumption', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [1000, 1200, 800, 2, 3, 4], 'units': {'power': 'W (Watts)', 'time': 'h (hours)', 'energy_conversion': 'energy (Wh) = power (W) × time (h)', 'average_power': 'W (Watts) = total_energy (Wh) / total_time (h)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'mode'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA mathematical logic question is as follows:\nAssuming an air conditioner operates in different modes (cooling, heating, dehumidifying) within a day, with recorded power consumptions of 1000W, 1200W, and 800W, and operating times of 2 hours, 3 hours, and 4 hours respectively. Calculate the average power consumption of this air conditioner for that day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(power_consumption_watts * usage_duration_hours) / SUM(usage_duration_hours) AS average_power_consumption_watts FROM usage_records WHERE power_consumption_watts IN (1000, 1200, 800) AND usage_duration_hours IN (2, 3, 4);",
        "db_id": "air_conditioner"
    },
    {
        "id": 22,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner heating mode', 'higher temperature setting', 'energy consumption', 'cold winter weather'], 'relations': ['setting_to_consumption (higher temperature → increased energy use)', 'outdoor_to_setting_delta (outdoor temp vs. setting temp)', 'mode_constraint (heating mode)'], 'intent': 'explain_relationship_between_temperature_setting_and_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'power': 'watts (power_consumption_watts)', 'energy': 'kWh (energy_consumption_kwh)', 'differential': 'ΔT (temperature difference)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}, {'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}], 'air_conditioner.usage_records': [{'column': 'temperature_setting_celsius'}, {'column': 'power_consumption_watts'}], 'air_conditioner.temperature_records': [{'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}]}}\nA common sense reasoning question is as follows:\nIn cold winter weather, why does setting a higher temperature in heating mode on an air conditioner lead to higher energy consumption?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(power_consumption_watts * usage_duration_hours / 1000) AS total_energy_consumption_kwh FROM usage_records WHERE mode = 'heating' AND temperature_setting_celsius > outdoor_temperature_celsius GROUP BY temperature_setting_celsius ORDER BY temperature_setting_celsius;",
        "db_id": "air_conditioner"
    },
    {
        "id": 23,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner with heating capacity 12,000 BTU', 'outdoor temperature -30°C', 'indoor temperature setpoint 40°C'], 'relations': ['heating_capacity_to_energy (12,000 BTU → energy consumption)', 'temperature_differential (ΔT = 70°C from -30°C to 40°C)'], 'intent': 'calculate_theoretical_energy_consumption_for_heating', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12000, -30, 40], 'units': {'heating_capacity': 'BTU (British Thermal Units per hour)', 'temperature': '°C (Celsius)', 'energy': 'kWh (kilowatt-hours)', 'conversion': '1 BTU/h ≈ 0.293071 W'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'heating_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['13000', '10000', '15000', '12000', '11000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}], 'air_conditioner.energy_consumption': [{'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}]}}\nA hypothetical reasoning question is as follows:\nIf an air conditioner has a heating capacity of 12,000 BTU, assuming an extreme scenario where the outdoor temperature reaches -30°C and the indoor temperature is set to 40°C, calculate the theoretical energy consumption of this air conditioner under such extreme conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT heating_capacity_btu * ((40 - (-30)) / 20) * 1 AS theoretical_energy_consumption_btu FROM air_conditioner_info WHERE heating_capacity_btu = 12000;",
        "db_id": "air_conditioner"
    },
    {
        "id": 24,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'cooling capacity (cooling_capacity_btu)', 'power consumption (power_consumption_watts)', 'cooling efficiency (cooling_capacity_btu / power_consumption_watts)', 'manufacturer'], 'relations': ['model_to_specs (air_conditioner_info.model → cooling_capacity_btu/power_consumption_watts)', 'calculation_relation (cooling_capacity_btu ÷ power_consumption_watts → cooling efficiency)', 'manufacturer_association (manufacturer → model)'], 'intent': 'calculate_and_rank_cooling_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'cooling_capacity': 'BTU (British Thermal Units)', 'power_consumption': 'watts', 'efficiency_unit': 'BTU per watt (derived unit)', 'conversion_note': 'Efficiency = cooling_capacity_btu / power_consumption_watts'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Daikin', 'Mitsubishi', 'LG', 'Samsung', 'Panasonic']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA physical knowledge question is as follows:\nQuery the cooling capacity (cooling_capacity_btu) and power consumption (power_consumption_watts) of all air conditioners, calculate the cooling efficiency of each air conditioner (cooling capacity/power consumption), and sort them in descending order of cooling efficiency to list the top 10 air conditioner models and their manufacturers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model, manufacturer, cooling_capacity_btu, power_consumption_watts, (cooling_capacity_btu / power_consumption_watts) AS cooling_efficiency FROM air_conditioner_info ORDER BY cooling_efficiency DESC LIMIT 10;",
        "db_id": "air_conditioner"
    },
    {
        "id": 25,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'manufacturers', 'production_year', 'energy_efficiency_ratio', 'efficiency_year_ratio'], 'relations': ['model_manufacturer (model belongs to a manufacturer)', 'model_production_year (model has production year)', 'model_energy_efficiency (model has energy efficiency ratio)', 'ratio_computation (energy_efficiency_ratio divided by production_year)'], 'intent': 'retrieve_top_models_by_efficiency_ratio_per_year', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'production_year': 'year (integer)', 'energy_efficiency_ratio': 'unitless (ratio of cooling capacity to power input)', 'efficiency_year_ratio': 'unitless (energy_efficiency_ratio per year)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Daikin', 'Mitsubishi', 'LG', 'Samsung', 'Panasonic']}, {'column': 'production_year', 'type': 'YEAR', 'primary_key': False, 'comment': '', 'examples': ['2022', '2021', '2023']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}]}}\nA mathematical logic question is as follows:\nQuery all air conditioners' production year (production_year) and energy efficiency ratio (energy_efficiency_ratio), calculate the ratio of each air conditioner's energy efficiency ratio to its production year (energy_efficiency_ratio/production_year), and sort them in descending order based on this ratio. List the top 5 air conditioner models along with their manufacturers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model, manufacturer, production_year, energy_efficiency_ratio, (energy_efficiency_ratio / production_year) AS efficiency_year_ratio FROM air_conditioner_info ORDER BY efficiency_year_ratio DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 26,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', 'noise level (noise_level_db)', 'weight (weight_kg)', 'ratio (noise_level_db/weight_kg)', 'model', 'manufacturer'], 'relations': ['model_to_attributes (model → noise_level_db, weight_kg)', 'noise_weight_ratio (noise_level_db divided by weight_kg)', 'manufacturer_to_model (manufacturer → model)'], 'intent': 'retrieve_top_5_air_conditioners_by_smallest_noise_to_weight_ratio_and_analyze_correlation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'noise_level': 'dB (decibels)', 'weight': 'kg (kilograms)', 'ratio': 'dB/kg (decibels per kilogram)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Daikin', 'Mitsubishi', 'LG', 'Samsung', 'Panasonic']}, {'column': 'noise_level_db', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['19.0', '20.0', '21.0', '18.5', '20.5']}, {'column': 'weight_kg', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['32.5', '28.0', '34.0', '30.0', '29.5']}]}}\nA common sense reasoning question is as follows:\nQuery the noise level (noise_level_db) and weight (weight_kg) of all air conditioners, calculate the ratio of noise level to weight (noise_level/weight_kg) for each unit, and sort them in ascending order from low to high based on this ratio. List the top 5 air conditioner models with the smallest noise level-to-weight ratio along with their manufacturers. Additionally, analyze the relationship between the noise level and weight of these air conditioners.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model, manufacturer, noise_level_db, weight_kg, (noise_level_db / weight_kg) AS noise_weight_ratio FROM air_conditioner_info WHERE weight_kg > 0 ORDER BY noise_weight_ratio ASC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 27,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'cooling capacity > 20,000 BTU', 'power consumption < 1,000W', 'cooling capacity to power consumption ratio'], 'relations': ['capacity_threshold (cooling_capacity_btu > 20000)', 'consumption_threshold (power_consumption_watts < 1000)', 'ratio_calculation (cooling_capacity_btu / power_consumption_watts)', 'model_to_manufacturer (air_conditioner_info.model → air_conditioner_info.manufacturer)'], 'intent': 'retrieve_top_5_efficient_models_with_manufacturers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000, 1000], 'units': {'cooling_capacity': 'BTU (British Thermal Units)', 'power_consumption': 'W (watts)', 'ratio': 'dimensionless (BTU per watt)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Daikin', 'Mitsubishi', 'LG', 'Samsung', 'Panasonic']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner has a cooling capacity (cooling_capacity_btu) exceeding 20,000 BTU and power consumption (power_consumption_watts) below 1,000W, query all air conditioners' cooling capacity and power consumption, calculate the ratio of cooling capacity to power consumption for each unit (cooling capacity / power consumption), and sort them in descending order based on this ratio. Then list the top 5 air conditioner models with the highest cooling capacity to power consumption ratio, along with their manufacturers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model, manufacturer, cooling_capacity_btu, power_consumption_watts, (cooling_capacity_btu / power_consumption_watts) AS cooling_power_ratio FROM air_conditioner_info WHERE cooling_capacity_btu > 20000 AND power_consumption_watts < 1000 ORDER BY cooling_power_ratio DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 28,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['power consumption (power_consumption_watts)', 'runtime (usage_duration_hours)', 'air conditioner model', 'record date', 'total energy consumption (calculated)'], 'relations': ['usage_records linked to air_conditioner_info via ac_id', 'energy_calculation (power_consumption_watts * usage_duration_hours)'], 'intent': 'retrieve_top_10_usage_records_by_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'power': 'watts (W)', 'time': 'hours (h)', 'energy': 'watt-hours (W·h)', 'calculation': 'total_energy = power_consumption_watts × usage_duration_hours'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'ac_id'}, {'column': 'usage_date'}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nQuery all power consumption (power_consumption_watts) and runtime (usage_duration_hours) in the energy consumption records, calculate the total energy consumption (power consumption * runtime) for each air conditioner, sort it in descending order from highest to lowest total energy consumption, and list the top 10 records with the highest total energy consumption along with their corresponding air conditioner models and record dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.usage_id, ai.model, ur.usage_date, ur.power_consumption_watts, ur.usage_duration_hours, (ur.power_consumption_watts * ur.usage_duration_hours) AS total_energy_consumption FROM usage_records ur JOIN air_conditioner_info ai ON ur.ac_id = ai.ac_id ORDER BY total_energy_consumption DESC LIMIT 10;",
        "db_id": "air_conditioner"
    },
    {
        "id": 29,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature_setting_celsius', 'indoor_temperature_celsius', 'temperature difference', 'air conditioner models', 'record dates', 'top 5 records'], 'relations': ['ac_id_linking (energy_consumption.ac_id → air_conditioner_info.ac_id)', 'temperature_calculation (temperature_setting_celsius - indoor_temperature_celsius → temperature_difference)'], 'intent': 'retrieve_top_5_records_by_temperature_difference', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'temperature': '°C (Celsius)', 'difference_unit': '°C (derived from subtraction)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA mathematical logic question is as follows:\nQuery all temperature settings (temperature_setting_celsius) and indoor temperatures (indoor_temperature_celsius) from the energy consumption records, calculate the temperature difference (temperature setting - indoor temperature) for each air conditioner, sort them in descending order by the temperature difference, and list the top 5 records with the largest temperature differences along with their corresponding air conditioner models and record dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.usage_id, ai.model, ur.usage_date, ur.temperature_setting_celsius, ur.indoor_temperature_celsius, (ur.temperature_setting_celsius - ur.indoor_temperature_celsius) AS temperature_difference FROM usage_records ur JOIN air_conditioner_info ai ON ur.ac_id = ai.ac_id ORDER BY temperature_difference DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 30,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity_percent', 'operating mode (mode)', 'dehumidification mode', 'air conditioner model', 'recording date'], 'relations': ['humidity_to_mode_correlation (humidity_percent → mode)', 'record_to_ac (energy_consumption.ac_id → air_conditioner_info.ac_id)', \"exclusion_condition (mode ≠ 'dehumidification')\"], 'intent': 'retrieve_low_humidity_records_excluding_dehumidification_and_analyze', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5], 'units': {'humidity': 'percent (no conversion needed)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA common sense reasoning question is as follows:\nQuery all humidity (humidity_percent) and operating mode (mode) records in energy consumption data, filter out records running in dehumidification mode, sort them in ascending order by humidity from low to high, and list the top 5 records with the lowest humidity along with their corresponding air conditioner model and recording date. Additionally, analyze the relationship between humidity levels and operating modes in these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.usage_id, ai.model, ur.usage_date, ur.humidity_percent, ur.mode FROM usage_records ur JOIN air_conditioner_info ai ON ur.ac_id = ai.ac_id WHERE ur.mode = '除湿' ORDER BY ur.humidity_percent ASC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 31,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'power consumption (power_consumption_watts)', 'usage duration (usage_duration_hours)', 'outdoor temperature 60°C', 'indoor temperature 10°C', 'total energy consumption', 'air conditioner model', 'record date'], 'relations': ['ac_id_join (usage_records.ac_id → air_conditioner_info.ac_id)', 'temperature_condition (outdoor=60°C, indoor=10°C)', 'energy_calculation (power_consumption_watts * usage_duration_hours)'], 'intent': 'calculate_total_energy_consumption_per_record_and_list_top5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 10, 5], 'units': {'temperature': '°C (Celsius)', 'power': 'watts', 'duration': 'hours', 'energy': 'watt-hours (from product of power and duration)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'indoor_temperature_celsius'}, {'column': 'outdoor_temperature_celsius'}, {'column': 'usage_date'}, {'column': 'ac_id'}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner is operating under extreme conditions (outdoor temperature 60°C, indoor temperature 10°C), query the power consumption (power_consumption_watts) and usage duration (usage_duration_hours) from all energy consumption records, calculate the total energy consumption for each air conditioner (power consumption * usage duration), and sort them in descending order by total energy consumption. List the top 5 records with the highest total energy consumption along with their corresponding air conditioner models and record dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.usage_id, ai.model, ur.usage_date, ur.power_consumption_watts, ur.usage_duration_hours, (ur.power_consumption_watts * ur.usage_duration_hours) AS total_energy_consumption FROM usage_records ur JOIN air_conditioner_info ai ON ur.ac_id = ai.ac_id ORDER BY total_energy_consumption DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 32,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['indoor_temperature_celsius', 'outdoor_temperature_celsius', 'temperature_difference', 'air_conditioner_model', 'recording_date'], 'relations': ['record_belongs_to_ac (temperature_records.ac_id → air_conditioner_info.ac_id)', 'ac_has_model (air_conditioner_info.ac_id → model)'], 'intent': 'retrieve_top_10_temperature_difference_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'difference_unit': '°C (implicit from temperature subtraction)'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nRetrieve all indoor temperatures (indoor_temperature_celsius) and outdoor temperatures (outdoor_temperature_celsius) from the temperature records, calculate the temperature difference (outdoor temperature - indoor temperature) for each air conditioner, sort the results in descending order by the temperature difference, and list the top 10 records with the largest temperature differences along with their corresponding air conditioner models and recording dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT tr.temperature_id, ai.model, tr.record_date, tr.outdoor_temperature_celsius, tr.indoor_temperature_celsius, (tr.outdoor_temperature_celsius - tr.indoor_temperature_celsius) AS temperature_difference FROM temperature_records tr JOIN air_conditioner_info ai ON tr.ac_id = ai.ac_id ORDER BY temperature_difference DESC LIMIT 10;",
        "db_id": "air_conditioner"
    },
    {
        "id": 33,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature_records table', 'temperature_setting_celsius', 'indoor_temperature_celsius', 'temperature deviation (indoor_temperature_celsius - temperature_setting_celsius)', 'air_conditioner model', 'record_date'], 'relations': ['ac_id_foreign_key (temperature_records.ac_id → air_conditioner_info.ac_id)'], 'intent': 'retrieve_top_5_temperature_deviations', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'temperature': '°C (Celsius)', 'deviation': '°C (Celsius differential)'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA mathematical logic question is as follows:\nQuery all temperature settings (temperature_setting_celsius) and indoor temperatures (indoor_temperature_celsius) from temperature records, calculate the temperature deviation for each air conditioner (indoor temperature - temperature setting), and sort them in descending order based on the absolute value of the temperature deviation. List the top 5 records with the largest temperature deviations along with their corresponding air conditioner models and record dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT tr.temperature_id, ai.model, tr.record_date, tr.temperature_setting_celsius, tr.indoor_temperature_celsius, ABS(tr.indoor_temperature_celsius - tr.temperature_setting_celsius) AS temperature_deviation FROM temperature_records tr JOIN air_conditioner_info ai ON tr.ac_id = ai.ac_id ORDER BY temperature_deviation DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 34,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature_records', 'cooling mode', 'indoor temperature', 'air conditioner model', 'record date', 'top 5 records'], 'relations': [\"filter_by_mode (mode = 'cooling')\", 'sort_by_temperature (indoor_temperature_celsius ASC)', 'limit_records (top 5)', 'join_to_ac_info (temperature_records.ac_id = air_conditioner_info.ac_id)'], 'intent': 'retrieve_top_5_cooling_records_by_lowest_temperature_with_analysis', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5], 'units': {'temperature': 'Celsius', 'limit_count': 'records', 'date': 'date format'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA common sense reasoning question is as follows:\nQuery all running modes (mode) and indoor temperatures (indoor_temperature_celsius) from the temperature records, filter out the records running in cooling mode, and sort them in ascending order based on indoor temperature from lowest to highest. List the top 5 records with the lowest indoor temperatures along with their corresponding air conditioner models and record dates. Additionally, analyze the relationship between the indoor temperature and running mode in these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT tr.temperature_id, ai.model, tr.record_date, tr.mode, tr.indoor_temperature_celsius FROM temperature_records tr JOIN air_conditioner_info ai ON tr.ac_id = ai.ac_id WHERE tr.mode = '制冷' ORDER BY tr.indoor_temperature_celsius ASC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 35,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', 'temperature records', 'indoor temperature', 'outdoor temperature', 'extreme conditions (-30°C outdoor, 40°C indoor)', 'temperature difference', 'energy consumption'], 'relations': ['record_belongs_to_ac (temperature_records.ac_id → air_conditioner_info.ac_id)', 'ac_has_model (air_conditioner_info.ac_id → model)', 'temperature_diff_calculation (outdoor_temperature_celsius - indoor_temperature_celsius)', 'energy_estimation_under_extreme_conditions'], 'intent': 'retrieve_top_5_largest_temperature_differences_with_models_and_dates_and_estimate_energy_consumption_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning, ideal hypothesis reasoning', 'numerical_values': [-30, 40, 5], 'units': {'temperature': '°C (Celsius)', 'energy': 'kWh (kilowatt-hours)', 'power': 'watts', 'conversion': 'ΔT = outdoor_temperature_celsius - indoor_temperature_celsius', 'energy_estimation': 'Uses nominal power_consumption_watts from specifications'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner operates under extreme conditions (outdoor temperature -30°C, indoor temperature 40°C), query all indoor temperatures (indoor_temperature_celsius) and outdoor temperatures (outdoor_temperature_celsius) from the temperature records. Calculate the temperature difference (outdoor temperature - indoor temperature) for each air conditioner, sort them in descending order from highest to lowest, and list the top 5 records with the largest temperature differences along with their corresponding air conditioner models and record dates. Additionally, assuming these air conditioners operate under extreme conditions, estimate their theoretical energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TemperatureDifference AS ( SELECT tr.ac_id, tr.record_date, tr.indoor_temperature_celsius, tr.outdoor_temperature_celsius, (tr.outdoor_temperature_celsius - tr.indoor_temperature_celsius) AS temperature_difference, aci.model, aci.heating_capacity_btu FROM temperature_records tr JOIN air_conditioner_info aci ON tr.ac_id = aci.ac_id WHERE tr.outdoor_temperature_celsius = -30 AND tr.indoor_temperature_celsius = 40 ) SELECT td.ac_id, td.record_date, td.indoor_temperature_celsius, td.outdoor_temperature_celsius, td.temperature_difference, td.model, (td.heating_capacity_btu * (td.temperature_difference / 10) * ur.usage_duration_hours) AS estimated_energy_consumption FROM TemperatureDifference td JOIN usage_records ur ON td.ac_id = ur.ac_id AND td.record_date = ur.usage_date ORDER BY td.temperature_difference DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 36,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity records', 'indoor humidity percent', 'outdoor humidity percent', 'humidity difference', 'air conditioner model', 'record date'], 'relations': ['humidity_record_to_ac (humidity_records.ac_id → air_conditioner_info.ac_id)', 'humidity_difference_calculation (outdoor_humidity_percent - indoor_humidity_percent)'], 'intent': 'retrieve_top_10_humidity_differences_with_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'humidity': 'percent', 'difference_unit': 'percent (dimensionless)'}, 'foreign_keys': [{'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}], 'tableinfo': {'air_conditioner.humidity_records': [{'column': 'indoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'outdoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['70.0', '60.0', '75.0', '80.0', '65.0']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA physical knowledge question is as follows:\nQuery all humidity records for indoor humidity (indoor_humidity_percent) and outdoor humidity (outdoor_humidity_percent), calculate the indoor-outdoor humidity difference (outdoor humidity - indoor humidity) for each air conditioner, sort them in descending order by the humidity difference, and list the top 10 records with the largest humidity difference along with their corresponding air conditioner model and record date.\nyour response just have a SQL without anything.\n",
        "solution": "WITH HumidityDifference AS ( SELECT hr.ac_id, hr.record_date, hr.indoor_humidity_percent, hr.outdoor_humidity_percent, (hr.outdoor_humidity_percent - hr.indoor_humidity_percent) AS humidity_difference, aci.model FROM humidity_records hr JOIN air_conditioner_info aci ON hr.ac_id = aci.ac_id ) SELECT hd.ac_id, hd.record_date, hd.indoor_humidity_percent, hd.outdoor_humidity_percent, hd.humidity_difference, hd.model FROM HumidityDifference hd ORDER BY hd.humidity_difference DESC LIMIT 10; ",
        "db_id": "air_conditioner"
    },
    {
        "id": 37,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity records', 'temperature setting (temperature_setting_celsius)', 'indoor humidity (indoor_humidity_percent)', 'humidity deviation', 'air conditioner models', 'record dates', 'standard humidity (50%)'], 'relations': ['humidity_records_ac_id_to_air_conditioner_info (humidity_records.ac_id → air_conditioner_info.ac_id)', 'deviation_calculation (indoor_humidity_percent - 50%)'], 'intent': 'retrieve_top_5_records_by_humidity_deviation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'humidity': '% (percent)', 'deviation': '% (absolute difference)'}, 'foreign_keys': [{'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}], 'tableinfo': {'air_conditioner.humidity_records': [{'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'indoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA mathematical logic question is as follows:\nQuery all humidity records for the temperature setting (temperature_setting_celsius) and indoor humidity (indoor_humidity_percent), calculate the humidity deviation for each air conditioner (indoor humidity - standard humidity), where the standard humidity is 50%, then sort by the absolute value of the humidity deviation in descending order from highest to lowest, and list the top 5 records with the largest humidity deviation along with their corresponding air conditioner models and record dates.\nyour response just have a SQL without anything.\n",
        "solution": "WITH HumidityDeviation AS ( SELECT hr.ac_id, hr.record_date, hr.temperature_setting_celsius, hr.indoor_humidity_percent, (hr.indoor_humidity_percent - 50) AS humidity_deviation, aci.model FROM humidity_records hr JOIN air_conditioner_info aci ON hr.ac_id = aci.ac_id ) SELECT hd.ac_id, hd.record_date, hd.temperature_setting_celsius, hd.indoor_humidity_percent, hd.humidity_deviation, hd.model FROM HumidityDeviation hd ORDER BY ABS(hd.humidity_deviation) DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 38,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity records', 'operation mode (mode)', 'indoor humidity (indoor_humidity_percent)', 'dehumidification mode', 'air conditioner model', 'record date'], 'relations': ['record_has_mode (humidity record → operation mode)', 'record_has_humidity (humidity record → indoor humidity)', 'record_belongs_to_model (humidity record → air conditioner model via ac_id)'], 'intent': 'retrieve_lowest_humidity_records_excluding_dehumidification', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5], 'units': {'humidity': 'percent'}, 'foreign_keys': [{'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}], 'tableinfo': {'air_conditioner.humidity_records': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'indoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA common sense reasoning question is as follows:\nQuery all humidity records for operation mode (mode) and indoor humidity (indoor_humidity_percent), filter out records running in dehumidification mode, and sort them in ascending order by indoor humidity. List the top 5 records with the lowest indoor humidity along with their corresponding air conditioner model and record date. Additionally, analyze the relationship between the indoor humidity and operation mode in these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT hr.ac_id, hr.record_date, hr.mode, hr.indoor_humidity_percent, aci.model FROM humidity_records hr JOIN air_conditioner_info aci ON hr.ac_id = aci.ac_id WHERE hr.mode = '除湿' ORDER BY hr.indoor_humidity_percent ASC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 39,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', 'humidity records', 'indoor humidity', 'outdoor humidity', 'humidity difference (outdoor - indoor)', 'extreme operating conditions: outdoor 100% humidity, indoor 0% humidity'], 'relations': ['humidity_records contains humidity measurements per AC unit', 'air_conditioner_info defines specifications per model', 'calculated: humidity_difference = outdoor_humidity_percent - indoor_humidity_percent', 'extreme_condition_assumption → theoretical_energy_consumption'], 'intent': 'retrieve_top_5_humidity_difference_records_with_models_and_dates_plus_energy_estimate', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [100, 0, 5], 'units': {'humidity': 'percent (%)', 'energy': 'kilowatt-hours (kWh)', 'power': 'watts (W)', 'difference_unit': 'percentage points (outdoor-indoor)'}, 'foreign_keys': [{'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}], 'tableinfo': {'air_conditioner.humidity_records': [{'column': 'indoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'outdoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['70.0', '60.0', '75.0', '80.0', '65.0']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner is operating under extreme conditions (outdoor humidity at 100%, indoor humidity at 0%), query all humidity records for indoor humidity (indoor_humidity_percent) and outdoor humidity (outdoor_humidity_percent). Calculate the indoor-outdoor humidity difference (outdoor humidity - indoor humidity) for each air conditioner, and sort the results in descending order by the humidity difference, listing the top 5 records with the largest humidity differences, along with their corresponding air conditioner models and record dates. Additionally, assuming these air conditioners are running under extreme conditions, estimate their theoretical energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH HumidityDifference AS ( SELECT hr.ac_id, hr.record_date, hr.indoor_humidity_percent, hr.outdoor_humidity_percent, (hr.outdoor_humidity_percent - hr.indoor_humidity_percent) AS humidity_difference, aci.model, aci.power_consumption_watts FROM humidity_records hr JOIN air_conditioner_info aci ON hr.ac_id = aci.ac_id WHERE hr.outdoor_humidity_percent = 100 AND hr.indoor_humidity_percent = 0 ) SELECT hd.ac_id, hd.record_date, hd.indoor_humidity_percent, hd.outdoor_humidity_percent, hd.humidity_difference, hd.model, (hd.power_consumption_watts * (hd.humidity_difference / 50) * ur.usage_duration_hours) AS estimated_energy_consumption FROM HumidityDifference hd JOIN usage_records ur ON hd.ac_id = ur.ac_id AND hd.record_date = ur.usage_date ORDER BY hd.humidity_difference DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 40,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['power_consumption_watts', 'usage_duration_hours', 'total energy consumption', 'air conditioner models', 'usage dates', 'top 10 records'], 'relations': ['ac_id_foreign_key (usage_records.ac_id → air_conditioner_info.ac_id)', 'record_to_model (usage_records → air_conditioner_info via ac_id)', 'energy_calculation (power_consumption_watts * usage_duration_hours)'], 'intent': 'retrieve_top_10_highest_energy_consumption_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'power': 'watts (W)', 'time': 'hours (h)', 'energy': 'watt-hours (W·h)', 'conversion': 'energy = power × time (no unit conversion required)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'usage_date'}, {'column': 'ac_id'}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA physical knowledge question is as follows:\nRetrieve the power consumption (power_consumption_watts) and usage duration (usage_duration_hours) from all usage records, calculate the total energy consumption (power consumption * usage duration) for each air conditioner, sort them in descending order by total energy consumption, and list the top 10 records with the highest total energy consumption along with their corresponding air conditioner models and usage dates.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TotalEnergyConsumption AS ( SELECT ur.ac_id, ur.usage_date, ur.power_consumption_watts, ur.usage_duration_hours, (ur.power_consumption_watts * ur.usage_duration_hours) AS total_energy_consumption, aci.model FROM usage_records ur JOIN air_conditioner_info aci ON ur.ac_id = aci.ac_id ) SELECT tec.ac_id, tec.usage_date, tec.power_consumption_watts, tec.usage_duration_hours, tec.total_energy_consumption, tec.model FROM TotalEnergyConsumption tec ORDER BY tec.total_energy_consumption DESC LIMIT 10;",
        "db_id": "air_conditioner"
    },
    {
        "id": 41,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature_setting_celsius', 'indoor_temperature_celsius', 'temperature deviation (indoor_temperature_celsius - temperature_setting_celsius)', 'air conditioner models', 'usage dates'], 'relations': ['record_has_temperature_data (usage_records → temperature_setting_celsius, indoor_temperature_celsius)', 'ac_record_belongs_to_model (usage_records → air_conditioner_info via ac_id)'], 'intent': 'retrieve_top_5_largest_absolute_temperature_deviations', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'temperature': '°C (Celsius)', 'deviation': '°C (Celsius)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'temperature_setting_celsius'}, {'column': 'indoor_temperature_celsius'}, {'column': 'usage_date'}, {'column': 'ac_id'}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nQuery all temperature settings (temperature_setting_celsius) and indoor temperatures (indoor_temperature_celsius) from usage records, calculate the temperature deviation (indoor temperature - temperature setting) for each air conditioner, sort them in descending order by the absolute value of the temperature deviation, and list the top 5 records with the largest temperature deviations along with their corresponding air conditioner models and usage dates.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TemperatureDeviation AS ( SELECT ur.ac_id, ur.usage_date, ur.temperature_setting_celsius, ur.indoor_temperature_celsius, (ur.indoor_temperature_celsius - ur.temperature_setting_celsius) AS temperature_deviation, aci.model FROM usage_records ur JOIN air_conditioner_info aci ON ur.ac_id = aci.ac_id ) SELECT td.ac_id, td.usage_date, td.temperature_setting_celsius, td.indoor_temperature_celsius, td.temperature_deviation, td.model FROM TemperatureDeviation td ORDER BY ABS(td.temperature_deviation) DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 42,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'cooling mode', 'air conditioner model', 'usage date', 'usage duration'], 'relations': ['record_to_ac_model (usage_records.ac_id → air_conditioner_info.ac_id)', 'mode_duration_relationship (operation mode and usage duration in cooling records)'], 'intent': 'retrieve_top5_longest_cooling_usage_records_with_model_date_and_analyze_duration_mode_relation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'usage_duration': 'hours'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'mode'}, {'column': 'usage_duration_hours'}, {'column': 'usage_date'}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}]}}\nA common sense reasoning question is as follows:\nRetrieve the operation mode (mode) and usage duration (usage_duration_hours) from all usage records, filter out the records running in cooling mode, and sort them in descending order by usage duration. List the top 5 records with the longest usage duration along with their corresponding air conditioner model and usage date. Additionally, analyze the relationship between the usage duration and operation mode in these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.ac_id, ur.usage_date, ur.mode, ur.usage_duration_hours, aci.model FROM usage_records ur JOIN air_conditioner_info aci ON ur.ac_id = aci.ac_id WHERE ur.mode = '制冷' ORDER BY ur.usage_duration_hours DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 43,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner usage records', 'extreme conditions (outdoor 60°C, indoor 10°C)', 'power consumption', 'usage duration', 'total energy consumption', 'air conditioner models', 'usage dates'], 'relations': ['ac_id_link (usage_records.ac_id → air_conditioner_info.ac_id)', 'energy_calculation (power_consumption_watts × usage_duration_hours → total_energy)', 'theoretical_estimation (rated_power × duration → theoretical_energy)'], 'intent': 'retrieve_top_5_high_energy_records_with_theoretical_estimate_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [60, 10], 'units': {'temperature': '°C', 'power': 'watts', 'duration': 'hours', 'energy': 'watt-hours (derived)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'usage_date'}, {'column': 'ac_id'}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'power_consumption_watts (for theoretical estimation)'}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner is operating under extreme conditions (outdoor temperature 60°C, indoor temperature 10°C), query the power consumption (power_consumption_watts) and usage duration (usage_duration_hours) from all usage records, calculate the total energy consumption (power consumption * usage duration) for each air conditioner, and sort them in descending order based on total energy consumption. List the top 5 records with the highest total energy consumption, along with their corresponding air conditioner models and usage dates. Additionally, estimate their theoretical energy consumption under the assumption that these air conditioners are operating under extreme conditions.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TotalEnergyConsumption AS ( SELECT ur.ac_id, ur.usage_date, ur.power_consumption_watts, ur.usage_duration_hours, (ur.power_consumption_watts * ur.usage_duration_hours) AS total_energy_consumption, aci.model, aci.cooling_capacity_btu FROM usage_records ur JOIN air_conditioner_info aci ON ur.ac_id = aci.ac_id WHERE ur.outdoor_temperature_celsius = 60 AND ur.indoor_temperature_celsius = 10 ) SELECT tec.ac_id, tec.usage_date, tec.power_consumption_watts, tec.usage_duration_hours, tec.total_energy_consumption, tec.model, (tec.cooling_capacity_btu * ((60 - 10) / 10) * tec.usage_duration_hours) AS estimated_energy_consumption FROM TotalEnergyConsumption tec ORDER BY tec.total_energy_consumption DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 44,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', 'cooling capacity (cooling_capacity_btu)', 'power consumption (power_consumption_watts)', 'cooling efficiency', 'manufacturer', 'average cooling efficiency'], 'relations': ['manufacturer_to_models (manufacturer → specific air conditioner models)', 'specification_relation (cooling_capacity_btu and power_consumption_watts → cooling efficiency)'], 'intent': 'compute_and_rank_manufacturers_by_average_cooling_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'cooling_capacity': 'BTU (British Thermal Units)', 'power_consumption': 'watts', 'efficiency': 'BTU per watt (implied by cooling_capacity_btu/power_consumption_watts)', 'conversion': 'efficiency = cooling_capacity_btu ÷ power_consumption_watts'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Daikin', 'Mitsubishi', 'LG', 'Samsung', 'Panasonic']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA physical knowledge question is as follows:\nQuery the cooling capacity (cooling_capacity_btu) and power consumption (power_consumption_watts) of all air conditioners. Calculate the cooling efficiency (cooling capacity/power consumption) for each air conditioner, group them by manufacturer, and compute the average cooling efficiency for each manufacturer. List the top 5 manufacturers with the highest average cooling efficiency along with their corresponding average cooling efficiency values.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CoolingEfficiency AS ( SELECT manufacturer, (cooling_capacity_btu / power_consumption_watts) AS cooling_efficiency FROM air_conditioner_info ) SELECT manufacturer, AVG(cooling_efficiency) AS average_cooling_efficiency FROM CoolingEfficiency GROUP BY manufacturer ORDER BY average_cooling_efficiency DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 45,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['production_year', 'energy_efficiency_ratio'], 'relations': ['group_by(production_year → avg(energy_efficiency_ratio))', 'ranking(top 3 years by efficiency)'], 'intent': 'retrieve_top_efficient_production_years', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'energy_efficiency_ratio': 'unitless (implied by database schema)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'production_year', 'type': 'YEAR', 'primary_key': False, 'comment': '', 'examples': ['2022', '2021', '2023']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}]}}\nA mathematical logic question is as follows:\nQuery the production year (production_year) and energy efficiency ratio (energy_efficiency_ratio) of all air conditioners, group them by production year, and calculate the average energy efficiency ratio for each production year. List the top 3 production years with the highest average energy efficiency ratio and their corresponding average energy efficiency ratio values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT production_year, AVG(energy_efficiency_ratio) AS average_energy_efficiency_ratio FROM air_conditioner_info GROUP BY production_year ORDER BY average_energy_efficiency_ratio DESC LIMIT 3;",
        "db_id": "air_conditioner"
    },
    {
        "id": 46,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'noise_level_db', 'weight_kg', 'air conditioners'], 'relations': ['manufacturer_produces_air_conditioners', 'air_conditioner_has_noise_level', 'air_conditioner_has_weight'], 'intent': 'calculate_manufacturer_avg_metrics_and_rank_top3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'noise': 'dB (decibels)', 'weight': 'kg (kilograms)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA common sense reasoning question is as follows:\nRetrieve the noise level (noise_level_db) and weight (weight_kg) of all air conditioners, group them by manufacturer (manufacturer), calculate the average noise level and average weight for each manufacturer. List the top 3 manufacturers with the lowest average noise level and lightest average weight, along with their corresponding average noise level and average weight.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ManufacturerStats AS ( SELECT manufacturer, AVG(noise_level_db) AS average_noise_level, AVG(weight_kg) AS average_weight FROM air_conditioner_info GROUP BY manufacturer ) SELECT manufacturer, average_noise_level, average_weight FROM ManufacturerStats ORDER BY average_noise_level ASC, average_weight ASC LIMIT 3;",
        "db_id": "air_conditioner"
    },
    {
        "id": 47,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', 'cooling capacity', 'power consumption', 'refrigerant type', 'average cooling capacity', 'average power consumption'], 'relations': ['filter_by_capacity (cooling_capacity_btu > 20,000)', 'filter_by_power (power_consumption_watts < 1,000)', 'group_by_refrigerant (refrigerant_type → aggregates)', 'aggregate_cooling (AVG(cooling_capacity_btu))', 'aggregate_power (AVG(power_consumption_watts))', 'rank_refrigerants (DESC avg_cooling + ASC avg_power)'], 'intent': 'retrieve_top_refrigerant_types_by_average_performance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000, 1000, 2], 'units': {'cooling_capacity': 'BTU (British Thermal Units)', 'power_consumption': 'watts (W)', 'aggregation_unit': 'BTU (average cooling), watts (average power)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner's cooling capacity (cooling_capacity_btu) exceeds 20,000 BTU and power consumption (power_consumption_watts) is below 1,000W, query all air conditioners' cooling capacity and power consumption, grouped by refrigerant type (refrigerant_type), and calculate the average cooling capacity and average power consumption for each refrigerant type. List the top 2 refrigerant types with the highest average cooling capacity and the lowest average power consumption, along with their corresponding average cooling capacity and average power consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH RefrigerantStats AS ( SELECT refrigerant_type, AVG(cooling_capacity_btu) AS average_cooling_capacity, AVG(power_consumption_watts) AS average_power_consumption FROM air_conditioner_info WHERE cooling_capacity_btu > 20000 AND power_consumption_watts < 1000 GROUP BY refrigerant_type ) SELECT refrigerant_type, average_cooling_capacity, average_power_consumption FROM RefrigerantStats ORDER BY average_cooling_capacity DESC, average_power_consumption ASC LIMIT 2;",
        "db_id": "air_conditioner"
    },
    {
        "id": 48,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['power_consumption_watts', 'usage_duration_hours', 'air conditioner models', 'total energy consumption', 'average total energy consumption'], 'relations': ['record_to_ac (usage_records → air_conditioner_info via ac_id)', 'calculation_relation (power_consumption_watts * usage_duration_hours → total_energy_consumption)', 'grouping_relation (records → grouped by model)'], 'intent': 'calculate_top_5_models_by_average_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'power': 'watts (W)', 'runtime': 'hours (h)', 'energy': 'watt-hours (Wh) [implicit from calculation]', 'conversion': 'energy = power × time (no unit conversion required)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'ac_id'}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nQuery all power consumption (power_consumption_watts) and runtime (usage_duration_hours) records from the energy consumption data. Calculate the total energy consumption (power consumption * runtime) for each air conditioner, group them by model, and compute the average total energy consumption per model. List the top 5 air conditioner models with the highest average total energy consumption along with their corresponding average values.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TotalEnergyConsumption AS ( SELECT aci.model, (ur.power_consumption_watts * ur.usage_duration_hours) AS total_energy_consumption FROM usage_records ur JOIN air_conditioner_info aci ON ur.ac_id = aci.ac_id ) SELECT model, AVG(total_energy_consumption) AS average_total_energy_consumption FROM TotalEnergyConsumption GROUP BY model ORDER BY average_total_energy_consumption DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 49,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature settings (temperature_setting_celsius)', 'indoor temperatures (indoor_temperature_celsius)', 'temperature deviation (indoor_temperature_celsius - temperature_setting_celsius)', 'record date (usage_date)', 'average temperature deviation', 'top 3 days'], 'relations': ['deviation_calculation (indoor_temperature_celsius - temperature_setting_celsius)', 'grouping_aggregation (by record_date → average deviation)', 'ranking_relation (top 3 average deviations)'], 'intent': 'calculate_and_rank_daily_average_temperature_deviations', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'temperature': '°C (Celsius)', 'deviation': '°C (Celsius differential)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}]}}\nA mathematical logic question is as follows:\nQuery all temperature settings (temperature_setting_celsius) and indoor temperatures (indoor_temperature_celsius) from energy consumption records. Calculate the temperature deviation for each air conditioner (indoor temperature - temperature setting), group by the record date (usage_date), and compute the average temperature deviation for each day. List the top 3 days with the highest average temperature deviations and their corresponding average temperature deviation values.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TemperatureDeviation AS ( SELECT usage_date, (indoor_temperature_celsius - temperature_setting_celsius) AS temperature_deviation FROM usage_records ) SELECT usage_date, AVG(temperature_deviation) AS average_temperature_deviation FROM TemperatureDeviation GROUP BY usage_date ORDER BY average_temperature_deviation DESC LIMIT 3;",
        "db_id": "air_conditioner"
    },
    {
        "id": 50,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['operating modes', 'energy consumption records', 'average energy consumption', 'highest average energy consumption'], 'relations': ['mode_grouping (group records by operating mode)', 'energy_aggregation (calculate average energy_consumption_kwh per mode)', 'max_aggregation (identify maximum average value)'], 'intent': 'identify_mode_with_max_avg_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (as per column definition)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}]}}\nA common sense reasoning question is as follows:\nQuery all operating modes (mode) and energy consumption (energy_consumption_kwh) records in the energy consumption data, group them by operating mode, and calculate the average energy consumption for each mode. List the operating mode with the highest average energy consumption and its corresponding average energy consumption value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT mode, AVG(energy_consumption_kwh) AS average_energy_consumption FROM energy_consumption GROUP BY mode ORDER BY average_energy_consumption DESC LIMIT 1;",
        "db_id": "air_conditioner"
    },
    {
        "id": 51,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'extreme conditions (outdoor temperature 60°C, indoor temperature 10°C)', 'power_consumption_watts', 'runtime (usage_duration_hours)', 'total energy consumption'], 'relations': ['model_to_usage (air_conditioner_info.model → usage_records)', 'condition_filter (extreme temps filter usage_records)', 'energy_calculation (power_consumption_watts * usage_duration_hours)'], 'intent': 'retrieve_top_3_models_by_avg_energy_under_extreme_conditions_and_estimate_theoretical', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [60, 10], 'units': {'temperature': '°C (Celsius)', 'power': 'watts', 'time': 'hours', 'energy': 'watt-hours (implied by calculation)', 'conversion': 'total_energy = power_consumption_watts × usage_duration_hours'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}], 'air_conditioner.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'indoor_temperature_celsius'}, {'column': 'outdoor_temperature_celsius'}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner operates under extreme conditions (outdoor temperature 60°C, indoor temperature 10°C), query the power consumption (power_consumption_watts) and runtime (usage_duration_hours) from all energy consumption records, calculate the total energy consumption (power consumption * runtime) for each air conditioner, and group by air conditioner models (model), then compute the average total energy consumption for each model. List the top 3 air conditioner models with the highest average total energy consumption and their corresponding average total energy consumption values. Additionally, estimating their theoretical energy consumption under the assumption that these air conditioners operate under extreme conditions.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TotalEnergyConsumption AS ( SELECT aci.model, (ur.power_consumption_watts * ur.usage_duration_hours) AS total_energy_consumption, aci.cooling_capacity_btu, ur.usage_duration_hours FROM usage_records ur JOIN air_conditioner_info aci ON ur.ac_id = aci.ac_id WHERE ur.outdoor_temperature_celsius = 60 AND ur.indoor_temperature_celsius = 10 ) SELECT model, AVG(total_energy_consumption) AS average_total_energy_consumption, AVG(cooling_capacity_btu * ((60 - 10) / 10) * usage_duration_hours) AS estimated_energy_consumption FROM TotalEnergyConsumption GROUP BY model ORDER BY average_total_energy_consumption DESC LIMIT 3;",
        "db_id": "air_conditioner"
    },
    {
        "id": 52,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['indoor_temperature_celsius', 'outdoor_temperature_celsius', 'air conditioner model', 'temperature difference', 'average temperature difference'], 'relations': ['model_grouping (group records by air conditioner model)', 'temperature_calculation (outdoor - indoor temperature difference)', 'aggregation (average per model)'], 'intent': 'list_top_5_models_by_highest_average_temperature_difference', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'temperature': 'Celsius', 'temperature_difference': 'Celsius (derived unit)', 'conversion': 'ΔT = (outdoor_temperature_celsius - indoor_temperature_celsius)'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nQuery all indoor temperature (indoor_temperature_celsius) and outdoor temperature (outdoor_temperature_celsius) records from the temperature logs, calculate the temperature difference between indoor and outdoor (outdoor temperature - indoor temperature) for each air conditioner, group by air conditioner model (model), and compute the average temperature difference for each model. List the top 5 air conditioner models with the highest average temperature difference along with their corresponding average temperature difference values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT aci.model, AVG(tr.outdoor_temperature_celsius - tr.indoor_temperature_celsius) AS avg_temperature_difference FROM temperature_records tr JOIN air_conditioner_info aci ON tr.ac_id = aci.ac_id GROUP BY aci.model ORDER BY avg_temperature_difference DESC LIMIT 5;",
        "db_id": "air_conditioner"
    },
    {
        "id": 53,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature records', 'temperature_setting_celsius', 'indoor_temperature_celsius', 'record_date', 'temperature deviation', 'average deviation'], 'relations': ['deviation_calculation (indoor_temperature_celsius - temperature_setting_celsius)', 'grouping_by (record_date)', 'aggregation (average temperature deviation per day)', 'ranking (top 3 days by average deviation)'], 'intent': 'calculate_daily_average_temperature_deviation_and_retrieve_top3_days', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'temperature': '°C (Celsius)', 'deviation': '°C (Celsius)', 'conversion': 'deviation = indoor_temperature_celsius - temperature_setting_celsius'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}]}}\nA mathematical logic question is as follows:\nQuery all temperature records for the temperature setting (temperature_setting_celsius) and indoor temperature (indoor_temperature_celsius), calculate the temperature deviation for each air conditioner (indoor temperature - temperature setting), group by the record date (record_date), and compute the average temperature deviation for each day. List the top 3 days with the highest average temperature deviation and their corresponding average deviation values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT tr.record_date, AVG(tr.indoor_temperature_celsius - tr.temperature_setting_celsius) AS avg_temperature_deviation FROM temperature_records tr GROUP BY tr.record_date ORDER BY avg_temperature_deviation DESC LIMIT 3;",
        "db_id": "air_conditioner"
    },
    {
        "id": 54,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['operating mode (mode)', 'indoor temperature (indoor_temperature_celsius)', 'temperature records'], 'relations': ['grouping_by_attribute (mode → records)', 'aggregation (mode → AVG(indoor_temperature_celsius))', 'minimization (MIN(average_temperature))'], 'intent': 'retrieve_lowest_average_temperature_by_mode', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius) from indoor_temperature_celsius field'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}]}}\nA common sense reasoning question is as follows:\nRetrieve the operating mode (mode) and indoor temperature (indoor_temperature_celsius) from all temperature records, group them by operating mode, and calculate the average indoor temperature for each operating mode. List the operating mode with the lowest average indoor temperature along with its corresponding average temperature value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT tr.mode, AVG(tr.indoor_temperature_celsius) AS avg_indoor_temperature FROM temperature_records tr GROUP BY tr.mode ORDER BY avg_indoor_temperature ASC LIMIT 1;",
        "db_id": "air_conditioner"
    },
    {
        "id": 55,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'recorded indoor temperatures', 'recorded outdoor temperatures', 'temperature difference (outdoor - indoor)', 'average temperature difference', 'top 3 models', 'theoretical energy consumption under extreme conditions'], 'relations': ['model_to_records (via ac_id to access temperature logs)', 'record_to_difference (outdoor_temperature_celsius - indoor_temperature_celsius)', 'model_to_avg_difference (group by model for average calculation)', 'model_to_energy (linking models to theoretical consumption)'], 'intent': 'retrieve_temperature_records_calculate_difference_group_by_model_find_top3_and_estimate_energy', 'reasoning_type': 'mathematical logic reasoning and physical knowledge reasoning', 'numerical_values': [-30, 40], 'units': {'temperature': '°C (Celsius)', 'temperature_difference': 'Δ°C (delta Celsius)', 'energy': 'watts or kWh (from power_consumption_watts)', 'extreme_conditions': 'outdoor: -30°C, indoor: 40°C'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}], 'air_conditioner.air_conditioner_info': [{'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner operates under extreme conditions (outdoor temperature -30°C, indoor temperature 40°C), query all recorded indoor temperatures (indoor_temperature_celsius) and outdoor temperatures (outdoor_temperature_celsius) in the temperature logs. Calculate the temperature difference between indoor and outdoor (outdoor temperature - indoor temperature) for each air conditioner, group them by model, and compute the average temperature difference for each model. List the top 3 air conditioner models with the highest average temperature differences along with their corresponding average temperature difference values. Additionally, assuming these air conditioners operate under extreme conditions, estimate their theoretical energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ExtremeCondition AS (SELECT 'extreme' AS condition_type, -30 AS outdoor_temp, 40 AS indoor_temp), AverageTempDifference AS (SELECT aci.model, AVG(tr.outdoor_temperature_celsius - tr.indoor_temperature_celsius) AS avg_temperature_difference FROM temperature_records tr JOIN air_conditioner_info aci ON tr.ac_id = aci.ac_id GROUP BY aci.model) SELECT atd.model, atd.avg_temperature_difference, (aci.heating_capacity_btu * (70 / 10) * 1) AS estimated_energy_consumption FROM AverageTempDifference atd JOIN air_conditioner_info aci ON atd.model = aci.model CROSS JOIN ExtremeCondition ec ORDER BY atd.avg_temperature_difference DESC LIMIT 3;",
        "db_id": "air_conditioner"
    },
    {
        "id": 56,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', 'dehumidification mode', 'specific humidity conditions', 'energy consumption', 'humidity intervals'], 'relations': ['operation_in_mode (air conditioners → dehumidification mode)', 'consumption_under_condition (energy consumption → specific humidity conditions)', 'grouping_by_interval (energy consumption → humidity intervals)'], 'intent': 'calculate_energy_consumption_grouped_by_humidity_intervals_in_dehumidification_mode', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [], 'units': {'humidity': 'percent (from humidity_percent fields)', 'energy': 'kWh (from energy_consumption_kwh field)', 'unit_handling': 'humidity intervals require binning of percent values; energy aggregation uses summation'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}]}}\nA physical knowledge question is as follows:\nCalculate the energy consumption of air conditioners in dehumidification mode under specific humidity conditions, grouped by humidity intervals.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN hr.indoor_humidity_percent BETWEEN 0 AND 30 THEN '0-30%' WHEN hr.indoor_humidity_percent BETWEEN 30 AND 60 THEN '30-60%' ELSE '60-100%' END AS humidity_range, SUM(ec.energy_consumption_kwh) AS total_energy_consumption FROM humidity_records hr JOIN energy_consumption ec ON hr.ac_id = ec.ac_id AND hr.record_date = ec.record_date WHERE hr.mode = '除湿' GROUP BY humidity_range;",
        "db_id": "air_conditioner"
    },
    {
        "id": 57,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', 'cooling mode', 'humidity conditions', 'temperature settings', 'energy consumption'], 'relations': ['mode_filter (air_conditioners → cooling_mode_only)', 'grouping_by (humidity_percent → grouped_intervals)', 'grouping_by (temperature_setting_celsius → distinct_values)', 'energy_aggregation (sum energy_consumption_kwh)'], 'intent': 'calculate_total_energy_consumption_by_environmental_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'humidity': 'percent (%)', 'temperature': 'Celsius (°C)', 'energy': 'kWh (kilowatt-hours)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of air conditioners in cooling mode under different humidity conditions, grouping by humidity intervals and temperature settings.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN hr.indoor_humidity_percent BETWEEN 0 AND 30 THEN '0-30%' WHEN hr.indoor_humidity_percent BETWEEN 30 AND 60 THEN '30-60%' ELSE '60-100%' END AS humidity_range, ec.temperature_setting_celsius, SUM(ec.energy_consumption_kwh) AS total_energy_consumption FROM humidity_records hr JOIN energy_consumption ec ON hr.ac_id = ec.ac_id AND hr.record_date = ec.record_date WHERE ec.mode = '制冷' GROUP BY humidity_range, ec.temperature_setting_celsius;",
        "db_id": "air_conditioner"
    },
    {
        "id": 58,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy consumption', 'air conditioning', 'high-temperature environment', 'high-humidity environment', 'humidity range', 'mode'], 'relations': ['environmental_impact (temperature/humidity → energy consumption)', 'grouping_analysis (humidity_range and mode → energy_consumption)'], 'intent': 'analyze_energy_consumption_variation_under_environmental_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'humidity': '% (percent)', 'energy': 'kWh (kilowatt-hours)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}]}}\nA common sense reasoning question is as follows:\nAnalyze whether the energy consumption of air conditioning increases in high-temperature and high-humidity environments, and group by humidity range and mode.\nyour response just have a SQL without anything.\n",
        "solution": "WITH NormalEnvironment AS (SELECT CASE WHEN tr.humidity_percent BETWEEN 0 AND 30 THEN '0-30%' WHEN tr.humidity_percent BETWEEN 30 AND 60 THEN '30-60%' ELSE '60-100%' END AS humidity_range, tr.mode, AVG(ec.energy_consumption_kwh) AS normal_energy_consumption FROM temperature_records tr JOIN energy_consumption ec ON tr.ac_id = ec.ac_id AND tr.record_date = ec.record_date WHERE tr.indoor_temperature_celsius <= 30 AND tr.humidity_percent <= 60 GROUP BY humidity_range, tr.mode), HighTempHighHumidity AS (SELECT CASE WHEN tr.humidity_percent BETWEEN 0 AND 30 THEN '0-30%' WHEN tr.humidity_percent BETWEEN 30 AND 60 THEN '30-60%' ELSE '60-100%' END AS humidity_range, tr.mode, AVG(ec.energy_consumption_kwh) AS high_energy_consumption FROM temperature_records tr JOIN energy_consumption ec ON tr.ac_id = ec.ac_id AND tr.record_date = ec.record_date WHERE tr.indoor_temperature_celsius > 30 AND tr.humidity_percent > 60 GROUP BY humidity_range, tr.mode) SELECT ne.humidity_range, ne.mode, ne.normal_energy_consumption, hthh.high_energy_consumption, ((hthh.high_energy_consumption - ne.normal_energy_consumption) / ne.normal_energy_consumption) * 100 AS energy_increase_percentage FROM NormalEnvironment ne JOIN HighTempHighHumidity hthh ON ne.humidity_range = hthh.humidity_range AND ne.mode = hthh.mode;",
        "db_id": "air_conditioner"
    },
    {
        "id": 59,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', '200% humidity', 'energy consumption', 'humidity range', 'wind speed (fan_speed)'], 'relations': ['operating_condition (air conditioner → 200% humidity environment)', 'performance_metric (air conditioner → energy consumption)', 'grouping_dimension (energy consumption → humidity range and wind speed)'], 'intent': 'calculate_aggregate_energy_consumption_under_extreme_humidity_grouped_by_environmental_conditions', 'reasoning_type': 'physical knowledge reasoning, ideal hypothesis reasoning', 'numerical_values': [200], 'units': {'humidity': '% (percent)', 'energy': 'kWh (kilowatt-hours)', 'wind_speed': 'categorical units (low/medium/high or RPM as per fan_speed data)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'fan_speed', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['High', 'Medium', 'Low']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the air conditioner operates in an environment with 200% humidity, calculate its energy consumption and group it by humidity range and wind speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN hr.indoor_humidity_percent BETWEEN 0 AND 30 THEN '0-30%' WHEN hr.indoor_humidity_percent BETWEEN 30 AND 60 THEN '30-60%' ELSE '60-100%' END AS humidity_range, ec.fan_speed, SUM(ec.energy_consumption_kwh * 2.0) AS estimated_energy_consumption FROM humidity_records hr JOIN energy_consumption ec ON hr.ac_id = ec.ac_id AND hr.record_date = ec.record_date WHERE hr.indoor_humidity_percent = 200 GROUP BY humidity_range, ec.fan_speed;",
        "db_id": "air_conditioner"
    },
    {
        "id": 60,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy consumption', 'temperature settings', 'usage mode', 'air conditioners'], 'relations': ['aggregation (sum energy_consumption_kwh grouped by temperature_setting_celsius and mode)', 'recorded_in (energy data stored in energy_consumption table)'], 'intent': 'calculate_total_energy_consumption_grouped_by_temperature_and_mode', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'energy': 'kWh (kilowatt-hours)', 'temperature': '°C (Celsius)', 'aggregation_unit': 'total sum'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of air conditioners under different temperature settings, grouped by temperature setting and usage mode.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.temperature_setting_celsius, ec.mode, SUM(ec.energy_consumption_kwh) AS total_energy_consumption FROM energy_consumption ec GROUP BY ec.temperature_setting_celsius, ec.mode ORDER BY ec.temperature_setting_celsius, ec.mode;",
        "db_id": "air_conditioner"
    },
    {
        "id": 61,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage duration', 'fan_speed', 'humidity_percent'], 'relations': ['duration_by_fan_speed (usage_duration_hours grouped by fan_speed)', 'duration_by_humidity (usage_duration_hours grouped by humidity_percent intervals)'], 'intent': 'calculate_total_usage_duration_grouped_by_fan_speed_and_humidity_intervals', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'usage_duration': 'hours', 'humidity': 'percent', 'fan_speed': 'categorical/numeric levels (exact unit unspecified)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'fan_speed'}, {'column': 'humidity_percent'}, {'column': 'usage_duration_hours'}]}}\nA mathematical logic question is as follows:\nCalculate the total usage duration of air conditioners at different wind speeds, grouped by wind speed and humidity intervals.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.fan_speed, CASE WHEN hr.indoor_humidity_percent BETWEEN 0 AND 30 THEN '0-30%' WHEN hr.indoor_humidity_percent BETWEEN 30 AND 60 THEN '30-60%' ELSE '60-100%' END AS humidity_range, SUM(ur.usage_duration_hours) AS total_usage_duration FROM usage_records ur JOIN humidity_records hr ON ur.ac_id = hr.ac_id AND ur.usage_date = hr.record_date GROUP BY ur.fan_speed, humidity_range ORDER BY ur.fan_speed, humidity_range;",
        "db_id": "air_conditioner"
    },
    {
        "id": 62,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage duration', 'outdoor temperatures', 'modes', 'outdoor temperature ranges'], 'relations': ['duration_vs_temperature (usage_duration_hours ← outdoor_temperature_celsius)', 'grouping_by (temperature_range → mode → aggregated_duration)'], 'intent': 'analyze_usage_duration_by_temperature_range_and_mode', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'usage_duration': 'hours (usage_records.usage_duration_hours)', 'temperature': 'Celsius (usage_records.outdoor_temperature_celsius)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'usage_duration_hours'}, {'column': 'outdoor_temperature_celsius'}, {'column': 'mode'}]}}\nA common sense reasoning question is as follows:\nAnalyze the usage duration of air conditioning under different outdoor temperatures, and group by outdoor temperature ranges and modes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN tr.outdoor_temperature_celsius < 10 THEN '<10°C' WHEN tr.outdoor_temperature_celsius BETWEEN 10 AND 25 THEN '10-25°C' ELSE '>25°C' END AS outdoor_temperature_range, ur.mode, SUM(ur.usage_duration_hours) AS total_usage_duration FROM usage_records ur JOIN temperature_records tr ON ur.ac_id = tr.ac_id AND ur.usage_date = tr.record_date GROUP BY outdoor_temperature_range, ur.mode ORDER BY outdoor_temperature_range, ur.mode;",
        "db_id": "air_conditioner"
    },
    {
        "id": 63,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner operation', 'outdoor temperature 60°C', 'wind speed (fan_speed)', 'humidity range'], 'relations': ['operation_to_usage (air conditioner operation → usage_records)', 'temperature_filter (outdoor_temperature_celsius = 60°C)', 'grouping_by_fan_speed', 'grouping_by_humidity_range'], 'intent': 'calculate_total_usage_duration_grouped_by_fan_speed_and_humidity_range', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60], 'units': {'temperature': '°C (Celsius)', 'humidity': 'percent', 'duration': 'hours'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'fan_speed'}, {'column': 'humidity_percent'}, {'column': 'usage_duration_hours'}, {'column': 'outdoor_temperature_celsius'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the air conditioner is operating in an outdoor temperature of 60°C, calculate its total usage duration grouped by wind speed and humidity range.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.fan_speed, CASE WHEN hr.indoor_humidity_percent BETWEEN 0 AND 30 THEN '0-30%' WHEN hr.indoor_humidity_percent BETWEEN 30 AND 60 THEN '30-60%' ELSE '60-100%' END AS humidity_range, SUM(ur.usage_duration_hours) AS total_usage_duration FROM usage_records ur JOIN humidity_records hr ON ur.ac_id = hr.ac_id AND ur.usage_date = hr.record_date JOIN temperature_records tr ON ur.ac_id = tr.ac_id AND ur.usage_date = tr.record_date WHERE tr.outdoor_temperature_celsius = 60 GROUP BY ur.fan_speed, humidity_range ORDER BY ur.fan_speed, humidity_range;",
        "db_id": "air_conditioner"
    },
    {
        "id": 64,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioning models', 'cooling capacity (10,000 BTU)', 'energy efficiency ratio (below 10)', 'manufactured before 2010'], 'relations': ['attribute_of (cooling_capacity → air_conditioner_info)', 'attribute_of (energy_efficiency_ratio → air_conditioner_info)', 'attribute_of (production_year → air_conditioner_info)'], 'intent': 'filter_air_conditioner_models_by_specifications_and_production_year', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 10, 2010], 'units': {'cooling_capacity': 'BTU (British Thermal Units)', 'energy_efficiency_ratio': 'unitless (dimensionless ratio)', 'production_year': 'year (Gregorian calendar)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}, {'column': 'production_year', 'type': 'YEAR', 'primary_key': False, 'comment': '', 'examples': ['2022', '2021', '2023']}]}}\nA physical knowledge question is as follows:\nFind air conditioning models with a cooling capacity greater than 10,000 BTU but an energy efficiency ratio below 10, and exclude those manufactured before 2010.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model FROM air_conditioner_info WHERE cooling_capacity_btu > 10000 AND energy_efficiency_ratio < 10 AND production_year >= 2010;",
        "db_id": "air_conditioner"
    },
    {
        "id": 65,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'heating capacity > 12,000 BTU', 'noise level < 50 decibels', 'warranty period >= 24 months'], 'relations': ['model_has_heating_capacity', 'model_has_noise_level', 'model_has_warranty_period'], 'intent': 'filter_air_conditioner_models_by_specifications', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [12000, 50, 24], 'units': {'heating_capacity': 'BTU (British Thermal Units)', 'noise_level': 'decibels (dB)', 'warranty_period': 'months'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'heating_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['13000', '10000', '15000', '12000', '11000']}, {'column': 'noise_level_db', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['19.0', '20.0', '21.0', '18.5', '20.5']}, {'column': 'warranty_period_months', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['60', '72']}]}}\nA mathematical logic question is as follows:\nFind air conditioner models with heating capacity greater than 12,000 BTU and noise level below 50 decibels, excluding those with warranty periods of less than 24 months.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model FROM air_conditioner_info WHERE heating_capacity_btu > 12000 AND noise_level_db < 50 AND model NOT IN (SELECT model FROM air_conditioner_info WHERE warranty_period_months < 24);",
        "db_id": "air_conditioner"
    },
    {
        "id": 66,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'weight above 50 kg', 'power consumption below 1000 watts', \"manufacturer excluding 'Unknown'\"], 'relations': ['model_to_weight (model → weight_kg)', 'model_to_power (model → power_consumption_watts)', 'model_to_manufacturer (model → manufacturer)'], 'intent': 'retrieve_models_by_weight_and_power_constraints', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 1000], 'units': {'weight': 'kg (kilograms)', 'power': 'watts'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'weight_kg', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['32.5', '28.0', '34.0', '30.0', '29.5']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Daikin', 'Mitsubishi', 'LG', 'Samsung', 'Panasonic']}]}}\nA common sense reasoning question is as follows:\nFind the models of air conditioners that weigh more than 50 kilograms and have power consumption below 1000 watts, excluding those manufactured by 'Unknown'.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model FROM air_conditioner_info WHERE weight_kg > 50 AND power_consumption_watts < 1000 AND model NOT IN (SELECT model FROM air_conditioner_info WHERE manufacturer = 'Unknown');",
        "db_id": "air_conditioner"
    },
    {
        "id": 67,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'refrigerant type R410A', 'production year after 2020', 'cooling capacity 5000 BTU'], 'relations': ['model_specifications (models → refrigerant_type, production_year, cooling_capacity)', 'exclusion_logic (cooling_capacity ≥ 5000 BTU)'], 'intent': 'retrieve_models_by_specifications', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2020, 5000], 'units': {'cooling_capacity': 'BTU (British Thermal Units)', 'year': 'calendar year', 'comparison_units': 'Δyear > 2020, cooling_capacity_btu ≥ 5000'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}, {'column': 'production_year', 'type': 'YEAR', 'primary_key': False, 'comment': '', 'examples': ['2022', '2021', '2023']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}]}}\nA hypothetical reasoning question is as follows:\nFind air conditioner models where the refrigerant type is 'R410A' and the production year is after 2020, while excluding those with cooling capacity less than 5000 BTU.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT model FROM air_conditioner_info WHERE refrigerant_type = 'R410A' AND production_year > 2020 AND model NOT IN (SELECT model FROM air_conditioner_info WHERE cooling_capacity_btu < 5000);",
        "db_id": "air_conditioner"
    },
    {
        "id": 68,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cooling mode records', 'energy consumption (kWh)', 'power consumption (watts)', 'average energy consumption', 'average power consumption'], 'relations': ['comparison (energy_consumption_kwh > average)', 'comparison (power_consumption_watts < average)', \"mode_constraint (mode = 'cooling')\"], 'intent': 'filter_records_by_energy_power_comparison', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (kilowatt-hours)', 'power_consumption': 'watts', 'averages': 'computed from dataset values'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA physical knowledge question is as follows:\nQuery for records in cooling mode where energy consumption (kWh) is higher than average but power consumption (watts) is lower than average.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '制冷' AND energy_consumption_kwh > (SELECT AVG(energy_consumption_kwh) FROM energy_consumption WHERE mode = '制冷') AND power_consumption_watts < (SELECT AVG(power_consumption_watts) FROM energy_consumption WHERE mode = '制冷')",
        "db_id": "air_conditioner"
    },
    {
        "id": 69,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['heating mode', 'set temperature (Celsius)', 'indoor temperature (Celsius)', 'temperature difference (>10°C)', 'energy consumption (kWh)', 'average energy consumption'], 'relations': ['temperature_difference (set_temp - indoor_temp > 10°C)', 'energy_comparison (energy_kwh < AVG(energy_kwh))', \"operation_mode_constraint (mode = 'heating')\"], 'intent': 'filter_records_by_temperature_difference_and_energy_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'temperature': '°C (Celsius)', 'energy': 'kWh (kilowatt-hours)', 'difference_unit': '°C (delta temperature)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}]}}\nA mathematical logic question is as follows:\nQuery records where, in heating mode, the difference between the set temperature (in Celsius) and the indoor temperature (in Celsius) is greater than 10 degrees, but the energy consumption (kWh) is below the average energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '制热' AND ABS(temperature_setting_celsius - indoor_temperature_celsius) > 10 AND energy_consumption_kwh < (SELECT AVG(energy_consumption_kwh) FROM energy_consumption WHERE mode = '制热')",
        "db_id": "air_conditioner"
    },
    {
        "id": 70,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['dehumidification mode', 'humidity percentage', 'energy consumption (kWh)'], 'relations': ['mode_condition (dehumidification mode → records)', 'humidity_threshold (>70%)', 'energy_comparison (< average energy consumption)'], 'intent': 'filter_records_by_mode_humidity_and_energy_condition', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70], 'units': {'humidity': '% (percent)', 'energy': 'kWh (kilowatt-hour)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}]}}\nA common sense reasoning question is as follows:\nQuery for records in dehumidification mode where the humidity (percentage) is above 70% but the energy consumption (kWh) is below the average energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '除湿' AND humidity_percent > 70 AND energy_consumption_kwh < (SELECT AVG(energy_consumption_kwh) FROM energy_consumption WHERE mode = '除湿')",
        "db_id": "air_conditioner"
    },
    {
        "id": 71,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['supply air (fan mode)', 'maximum fan speed (10)', '0 watts (power consumption)'], 'relations': ['conjunctive_conditions (all must apply to the same record)'], 'intent': 'find_records_with_specific_operational_conditions', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [10, 0], 'units': {'fan_speed': 'unitless (setting level, assumed maximum=10)', 'power_consumption': 'watts'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}, {'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}, {'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}, {'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}, {'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'fan_speed', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['High', 'Medium', 'Low']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}], 'air_conditioner.humidity_records': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'fan_speed', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['High', 'Medium', 'Low']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}], 'air_conditioner.temperature_records': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'fan_speed', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['High', 'Medium', 'Low']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}], 'air_conditioner.usage_records': [{'column': 'mode'}, {'column': 'fan_speed'}, {'column': 'power_consumption_watts'}]}}\nA hypothetical reasoning question is as follows:\nQuery records where the fan mode is set to supply air, the wind speed is set to the maximum value (assumed to be 10), but the power consumption (in watts) is 0.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '送风' AND fan_speed = 10 AND power_consumption_watts = 0",
        "db_id": "air_conditioner"
    },
    {
        "id": 72,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cooling mode records', 'indoor temperature', 'set temperature', 'power consumption', 'average power consumption', 'outdoor temperature', '40°C threshold'], 'relations': ['temperature_comparison (indoor_temperature_celsius > temperature_setting_celsius)', 'power_consumption_comparison (power_consumption_watts < average_power_consumption)', 'exclusion_condition (outdoor_temperature_celsius <= 40)'], 'intent': 'retrieve_records_meeting_multiple_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [40], 'units': {'temperature': '°C (Celsius)', 'power': 'watts (as per database schema)', 'threshold': '40°C for outdoor temperature'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'energy_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nIn cooling mode, find all records where the indoor temperature is higher than the set temperature but the power consumption is below the average power consumption, and these records are not among those with an outdoor temperature higher than 40°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '制冷' AND indoor_temperature_celsius > temperature_setting_celsius AND power_consumption_watts < (SELECT AVG(power_consumption_watts) FROM energy_consumption WHERE mode = '制冷') AND ac_id NOT IN (SELECT ac_id FROM energy_consumption WHERE outdoor_temperature_celsius > 40);",
        "db_id": "air_conditioner"
    },
    {
        "id": 73,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['heating mode', 'indoor temperature', 'set temperature', 'power consumption', 'average power consumption', 'humidity'], 'relations': [\"mode_constraint (mode = 'heating')\", 'temperature_comparison (indoor_temperature_celsius < temperature_setting_celsius)', 'power_consumption_comparison (power_consumption_watts > average_power_consumption_watts)', 'humidity_exclusion (humidity_percent >= 30%)'], 'intent': 'count_records_meeting_specified_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30], 'units': {'humidity': 'percent', 'temperature': 'Celsius', 'power': 'Watts'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}]}}\nA mathematical logic question is as follows:\nCalculate records in heating mode where the indoor temperature is below the set temperature and power consumption is above the average power consumption, while excluding records with humidity below 30%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '制热' AND indoor_temperature_celsius < temperature_setting_celsius AND power_consumption_watts > (SELECT AVG(power_consumption_watts) FROM energy_consumption WHERE mode = '制热') AND ac_id NOT IN (SELECT ac_id FROM energy_consumption WHERE humidity_percent < 30);",
        "db_id": "air_conditioner"
    },
    {
        "id": 74,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air supply mode', 'fan speed high', 'indoor temperature', 'set temperature', 'outdoor temperature'], 'relations': ['mode_condition (air supply mode)', 'fan_speed_condition (high)', 'temperature_difference_condition (|indoor - set| > 5°C)', 'outdoor_temperature_exclusion (outdoor >= 10°C)'], 'intent': 'filter_records_by_operational_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 10], 'units': {'temperature': '°C (Celsius)', 'temperature_difference': 'ΔT = 5°C (absolute difference)', 'outdoor_threshold': '10°C'}, 'foreign_keys': [{'fk_table': 'temperature_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'temperature_records', 'pk_column': 'temperature_id'}], 'tableinfo': {'air_conditioner.temperature_records': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'fan_speed', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['High', 'Medium', 'Low']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}]}}\nA common sense reasoning question is as follows:\nFind all records where in the air supply mode, the fan speed is set to high, but the indoor temperature differs from the set temperature by more than 5°C, excluding records where the outdoor temperature is below 10°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '送风' AND fan_speed = '高档' AND ABS(indoor_temperature_celsius - temperature_setting_celsius) > 5 AND ac_id NOT IN (SELECT ac_id FROM energy_consumption WHERE outdoor_temperature_celsius < 10);",
        "db_id": "air_conditioner"
    },
    {
        "id": 75,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['extreme cooling mode', 'indoor temperature below -10°C', 'power consumption exceeds 10,000 watts', 'outdoor temperature below -50°C'], 'relations': ['mode_condition (extreme cooling mode → record)', 'temperature_constraint (indoor < -10°C AND outdoor >= -50°C)', 'power_condition (power_consumption > 10000W)'], 'intent': 'retrieve_records_meeting_cooling_conditions_with_exclusions', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [-10, 10000, -50], 'units': {'temperature': '°C (Celsius)', 'power': 'watts'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'mode'}, {'column': 'indoor_temperature_celsius'}, {'column': 'power_consumption_watts'}, {'column': 'outdoor_temperature_celsius'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the air conditioner is operating in extreme cooling mode, find all records where indoor temperature is below -10°C and power consumption exceeds 10,000 watts, while excluding those with outdoor temperature below -50°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '极端制冷' AND indoor_temperature_celsius < -10 AND power_consumption_watts > 10000 AND ac_id NOT IN (SELECT ac_id FROM energy_consumption WHERE outdoor_temperature_celsius < -50);",
        "db_id": "air_conditioner"
    },
    {
        "id": 76,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cooling mode', 'indoor humidity above 70%', 'power consumption below average', 'outdoor humidity below 20%'], 'relations': ['condition_combination (all must apply to same record)', 'exclusion_relation (records must not satisfy outdoor_humidity < 20%)'], 'intent': 'retrieve_records_meeting_complex_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70, 20], 'units': {'humidity': '% (percent)', 'power': 'watts', 'average_computation': 'arithmetic mean of power_consumption_watts'}, 'foreign_keys': [{'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}], 'tableinfo': {'air_conditioner.humidity_records': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'indoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'outdoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['70.0', '60.0', '75.0', '80.0', '65.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA physical knowledge question is as follows:\nIn cooling mode, find all records where indoor humidity is above 70% but power consumption is below the average power consumption, and these records are not among those with outdoor humidity below 20%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.* FROM energy_consumption ec JOIN humidity_records hr ON ec.ac_id = hr.ac_id AND ec.record_date = hr.record_date WHERE ec.mode = '制冷' AND ec.humidity_percent > 70 AND ec.power_consumption_watts < (SELECT AVG(power_consumption_watts) FROM energy_consumption WHERE mode = '制冷') AND hr.outdoor_humidity_percent >= 20;",
        "db_id": "air_conditioner"
    },
    {
        "id": 77,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['dehumidification mode', 'indoor humidity', 'power consumption', 'outdoor temperature settings'], 'relations': ['mode_condition (dehumidification)', 'humidity_condition (indoor humidity > 60%)', 'power_condition (power consumption > average)', 'exclusion_condition (outdoor temperature settings ≤ 30°C)'], 'intent': 'count_records_meeting_specified_conditions', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [60, 30], 'units': {'humidity': '% (percentage)', 'temperature': '°C (Celsius)', 'power': 'watts (W)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'mode'}, {'column': 'humidity_percent'}, {'column': 'power_consumption_watts'}, {'column': 'outdoor_temperature_celsius'}]}}\nA mathematical logic question is as follows:\nCalculate records in dehumidification mode where indoor humidity is above 60% and power consumption is above average, while excluding records with outdoor temperature settings above 30°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM energy_consumption WHERE mode = '除湿' AND humidity_percent > 60 AND power_consumption_watts > (SELECT AVG(power_consumption_watts) FROM energy_consumption WHERE mode = '除湿') AND temperature_setting_celsius <= 30;",
        "db_id": "air_conditioner"
    },
    {
        "id": 78,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['supply air mode', 'fan speed low', 'indoor humidity', 'outdoor humidity', 'humidity difference threshold 30%', 'outdoor humidity exclusion threshold 10%'], 'relations': [\"record_mode_condition (record → mode = 'supply air')\", \"record_fan_speed_condition (record → fan_speed = 'low')\", 'humidity_difference_condition (indoor_humidity_percent - outdoor_humidity_percent > 30%)', 'outdoor_humidity_exclusion_condition (outdoor_humidity_percent < 10%)'], 'intent': 'filter_records_by_specified_humidity_and_operational_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 10], 'units': {'humidity': '% (percent)', 'humidity_difference': 'absolute percentage difference'}, 'foreign_keys': [{'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}], 'tableinfo': {'air_conditioner.humidity_records': [{'column': 'humidity_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'fan_speed', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['High', 'Medium', 'Low']}, {'column': 'indoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'outdoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['70.0', '60.0', '75.0', '80.0', '65.0']}]}}\nA common sense reasoning question is as follows:\nIdentify all records where the air conditioner is in supply air mode, the fan speed is set to low, the difference between indoor and outdoor humidity is greater than 30%, and exclude records where outdoor humidity is below 10%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.* FROM energy_consumption ec JOIN humidity_records hr ON ec.ac_id = hr.ac_id AND ec.record_date = hr.record_date WHERE ec.mode = '送风' AND ec.fan_speed = '低档' AND ABS(ec.humidity_percent - hr.outdoor_humidity_percent) > 30 AND hr.outdoor_humidity_percent >= 10;",
        "db_id": "air_conditioner"
    },
    {
        "id": 79,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['extreme dehumidification mode', 'indoor humidity below 10%', 'power consumption exceeding 5000 watts', 'outdoor humidity above 90% (exclusion)'], 'relations': ['mode_condition (extreme dehumidification → humidity/power records)', 'humidity_threshold (indoor_humidity_percent < 10%)', 'power_threshold (power_consumption_watts > 5000)', 'exclusion_condition (outdoor_humidity_percent <= 90%)'], 'intent': 'filter_records_by_multiple_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 5000, 90], 'units': {'humidity': '% (percentage)', 'power': 'watts', 'thresholds': ['indoor_humidity < 10%', 'power_consumption > 5000W', 'outdoor_humidity ≤ 90%']}, 'foreign_keys': [{'fk_table': 'humidity_records', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'humidity_records', 'pk_column': 'humidity_id'}], 'tableinfo': {'air_conditioner.humidity_records': [{'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'indoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'outdoor_humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['70.0', '60.0', '75.0', '80.0', '65.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the air conditioner is operating in extreme dehumidification mode, find all records where indoor humidity is below 10% and power consumption exceeds 5000 watts, excluding those with outdoor humidity above 90%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.* FROM energy_consumption ec JOIN humidity_records hr ON ec.ac_id = hr.ac_id AND ec.record_date = hr.record_date WHERE ec.mode = '极端除湿' AND ec.humidity_percent < 10 AND ec.power_consumption_watts > 5000 AND hr.outdoor_humidity_percent <= 90;",
        "db_id": "air_conditioner"
    },
    {
        "id": 80,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cooling mode', 'usage duration over 5 hours', 'power consumption below average', 'outdoor temperature >=10°C'], 'relations': ['duration_to_condition (>5 hours)', 'consumption_comparison (below average)', 'temperature_exclusion (outdoor >=10°C)'], 'intent': 'filter_records_by_duration_consumption_and_temperature', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 10], 'units': {'time': 'hours', 'temperature': '°C', 'power': 'watts (implied by power_consumption_watts)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'mode'}, {'column': 'usage_duration_hours'}, {'column': 'power_consumption_watts'}, {'column': 'outdoor_temperature_celsius'}]}}\nA physical knowledge question is as follows:\nIn cooling mode, find all records where the usage duration exceeds 5 hours but the power consumption is below the average power consumption, and these records are not among those with outdoor temperatures below 10°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.* FROM usage_records ur JOIN energy_consumption ec ON ur.ac_id = ec.ac_id AND ur.usage_date = ec.record_date WHERE ur.mode = '制冷' AND ur.usage_duration_hours > 5 AND ec.power_consumption_watts < (SELECT AVG(power_consumption_watts) FROM energy_consumption WHERE mode = '制冷') AND ec.outdoor_temperature_celsius >= 10;",
        "db_id": "air_conditioner"
    },
    {
        "id": 81,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'usage duration exceeding 3 hours', 'power consumption higher than average', 'heating mode', 'indoor temperature above 25°C'], 'relations': ['record_has_duration (usage record → duration condition)', 'record_has_power_consumption (usage record → power comparison)', 'record_in_mode (usage record → heating mode)', 'record_has_temperature (usage record → exclusion condition)'], 'intent': 'filter_records_by_duration_power_and_temperature', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3, 25], 'units': {'usage_duration': 'hours', 'power_consumption': 'watts', 'temperature': 'Celsius'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'usage_duration_hours'}, {'column': 'power_consumption_watts'}, {'column': 'mode'}, {'column': 'indoor_temperature_celsius'}]}}\nA mathematical logic question is as follows:\nCalculate the records with usage duration exceeding 3 hours and power consumption higher than the average in heating mode, while excluding records with indoor temperature above 25°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.* FROM usage_records ur JOIN energy_consumption ec ON ur.ac_id = ec.ac_id AND ur.usage_date = ec.record_date WHERE ur.mode = '制热' AND ur.usage_duration_hours > 3 AND ec.power_consumption_watts > (SELECT AVG(power_consumption_watts) FROM energy_consumption WHERE mode = '制热') AND ec.indoor_temperature_celsius <= 25;",
        "db_id": "air_conditioner"
    },
    {
        "id": 82,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fan blow mode', 'high wind speed', 'usage duration < 1 hour', 'outdoor temperature <= 35°C'], 'relations': [\"condition: mode = 'blow'\", \"condition: fan_speed = 'high'\", 'condition: usage_duration_hours < 1', 'exclusion: outdoor_temperature_celsius <= 35'], 'intent': 'filter_records_by_multiple_conditions', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1, 35], 'units': {'duration': 'hours', 'temperature': '°C (Celsius)', 'thresholds': {'usage_duration': '< 1 hour', 'outdoor_temperature': '<= 35°C'}}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'mode'}, {'column': 'fan_speed'}, {'column': 'usage_duration_hours'}, {'column': 'outdoor_temperature_celsius'}]}}\nA common sense reasoning question is as follows:\nFind all records where the fan is in blow mode, the wind speed is set to high, but the usage duration is less than 1 hour, and exclude records where the outdoor temperature is higher than 35°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.* FROM usage_records ur JOIN energy_consumption ec ON ur.ac_id = ec.ac_id AND ur.usage_date = ec.record_date WHERE ur.mode = '送风' AND ur.fan_speed = '高档' AND ur.usage_duration_hours < 1 AND ec.outdoor_temperature_celsius <= 35;",
        "db_id": "air_conditioner"
    },
    {
        "id": 83,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner usage records', 'extreme heating mode', 'usage duration', 'power consumption', 'outdoor temperature'], 'relations': ['mode_condition (extreme heating → usage_records.mode)', 'duration_condition (usage_duration_hours > 24)', 'power_condition (power_consumption_watts > 10000)', 'temperature_exclusion (outdoor_temperature_celsius <= 50)'], 'intent': 'filter_records_by_usage_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [24, 10000, 50], 'units': {'duration': 'hours', 'power': 'watts', 'temperature': '°C'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'usage_duration_hours'}, {'column': 'power_consumption_watts'}, {'column': 'outdoor_temperature_celsius'}, {'column': 'mode'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the air conditioner is operating in extreme heating mode, find all records with a usage duration exceeding 24 hours and power consumption exceeding 10,000 watts, while excluding records where the outdoor temperature is above 50°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ur.* FROM usage_records ur JOIN energy_consumption ec ON ur.ac_id = ec.ac_id AND ur.usage_date = ec.record_date WHERE ur.mode = '极端制热' AND ur.usage_duration_hours > 24 AND ur.power_consumption_watts > 10000 AND ec.outdoor_temperature_celsius <= 50;",
        "db_id": "air_conditioner"
    },
    {
        "id": 84,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner model', 'indoor temperature 50°C', 'outdoor temperature 10°C', 'humidity 90%', 'operating duration 48 hours', 'phase change heat of refrigerant', 'heat capacity of air'], 'relations': ['model_to_refrigerant (air conditioner model → refrigerant type)', 'refrigerant_to_properties (refrigerant type → phase change heat)', 'conditions_to_efficiency (temperature/humidity → cooling efficiency)'], 'intent': 'calculate_theoretical_cooling_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50, 10, 90, 48], 'units': {'temperature': '°C (Celsius)', 'humidity': '% (percent)', 'time': 'hours', 'phase_change_heat': 'kJ_per_kg (kilojoules per kilogram)', 'cooling_efficiency': 'dimensionless ratio (output/input)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'refrigerant_properties', 'pk_column': 'refrigerant_type'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}], 'air_conditioner.refrigerant_properties': [{'column': 'phase_change_heat_kj_per_kg', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}, {'column': 'refrigerant_flow_rate_kg_per_s', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA physical knowledge question is as follows:\nCalculate the theoretical cooling efficiency of a certain model of air conditioner under extreme conditions, assuming an indoor temperature of 50°C, an outdoor temperature of 10°C, humidity at 90%, and the air conditioner operating continuously for 48 hours. The calculation must account for the phase change heat of the refrigerant and the heat capacity of the air.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT a.model, (a.cooling_capacity_btu / (a.power_consumption_watts * 3.412)) * (1 + (r.phase_change_heat_kj_per_kg * r.refrigerant_flow_rate_kg_per_s) / (c.air_heat_capacity_kj_per_kg_k * c.air_flow_rate_kg_per_s * 40)) AS theoretical_cop FROM air_conditioner_info a JOIN refrigerant_properties r ON a.refrigerant_type = r.refrigerant_type JOIN air_properties c ON c.temperature_celsius = 50 AND c.humidity_percent = 90 WHERE a.model = '特定型号';",
        "db_id": "air_conditioner"
    },
    {
        "id": 85,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioners', '2023', 'manufacturer', 'model', 'monthly average energy consumption', 'energy consumption fluctuation', 'seasonal temperature variations', 'humidity'], 'relations': ['ac_id_link (air_conditioner_info → energy_consumption)', 'temperature_influence (seasonal variations affect energy_consumption)', 'humidity_influence (humidity_percent affects energy_consumption)', 'grouping_relation (manufacturer + model → energy fluctuation calculation)'], 'intent': 'calculate_monthly_avg_consumption_and_identify_highest_fluctuation_model', 'reasoning_type': 'mathematical logic reasoning, physical knowledge reasoning', 'numerical_values': [2023], 'units': {'energy': 'kWh (energy_consumption_kwh)', 'temperature': '°C (outdoor_temperature_celsius)', 'humidity': '% (humidity_percent)', 'time': 'month (from record_date)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Daikin', 'Mitsubishi', 'LG', 'Samsung', 'Panasonic']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.energy_consumption': [{'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}]}}\nA mathematical logic question is as follows:\nCalculate the monthly average energy consumption of all air conditioners in 2023, grouped by manufacturer and model, to identify the model with the greatest energy consumption fluctuation. The analysis must account for the influence of seasonal temperature variations and humidity on energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH monthly_energy AS (SELECT a.manufacturer, a.model, DATE_FORMAT(e.record_date, '%Y-%m') AS month, AVG(e.energy_consumption_kwh) AS avg_energy_consumption_kwh FROM energy_consumption e JOIN air_conditioner_info a ON e.ac_id = a.ac_id JOIN temperature_records t ON e.ac_id = t.ac_id AND e.record_date = t.record_date JOIN humidity_records h ON e.ac_id = h.ac_id AND e.record_date = h.record_date WHERE YEAR(e.record_date) = 2023 GROUP BY a.manufacturer, a.model, DATE_FORMAT(e.record_date, '%Y-%m')), energy_fluctuation AS (SELECT manufacturer, model, MAX(avg_energy_consumption_kwh) - MIN(avg_energy_consumption_kwh) AS energy_fluctuation_kwh FROM monthly_energy GROUP BY manufacturer, model) SELECT manufacturer, model, energy_fluctuation_kwh FROM energy_fluctuation ORDER BY energy_fluctuation_kwh DESC LIMIT 1;",
        "db_id": "air_conditioner"
    },
    {
        "id": 86,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner model', 'low temperature condition (<10°C)', 'low humidity condition (<30%)', 'shortest usage time', 'energy consumption (cooling/heating/dehumidification/fan)'], 'relations': ['model_to_usage_conditions (Air Conditioner → Low Temp/Low Humidity Usage)', 'model_to_energy_modes (Air Conditioner → Energy Consumption per Mode)'], 'intent': 'identify_model_with_minimal_usage_duration_under_specific_conditions_and_compare_energy_across_modes', 'reasoning_type': 'mathematical logic reasoning (aggregation/comparison/min)', 'numerical_values': [10, 30], 'units': {'temperature': '°C (Celsius)', 'humidity': '% (Percentage)', 'time': 'hours (implied by usage_duration_hours)', 'energy': 'kWh (energy_consumption_kwh)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}], 'air_conditioner.usage_records': [{'column': 'usage_duration_hours'}, {'column': 'indoor_temperature_celsius'}, {'column': 'humidity_percent'}, {'column': 'mode'}], 'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA common sense reasoning question is as follows:\nFind the air conditioner model with the shortest usage time under low temperature and low humidity conditions (indoor temperature <10°C, humidity <30%) and analyze its energy consumption differences across various modes (cooling, heating, dehumidification, fan mode).\nyour response just have a SQL without anything.\n",
        "solution": "WITH low_temp_low_humidity_usage AS (SELECT u.ac_id, u.mode, SUM(u.usage_duration_hours) AS total_usage_hours, SUM(u.power_consumption_watts * u.usage_duration_hours) / 1000 AS total_energy_consumption_kwh FROM usage_records u JOIN temperature_records t ON u.ac_id = t.ac_id AND u.usage_date = t.record_date WHERE t.indoor_temperature_celsius < 10 AND t.humidity_percent < 30 GROUP BY u.ac_id, u.mode), shortest_usage_model AS (SELECT a.model, SUM(l.total_usage_hours) AS total_usage_hours FROM low_temp_low_humidity_usage l JOIN air_conditioner_info a ON l.ac_id = a.ac_id GROUP BY a.model ORDER BY total_usage_hours ASC LIMIT 1) SELECT s.model, l.mode, l.total_usage_hours, l.total_energy_consumption_kwh FROM low_temp_low_humidity_usage l JOIN air_conditioner_info a ON l.ac_id = a.ac_id JOIN shortest_usage_model s ON a.model = s.model;",
        "db_id": "air_conditioner"
    },
    {
        "id": 87,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner with cooling capacity 1,000,000 BTU', 'energy efficiency ratio 100', '10 years of continuous operation', '100°C temperature difference', 'energy consumption threshold 1,000,000 kWh', 'impact of aging on energy consumption'], 'relations': ['cooling_capacity_to_EER (relates BTU capacity to efficiency ratio)', 'time_to_energy (operation period to total consumption)', 'temperature_difference_to_efficiency (ΔT=100°C affects performance)', 'aging_to_consumption (degradation increases energy use over time)'], 'intent': 'calculate_hypothetical_energy_consumption_and_identify_high_consumption_models', 'reasoning_type': 'physical knowledge reasoning, ideal hypothesis reasoning', 'numerical_values': [1000000, 100, 10, 100, 1000000], 'units': {'cooling_capacity': 'BTU (British Thermal Units per hour implied)', 'energy_efficiency': 'BTU per watt-hour (EER standard)', 'time': 'years (converted to hours for calculation: 10 years = 87,600 hours)', 'temperature_difference': '°C (Celsius)', 'energy': 'kWh (kilowatt-hours)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}], 'air_conditioner.energy_consumption': [{'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner has a cooling capacity of 1,000,000 BTU and an energy efficiency ratio of 100, calculate its energy consumption over 10 years of continuous operation in extreme conditions (with a 100°C temperature difference between indoor and outdoor environments). Additionally, identify air conditioner models with energy consumption exceeding 1,000,000 kWh. The calculation must account for the impact of aging on energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH theoretical_energy AS (SELECT (1000000 / 100) * 24 * 365 * 10 * POWER(1.05, 10) / 1000 AS total_energy_consumption_kwh), high_energy_models AS (SELECT a.model, (a.cooling_capacity_btu / a.energy_efficiency_ratio) * 24 * 365 * 10 * POWER(1.05, 10) / 1000 AS total_energy_consumption_kwh FROM air_conditioner_info a WHERE a.cooling_capacity_btu = 1000000 AND a.energy_efficiency_ratio = 100 AND EXISTS (SELECT 1 FROM temperature_records t WHERE t.ac_id = a.ac_id AND t.indoor_temperature_celsius - t.outdoor_temperature_celsius = 100)) SELECT model, total_energy_consumption_kwh FROM high_energy_models WHERE total_energy_consumption_kwh > 1000000;",
        "db_id": "air_conditioner"
    },
    {
        "id": 88,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner model', 'power consumption variation rate', 'temperature settings', 'temperature range'], 'relations': ['model_to_consumption (air conditioner model → power consumption records)', 'setting_to_variation (temperature setting → power consumption variation rate)', 'thermodynamic_relationship (heat conduction formula links temperature difference to energy transfer)'], 'intent': 'calculate_power_consumption_variation_by_temperature_and_identify_peak_range', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'power_consumption': 'watts (from power_consumption_watts field)', 'temperature': '°C (from temperature_setting_celsius field)', 'variation_rate': 'watts per °C (implied derivative unit)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.energy_consumption': [{'column': 'temperature_setting_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['22.0', '24.0', '26.0', '23.0', '25.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}]}}\nA physical knowledge question is as follows:\nCalculate the power consumption variation rate of a certain model air conditioner at different temperature settings, group them by temperature settings, and identify the temperature range with the highest power consumption variation rate. The analysis should incorporate the heat conduction formula from thermodynamics to examine the relationship between temperature settings and the power consumption variation rate.\nyour response just have a SQL without anything.\n",
        "solution": "WITH power_consumption_variation AS (SELECT u.temperature_setting_celsius, (MAX(u.power_consumption_watts) - MIN(u.power_consumption_watts)) / AVG(u.power_consumption_watts) * 100 AS power_variation_rate FROM usage_records u JOIN air_conditioner_info a ON u.ac_id = a.ac_id WHERE a.model = '特定型号' GROUP BY u.temperature_setting_celsius) SELECT temperature_setting_celsius, power_variation_rate FROM power_consumption_variation ORDER BY power_variation_rate DESC LIMIT 1;",
        "db_id": "air_conditioner"
    },
    {
        "id": 89,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['monthly usage duration', 'energy consumption', '2023', 'correlation coefficient', 'month'], 'relations': ['duration_to_energy (usage_duration_hours → energy_consumption_kwh)', 'temporal_grouping (grouped by month)', \"statistical_correlation (Pearson's r formula applied)\"], 'intent': 'calculate_correlation_and_identify_peak_month', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2023], 'units': {'usage_duration': 'hours (from usage_records.usage_duration_hours)', 'energy_consumption': 'kWh (from energy_consumption.energy_consumption_kwh)', 'correlation_coefficient': 'unitless (statistical measure)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.usage_records': [{'column': 'usage_date'}, {'column': 'usage_duration_hours'}, {'column': 'ac_id'}], 'air_conditioner.energy_consumption': [{'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCalculate the correlation coefficient between monthly usage duration and energy consumption for 2023, grouped by month, and identify the month with the highest correlation coefficient. The analysis should incorporate the statistical formula for correlation coefficients to examine the linear relationship between usage duration and energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH monthly_data AS (SELECT MONTH(u.usage_date) AS month, u.usage_duration_hours, e.energy_consumption_kwh FROM usage_records u JOIN energy_consumption e ON u.ac_id = e.ac_id AND u.usage_date = e.record_date WHERE YEAR(u.usage_date) = 2023), correlation_coefficients AS (SELECT month, (AVG(usage_duration_hours * energy_consumption_kwh) - AVG(usage_duration_hours) * AVG(energy_consumption_kwh)) / (STDDEV(usage_duration_hours) * STDDEV(energy_consumption_kwh)) AS correlation_coefficient FROM monthly_data GROUP BY month) SELECT month, correlation_coefficient FROM correlation_coefficients ORDER BY correlation_coefficient DESC LIMIT 1;",
        "db_id": "air_conditioner"
    },
    {
        "id": 90,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner model', 'low-temperature environment (<10°C)', 'low-humidity environment (<30%)', 'usage time (duration)', 'cooling mode', 'heating mode', 'dehumidification mode', 'fan-only mode'], 'relations': ['model_to_usage (air conditioner model → usage records)', 'environmental_impact (temperature/humidity → usage time)', 'mode_comparison (operating mode → usage time differences)'], 'intent': 'identify_model_with_min_usage_in_cold_dry_conditions_and_compare_mode_performance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 30], 'units': {'temperature': '°C (Celsius)', 'humidity': '% (percent)', 'usage_time': 'hours'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.usage_records': [{'column': 'ac_id'}, {'column': 'usage_duration_hours'}, {'column': 'indoor_temperature_celsius'}, {'column': 'humidity_percent'}, {'column': 'mode'}]}}\nA common sense reasoning question is as follows:\nTranslate the Chinese text into English:\n\n\"Identify the air conditioner model with the shortest usage time in low-temperature and low-humidity environments (indoor temperature <10°C, humidity <30%), and analyze the differences in its usage time across different modes (cooling, heating, dehumidification, and fan-only). Require incorporating the working principles of air conditioners to analyze the potential impact of modes on usage time.\"\nyour response just have a SQL without anything.\n",
        "solution": "WITH low_temp_low_humidity_usage AS (SELECT a.model, u.mode, SUM(u.usage_duration_hours) AS total_usage_hours FROM usage_records u JOIN air_conditioner_info a ON u.ac_id = a.ac_id WHERE u.indoor_temperature_celsius < 10 AND u.humidity_percent < 30 GROUP BY a.model, u.mode), shortest_usage_model AS (SELECT model, SUM(total_usage_hours) AS total_usage_hours FROM low_temp_low_humidity_usage GROUP BY model ORDER BY total_usage_hours ASC LIMIT 1) SELECT s.model, l.mode, l.total_usage_hours FROM low_temp_low_humidity_usage l JOIN shortest_usage_model s ON l.model = s.model;",
        "db_id": "air_conditioner"
    },
    {
        "id": 91,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'extreme environment', 'indoor temperature 100°C', 'outdoor temperature -50°C', '1000 years operation', 'aging effects', 'models', 'usage time threshold 10,000,000 hours', 'energy consumption threshold 100,000,000 kWh'], 'relations': ['hypothetical_operation (continuous runtime under extreme conditions)', 'aging_impact_usage (2% annual increase)', 'aging_impact_energy (10% annual increase)', 'model_to_usage (air_conditioner_info.ac_id → usage_records.ac_id)', 'model_to_energy (air_conditioner_info.ac_id → energy_consumption.ac_id)'], 'intent': 'calculate_hypothetical_operation_totals_and_identify_high_usage_models', 'reasoning_type': 'mathematical logic reasoning, physical knowledge reasoning', 'numerical_values': [1000, 100, -50, 2, 10, 10000000, 100000000], 'units': {'temperature': '°C (Celsius)', 'time': 'years, hours (1 year = 8760 hours)', 'energy': 'kWh (kilowatt-hours)', 'percentage': '% (annual increase rates)', 'conversion_formulas': {'hours_per_year': 'hours = years × 365 × 24', 'geometric_series_sum': 'S = a × (rⁿ - 1) / (r - 1)'}}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}], 'air_conditioner.usage_records': [{'column': 'usage_duration_hours'}], 'air_conditioner.energy_consumption': [{'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner operates continuously for 1,000 years in an extreme environment (indoor temperature of 100°C, outdoor temperature of -50°C), calculate its total usage time and total energy consumption, and identify models with usage time exceeding 10,000,000 hours and energy consumption exceeding 100,000,000 kWh. The effects of aging on usage time and energy consumption must be considered, with an assumption that usage time increases by 2% annually and energy consumption increases by 10% annually.\nyour response just have a SQL without anything.\n",
        "solution": "WITH extreme_usage AS (SELECT a.model, 24 * 365 * 1000 * POWER(1.02, 1000) AS total_usage_hours, (a.power_consumption_watts * 24 * 365 * 1000 * POWER(1.10, 1000)) / 1000 AS total_energy_consumption_kwh FROM air_conditioner_info a WHERE EXISTS (SELECT 1 FROM temperature_records t WHERE t.ac_id = a.ac_id AND t.indoor_temperature_celsius = 100 AND t.outdoor_temperature_celsius = -50)) SELECT model, total_usage_hours, total_energy_consumption_kwh FROM extreme_usage WHERE total_usage_hours > 10000000 AND total_energy_consumption_kwh > 100000000;",
        "db_id": "air_conditioner"
    },
    {
        "id": 92,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific air conditioner model', 'Energy Efficiency Ratio (EER)', 'modes (cooling, heating, dehumidification, fan)'], 'relations': ['model_to_performance (air conditioner model → EER by mode)', 'mode_to_efficiency (operational mode → EER calculation)', 'carnot_relation (Carnot cycle efficiency → EER impact analysis)'], 'intent': 'calculate_mode_specific_eer_and_identify_lowest', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'EER': 'BTU/(W·h) (implied by cooling_capacity_btu and power_consumption_watts)', 'temperature': '°C (for Carnot cycle conversion to Kelvin)', 'carnot_conversion': 'COP = T_cold/(T_hot - T_cold); EER_theoretical = COP × 3.412'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'heating_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['13000', '10000', '15000', '12000', '11000']}], 'air_conditioner.energy_consumption': [{'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'indoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '20.0', '28.0', '26.0', '27.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}]}}\nA physical knowledge question is as follows:\nCalculate the Energy Efficiency Ratio (EER) of a specific air conditioner model under different modes (cooling, heating, dehumidification, and fan), grouped by mode, and identify the mode with the lowest EER. The analysis should incorporate the Carnot cycle efficiency formula from thermodynamics to examine the impact of modes on EER.\nyour response just have a SQL without anything.\n",
        "solution": "WITH eer_by_mode AS (SELECT e.mode, AVG(a.cooling_capacity_btu / e.power_consumption_watts) AS eer FROM energy_consumption e JOIN air_conditioner_info a ON e.ac_id = a.ac_id WHERE a.model = 'Model-X' GROUP BY e.mode) SELECT mode, eer FROM eer_by_mode ORDER BY eer ASC LIMIT 1;",
        "db_id": "air_conditioner"
    },
    {
        "id": 93,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['monthly energy consumption', 'outdoor temperature', 'year 2023', 'correlation coefficient', 'month'], 'relations': ['energy_temp_correlation (energy_consumption ↔ outdoor_temperature)', 'temporal_grouping (2023 → monthly aggregation)'], 'intent': 'calculate_and_compare_monthly_correlation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2023], 'units': {'energy_consumption': 'kWh (from energy_consumption_kwh)', 'temperature': '°C (from outdoor_temperature_celsius)', 'correlation_coefficient': 'unitless (statistical measure)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.energy_consumption': [{'column': 'record_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}]}}\nA mathematical logic question is as follows:\nCalculate the correlation coefficient between monthly energy consumption and outdoor temperature for the year 2023, grouped by month, and identify the month with the highest correlation coefficient. The analysis should incorporate the statistical formula for correlation coefficient to examine the linear relationship between energy consumption and outdoor temperature.\nyour response just have a SQL without anything.\n",
        "solution": "WITH MonthlyData AS ( SELECT MONTH(ec.record_date) AS month, ec.energy_consumption_kwh, ec.outdoor_temperature_celsius FROM energy_consumption ec WHERE YEAR(ec.record_date) = 2023 ), CorrelationCoefficients AS ( SELECT month, (AVG(energy_consumption_kwh * outdoor_temperature_celsius) - AVG(energy_consumption_kwh) * AVG(outdoor_temperature_celsius)) / (STDDEV(energy_consumption_kwh) * STDDEV(outdoor_temperature_celsius)) AS correlation_coefficient FROM MonthlyData GROUP BY month ) SELECT month, correlation_coefficient FROM CorrelationCoefficients ORDER BY correlation_coefficient DESC LIMIT 1;",
        "db_id": "air_conditioner"
    },
    {
        "id": 94,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioning models', 'high-temperature environment (>35°C)', 'high-humidity environment (>80%)', 'energy consumption', 'operational modes (cooling, heating, dehumidification, air supply)', 'working principles of air conditioners'], 'relations': ['model_to_environment (models → performance in specified conditions)', 'mode_to_energy (operational mode → energy consumption impact)', 'principle_to_efficiency (working principles → energy efficiency)'], 'intent': 'identify_high_consumption_models_and_analyze_mode_impact', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [35, 80], 'units': {'temperature': '°C', 'humidity': '%', 'energy': 'kWh (from energy_consumption_kwh)', 'power': 'watts (from power_consumption_watts)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'energy_efficiency_ratio', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['3.5', '4.0', '3.8', '3.7', '4.2']}, {'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}], 'air_conditioner.energy_consumption': [{'column': 'energy_consumption_kwh', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.5', '8.0', '6.0', '7.5', '4.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'mode', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Cooling', 'Heating', 'Dehumidify', 'Fan']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}]}}\nA common sense reasoning question is as follows:\nIdentify the air conditioning models with the highest energy consumption in high-temperature and high-humidity environments (outdoor temperature >35°C, humidity >80%), and analyze their energy consumption differences across various modes (cooling, heating, dehumidification, air supply). Additionally, integrate the working principles of air conditioners to analyze the potential impact of operational modes on energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH HighTempHighHumidity AS ( SELECT ec.ac_id, ec.mode, ec.energy_consumption_kwh, aci.model FROM energy_consumption ec JOIN air_conditioner_info aci ON ec.ac_id = aci.ac_id WHERE ec.outdoor_temperature_celsius > 35 AND ec.humidity_percent > 80 ), ModelModeEnergy AS ( SELECT model, mode, SUM(energy_consumption_kwh) AS total_energy_kwh FROM HighTempHighHumidity GROUP BY model, mode ), MaxEnergyModel AS ( SELECT model, SUM(total_energy_kwh) AS total_energy_kwh FROM ModelModeEnergy GROUP BY model ORDER BY total_energy_kwh DESC LIMIT 1 ) SELECT mme.model, mme.mode, mme.total_energy_kwh FROM ModelModeEnergy mme JOIN MaxEnergyModel mem ON mme.model = mem.model ORDER BY mme.model, mme.mode;",
        "db_id": "air_conditioner"
    },
    {
        "id": 95,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner models', 'extreme conditions (outdoor temperature 100°C, humidity 100%)', 'operation period (1000 years)', 'aging effect (20% annual energy consumption increase)', 'energy consumption threshold (1,000,000,000 kWh)'], 'relations': ['model_to_conditions (models → operate under 100°C/100% humidity)', 'model_to_aging (models → 20% annual energy increase)', 'consumption_exceeds_threshold (models → >1e9 kWh total energy)'], 'intent': 'calculate_total_energy_consumption_with_aging_and_filter_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100, 100, 20, 1000000000], 'units': {'temperature': '°C', 'humidity': '%', 'time': 'years (converted to hours for energy calculation: 1000 years × 365 days/year × 24 hours/day)', 'power': 'watts (converted to kW: W/1000)', 'energy': 'kWh', 'annual_increase': '20% (compounded yearly growth factor)'}, 'foreign_keys': [{'fk_table': 'energy_consumption', 'fk_column': 'ac_id', 'ref_table': 'air_conditioner_info', 'ref_column': 'ac_id'}], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'energy_consumption', 'pk_column': 'energy_id'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['FTXS35LVMA', 'MSZ-FH09NA', 'LP1419IVSM', 'AR12TXHQAWKN', 'CS-XE9PKEW']}, {'column': 'ac_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'air_conditioner.energy_consumption': [{'column': 'ac_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'outdoor_temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '10.0', '38.0', '36.0', '37.0']}, {'column': 'humidity_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['60.0', '50.0', '65.0', '70.0', '55.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner operates continuously for 1000 years under extreme conditions (outdoor temperature at 100°C and humidity at 100%), calculate its total energy consumption and identify the models whose energy consumption exceeds 1,000,000,000 kWh. The aging effect on energy consumption must be considered, with an assumed annual increase in energy consumption of 20%.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ExtremeEnergy AS ( SELECT aci.model, aci.power_consumption_watts, POWER(1.20, 1000) AS aging_factor FROM air_conditioner_info aci ), TotalEnergy AS ( SELECT model, (power_consumption_watts * 24 * 365 * 1000 * aging_factor) / 1000 AS total_energy_kwh FROM ExtremeEnergy ) SELECT model, total_energy_kwh FROM TotalEnergy WHERE total_energy_kwh > 1000000000;",
        "db_id": "air_conditioner"
    },
    {
        "id": 96,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['refrigerant R-410A', 'cooling capacity 18,000 BTU', 'power consumption 2,000 watts', 'evaporation temperature 5°C', 'condensation temperature 45°C'], 'relations': ['refrigerant_to_properties (R-410A → phase_change_heat)', 'capacity_to_energy (cooling capacity → COP calculation)', 'temperature_to_operation (evaporation/condensation temps → refrigerant performance)'], 'intent': 'calculate_refrigerant_performance_metrics', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [18000, 2000, 5, 45], 'units': {'cooling_capacity': 'BTU (British Thermal Unit)', 'power': 'watts', 'temperature': '°C (Celsius)', 'efficiency': 'COP (dimensionless)', 'flow_rate': 'kg/s (kilograms per second)', 'conversion': '1 kW = 3412.14 BTU/h (for COP calculation)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'refrigerant_properties', 'pk_column': 'refrigerant_type'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}], 'air_conditioner.refrigerant_properties': [{'column': 'phase_change_heat_kj_per_kg', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}, {'column': 'refrigerant_flow_rate_kg_per_s', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA physical knowledge question is as follows:\nAssuming an air conditioner uses refrigerant type R-410A, with a cooling capacity of 18,000 BTU and a power consumption of 2,000 watts. It is known that under standard operating conditions, the evaporation temperature of R-410A is 5°C, and the condensation temperature is 45°C. Calculate the heat exchange efficiency (COP) of the refrigerant's evaporator and condenser during actual operation, as well as the mass flow rate of the refrigerant in kg/s.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cooling_capacity_btu / (power_consumption_watts * 3.412) AS COP, cooling_capacity_btu / (1.0 * (45 - 5)) AS mass_flow_rate_kg_s FROM air_conditioner_info WHERE refrigerant_type = 'R-410A' AND cooling_capacity_btu = 18000 AND power_consumption_watts = 2000;",
        "db_id": "air_conditioner"
    },
    {
        "id": 97,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner', 'heating mode', '8 hours', '1800 watts', 'indoor temperature 15°C to 22°C', 'outdoor temperature -5°C', 'specific heat capacity 1.005 kJ/kg·K', 'air density 1.225 kg/m³', 'room volume 50 m³'], 'relations': ['operation_duration (8 hours)', 'power_consumption_value (1800 W)', 'temperature_change_indoor (ΔT=7°C)', 'air_mass_calculation (density * volume)', 'heat_calculation (mass * specific_heat * ΔT)'], 'intent': 'calculate_energy_consumed_kWh, calculate_heating_efficiency_BTU_per_h, calculate_heat_change_kJ', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [8, 1800, 15, 22, -5, 1.005, 1.225, 50], 'units': {'time': 'hours', 'power': 'watts (W)', 'temperature': '°C (Celsius, ΔT equivalent to K)', 'specific_heat': 'kJ/kg·K', 'density': 'kg/m³', 'volume': 'm³', 'energy_consumed': 'kWh (kilowatt-hours)', 'heating_efficiency': 'BTU/h (British Thermal Units per hour)', 'heat_change': 'kJ (kilojoules)', 'conversions': ['1 kWh = 3600 kJ', '1 W = 3.412 BTU/h']}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAn air conditioner operated in heating mode for 8 hours, with a power consumption of 1800 watts. The indoor temperature rose from 15°C to 22°C, while the outdoor temperature was -5°C. Given the specific heat capacity of air as 1.005 kJ/kg·K, air density as 1.225 kg/m³, and room volume as 50 m³, calculate the total energy consumed by the air conditioner in these 8 hours (in kilowatt-hours), the heating efficiency (in BTU/h), and the total heat change of the indoor air (in kJ).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT air_conditioner_info.power_consumption_watts * 8 / 1000 AS total_energy_kWh, (22 - 15) * 1.005 * 1.225 * 50 / 8 * 3.412 AS heating_efficiency_BTU_h, (22 - 15) * 1.005 * 1.225 * 50 AS total_heat_change_kJ FROM usage_records JOIN air_conditioner_info ON usage_records.ac_id = air_conditioner_info.ac_id WHERE usage_records.mode = 'heating' AND usage_records.usage_duration_hours = 8 AND air_conditioner_info.power_consumption_watts = 1800;",
        "db_id": "air_conditioner"
    },
    {
        "id": 98,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner noise level 50 dB', 'air conditioner dimensions 80cm x 20cm x 50cm', 'room area 20 m²', 'room height 3 m', 'international noise standard ≤55 dB', 'installation space requirement multiplier 1.5'], 'relations': ['noise_comparison (50 dB vs ≤55 dB standard)', 'volume_suitability (room_volume >= 1.5 * ac_volume)'], 'intent': 'verify_noise_compliance_and_installation_space_adequacy', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 80, 20, 50, 20, 3, 55, 1.5], 'units': {'noise': 'dB (decibels)', 'dimensions': 'cm (centimeters)', 'area': 'm² (square meters)', 'height': 'm (meters)', 'volume': 'm³ (cubic meters)', 'conversion': 'cm to m (divide by 100 for volume calculation)', 'multiplier': 'dimensionless'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA common sense reasoning question is as follows:\nThe noise level of an air conditioner is 50 decibels, with a weight of 30 kg and dimensions of 80cm x 20cm x 50cm. It is known that the air conditioner is installed in a room with an area of 20 square meters and a height of 3 meters. Determine whether the noise level of the air conditioner meets international standards (≤55 decibels) and whether the volume of the air conditioner is suitable for the installation space in the room (assuming the installation space needs to be at least 1.5 times the volume of the air conditioner).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT noise_level_db <= 55 AS is_noise_compliant, (SUBSTRING_INDEX(dimensions, 'x', 1) * SUBSTRING_INDEX(SUBSTRING_INDEX(dimensions, 'x', -2), 'x', 1) * SUBSTRING_INDEX(dimensions, 'x', -1)) * 1.5 <= (20 * 3 * 10000) AS is_space_sufficient FROM air_conditioner_info WHERE noise_level_db = 50 AND weight_kg = 30 AND dimensions = '80x20x50';",
        "db_id": "air_conditioner"
    },
    {
        "id": 99,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air conditioner cooling capacity 1,000,000 BTU', 'power consumption 1,000,000 watts', 'indoor temperature -273°C', 'outdoor temperature 10,000°C', 'refrigerant R-134a', 'specific heat capacity 1.5 kJ/kg·K'], 'relations': ['cooling_capacity_to_EER (cooling capacity and power consumption → EER calculation)', 'temperature_difference (ΔT = outdoor - indoor = 10273°C for heat transfer)', 'energy_formula (power consumption → energy for 1 hour)'], 'intent': 'calculate_EER_mass_flow_rate_and_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 1000000, -273, 10000, 1.5, 1], 'units': {'cooling_capacity': 'BTU (implied per hour)', 'power': 'watts', 'temperature': '°C', 'specific_heat': 'kJ/kg·K', 'energy': 'kWh', 'mass_flow_rate': 'kg/s', 'conversions': ['1 BTU = 1.055 kJ', 'W to kW: divide by 1000', 'kJ/s to kW: 1:1 ratio']}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'air_conditioner_info', 'pk_column': 'ac_id'}, {'pk_table': 'refrigerant_properties', 'pk_column': 'refrigerant_type'}], 'tableinfo': {'air_conditioner.air_conditioner_info': [{'column': 'cooling_capacity_btu', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['12000', '9000', '14000', '11000', '10000']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1100.0', '900.0', '1200.0', '1000.0', '950.0']}, {'column': 'refrigerant_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['R410A', 'R32']}], 'air_conditioner.refrigerant_properties': [{'column': 'phase_change_heat_kj_per_kg', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA hypothetical reasoning question is as follows:\nAssuming an air conditioner has a cooling capacity of 1,000,000 BTU, power consumption of 1,000,000 watts, indoor temperature of -273°C (absolute zero), and outdoor temperature of 10,000°C (close to the surface temperature of the sun). Calculate the Energy Efficiency Ratio (EER), the mass flow rate of the refrigerant (kg/s), and the energy required to operate for 1 hour under these extreme conditions (kilowatt-hours). Assume the refrigerant is R-134a with a specific heat capacity of 1.5 kJ/kg·K.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cooling_capacity_btu / power_consumption_watts AS EER, cooling_capacity_btu / (1.5 * (10000 - (-273))) AS mass_flow_rate_kg_s, power_consumption_watts * 1 / 1000 AS total_energy_kWh FROM air_conditioner_info WHERE cooling_capacity_btu = 1000000 AND power_consumption_watts = 1000000;",
        "db_id": "air_conditioner"
    },
    {
        "id": 100,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n```json\n{\n  \"entities\": [\n    \"Eiffel Tower\",\n    \"wind load\",\n    \"tower height 300 meters\",\n    \"base width 50 meters\",\n    \"wind speed 50 m/s\"\n  ],\n  \"relations\": [\n    \"tower_to_dimensions (Eiffel Tower → height/base width)\",\n    \"wind_to_load (wind speed → force calculation)\",\n    \"structure_properties (tower → wind resistance characteristics)\"\n  ],\n  \"intent\": \"calculate_wind_load_on_structure\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [300, 50, 50],\n  \"units\": {\n    \"length\": \"meters\",\n    \"speed\": \"meters per second (m/s)\",\n    \"force\": \"implied Newtons (N) or derived unit from wind load formula\",\n    \"conversion\": \"Base dimensions used directly in aerodynamic calculations\"\n  },\n  \"required_tables\": [\"tower\"],\n  \"required_fields\": [\n    \"tower.Name\",\n    \"tower.Location\",\n    \"tower.Height_meters\",\n    \"tower.Base_Width\",\n    \"tower.Wind_Resistance\"  // Likely contains drag coefficient/shape factor\n  ]\n}\n```\nA physical knowledge question is as follows:\nCalculate the wind load on the Eiffel Tower under specific wind conditions, with a tower height of 300 meters, base width of 50 meters, and wind speed of 50 meters per second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * POWER(50, 2) * (Height_meters * Base_Width) * 1.2 AS Wind_Load FROM tower WHERE Name = 'Eiffel Tower';",
        "db_id": "architect"
    },
    {
        "id": 101,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Eiffel Tower', 'total weight 1,000,000 kg', 'base width 50 m', 'base area 2,500 m²'], 'relations': ['weight_to_pressure (mass → force via gravity)', 'area_to_pressure (force/area = pressure)'], 'intent': 'calculate_pressure_exerted_by_weight', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 50, 2500], 'units': {'mass': 'kg (kilograms)', 'length': 'm (meters)', 'area': 'm² (square meters)', 'force': 'N (newtons; requires gravity conversion)', 'pressure': 'Pa (pascals; N/m²)', 'conversion': 'F = m × g (g ≈ 9.8 m/s²)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的总重量（千克）。', 'examples': ['7300000.0', '4000000.0', '117910000.0', '500000000.0', '850000000.0']}, {'column': 'Base_Width', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔底座的宽度（米）。', 'examples': ['125.0', '80.0', '33.0', '50.0', '60.0']}]}}\nA mathematical logic question is as follows:\nCalculate the pressure exerted by the total weight of the Eiffel Tower on its base width. The tower's total weight is 1,000,000 kilograms, the base width is 50 meters, and the base area is 2,500 square meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Weight * 9.81) / (Base_Width * Base_Width) AS Pressure FROM tower WHERE Name = 'Eiffel Tower';",
        "db_id": "architect"
    },
    {
        "id": 102,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Eiffel Tower', 'height 300 meters', 'material steel', 'construction cost $10,000,000'], 'relations': ['tower_attributes (Eiffel Tower → height, material, cost)', 'proportionality_relationship (cost vs. height and material)'], 'intent': 'determine_cost_proportionality_to_height_and_material', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [300, 10000000], 'units': {'height': 'meters (from query and tower.Height_meters)', 'cost': 'USD (from query and tower.Cost_Usd)', 'material': 'categorical (no unit conversion)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的建造成本（美元）。', 'examples': ['1500000.0', '800000.0', '63000000.0', '1500000000.0', '2400000000.0']}]}}\nA common sense reasoning question is as follows:\nDetermine if the construction cost of the Eiffel Tower is proportional to its height and materials, given that the tower is 300 meters tall, made of steel, and has a construction cost of $10,000,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Cost_Usd = (SELECT AVG(Cost_Usd) FROM tower WHERE Height_meters = 300 AND Material = '钢') THEN '成正比' ELSE '不成正比' END AS Cost_Proportionality FROM tower WHERE Name = 'Eiffel Tower';",
        "db_id": "architect"
    },
    {
        "id": 103,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Eiffel Tower', 'vibration frequency', 'structural failure', 'height', 'wind speed'], 'relations': ['frequency_under_wind (100 Hz → wind-induced vibration)', 'stress_vs_failure (vibration → structural integrity)', 'parameter_impact (height/wind → frequency response)'], 'intent': 'assess_structural_failure_risk_under_wind_load', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 1000, 100], 'units': {'height': 'meters', 'wind_speed': 'meters per second', 'frequency': 'Hertz (Hz)', 'stress_unit': 'implied Pascals (Pa) from Wind_Resistance field'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的振动频率（赫兹），用于分析铁塔的动力学特性。', 'examples': ['0.1', '0.15', '0.08', '0.05', '0.07']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Wind_Resistance', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的设计抗风速度（米/秒）。', 'examples': ['42.0', '45.0', '50.0', '60.0', '55.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Base_Width', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔底座的宽度（米）。', 'examples': ['125.0', '80.0', '33.0', '50.0', '60.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate whether the vibration frequency of the Eiffel Tower under extreme wind speeds would lead to structural failure, assuming the tower has a height of 1000 meters, a wind speed of 1000 meters per second, and a vibration frequency of 100 Hertz.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Vibration_Frequency = (1000 / (2 * Height_meters)) THEN '可能导致失效' ELSE '不会导致失效' END AS Failure_Risk FROM tower WHERE Name = 'Eiffel Tower';",
        "db_id": "architect"
    },
    {
        "id": 104,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Tokyo Tower', 'vibration frequency 5 Hz', 'mass 1,000,000 kg', 'amplitude 0.1 meters'], 'relations': ['tower_has_properties (Tokyo Tower → vibration_frequency, mass, amplitude)', 'energy_calculation_dependency (vibration_frequency, mass, amplitude → energy_consumption)'], 'intent': 'calculate_energy_consumption_for_vibration', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5, 1000000, 0.1], 'units': {'frequency': 'Hz (Hertz)', 'mass': 'kg (kilograms)', 'amplitude': 'm (meters)', 'energy': 'J (Joules) derived from E = 0.5 × m × (2πf)² × A²', 'conversion': 'Angular frequency ω = 2πf'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Location', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的位置（例如：城市、国家）。', 'examples': ['Paris, France', 'Tokyo, Japan', 'Toronto, Canada', 'Dubai, UAE', 'Shanghai, China']}]}}\nA physical knowledge question is as follows:\nCalculate the energy consumption of the Tokyo Tower at a specific vibration frequency, with a vibration frequency of 5 Hz, a mass of 1,000,000 kg, and an amplitude of 0.1 meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * POWER(2 * PI() * Vibration_Frequency, 2) * Weight * POWER(0.1, 2) AS Energy_Consumption FROM tower WHERE Name = 'Tokyo Tower';",
        "db_id": "architect"
    },
    {
        "id": 105,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Tokyo Tower', 'gravitational potential energy', 'height change from 100m to 300m', 'mass 1,000,000 kg', 'gravitational acceleration 9.81 m/s²'], 'relations': ['object_to_property (Tokyo Tower → height/mass)', 'energy_dependency (ΔGPE ∝ mass × g × Δheight)'], 'intent': 'calculate_change_in_gravitational_potential_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 300, 1000000, 9.81], 'units': {'height': 'meters (m)', 'mass': 'kilograms (kg)', 'acceleration': 'm/s²', 'energy': 'joules (J = kg·m²/s²)', 'conversion': 'ΔGPE = m·g·Δh'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的总重量（千克）。', 'examples': ['7300000.0', '4000000.0', '117910000.0', '500000000.0', '850000000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the change in gravitational potential energy of the Tokyo Tower at different heights, with the tower's height increasing from 100 meters to 300 meters, a mass of 1,000,000 kilograms, and a gravitational acceleration of 9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight * 9.81 * (300 - 100) AS Potential_Energy_Change FROM tower WHERE Name = 'Tokyo Tower';",
        "db_id": "architect"
    },
    {
        "id": 106,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Tokyo Tower', '300 meters height', 'steel material', '$100,000 annual maintenance cost'], 'relations': ['height_to_maintenance_cost (300m → $100k proportionality check)', 'material_to_maintenance_cost (steel → $100k proportionality check)'], 'intent': 'determine_cost_proportionality_to_height_and_material', 'reasoning_type': 'physical knowledge and mathematical logic reasoning', 'numerical_values': [300, 100000], 'units': {'height': 'meters', 'cost': 'USD', 'material': 'categorical (steel)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的年度维护成本（美元）。', 'examples': ['100000.0', '50000.0', '2000000.0', '10000000.0', '15000000.0']}]}}\nA common sense reasoning question is as follows:\nDetermine whether the annual maintenance cost of Tokyo Tower is proportional to its height and materials, given that the tower is 300 meters tall, made of steel, and has an annual maintenance cost of $100,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Maintenance_Cost = (SELECT AVG(Maintenance_Cost) FROM tower WHERE Height_meters = 300 AND Material = '钢') THEN '成正比' ELSE '不成正比' END AS Maintenance_Proportionality FROM tower WHERE Name = 'Tokyo Tower';",
        "db_id": "architect"
    },
    {
        "id": 107,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Tokyo Tower', 'extreme heights (10,000 meters)', 'wind speed (500 m/s)', 'designed wind resistance speed (50 m/s)'], 'relations': ['tower_has_wind_resistance (Tokyo Tower → designed wind resistance)', 'environment_has_wind_speed (extreme heights → 500 m/s wind)', 'comparison_requirement (actual wind speed vs. designed resistance)'], 'intent': 'determine_sufficiency_of_wind_resistance_under_hypothetical_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 500, 50], 'units': {'height': 'meters', 'wind_speed': 'meters per second', 'wind_resistance': 'meters per second'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Wind_Resistance', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的设计抗风速度（米/秒）。', 'examples': ['42.0', '45.0', '50.0', '60.0', '55.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate whether the wind resistance of Tokyo Tower is sufficient at extreme heights, assuming the tower's height is 10,000 meters, wind speed is 500 meters per second, and the designed wind resistance speed is 50 meters per second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN POWER(500, 2) > POWER(Wind_Resistance, 2) THEN '不足' ELSE '足够' END AS Wind_Resistance_Check FROM tower WHERE Name = 'Tokyo Tower';",
        "db_id": "architect"
    },
    {
        "id": 108,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'height 400 meters', 'base width 60 meters', 'elastic modulus 200 GPa (steel)'], 'relations': ['dimensions_to_buckling (height/base_width → buckling stability)', 'material_to_strength (steel → elastic modulus)'], 'intent': 'calculate_critical_buckling_load', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [400, 60, 200], 'units': {'height': 'meters', 'width': 'meters', 'elastic_modulus': 'GPa (Gigapascals)', 'buckling_load': 'N (Newtons, implied by physical formula)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Base_Width', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔底座的宽度（米）。', 'examples': ['125.0', '80.0', '33.0', '50.0', '60.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}]}}\nA physical knowledge question is as follows:\nCalculate the critical buckling load of the CN Tower, which has a height of 400 meters, a base width of 60 meters, and a material elastic modulus of 200 GPa (steel).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (POWER(PI(), 2) * 200e9 * (POWER(Base_Width, 4)/12)) / POWER(2 * Height_meters, 2) AS Critical_Buckling_Load FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 109,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'concrete', 'steel', 'volume 100,000 cubic meters'], 'relations': ['material_cost_comparison (concrete vs steel for CN Tower)', 'volume_to_mass_conversion (volume * density = mass)', 'mass_to_cost_conversion (mass * unit_price = cost)'], 'intent': 'calculate_construction_cost_difference_between_materials', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [100000, 2400, 50, 7850, 800], 'units': {'volume': 'cubic meters (m³)', 'density': 'kg/m³', 'unit_price': '$/ton', 'mass_conversion': '1 ton = 1000 kg (implicit for unit_price alignment)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}]}}\nA mathematical logic question is as follows:\nCalculate the cost difference of constructing the CN Tower using different materials. The tower has a volume of 100,000 cubic meters, with concrete density being 2400 kg/m³ (unit price $50/ton) and steel density being 7850 kg/m³ (unit price $800/ton).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100000 * 2400 / 1000 * 50) AS Concrete_Cost, (100000 * 7850 / 1000 * 800) AS Steel_Cost, (100000 * 7850 / 1000 * 800) - (100000 * 2400 / 1000 * 50) AS Cost_Difference FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 110,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'wood material', 'height 200 meters', 'wind speed resistance 80 m/s'], 'relations': ['tower_to_material (CN Tower → wood)', 'height_to_wind_resistance (200m height → 80m/s wind resistance)'], 'intent': 'assess_structural_safety_reasonableness', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 80], 'units': {'height': 'meters (m)', 'wind_speed': 'meters per second (m/s)', 'conversion': 'No conversion required'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Wind_Resistance', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的设计抗风速度（米/秒）。', 'examples': ['42.0', '45.0', '50.0', '60.0', '55.0']}]}}\nA common sense reasoning question is as follows:\nDetermine whether the design wind speed resistance of the CN Tower is reasonable, considering that the tower is made of wood, has a height of 200 meters, but a design wind speed resistance of 80 m/s.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Wind_Resistance > 40 THEN '不合理' ELSE '合理' END AS Wind_Resistance_Check FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 111,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'foundation pressure', 'height 100,000 meters', 'base width 1 meter', 'weight 1e15 kilograms', 'crust compressive strength 200 MPa'], 'relations': ['tower_properties (CN Tower → height/base_width/weight)', 'pressure_calculation (weight → foundation pressure via force/area)', 'material_constraint (crust compressive strength → pressure limit)'], 'intent': 'calculate_foundation_pressure_under_hypothetical_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 1, 1000000000000000, 200], 'units': {'height': 'meters', 'base_width': 'meters', 'weight': 'kilograms (convert to Newtons: kg × 9.8 m/s²)', 'area': 'square meters (base_width²)', 'pressure': 'Pascals (Pa) or MPa (1 MPa = 1,000,000 Pa)', 'strength': 'MPa (megapascals)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的总重量（千克）。', 'examples': ['7300000.0', '4000000.0', '117910000.0', '500000000.0', '850000000.0']}, {'column': 'Base_Width', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔底座的宽度（米）。', 'examples': ['125.0', '80.0', '33.0', '50.0', '60.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the foundation pressure of the CN Tower under extreme height conditions, assuming the tower is 100,000 meters high, with a base width of only 1 meter, a total weight of 1e15 kilograms, and an average crust compressive strength of 200 MPa.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Weight * 9.81) / POWER(Base_Width, 2) AS Ground_Pressure FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 112,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Burj Khalifa', 'tower height 600 meters', 'steel (linear expansion coefficient α=12e-6/°C)', 'day-night temperature difference ΔT=50°C'], 'relations': ['tower_material (Burj Khalifa → steel)', 'thermal_expansion_formula (δL = L0 * α * ΔT)'], 'intent': 'calculate_thermal_expansion_deformation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [600, 1.2e-05, 50], 'units': {'length': 'meters', 'temperature': '°C', 'expansion_coefficient': '/°C', 'deformation': 'meters'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}]}}\nA physical knowledge question is as follows:\nCalculate the thermal expansion deformation of Burj Khalifa under day-night temperature variation, with a tower height of 600 meters, made of steel (linear expansion coefficient α=12e-6/°C), and a day-night temperature difference ΔT=50°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 12e-6 * Height_meters * 50 AS Thermal_Expansion FROM tower WHERE Name = 'Burj Khalifa';",
        "db_id": "architect"
    },
    {
        "id": 113,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Burj Khalifa', 'tower height 400 meters', 'cross-sectional area 10 m²', 'steel elastic modulus 200 GPa', 'concrete elastic modulus 30 GPa', 'temperature rise 40℃'], 'relations': ['tower_material_properties (Burj Khalifa → steel/concrete elastic modulus)', 'thermal_stress_formula (σ = E * α * ΔT * constraints)', 'material_thermal_response (steel/concrete → stress under ΔT)'], 'intent': 'calculate_total_thermal_stress_for_tower_under_different_materials', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [400, 10, 200, 30, 40], 'units': {'height': 'meters', 'area': 'm²', 'elastic_modulus': 'GPa (gigapascals)', 'temperature_change': '℃ (Celsius)', 'stress': 'Pa (pascals) derived from σ = E * α * ΔT', 'unit_conversion': '1 GPa = 1e9 Pa'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total thermal stress of Burj Khalifa under different materials, with a tower height of 400 meters, cross-sectional area of 10 m², steel elastic modulus E=200 GPa, concrete E=30 GPa, and temperature rise ΔT=40℃.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 200e9 * 12e-6 * 40 AS Steel_Thermal_Stress, 30e9 * 10e-6 * 40 AS Concrete_Thermal_Stress FROM tower WHERE Name = 'Burj Khalifa';",
        "db_id": "architect"
    },
    {
        "id": 114,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Burj Khalifa', 'coastal area', 'steel towers', 'annual maintenance cost'], 'relations': ['comparison (Burj Khalifa vs. similar steel towers)', 'cost_deviation (5,000,000 vs. 1,200,000)', 'location_attribute (Burj Khalifa → coastal)'], 'intent': 'determine_maintenance_cost_abnormality', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000, 1200000], 'units': {'currency': 'USD (US Dollars)', 'comparison': 'absolute difference = $3,800,000', 'deviation_calculation': '(specific_cost - average_cost) / average_cost'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Location', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的位置（例如：城市、国家）。', 'examples': ['Paris, France', 'Tokyo, Japan', 'Toronto, Canada', 'Dubai, UAE', 'Shanghai, China']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的年度维护成本（美元）。', 'examples': ['100000.0', '50000.0', '2000000.0', '10000000.0', '15000000.0']}]}}\nA common sense reasoning question is as follows:\nDetermine whether the annual maintenance cost of Burj Khalifa in the coastal area is abnormal, assuming the tower's maintenance cost is $5,000,000 while the maintenance cost of similar steel towers is $1,200,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (5000000 / 1200000) > 3 THEN '异常' ELSE '正常' END AS Maintenance_Status FROM tower WHERE Name = 'Burj Khalifa';",
        "db_id": "architect"
    },
    {
        "id": 115,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\"Burj Khalifa\", \"Earth's core penetration depth\", \"micro base (0.1 meters)\", \"tower weight (1e18 kg)\", \"mantle density (5515 kg/m³)\", \"g (9.81 m/s²)\"],\n  \"relations\": [\n    \"tower_to_weight (Burj Khalifa → 1e18 kg)\",\n    \"base_to_area (micro base → cross-sectional area)\",\n    \"pressure_to_depth (weight/area vs. mantle density × gravity)\"\n  ],\n  \"intent\": \"calculate_penetration_depth_into_earth_core\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [0.1, 1e18, 5515, 9.81],\n  \"units\": {\n    \"length\": \"meters\",\n    \"mass\": \"kg\",\n    \"density\": \"kg/m³\",\n    \"gravity\": \"m/s²\",\n    \"area\": \"m² (derived from base dimension)\",\n    \"pressure\": \"Pa (Pascal, derived unit)\"\n  },\n  \"required_tables\": [\"tower\"],\n  \"required_fields\": [\n    \"tower.Name\", \n    \"tower.Weight\",\n    \"tower.Base_Width\"\n  ]\n}\n\n**Explanation:**  \n1. **Entities/Relations:** Focuses on Burj Khalifa's physical properties (weight) and geophysical parameters (density, gravity) with implied pressure-depth relationships.  \n2. **Intent:** Core penetration depth calculation using pressure equilibrium principles.  \n3. **Reasoning:** Requires physics knowledge (pressure = ρgh) and unit conversions.  \n4. **Units:** Includes derived units (pressure in Pa) and density/gravity relationships.  \n5. **Database:**  \n   - Only `tower` table contains Burj Khalifa's `Weight`  \n   - `Base_Width` may estimate base area (though user-specified micro base takes precedence)  \n   - Other tables (architect/bridge/mill) irrelevant to this physics calculation.  \n6. **Note:** Numerical values directly from query; penetration depth formula:  \n   *h = (Weight × g) / (Base_Area × Mantle_Density × g) = Weight / (Base_Area × Mantle_Density)*  \n   where Base_Area = (0.1 m)² = 0.01 m² for micro base.\nA hypothetical reasoning question is as follows:\nCalculate the depth of Earth's core penetration by the Burj Khalifa at a micro base (0.1 meters), assuming the tower's weight is 1e18 kg, the mantle density is 5515 kg/m³, and g=9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1e18 * 9.81) / (5515 * 9.81) AS Penetration_Depth FROM tower WHERE Name = 'Burj Khalifa';",
        "db_id": "architect"
    },
    {
        "id": 116,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shanghai Tower', 'height 500 meters', 'weight 8e6 kg', 'wind speed 60 m/s', 'air density 1.225 kg/m³', 'base width 40 meters'], 'relations': ['tower_identification (Shanghai Tower → tower table record)', 'restoring_moment_calculation (weight and base_width → overturning resistance moment)'], 'intent': 'calculate_overturning_resistance_moment', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500, 8000000, 60, 1.225, 40], 'units': {'height': 'meters', 'weight': 'kg', 'wind_speed': 'm/s', 'air_density': 'kg/m³', 'base_width': 'meters', 'moment': 'Newton-meters', 'conversion': 'g = 9.8 m/s² (implied gravitational acceleration)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}]}}\nA physical knowledge question is as follows:\nCalculate the overturning resistance moment of the Shanghai Tower under strong wind conditions. The tower is 500 meters tall, with a total weight of 8e6 kg, wind speed of 60 m/s, air density of 1.225 kg/m³, and windward area equal to the tower height multiplied by the base width (40 meters).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * Weight * 9.81 * Base_Width AS Resist_Moment, 0.5 * 1.225 * POWER(60, 2) * (Height_meters * Base_Width) * (Height_meters / 2) AS Wind_Moment FROM tower WHERE Name = 'Shanghai Tower';",
        "db_id": "architect"
    },
    {
        "id": 117,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shanghai Tower', 'steel material (E=200 GPa, A=5 m²)', 'wood material (E=10 GPa, A=20 m²)'], 'relations': ['material_properties → deformation (steel)', 'material_properties → deformation (wood)', 'deformation_difference |δ_steel - δ_wood|'], 'intent': 'calculate_elastic_deformation_difference', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000000, 300, 200000000000, 5, 10000000000, 20], 'units': {'load': 'N (Newtons)', 'height': 'm (meters)', 'elastic_modulus': 'Pa (Pascals)', 'area': 'm² (square meters)', 'deformation': 'm (meters)', 'conversion': '1 GPa = 1e9 Pa'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}]}}\nA mathematical logic question is as follows:\nCalculate the difference in elastic deformation for the Shanghai Tower under steel and wood materials, with a load of 1e7 N, a tower height of 300 meters, a steel elastic modulus of 200 GPa (cross-sectional area of 5 m²), and a wood elastic modulus of 10 GPa (cross-sectional area of 20 m²).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1e7 * 300) / (200e9 * 5) AS Steel_Deformation, (1e7 * 300) / (10e9 * 20) AS Wood_Deformation FROM tower WHERE Name = 'Shanghai Tower';",
        "db_id": "architect"
    },
    {
        "id": 118,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shanghai Tower', 'construction year 1800', 'modern steel post-1880', '18th century stone structures <150m'], 'relations': ['material_constraint (Shanghai Tower → steel required → post-1880)', 'height_constraint (Shanghai Tower → 632m vs historical stone limit <150m)'], 'intent': 'validate_historical_plausibility', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1800, 1880, 150], 'units': {'year': 'CE (common era)', 'height': 'meters (historical constraint)', 'conversion': 'none required'}, 'foreign_keys': [{'fk_table': 'structure', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'structure', 'pk_column': 'Struct_ID'}, {'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Construction_year', 'type': 'INTEGER', 'primary_key': False, 'comment': '铁塔的建造年份。', 'examples': ['1889', '1958', '1976', '2010', '2015']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}], 'architect.structure': [{'column': 'Construction_Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '结构的建造年份。', 'examples': ['1840']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '结构的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['wood']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '结构的高度（米）。', 'examples': ['15.0']}]}}\nA common sense reasoning question is as follows:\nAssessing whether labeling the construction year of Shanghai Tower as 1800 is reasonable, knowing that modern steel became widespread after 1880, and the tallest stone structures in the 18th century did not exceed 150 meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Height_meters > 150 AND Construction_year < 1880 THEN '不合理' ELSE '合理' END AS Construction_Validity FROM tower WHERE Name = 'Shanghai Tower';",
        "db_id": "architect"
    },
    {
        "id": 119,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shanghai Tower', \"Earth's rotation\", '1e25 kg (tower weight)', '1 m² (base area)', \"8e37 kg·m² (Earth's moment of inertia)\"], 'relations': [\"mass_distribution_effect (tower mass → Earth's rotational inertia)\", 'moment_of_inertia_change → angular_velocity_change'], 'intent': 'calculate_rotational_impact', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1e+25, 1, 8e+37], 'units': {'mass': 'kg', 'area': 'm²', 'moment_of_inertia': 'kg·m²', 'conversion': 'Earth radius ≈ 6.371e6 m (implied for rotational calculation)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的总重量（千克）。', 'examples': ['7300000.0', '4000000.0', '117910000.0', '500000000.0', '850000000.0']}, {'column': 'Base_Width (for area derivation, though user-provided value overrides)'}]}}\nA hypothetical reasoning question is as follows:\nCalculate the impact of Shanghai Tower on the Earth's rotation, assuming the tower weighs 1e25 kg, has a base area of 1 square meter, and the Earth's moment of inertia is 8e37 kg·m².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1e25 * POWER(6.4e6 + Height_meters, 2) AS Delta_I, (8e37 / (8e37 + 1e25 * POWER(6.4e6 + Height_meters, 2))) * 7.2921159e-5 AS New_Angular_Velocity FROM tower WHERE Name = 'Shanghai Tower';",
        "db_id": "architect"
    },
    {
        "id": 120,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'wind pressure distribution', 'tower height 800 meters', 'wind speed 100 m/s', 'air density 1.225 kg/m³', 'surface roughness coefficient 0.3'], 'relations': ['tower_identity (CN Tower → record in tower table)', 'parameter_dependency (height, roughness → wind pressure calculation)'], 'intent': 'calculate_wind_pressure_distribution', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [800, 100, 1.225, 0.3], 'units': {'height': 'meters', 'wind_speed': 'm/s', 'air_density': 'kg/m³', 'roughness_coefficient': 'dimensionless', 'pressure': 'Pa (Pascal, implied by physical formula)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Base_Width', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔底座的宽度（米）。', 'examples': ['125.0', '80.0', '33.0', '50.0', '60.0']}]}}\nA physical knowledge question is as follows:\nCalculate the wind pressure distribution on the CN Tower under strong winds, with a tower height of 800 meters, wind speed of 100 m/s, air density of 1.225 kg/m³, and a surface roughness coefficient of 0.3 for the tower structure.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * POWER(100 * POWER(Height_meters / 10, 0.3), 2) * 0.7 AS Wind_Pressure FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 121,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'height', 'construction cost'], 'relations': ['attribute_of (height → CN Tower)', 'attribute_of (construction cost → CN Tower)', 'cubic_mathematical_relationship (construction cost ∝ height³)'], 'intent': 'verify_cubic_relationship_between_height_and_construction_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'height': 'meters (from Height_meters column)', 'cost': 'USD (from Cost_Usd column)', 'cubic_conversion': 'height³ → cubic meters (implied)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的建造成本（美元）。', 'examples': ['1500000.0', '800000.0', '63000000.0', '1500000000.0', '2400000000.0']}]}}\nA mathematical logic question is as follows:\nVerify the cubic relationship between the height of the CN Tower and its construction cost.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Height_meters, Cost_Usd, (Cost_Usd / POWER(Height_meters, 3)) AS Cost_Ratio FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 122,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['steel tower', 'concrete tower', 'height 200 meters', 'annual maintenance cost $500,000', 'annual maintenance cost $200,000'], 'relations': ['material_cost_comparison (steel vs concrete)', 'height_similarity (both ~200m)', 'cost_reasonability_assessment'], 'intent': 'assess_maintenance_cost_reasonability_against_comparable_structure', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [200, 500000, 200000], 'units': {'height': 'meters', 'currency': 'USD (US Dollars)', 'comparison_metric': 'absolute_difference ($300,000) / relative_ratio (2.5x)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的主要建造材料（例如：钢、混凝土、木材）。', 'examples': ['steel', 'concrete', 'steel, concrete']}, {'column': 'Height_meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的高度（米）。', 'examples': ['300.0', '333.0', '553.0', '828.0', '632.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的年度维护成本（美元）。', 'examples': ['100000.0', '50000.0', '2000000.0', '10000000.0', '15000000.0']}]}}\nA common sense reasoning question is as follows:\nDetermine whether the annual maintenance cost of a tower is reasonable, assuming the tower is 200 meters tall, made of steel, with an annual maintenance cost of $500,000, while the annual maintenance cost of a similar concrete tower is $200,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Height_meters, Material, Maintenance_Cost FROM tower WHERE Height_meters = 200 AND Material IN ('钢', '混凝土');",
        "db_id": "architect"
    },
    {
        "id": 123,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'vibration frequency 1e9 Hz', 'base cost $1000 at 10Hz'], 'relations': ['cost_proportionality (maintenance_cost ∝ frequency³)', 'scaling_relationship (from 10Hz base to 1e9 Hz)'], 'intent': 'calculate_scaled_maintenance_cost', 'reasoning_type': 'physical knowledge reasoning + ideal hypothesis reasoning', 'numerical_values': [1000000000.0, 1000, 10, 3], 'units': {'frequency': 'Hz (Hertz)', 'cost': 'USD (US Dollars)', 'formula': 'Cost = Base_Cost × (New_Frequency / Base_Frequency)^3'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的年度维护成本（美元）。', 'examples': ['100000.0', '50000.0', '2000000.0', '10000000.0', '15000000.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的振动频率（赫兹），用于分析铁塔的动力学特性。', 'examples': ['0.1', '0.15', '0.08', '0.05', '0.07']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the maintenance cost of CN Tower (assuming its vibration frequency is 1e9 Hz), given that the maintenance cost is proportional to the cube of the frequency, with a base cost of $1000 at 10Hz.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Vibration_Frequency, Maintenance_Cost, (1000 * POWER(Vibration_Frequency / 10, 3)) AS Calculated_Maintenance_Cost FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 124,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CN Tower', 'height=553m', 'elastic modulus=200GPa', 'moment of inertia=5m⁴', 'density=7850kg/m³'], 'relations': ['property_of (height → CN Tower)', 'property_of (elastic modulus → CN Tower)', 'property_of (moment of inertia → CN Tower)', 'property_of (density → CN Tower)', 'calculation_input_for (parameters → natural vibration frequency)'], 'intent': 'calculate_natural_vibration_frequency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [553, 200, 5, 7850], 'units': {'height': 'meters', 'elastic_modulus': 'GPa (gigapascals)', 'moment_of_inertia': 'm⁴', 'density': 'kg/m³', 'frequency': 'Hz (hertz)'}, 'foreign_keys': [{'fk_table': 'tower', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'tower', 'pk_column': 'Tower_ID'}], 'tableinfo': {'architect.tower': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '铁塔的名称。', 'examples': ['Eiffel Tower', 'Tokyo Tower', 'CN Tower', 'Burj Khalifa', 'Shanghai Tower']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '铁塔的振动频率（赫兹），用于分析铁塔的动力学特性。', 'examples': ['0.1', '0.15', '0.08', '0.05', '0.07']}]}}\nA physical knowledge question is as follows:\nCalculate the natural vibration frequency of the CN Tower, assuming its height is 553 meters, elastic modulus is 200 GPa, moment of inertia of the cross-section is 5 m⁴, and density is 7850 kg/m³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Height_meters, Material, Vibration_Frequency, (1 / (2 * 3.14159)) * SQRT((200e9 * 5) / (7850 * (Base_Width * Base_Width) * POWER(Height_meters, 4))) AS Calculated_Frequency FROM tower WHERE Name = 'CN Tower';",
        "db_id": "architect"
    },
    {
        "id": 125,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU base frequency 3.5 GHz', 'CPU maximum frequency 4.2 GHz', 'CPU utilization rate 80%'], 'relations': ['frequency_scaling_relationship (base to max under utilization)'], 'intent': 'calculate_actual_operating_frequency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3.5, 4.2, 80], 'units': {'frequency': 'GHz', 'utilization': '%', 'conversion': 'Frequency scaling based on utilization percentage'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nGiven a computer's CPU with a base frequency of 3.5 GHz and a maximum frequency of 4.2 GHz, and with the CPU utilization rate at 80% during operation, what is the actual operating frequency of the CPU under these conditions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cpu_base_frequency_ghz + (cpu_max_frequency_ghz - cpu_base_frequency_ghz) * (cpu_usage_percent / 100) AS actual_frequency_ghz FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.cpu_base_frequency_ghz = 3.5 AND computer_info.cpu_max_frequency_ghz = 4.2 AND usage_records.cpu_usage_percent = 80;",
        "db_id": "computer"
    },
    {
        "id": 126,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer memory (16 GB DDR4)', 'memory usage rate (75%)', 'theoretical bandwidth (25.6 GB/s)'], 'relations': ['usage_to_bandwidth (75% usage → actual bandwidth)', 'memory_type_to_specs (DDR4 → 25.6 GB/s bandwidth)'], 'intent': 'calculate_actual_bandwidth_utilization', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [16, 75, 25.6], 'units': {'memory_size': 'GB (gigabytes)', 'bandwidth': 'GB/s (gigabytes per second)', 'usage_rate': '% (percentage → convert to decimal for calculation)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'ram_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['16', '32']}, {'column': 'ram_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['DDR4', 'LPDDR5', 'DDR5']}], 'computer.usage_records': [{'column': 'ram_usage_percent'}]}}\nA mathematical logic question is as follows:\nA computer has a memory size of 16 GB, a memory usage rate of 75%, and uses DDR4 memory. Assuming the bandwidth of DDR4 memory is 25.6 GB/s, what is the actual bandwidth utilization of the memory in this case?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (ram_size_gb * ram_usage_percent / 100) / 25.6 AS actual_bandwidth_utilization FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.ram_size_gb = 16 AND computer_info.ram_type = 'DDR4' AND usage_records.ram_usage_percent = 75;",
        "db_id": "computer"
    },
    {
        "id": 127,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 60 Wh', 'power consumption 45 W', 'battery health 90%'], 'relations': ['capacity_to_health (60 Wh @ 90% → effective capacity)', 'power_to_runtime (effective capacity ÷ power consumption)'], 'intent': 'calculate_battery_runtime', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [60, 45, 90], 'units': {'capacity': 'Wh (Watt-hours)', 'power': 'W (Watts)', 'health': '% (Percentage)', 'runtime': 'hours (implied calculation output)', 'conversion': '1 W = 1 Joule/second; 1 Wh = 3600 Joules'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA common sense reasoning question is as follows:\nA computer has a battery capacity of 60 Wh and a power consumption of 45 W. Assuming the battery health is 90%, how long can the computer operate at full charge under these conditions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (computer_info.battery_capacity_wh * battery_usage.battery_health_percent / 100) / battery_usage.power_consumption_watts AS runtime_hours FROM computer_info JOIN battery_usage ON computer_info.computer_id = battery_usage.computer_id WHERE computer_info.battery_capacity_wh = 60 AND battery_usage.power_consumption_watts = 45 AND battery_usage.battery_health_percent = 90;",
        "db_id": "computer"
    },
    {
        "id": 128,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU with 128 cores', '256 threads', '1 GHz base frequency', '10 GHz max frequency', '200% CPU utilization'], 'relations': ['cores_to_compute (128 cores → computing power)', 'frequency_to_compute (operating frequency → computational throughput)', 'utilization_effect (200% → effective frequency scaling)'], 'intent': 'calculate_total_computing_power', 'reasoning_type': 'physical knowledge reasoning + mathematical logic reasoning', 'numerical_values': [128, 256, 1, 10, 200], 'units': {'frequency': 'GHz (gigahertz)', 'utilization': '% (percentage)', 'computing_power': 'Implicit core-frequency product (core·GHz)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming a computer has 128 CPU cores, 256 threads, a base frequency of 1 GHz, a maximum frequency of 10 GHz, and during usage the CPU utilization is at 200%, how much is the total computing power of the CPU at this time?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cpu_cores * cpu_threads * (cpu_base_frequency_ghz + (cpu_max_frequency_ghz - cpu_base_frequency_ghz) * (cpu_usage_percent / 100)) AS total_computation_power FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.cpu_cores = 128 AND computer_info.cpu_threads = 256 AND computer_info.cpu_base_frequency_ghz = 1 AND computer_info.cpu_max_frequency_ghz = 10 AND usage_records.cpu_usage_percent = 200;",
        "db_id": "computer"
    },
    {
        "id": 129,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['GPU VRAM 8 GB', 'GPU utilization rate 90%', 'VRAM read/write speed 448 GB/s'], 'relations': ['capacity_to_speed (8 GB VRAM → 448 GB/s speed)', 'utilization_affects_throughput (90% → effective transfer rate)'], 'intent': 'calculate_data_transfer_amount', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [8, 90, 448], 'units': {'vram_capacity': 'GB (gigabytes)', 'utilization': '% (percentage)', 'speed': 'GB/s (gigabytes per second)', 'data_amount': 'GB (implied per second calculation)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nGiven that a computer's GPU has 8 GB of VRAM, with a GPU utilization rate of 90% during operation, and assuming the VRAM's read/write speed is 448 GB/s, what is the data transfer amount of the GPU VRAM under these conditions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT gpu_vram_gb * (gpu_usage_percent / 100) * 448 AS data_transfer_volume_gb FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.gpu_vram_gb = 8 AND usage_records.gpu_usage_percent = 90;",
        "db_id": "computer"
    },
    {
        "id": 130,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer storage capacity 1 TB', 'storage usage rate 60%', 'storage type SSD', 'SSD read/write speed 500 MB/s'], 'relations': ['usage_affects_performance (60% usage → reduced bandwidth)', 'storage_type_defines_speed (SSD → 500 MB/s max bandwidth)'], 'intent': 'calculate_actual_storage_bandwidth_given_usage', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1, 60, 500], 'units': {'capacity': 'TB (Terabytes, 1 TB = 1000 GB)', 'usage_rate': '% (percentage)', 'speed': 'MB/s (Megabytes per second)', 'bandwidth_output': 'MB/s'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'storage_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['512', '1024']}, {'column': 'storage_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['SSD']}], 'computer.usage_records': [{'column': 'storage_usage_percent'}]}}\nA mathematical logic question is as follows:\nA computer has a storage capacity of 1 TB with a storage usage rate of 60%, and the storage type is SSD. Assuming the SSD's read/write speed is 500 MB/s, what is the actual read/write bandwidth of the storage at this time?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (storage_size_gb * 1024 * storage_usage_percent / 100) / 500 AS actual_bandwidth_s FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.storage_size_gb = 1024 AND computer_info.storage_type = 'SSD' AND usage_records.storage_usage_percent = 60;",
        "db_id": "computer"
    },
    {
        "id": 131,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer screen', 'screen size 15.6 inches', 'resolution 1920x1080', 'pixel density 141 PPI'], 'relations': ['size_to_area (physical dimensions → display area)', 'resolution_to_density (pixel count → PPI)'], 'intent': 'calculate_display_area', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [15.6, 1920, 1080, 141], 'units': {'screen_size': 'inches', 'resolution': 'pixels (width x height)', 'pixel_density': 'PPI (pixels per inch)', 'area': 'square inches (derived unit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'screen_size_inches', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['13.4', '16.2', '14.0', '13.5']}, {'column': 'screen_resolution', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['1920x1200', '3456x2234', '3000x2000', '2560x1600']}]}}\nA common sense reasoning question is as follows:\nThe screen size of a computer is 15.6 inches, the resolution is 1920x1080, assuming the pixel density of the screen is 141 PPI, what is the actual display area of the screen in this case?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (screen_size_inches * (CAST(SUBSTRING_INDEX(screen_resolution, 'x', 1) AS UNSIGNED) * CAST(SUBSTRING_INDEX(screen_resolution, 'x', -1) AS UNSIGNED))) / (POW(SQRT(POW(CAST(SUBSTRING_INDEX(screen_resolution, 'x', 1) AS UNSIGNED), 2) + POW(CAST(SUBSTRING_INDEX(screen_resolution, 'x', -1) AS UNSIGNED), 2)) / screen_size_inches, 2)) AS actual_display_area FROM computer_info WHERE computer_info.screen_size_inches = 15.6 AND computer_info.screen_resolution = '1920x1080';",
        "db_id": "computer"
    },
    {
        "id": 132,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 1000 Wh', 'power consumption 500 W', 'battery health 200%'], 'relations': ['capacity_to_health (1000 Wh modified by 200%)', 'power_to_operation (power consumption determines runtime)'], 'intent': 'calculate_continuous_operation_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 500, 200], 'units': {'capacity': 'Wh (Watt-hours)', 'power': 'W (Watts)', 'health': '% (percentage multiplier)', 'conversion': 'Operating Hours = (Capacity × Health%) / Power Consumption'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a computer has a battery capacity of 1000 Wh, a power consumption of 500 W, and a battery health of 200%, how long can this computer operate continuously when fully charged?”\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (computer_info.battery_capacity_wh * battery_usage.battery_health_percent / 100) / battery_usage.power_consumption_watts AS runtime_hours FROM computer_info JOIN battery_usage ON computer_info.computer_id = battery_usage.computer_id WHERE computer_info.battery_capacity_wh = 1000 AND battery_usage.power_consumption_watts = 500 AND battery_usage.battery_health_percent = 200;",
        "db_id": "computer"
    },
    {
        "id": 133,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'power consumption 75W', 'duration 4 hours', 'ambient temperature 25°C', 'thermal efficiency 0.8'], 'relations': ['power_to_energy_conversion (75W × 4h → energy)', 'efficiency_to_heat_retention (0.8 → 80% heat retained)'], 'intent': 'calculate_internal_temperature_after_usage', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [75, 4, 25, 0.8], 'units': {'power': 'W (watts)', 'time': 'hours', 'temperature': '°C (Celsius)', 'efficiency': 'dimensionless ratio', 'energy': 'W·h (watt-hours)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'temperature_celsius'}]}}\nA physical knowledge question is as follows:\nA computer has a power consumption of 75 W during a certain usage session, with a duration of 4 hours and an ambient temperature of 25°C. Given that the computer's thermal efficiency is 0.8, calculate the internal temperature of the computer (in °C) after this usage session.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 25 + (75 * 4 * 3600 * (1 - 0.8)) / 500 AS internal_temperature_celsius FROM usage_records WHERE usage_records.power_consumption_watts = 75 AND usage_records.usage_duration_hours = 4;",
        "db_id": "computer"
    },
    {
        "id": 134,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU utilization 80%', 'GPU utilization 60%', 'memory utilization 50%', 'storage utilization 30%', 'CPU baseline 100 GFLOPS', 'GPU baseline 200 GFLOPS', 'memory baseline 50 GB/s', 'storage baseline 500 MB/s'], 'relations': ['utilization_to_performance (component_utilization → actual_performance)', 'baseline_to_actual (component_baseline * (utilization/100) → actual_value)'], 'intent': 'calculate_actual_performance_from_utilization', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 60, 50, 30, 100, 200, 50, 500], 'units': {'CPU': 'GFLOPS (gigafloating-point operations per second)', 'GPU': 'GFLOPS', 'memory': 'GB/s (gigabytes per second)', 'storage_input': 'MB/s (megabytes per second)', 'storage_output': 'GB/s (conversion: 1 GB/s = 1000 MB/s)', 'utilization': 'percentage'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nA computer was used with a CPU utilization of 80%, GPU utilization of 60%, memory utilization of 50%, and storage utilization of 30%. Given that the baseline performances of the CPU, GPU, memory, and storage are 100 GFLOPS, 200 GFLOPS, 50 GB/s, and 500 MB/s, respectively, calculate the actual performance of the CPU, GPU, memory, and storage during this usage (in units of GFLOPS or GB/s).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100 * (usage_records.cpu_usage_percent / 100) AS cpu_actual_performance_gflops, 200 * (usage_records.gpu_usage_percent / 100) AS gpu_actual_performance_gflops, 50 * (usage_records.ram_usage_percent / 100) AS ram_actual_performance_gb_s, 500 * (usage_records.storage_usage_percent / 100) AS storage_actual_performance_mb_s FROM usage_records WHERE usage_records.cpu_usage_percent = 80 AND usage_records.gpu_usage_percent = 60 AND usage_records.ram_usage_percent = 50 AND usage_records.storage_usage_percent = 30;",
        "db_id": "computer"
    },
    {
        "id": 135,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer power consumption 50 W', 'usage duration 3 hours', 'battery capacity 60 Wh', 'battery health 90%', 'remaining battery power', 'charging requirement'], 'relations': ['power_duration_to_energy (50W × 3h = 150 Wh energy used)', 'health_adjusted_capacity (60 Wh × 90% = 54 Wh effective capacity)', 'capacity_minus_usage (54 Wh - 150 Wh = negative remaining)'], 'intent': 'calculate_remaining_battery_power_and_charging_need', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [50, 3, 60, 90], 'units': {'power': 'W (watts)', 'time': 'hours', 'energy': 'Wh (watt-hours)', 'health': 'percent', 'conversion': 'energy_used = power × time; effective_capacity = nominal_capacity × (health / 100)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA common sense reasoning question is as follows:\nA computer was used with a power consumption of 50 W for a duration of 3 hours, and the battery capacity is 60 Wh. Given that the battery health is at 90%, calculate the remaining battery power (in Wh) after this usage session and determine whether charging is needed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (60 * 90 / 100) - (50 * 3) AS remaining_battery_capacity_wh, CASE WHEN (60 * 90 / 100) - (50 * 3) <= 0 THEN '需要充电' ELSE '无需充电' END AS charging_status FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.battery_capacity_wh = 60 AND usage_records.power_consumption_watts = 50 AND usage_records.usage_duration_hours = 3;",
        "db_id": "computer"
    },
    {
        "id": 136,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'CPU usage 1000%', 'GPU usage 800%', 'power consumption 1000 W', 'usage duration 24 hours', 'ambient temperature 100°C', 'cooling efficiency 0.5'], 'relations': ['parameter_binding (all values → hypothetical usage session)', 'thermal_relationship (power → heat generation → temperature)', 'cooling_impact (efficiency → heat dissipation)'], 'intent': 'calculate_internal_temperature_and_analyze_achievable', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 800, 1000, 24, 100, 0.5], 'units': {'usage_percent': '%', 'power': 'W (watts)', 'temperature': '°C (Celsius)', 'time': 'hours', 'efficiency': 'dimensionless ratio'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}, {'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'temperature_celsius'}, {'column': 'power_consumption_watts'}, {'column': 'cpu_usage_percent'}, {'column': 'gpu_usage_percent'}, {'column': 'usage_duration_hours'}], 'computer.performance_tests': [{'column': 'temperature_celsius'}, {'column': 'power_consumption_watts'}], 'computer.computer_info': [{'column': 'cpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Core i7-1165G7', 'Apple M1 Pro', 'Intel Core i5-1240P', 'Intel Core i7-1260P', 'AMD Ryzen 9 7940HS']}, {'column': 'gpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Iris Xe', 'Apple M1 Pro GPU', 'NVIDIA RTX 4060']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a computer's CPU usage is 1000%, GPU usage is 800%, power consumption is 1000 W, usage duration is 24 hours, and the ambient temperature is 100°C during a certain usage session. Given that the computer's cooling efficiency is 0.5, please calculate the internal temperature of the computer (in °C) after this usage session and analyze whether it is achievable.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100 + (1000 * 24 * 3600 * (1 - 0.5)) / 500 AS internal_temperature_celsius, CASE WHEN 100 + (1000 * 24 * 3600 * (1 - 0.5)) / 500 > 1000 THEN '不可能实现' ELSE '可能实现' END AS feasibility_analysis FROM usage_records WHERE usage_records.cpu_usage_percent = 1000 AND usage_records.gpu_usage_percent = 800 AND usage_records.power_consumption_watts = 1000 AND usage_records.usage_duration_hours = 24;",
        "db_id": "computer"
    },
    {
        "id": 137,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 60 Wh', 'power consumption 30 W', 'usage duration 1.5 hours', 'battery health 85%', 'battery discharge efficiency 90%'], 'relations': ['energy_calculation (power_consumption × duration)', 'health_adjustment (capacity × health_percent)', 'efficiency_adjustment (energy_used × discharge_efficiency)'], 'intent': 'calculate_actual_battery_discharge_wh', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [60, 30, 1.5, 85, 90], 'units': {'capacity': 'Wh (Watt-hours)', 'power': 'W (Watts)', 'duration': 'hours', 'health/efficiency': '% (Percentage)', 'conversion_formula': 'Energy (Wh) = Power (W) × Time (hours)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA physical knowledge question is as follows:\nA computer was used with a battery capacity of 60 Wh, a power consumption of 30 W, a usage duration of 1.5 hours, and a battery health of 85%. Given that the battery discharge efficiency is 90%, calculate the actual battery discharge amount (in Wh) during this usage.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (30 * 1.5) / 0.9 AS actual_discharge_wh FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.battery_capacity_wh = 60 AND usage_records.power_consumption_watts = 30 AND usage_records.usage_duration_hours = 1.5;",
        "db_id": "computer"
    },
    {
        "id": 138,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'battery capacity 50 Wh', 'usage duration 2 hours', 'power consumption 20 W', 'battery health 80%', 'charging efficiency 85%'], 'relations': ['battery_has_capacity (computer → 50 Wh)', 'usage_consumes_energy (2 hours * 20 W → energy drain)', 'health_affects_capacity (80% → effective capacity)', 'efficiency_impacts_recharge (85% → energy input requirement)'], 'intent': 'calculate_remaining_battery_capacity_and_recharge_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50, 2, 20, 80, 85], 'units': {'capacity': 'Wh (watt-hours)', 'duration': 'hours', 'power': 'W (watts)', 'health': 'percent', 'efficiency': 'percent', 'energy': 'Wh (consistent unit for calculation)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA mathematical logic question is as follows:\nA computer was used with a battery capacity of 50 Wh, a usage duration of 2 hours, a power consumption of 20 W, and a battery health of 80%. Given that the battery charging efficiency is 85%, calculate the remaining battery capacity (in Wh) after this usage and the amount of energy required to fully recharge the battery (in Wh).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (50 * 80 / 100) - (20 * 2) AS remaining_battery_capacity_wh, (50 - ((50 * 80 / 100) - (20 * 2))) / 0.85 AS required_charging_wh FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.battery_capacity_wh = 50 AND usage_records.power_consumption_watts = 20 AND usage_records.usage_duration_hours = 2;",
        "db_id": "computer"
    },
    {
        "id": 139,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'battery capacity 80 Wh', 'usage duration 4 hours', 'power consumption 18 W', 'initial battery health 95%', 'charging cycle 500 times', 'health reduction per full cycle 0.1%', 'replacement threshold 80%'], 'relations': ['energy_consumed = power_consumption * usage_duration', 'cycle_fraction = energy_consumed / battery_capacity', 'health_reduction = cycle_fraction * health_reduction_per_full_cycle', 'new_battery_health = initial_battery_health - health_reduction', 'replacement_status = (new_battery_health < replacement_threshold)'], 'intent': 'calculate_battery_health_after_usage and determine_replacement_status', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [80, 4, 18, 95, 500, 0.1, 80], 'units': {'battery_capacity': 'Wh (watt-hours)', 'usage_duration': 'hours', 'power_consumption': 'W (watts)', 'energy_consumed': 'Wh (watt-hours, calculated as power_consumption * usage_duration)', 'battery_health': '% (percentage)', 'health_reduction': '% (percentage reduction per full charging cycle)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA common sense reasoning question is as follows:\nA computer, during a certain usage session, has a battery capacity of 80 Wh, a usage duration of 4 hours, a power consumption of 18 W, and a battery health of 95%. It is known that the battery has a charging cycle of 500 times, and each full charge-discharge cycle reduces the battery health by 0.1%. Calculate the battery health after this usage session (in %) and determine whether the battery is nearing a replacement state (typically, a battery with health below 80% is recommended for replacement).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 95 - ((18 * 4) / 80 * 0.1) AS remaining_battery_health_percent, CASE WHEN 95 - ((18 * 4) / 80 * 0.1) < 80 THEN '需要更换' ELSE '无需更换' END AS replacement_status FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.battery_capacity_wh = 80 AND usage_records.power_consumption_watts = 18 AND usage_records.usage_duration_hours = 4;",
        "db_id": "computer"
    },
    {
        "id": 140,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer battery', 'battery capacity 200 Wh', 'usage duration 24 hours', 'power consumption 100 W', 'battery health 500%', 'charging time 1 minute', 'health reduction per cycle 1%'], 'relations': ['battery_used_in_session (computer battery → usage session)', 'energy_consumption_calculation (power * time)', 'cycle_count_determination (total energy / capacity)', 'health_degradation (cycle_count * health_reduction_per_cycle)', 'lifespan_feasibility_analysis (initial health vs degradation rate)'], 'intent': 'calculate_post_usage_battery_health_and_analyze_lifespan_feasibility', 'reasoning_type': ['physical knowledge reasoning', 'mathematical logic reasoning', 'ideal hypothesis reasoning'], 'numerical_values': [200, 24, 100, 500, 1, 1], 'units': {'capacity': 'Wh (watt-hours)', 'time': ['hours', 'minutes'], 'power': 'W (watts)', 'health': '% (percentage)', 'energy_conversion': '1 W × 1 h = 1 Wh', 'time_conversion': '1 minute = 1/60 hours'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming a computer has a battery capacity of 200 Wh in a certain usage scenario, with a usage duration of 24 hours, a power consumption of 100 W, and a battery health of 500%. It is known that the battery charges extremely quickly and can be fully charged in 1 minute, but each charging cycle reduces the battery health by 1%. Calculate the battery health (in %) after this usage session, and analyze whether the battery's lifespan is achievable under such extreme charging conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 500 - ((100 * 24) / 200 * CEIL((100 * 24) / 200) * 1) AS remaining_battery_health_percent, CASE WHEN 500 - ((100 * 24) / 200 * CEIL((100 * 24) / 200) * 1) <= 0 THEN '不可能实现' ELSE '可能实现' END AS feasibility_analysis FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.battery_capacity_wh = 200 AND usage_records.power_consumption_watts = 100 AND usage_records.usage_duration_hours = 24;",
        "db_id": "computer"
    },
    {
        "id": 141,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test', 'CPU score 1200', 'GPU score 800', 'composite score 950', 'CPU power consumption 65 W', 'GPU power consumption 85 W', 'test temperature 75°C', 'cooling efficiency 0.75'], 'relations': ['test_includes_cpu (test → CPU)', 'test_includes_gpu (test → GPU)', 'power_to_heat_conversion (electrical power → heat energy)', 'cooling_efficiency_impact (efficiency → heat dissipation)'], 'intent': 'calculate_total_heat_dissipation_in_joules', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1200, 800, 950, 65, 85, 75, 0.75], 'units': {'power': 'W (watts)', 'energy': 'J (joules)', 'conversion': '1 W = 1 J/s', 'efficiency': 'dimensionless ratio', 'temperature': '°C (contextual, not used in calculation)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nA computer in the performance test scored 1200 for the CPU, 800 for the GPU, and achieved a composite score of 950. The power consumption of the CPU and GPU is known to be 65 W and 85 W respectively, while the temperature during the test was 75°C. Assuming the computer's cooling efficiency is 0.75, calculate the total heat dissipation (in joules) during this test.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (65 + 85) * 1 * 3600 * 0.75 AS total_heat_dissipation_joules FROM performance_tests WHERE performance_tests.cpu_score = 1200 AND performance_tests.gpu_score = 800 AND performance_tests.overall_score = 950;",
        "db_id": "computer"
    },
    {
        "id": 142,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU score 1500', 'GPU score 1000', 'Memory score 800', 'Storage score 600', 'Overall score 1200', 'CPU weight 40%', 'GPU weight 30%', 'Memory weight 20%', 'Storage weight 10%'], 'relations': ['weighted_contribution (scores × weights → expected score)', 'score_comparison (calculated expected vs actual overall score)', 'bottleneck_identification (component score deviation from weighted contribution)'], 'intent': 'calculate_score_reasonability_and_identify_performance_bottleneck', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1500, 1000, 800, 600, 1200, 0.4, 0.3, 0.2, 0.1], 'units': {'scores': 'unitless (performance index)', 'weights': 'percentage', 'deviation': 'unitless (difference between actual and expected)'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'ram_score'}, {'column': 'storage_score'}, {'column': 'overall_score'}]}}\nA mathematical logic question is as follows:\nA computer in a performance test scored 1500 for CPU, 1000 for GPU, 800 for memory, and 600 for storage, with an overall score of 1200. Given that the weights for CPU, GPU, memory, and storage are 40%, 30%, 20%, and 10% respectively, please calculate the reasonability of the overall score in this test and analyze whether there is a performance bottleneck.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cpu_score * 0.4 + gpu_score * 0.3 + ram_score * 0.2 + storage_score * 0.1 AS calculated_overall_score, CASE WHEN cpu_score * 0.4 + gpu_score * 0.3 + ram_score * 0.2 + storage_score * 0.1 <> overall_score THEN '存在性能瓶颈' ELSE '无性能瓶颈' END AS performance_bottleneck_analysis FROM performance_tests WHERE cpu_score = 1500 AND gpu_score = 1000 AND ram_score = 800 AND storage_score = 600 AND overall_score = 1200;",
        "db_id": "computer"
    },
    {
        "id": 143,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test', 'CPU score 1000', 'GPU score 700', 'memory score 500', 'storage score 400', 'overall score 800', 'temperature 80°C', 'power consumption 150W', 'rated operating temperature 85°C'], 'relations': ['test_contains_metrics (performance test → scores/temperature/power)', 'comparison (80°C vs 85°C)', 'safety_assessment (temperature ≤ rated temperature)'], 'intent': 'evaluate_temperature_safety_and_cooling_needs', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [80, 85, 1000, 700, 500, 400, 800, 150], 'units': {'temperature': '°C (Celsius)', 'power': 'W (Watts)', 'conversion': '1°C = 1°C (direct comparison)'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'temperature_celsius'}, {'column': 'power_consumption_watts'}]}}\nA common sense reasoning question is as follows:\nIn a performance test of a computer, the CPU score is 1000, the GPU score is 700, the memory score is 500, the storage score is 400, and the overall score is 800. The recorded temperature during the test was 80°C, with a power consumption of 150 W, and the computer's rated operating temperature is 85°C. Determine whether the temperature during this test was within the safe range and analyze whether improvements to the cooling system are necessary.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT temperature_celsius, CASE WHEN temperature_celsius <= 85 THEN '安全范围内' ELSE '超出安全范围' END AS temperature_safety_status, CASE WHEN temperature_celsius >= 85 THEN '需要改进散热系统' ELSE '无需改进散热系统' END AS cooling_system_analysis FROM performance_tests WHERE cpu_score = 1000 AND gpu_score = 700 AND ram_score = 500 AND storage_score = 400 AND overall_score = 800 AND temperature_celsius = 80 AND power_consumption_watts = 150;",
        "db_id": "computer"
    },
    {
        "id": 144,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test', 'CPU score 100,000', 'GPU score 80,000', 'memory score 60,000', 'storage score 40,000', 'overall score 90,000', 'test temperature 500°C', 'power consumption 20,000 W', 'nuclear fusion power system', 'energy conversion efficiency 99.99%'], 'relations': ['test_has_power_consumption (performance test → power consumption)', 'test_has_temperature (performance test → 500°C)', 'system_has_efficiency (nuclear fusion → 99.99% efficiency)'], 'intent': 'calculate_total_energy_consumption_in_joules and analyze_operation_sustainability', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [100000, 80000, 60000, 40000, 90000, 500, 20000, 99.99], 'units': {'power': 'W (watts)', 'energy': 'J (joules) = W × seconds', 'temperature': '°C (Celsius)', 'efficiency': '% (percentage)', 'conversion': '1 W = 1 J/s'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'power_consumption_watts'}, {'column': 'temperature_celsius'}, {'column': 'test_id'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a computer achieves a CPU score of 100,000, a GPU score of 80,000, a memory score of 60,000, a storage score of 40,000, and an overall score of 90,000 in a performance test. It is known that the temperature during the test was 500°C, the power consumption was 20,000 W, and the computer's power system utilized nuclear fusion technology with an energy conversion efficiency of 99.99%. Please calculate the total energy consumption (in joules) of the computer during this test and analyze whether the computer could sustain operation under such extreme conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 20000 * 1 * 3600 AS total_energy_consumption_joules, CASE WHEN 20000 * 1 * 3600 > 1e12 THEN '不可能实现可持续运行' ELSE '可能实现可持续运行' END AS sustainability_analysis FROM performance_tests WHERE cpu_score = 100000 AND gpu_score = 80000 AND ram_score = 60000 AND storage_score = 40000 AND overall_score = 90000 AND temperature_celsius = 500 AND power_consumption_watts = 20000;",
        "db_id": "computer"
    },
    {
        "id": 145,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'battery capacity (Wh)', 'power consumption (W)', 'theoretical runtime (hours)'], 'relations': ['capacity_to_runtime (runtime = battery_capacity / power_consumption)', 'computer_to_specs (computer_id → battery_capacity_wh, power_consumption_watts)'], 'intent': 'calculate_runtime_and_rank_top5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_capacity': 'Wh (watt-hours)', 'power_consumption': 'W (watts)', 'runtime': 'hours', 'conversion': 'runtime_hours = battery_capacity_wh / power_consumption_watts'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}], 'computer.performance_tests': [{'column': 'power_consumption_watts'}], 'computer.(computer_info': [{'column': 'battery_capacity_wh / performance_tests.power_consumption_watts) AS runtime_hours'}]}}\nA physical knowledge question is as follows:\nQuery the battery capacity (Wh) and power consumption (W) of all computers, calculate the theoretical runtime (hours) of each computer at full load, and sort by runtime from longest to shortest, taking the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ci.computer_id, ci.manufacturer, ci.model, ci.battery_capacity_wh, pt.power_consumption_watts, (ci.battery_capacity_wh / pt.power_consumption_watts) AS theoretical_runtime_hours FROM computer_info ci JOIN performance_tests pt ON ci.computer_id = pt.computer_id ORDER BY theoretical_runtime_hours DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 146,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer model', 'CPU cores', 'CPU threads', '2:1 ratio'], 'relations': ['model_to_cores (computer_model → cpu_cores)', 'model_to_threads (computer_model → cpu_threads)', 'cores_to_threads_ratio (cpu_cores : cpu_threads)'], 'intent': 'calculate_core_thread_ratio_and_identify_models_closest_to_2:1', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 1], 'units': {'ratio': 'unitless', 'proximity_metric': 'absolute_difference (|(cores/threads) - 2|)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}, {'column': 'cpu_cores', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['4', '10', '12', '8']}, {'column': 'cpu_threads', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '10', '16']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of CPU cores to threads for each computer model, and identify the models with ratios closest to 2:1. Sort the results from closest to farthest in terms of the ratio and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, manufacturer, model, cpu_cores, cpu_threads, (cpu_threads / cpu_cores) AS core_thread_ratio, ABS((cpu_threads / cpu_cores) - 2) AS ratio_difference FROM computer_info ORDER BY ratio_difference ASC LIMIT 3;",
        "db_id": "computer"
    },
    {
        "id": 147,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'screen size (inches)', 'screen resolution', 'pixel density (PPI)'], 'relations': ['resolution_to_pixels (screen_resolution → horizontal_pixels and vertical_pixels)', 'pixels_and_size_to_ppi (PPI = sqrt(horizontal_pixels² + vertical_pixels²) / screen_size_inches)'], 'intent': 'calculate_and_rank_computers_by_pixel_density', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'screen_size': 'inches', 'resolution': 'pixels (in format width x height)', 'pixel_density': 'PPI (pixels per inch)', 'conversion': 'PPI formula: diagonal pixels / screen size in inches'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'screen_size_inches', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['13.4', '16.2', '14.0', '13.5']}, {'column': 'screen_resolution', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['1920x1200', '3456x2234', '3000x2000', '2560x1600']}]}}\nA common sense reasoning question is as follows:\nQuery the screen size (in inches) and resolution of all computers, calculate the pixel density (PPI) for each computer, and sort them by pixel density in descending order, taking the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, manufacturer, model, screen_size_inches, screen_resolution, ROUND(SQRT(POW(SUBSTRING_INDEX(screen_resolution, 'x', 1), 2) + POW(SUBSTRING_INDEX(screen_resolution, 'x', -1), 2)) / screen_size_inches, 2) AS ppi FROM computer_info ORDER BY ppi DESC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 148,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'CPU base frequency', '100GHz new frequency', 'theoretical maximum performance improvement factor'], 'relations': ['frequency_scaling_relation (new_frequency / original_frequency)', 'computer_to_base_frequency (computer_id → cpu_base_frequency_ghz)'], 'intent': 'calculate_performance_improvement_factor_and_retrieve_top5', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100], 'units': {'frequency': 'GHz', 'improvement_factor': 'dimensionless ratio', 'conversion': 'performance_improvement = new_frequency / original_frequency'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the base frequency (GHz) of all computers' CPUs is increased to 100GHz, calculate the theoretical maximum performance improvement factor for each computer, and sort them from highest to lowest improvement factor, taking the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, manufacturer, model, cpu_base_frequency_ghz, (100 / cpu_base_frequency_ghz) AS performance_increase_factor FROM computer_info ORDER BY performance_increase_factor DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 149,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU model', 'base frequency (GHz)', 'maximum frequency (GHz)', 'frequency boost percentage'], 'relations': ['model_specification (CPU model → base_frequency and max_frequency)', 'boost_calculation (formula: (max_frequency - base_frequency) / base_frequency * 100)'], 'intent': 'retrieve_top_5_cpu_models_by_frequency_boost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'frequency': 'GHz (gigahertz)', 'boost_percentage': '% (unitless percentage)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'cpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Core i7-1165G7', 'Apple M1 Pro', 'Intel Core i5-1240P', 'Intel Core i7-1260P', 'AMD Ryzen 9 7940HS']}, {'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}]}}\nA physical knowledge question is as follows:\nQuery the base frequency (GHz) and maximum frequency (GHz) of all computer CPUs, calculate the frequency boost percentage for each CPU, and sort them in descending order by the boost percentage, then select the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, manufacturer, model, cpu_base_frequency_ghz, cpu_max_frequency_ghz, ROUND(((cpu_max_frequency_ghz - cpu_base_frequency_ghz) / cpu_base_frequency_ghz) * 100, 2) AS frequency_increase_percentage FROM computer_info ORDER BY frequency_increase_percentage DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 150,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer model', 'memory size (GB)', 'storage size (GB)', 'ratio 1:10'], 'relations': ['model_to_specs (computer model → ram_size_gb/storage_size_gb)', 'ratio_comparison (|(ram_size_gb / storage_size_gb) - 0.1|)'], 'intent': 'calculate_ratio_and_compare_to_target', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1, 10], 'units': {'memory': 'GB (gigabytes)', 'storage': 'GB (gigabytes)', 'ratio': 'dimensionless (memory:storage)', 'target': '1:10 (equivalent to 0.1)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}, {'column': 'ram_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['16', '32']}, {'column': 'storage_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['512', '1024']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of memory size (GB) to storage size (GB) for each computer model, find the models with the ratio closest to 1:10, sort them from closest to farthest, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, manufacturer, model, ram_size_gb, storage_size_gb, (ram_size_gb / storage_size_gb) AS ram_storage_ratio, ABS((ram_size_gb / storage_size_gb) - 0.1) AS ratio_difference FROM computer_info ORDER BY ratio_difference ASC LIMIT 3;",
        "db_id": "computer"
    },
    {
        "id": 151,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'weight (kg)', 'battery capacity (Wh)', 'battery capacity per unit weight (Wh/kg)'], 'relations': ['weight_to_computer (computer_id → weight_kg)', 'capacity_to_computer (computer_id → battery_capacity_wh)', 'calculation_relation (battery_capacity_wh / weight_kg → Wh/kg)'], 'intent': 'calculate_battery_capacity_per_kg_and_rank_top10', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'weight': 'kg (kilograms)', 'battery_capacity': 'Wh (watt-hours)', 'derived_unit': 'Wh/kg (watt-hours per kilogram)', 'conversion': 'direct division (battery_capacity_wh / weight_kg)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Dell', 'Apple', 'Lenovo', 'HP', 'Asus']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}, {'column': 'weight_kg', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['1.27', '2.15', '1.13', '1.34', '1.72']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}]}}\nA common sense reasoning question is as follows:\nQuery the weight (kg) and battery capacity (Wh) of all computers, calculate the battery capacity per unit weight (Wh/kg) for each computer, and sort them by battery capacity per unit weight from highest to lowest, then take the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, manufacturer, model, weight_kg, battery_capacity_wh, (battery_capacity_wh / weight_kg) AS battery_capacity_per_kg FROM computer_info ORDER BY battery_capacity_per_kg DESC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 152,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\"computers\", \"GPU memory (GB)\", \"1TB target memory\"],\n  \"relations\": [\n    \"memory_increase_ratio (new_memory / original_memory)\",\n    \"computer_to_memory (computer_id → gpu_vram_gb)\"\n  ],\n  \"intent\": \"calculate_memory_increase_multiple_and_rank_top5\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [1024],  // 1TB in GB\n  \"units\": {\n    \"memory\": \"GB (gigabytes)\",\n    \"conversion\": \"1 TB = 1024 GB\",\n    \"result_unit\": \"dimensionless multiple\"\n  },\n  \"required_tables\": [\"computer_info\"],\n  \"required_fields\": [\n    \"computer_info.computer_id\",\n    \"computer_info.gpu_vram_gb\"\n  ]\n}\nA hypothetical reasoning question is as follows:\nAssuming the GPU memory (GB) of all computers is increased to 1TB, calculate the multiple by which each computer's memory is increased, and sort them from highest to lowest multiple, taking the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, manufacturer, model, gpu_vram_gb, (1024 / gpu_vram_gb) AS vram_increase_factor FROM computer_info ORDER BY vram_increase_factor DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 153,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'power_consumption_watts', 'usage_duration_hours', 'computer_id', 'total_energy_consumption_wh'], 'relations': ['aggregation_per_computer (computer_id groups usage records)', 'energy_calculation (power_consumption_watts × usage_duration_hours → total_energy_wh)'], 'intent': 'calculate_and_rank_computer_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'power': 'watts (W)', 'duration': 'hours', 'energy': 'watt-hours (Wh)', 'conversion': 'energy (Wh) = power (W) × duration (hours)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA physical knowledge question is as follows:\nQuery the power consumption (W) and usage duration (hours) from all usage records, calculate the total energy consumption (Wh) for each computer, and sort them from highest to lowest by total energy consumption, taking the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, SUM(power_consumption_watts * usage_duration_hours) AS total_energy_consumption_wh FROM usage_records GROUP BY computer_id ORDER BY total_energy_consumption_wh DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 154,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer model', 'average CPU usage (%)', 'average GPU usage (%)', 'difference between CPU and GPU usage'], 'relations': ['model_to_usage (computer model → usage records via computer_id)', 'aggregation_relation (grouped by model to calculate averages)', 'computational_relation (difference calculation: avg(CPU) - avg(GPU))'], 'intent': 'calculate_top_3_models_by_cpu_gpu_usage_difference', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'cpu_usage': '% (percentage)', 'gpu_usage': '% (percentage)', 'difference': '% (percentage)', 'calculation': 'absolute difference (avg(CPU%) - avg(GPU%))'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}], 'computer.usage_records': [{'column': 'cpu_usage_percent'}, {'column': 'gpu_usage_percent'}]}}\nA mathematical logic question is as follows:\nCalculate the difference between the average CPU usage (%) and average GPU usage (%) for each computer model, identify the models with the largest differences, sort them in descending order by the difference value, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, AVG(cpu_usage_percent) AS avg_cpu_usage, AVG(gpu_usage_percent) AS avg_gpu_usage, (AVG(cpu_usage_percent) - AVG(gpu_usage_percent)) AS usage_difference FROM usage_records GROUP BY computer_id ORDER BY usage_difference DESC LIMIT 3;",
        "db_id": "computer"
    },
    {
        "id": 155,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'computer', 'temperature', 'usage duration'], 'relations': ['record_to_computer (usage_records.computer_id → computer_info.computer_id)', 'aggregation (temperature_celsius → average_temperature)'], 'intent': 'calculate_average_temperature_per_computer_and_retrieve_top_10', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [10], 'units': {'temperature': '°C (Celsius)', 'duration': 'hours'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'temperature_celsius'}, {'column': 'usage_duration_hours'}]}}\nA common sense reasoning question is as follows:\nRetrieve the temperature (in Celsius) and usage duration (in hours) from all usage records, calculate the average temperature for each computer, sort them in descending order by average temperature, and select the top 10 results.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, SUM(temperature_celsius * usage_duration_hours) / SUM(usage_duration_hours) AS avg_temperature FROM usage_records GROUP BY computer_id ORDER BY avg_temperature DESC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 156,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'usage duration 1000 hours', 'each computer', 'total energy consumption (Wh)', 'top 5'], 'relations': ['record_to_computer (usage_records.computer_id → computer_info.computer_id)', 'duration_to_energy (usage_duration_hours * power_consumption_watts → energy_wh)'], 'intent': 'calculate_hypothetical_total_energy_consumption_per_computer_and_rank_top5', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000, 5], 'units': {'time': 'hours (h)', 'power': 'watts (W)', 'energy': 'watt-hours (Wh)', 'conversion': 'energy_wh = power_consumption_watts × usage_duration_hours'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'power_consumption_watts'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the usage duration (in hours) in all usage records is increased to 1000 hours, calculate the total energy consumption (Wh) for each computer, sort them in descending order of total energy consumption, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, SUM(power_consumption_watts * 1000) AS total_energy_consumption_wh FROM usage_records GROUP BY computer_id ORDER BY total_energy_consumption_wh DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 157,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity (Wh)', 'power consumption (W)', 'battery_usage table', 'theoretical battery life (hours)', 'computer'], 'relations': ['battery_life_calculation (battery_capacity_wh / power_consumption_watts → battery_life_hours)', 'record_to_computer (battery_usage.computer_id → computer_info.computer_id)'], 'intent': 'calculate_theoretical_battery_life_per_computer_and_rank_top5', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'battery_capacity': 'Wh (watt-hours)', 'power_consumption': 'W (watts)', 'battery_life': 'hours', 'conversion_formula': 'battery_life_hours = battery_capacity_wh / power_consumption_watts'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}]}}\nA physical knowledge question is as follows:\nQuery all battery capacity (Wh) and power consumption (W) records in battery usage, calculate the theoretical battery life (hours) of each computer under full load operation, sort by battery life from longest to shortest, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, battery_capacity_wh, power_consumption_watts, (battery_capacity_wh / power_consumption_watts) AS theoretical_runtime_hours FROM battery_usage ORDER BY theoretical_runtime_hours DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 158,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer model', 'battery health percentage', 'usage hours'], 'relations': ['model_to_battery_health (computer model → battery_health_percent)', 'model_to_usage_hours (computer model → usage_duration_hours)', 'ratio_computation (battery_health_percent ÷ usage_duration_hours)'], 'intent': 'calculate_ratio_and_identify_top_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'battery_health': 'percent (%)', 'usage_duration': 'hours', 'ratio': '%/hour (implied unitless ratio)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}], 'computer.battery_usage': [{'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of battery health percentage to usage hours for each computer model, and identify the top 3 models with the smallest ratios, sorted in ascending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, (battery_health_percent / usage_duration_hours) AS health_usage_ratio FROM battery_usage ORDER BY health_usage_ratio ASC LIMIT 3;",
        "db_id": "computer"
    },
    {
        "id": 159,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery_usage records', 'temperature_celsius', 'usage_duration_hours', 'computer'], 'relations': ['battery_usage_computer_id_relation (battery_usage.computer_id → computer_info.computer_id)'], 'intent': 'calculate_average_temperature_per_computer_and_retrieve_top10', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'temperature': 'Celsius (temperature_celsius)', 'usage_duration': 'hours (usage_duration_hours)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '40.0', '38.0', '42.0', '45.0']}]}}\nA common sense reasoning question is as follows:\nQuery all battery usage records for temperature (in Celsius) and usage duration (in hours), calculate the average temperature per computer, and sort by average temperature from highest to lowest, taking the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, SUM(temperature_celsius * usage_duration_hours) / SUM(usage_duration_hours) AS avg_temperature FROM battery_usage GROUP BY computer_id ORDER BY avg_temperature DESC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 160,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity', 'battery usage records', 'theoretical battery life', 'computer'], 'relations': ['computer_to_battery_usage (computer_id → battery_usage records)', 'capacity_to_life (battery_capacity_wh → battery_life via power_consumption)'], 'intent': 'calculate_and_rank_battery_life_under_hypothetical_capacity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000], 'units': {'battery_capacity': 'Wh (watt-hours)', 'power_consumption': 'W (watts)', 'battery_life': 'hours', 'conversion': 'battery_life_hours = battery_capacity_wh / power_consumption_watts'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the battery capacity (Wh) in all battery usage records is increased to 10000Wh, calculate the theoretical battery life (hours) for each computer, and sort them in descending order of battery life, taking the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, (10000 / power_consumption_watts) AS theoretical_runtime_hours FROM battery_usage ORDER BY theoretical_runtime_hours DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 161,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'performance test records', 'power consumption (W)', 'test duration (hours)', 'temperature (Celsius)', 'total energy consumption (Wh)', 'average cooling power (W)', 'ratio of total energy consumption to average cooling power'], 'relations': ['records_belong_to_computer (performance test records → computer via computer_id)', 'aggregation_by_computer (grouping test records per computer for calculations)', 'energy_calculation (power_consumption_watts × usage_duration_hours → total_energy_wh)', 'power_averaging (mean of power_consumption_watts per computer → average_cooling_power)'], 'intent': 'retrieve_top5_computers_by_energy_power_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'power': 'W (watts)', 'duration': 'hours', 'energy': 'Wh (watt-hours)', 'temperature': '°C (Celsius)', 'ratio': 'dimensionless (energy/power = time in hours)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'temperature_celsius'}, {'column': 'usage_type'}]}}\nA physical knowledge question is as follows:\nQuery the power consumption (W), test duration (hours), and temperature (Celsius) from all performance test records, calculate the total energy consumption (Wh) and average cooling power (W) for each computer during the test, and sort them by the ratio of total energy consumption to average cooling power in descending order, taking the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, SUM(power_consumption_watts * 1) AS total_energy_consumption_wh, SUM(power_consumption_watts * 1) / COUNT(*) * (1 - (25 / AVG(temperature_celsius))) AS avg_cooling_power_w FROM performance_tests GROUP BY computer_id ORDER BY (total_energy_consumption_wh / avg_cooling_power_w) DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 162,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'CPU score', 'GPU score', 'memory score (RAM score)', 'storage score', 'weights (40%, 30%, 20%, 10%)', 'weighted sum', 'computer model'], 'relations': ['computer_to_scores (via performance_tests.computer_id)', 'computer_to_model (via computer_info.computer_id)', 'score_weight_relationship (weighted calculation)'], 'intent': 'calculate_weighted_sum_per_computer_and_identify_top_3_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [40, 30, 20, 10], 'units': {'weights': 'percentage (%)', 'scores': 'unitless (raw performance metrics)'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'computer_id'}, {'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'ram_score'}, {'column': 'storage_score'}], 'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}]}}\nA mathematical logic question is as follows:\nCalculate the weighted sum of CPU score, GPU score, memory score, and storage score for each computer (with weights of 40%, 30%, 20%, and 10% respectively), identify the computer model with the highest weighted sum, and sort them in descending order by weighted sum, taking the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, (cpu_score * 0.4 + gpu_score * 0.3 + ram_score * 0.2 + storage_score * 0.1) AS weighted_score FROM performance_tests ORDER BY weighted_score DESC LIMIT 3;",
        "db_id": "computer"
    },
    {
        "id": 163,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'performance test records', 'cooling efficiency'], 'relations': ['performance_tests.computer_id references computer_info.computer_id', 'aggregation by computer_id for efficiency calculation'], 'intent': 'calculate and rank computers by cooling efficiency (W/°C) from performance test data and get top 10 with lowest efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'temperature': '°C', 'power': 'W', 'cooling_efficiency': 'W/°C'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'computer_id'}, {'column': 'temperature_celsius'}, {'column': 'power_consumption_watts'}]}}\nA common sense reasoning question is as follows:\nQuery the temperature (in Celsius), power consumption (W), and test duration (hours) from all performance test records, calculate the cooling efficiency (W/°C) of each computer, sort them by cooling efficiency from low to high, and take the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, power_consumption_watts / (temperature_celsius - 25) AS cooling_efficiency_w_per_c FROM performance_tests ORDER BY cooling_efficiency_w_per_c ASC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 164,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'performance_test', 'CPU score', 'GPU score', 'memory score', 'storage score'], 'relations': ['computer_has_test (computer_id → performance_tests)', 'score_comparison (original_score vs 100,000_points)', 'performance_improvement_calculation'], 'intent': 'calculate_top5_performance_improvement_multiplier', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000], 'units': {'performance_score': 'points (unitless measurement)', 'improvement_multiplier': 'dimensionless ratio'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'computer_id'}, {'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'ram_score'}, {'column': 'storage_score'}, {'column': 'overall_score'}], 'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}]}}\nA hypothetical reasoning question is as follows:\nAssuming all performance test records have their CPU score, GPU score, memory score, and storage score increased to 100,000 points, calculate the performance improvement multiplier for each computer, then sort them in descending order by the multiplier and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, (100000 * 0.4 + 100000 * 0.3 + 100000 * 0.2 + 100000 * 0.1) / (cpu_score * 0.4 + gpu_score * 0.3 + ram_score * 0.2 + storage_score * 0.1) AS performance_increase_factor FROM performance_tests ORDER BY performance_increase_factor DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 165,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'CPU base frequency (GHz)', 'CPU maximum frequency (GHz)', 'frequency increase percentage'], 'relations': ['manufacturer_aggregation (group computers by manufacturer)', 'frequency_relationship (comparing base vs max frequency for percentage calculation)'], 'intent': 'compute_manufacturer_avg_frequency_and_increase_percentage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'frequency': 'GHz (gigahertz)', 'percentage': '% (unitless, calculated as (avg_max - avg_base)/avg_base * 100)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Dell', 'Apple', 'Lenovo', 'HP', 'Asus']}, {'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}]}}\nA physical knowledge question is as follows:\nGroup by manufacturer, calculate the average CPU base frequency (GHz) and average CPU maximum frequency (GHz) for each manufacturer, then compute the frequency increase percentage, sorted by the increase percentage from highest to lowest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturer, AVG(cpu_base_frequency_ghz) AS avg_base_frequency, AVG(cpu_max_frequency_ghz) AS avg_max_frequency, (AVG(cpu_max_frequency_ghz) - AVG(cpu_base_frequency_ghz)) / AVG(cpu_base_frequency_ghz) * 100 AS frequency_increase_percentage FROM computer_info GROUP BY manufacturer ORDER BY frequency_increase_percentage DESC;",
        "db_id": "computer"
    },
    {
        "id": 166,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['memory type (ram_type)', 'memory size (GB)', 'storage size (GB)', 'ratio'], 'relations': ['grouping_by: ram_type → aggregation', 'calculation: avg(ram_size_gb) / avg(storage_size_gb) → ratio', 'sorting: ratio DESC'], 'intent': 'calculate_ratio_of_averages_per_group_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'ram_size': 'GB', 'storage_size': 'GB', 'ratio': 'dimensionless (GB/GB)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'ram_type', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['DDR4', 'LPDDR5', 'DDR5']}, {'column': 'ram_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['16', '32']}, {'column': 'storage_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['512', '1024']}]}}\nA mathematical logic question is as follows:\nGroup by memory type (ram_type), calculate the ratio of average memory size (GB) to average storage size (GB) for each memory type, and sort by the ratio from high to low.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ram_type, AVG(ram_size_gb) / AVG(storage_size_gb) AS ram_storage_ratio FROM computer_info GROUP BY ram_type ORDER BY ram_storage_ratio DESC;",
        "db_id": "computer"
    },
    {
        "id": 167,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['screen_size_inches', 'battery_capacity_wh', 'weight_kg', 'battery_capacity_per_weight_wh_kg'], 'relations': ['grouped_by(screen_size_inches → average_battery_capacity_wh)', 'grouped_by(screen_size_inches → average_weight_kg)', 'calculated_from(battery_capacity_wh / weight_kg → battery_capacity_per_weight_wh_kg)'], 'intent': 'aggregate_computers_by_screen_size_and_compute_energy_density', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_capacity': 'Wh (watt-hours)', 'weight': 'kg (kilograms)', 'energy_density': 'Wh/kg (watt-hours per kilogram)', 'conversion': 'Wh/kg = battery_capacity_wh / weight_kg'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'screen_size_inches', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['13.4', '16.2', '14.0', '13.5']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'weight_kg', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['1.27', '2.15', '1.13', '1.34', '1.72']}]}}\nA common sense reasoning question is as follows:\nGroup by screen size (screen_size_inches), calculate the average battery capacity (Wh) and average weight (kg) for each screen size range, and compute the battery capacity per unit weight (Wh/kg). Sort by battery capacity per unit weight in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT screen_size_inches, AVG(battery_capacity_wh) AS avg_battery_capacity, AVG(weight_kg) AS avg_weight, AVG(battery_capacity_wh) / AVG(weight_kg) AS battery_capacity_per_kg FROM computer_info GROUP BY screen_size_inches ORDER BY battery_capacity_per_kg DESC;",
        "db_id": "computer"
    },
    {
        "id": 168,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['production_year', 'cpu_cores', '100 cores'], 'relations': ['year_to_cpu_cores (production_year → original cpu_cores values)', 'improvement_multiplier_calculation (100 / original_cpu_cores)'], 'intent': 'calculate_average_core_improvement_multiplier_by_year_sorted_desc', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'core_count': 'cores (unitless count)', 'improvement_multiplier': 'ratio (unitless)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'production_year', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['2022', '2021', '2023']}, {'column': 'cpu_cores', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['4', '10', '12', '8']}]}}\nA hypothetical reasoning question is as follows:\nGroup by production year (production_year), assuming all computers' CPU core counts (cpu_cores) are increased to 100 cores, calculate the average core count improvement multiplier for computers in each production year, and sort by improvement multiplier from highest to lowest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT production_year, 100 / AVG(cpu_cores) AS core_increase_factor FROM computer_info GROUP BY production_year ORDER BY core_increase_factor DESC;",
        "db_id": "computer"
    },
    {
        "id": 169,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_type', 'power consumption (W)', 'usage duration (hours)', 'total energy consumption (Wh)'], 'relations': ['grouping_relation (usage_type → aggregated metrics)', 'computation_relation (total_energy = power_consumption × usage_duration)'], 'intent': 'aggregate_and_sort_energy_usage_by_usage_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'watts (W)', 'duration': 'hours', 'energy': 'watt-hours (Wh)', 'conversion': 'energy = power × time (Wh = W × hours)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_type'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA physical knowledge question is as follows:\nGroup by usage type (usage_type), calculate the average power consumption (W) and average usage duration (hours) for each usage type, and compute the total energy consumption (Wh), then sort by total energy consumption in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT usage_type, AVG(power_consumption_watts) AS avg_power_consumption, AVG(usage_duration_hours) AS avg_usage_duration, AVG(power_consumption_watts) * AVG(usage_duration_hours) AS total_energy_consumption_wh FROM usage_records GROUP BY usage_type ORDER BY total_energy_consumption_wh DESC;",
        "db_id": "computer"
    },
    {
        "id": 170,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_date (month)', 'average CPU usage (%)', 'average GPU usage (%)', 'average memory usage (%)', 'CPU-GPU difference'], 'relations': ['monthly_aggregation (group by usage_date month)', 'average_calculation (CPU/GPU/memory usage)', 'difference_computation (CPU - GPU)', 'descending_sort (by difference)'], 'intent': 'calculate_monthly_avg_usage_and_cpu_gpu_difference', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'usage_metrics': '% (percentage)', 'time_unit': 'month (from usage_date)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_date'}, {'column': 'cpu_usage_percent'}, {'column': 'gpu_usage_percent'}, {'column': 'ram_usage_percent'}]}}\nA mathematical logic question is as follows:\nGroup by the month of the usage date (usage_date), calculate the average CPU usage (%), average GPU usage (%), and average memory usage (%) for each month, compute the difference between CPU and GPU usage, and sort in descending order by the difference.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MONTH(usage_date) AS usage_month, AVG(cpu_usage_percent) AS avg_cpu_usage, AVG(gpu_usage_percent) AS avg_gpu_usage, AVG(ram_usage_percent) AS avg_ram_usage, (AVG(cpu_usage_percent) - AVG(gpu_usage_percent)) AS usage_difference FROM usage_records GROUP BY usage_month ORDER BY usage_difference DESC;",
        "db_id": "computer"
    },
    {
        "id": 171,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_type', 'temperature_celsius', 'usage_duration_hours'], 'relations': ['grouping_by_usage_type', 'average_temperature_per_group', 'average_duration_per_group', 'derived_temperature_rate'], 'intent': 'compute_aggregated_metrics_and_derived_rate_by_usage_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'duration': 'hours (h)', 'derived_rate': '°C/h (Celsius per hour)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_type'}, {'column': 'temperature_celsius'}, {'column': 'usage_duration_hours'}]}}\nA common sense reasoning question is as follows:\nGrouped by usage type (usage_type), calculate the average temperature (in Celsius) and average duration of use (in hours) for each usage type, then compute the temperature rise per unit of time (°C/h), and sort by the temperature rise per unit of time in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT usage_type, AVG(temperature_celsius) AS avg_temperature, AVG(usage_duration_hours) AS avg_usage_duration, AVG(temperature_celsius) / AVG(usage_duration_hours) AS temperature_increase_per_hour FROM usage_records GROUP BY usage_type ORDER BY temperature_increase_per_hour DESC;",
        "db_id": "computer"
    },
    {
        "id": 172,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_type', 'power consumption', 'total energy consumption'], 'relations': ['group_by(usage_type → total_energy_consumption)', 'power_to_energy_conversion(10000W * duration → Wh)', 'sort_desc(total_energy_consumption)'], 'intent': 'calculate_and_compare_total_energy_consumption_by_usage_type_under_hypothetical_power_increase', 'reasoning_type': 'mathematical logic reasoning, ideal hypothesis reasoning', 'numerical_values': [10000], 'units': {'power': 'W (watts)', 'energy': 'Wh (watt-hours)', 'conversion_formula': 'energy (Wh) = power (W) × time (hours)', 'duration_unit': 'hours'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_type'}, {'column': 'usage_duration_hours'}]}}\nA hypothetical reasoning question is as follows:\nGroup by usage type (usage_type), assuming the power consumption (W) of all records increases to 10000W, calculate the total energy consumption (Wh) for each usage type, and sort by total energy consumption from high to low.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT usage_type, 10000 * AVG(usage_duration_hours) AS total_energy_consumption_wh FROM usage_records GROUP BY usage_type ORDER BY total_energy_consumption_wh DESC;",
        "db_id": "computer"
    },
    {
        "id": 173,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_date', 'battery_health_percent', 'usage_duration_hours', 'battery_health_degradation_rate'], 'relations': ['yearly_grouping (usage_date → year)', 'degradation_calculation (avg_battery_health_percent / avg_usage_duration_hours)'], 'intent': 'calculate_yearly_battery_metrics_and_degradation_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_health': '% (percent)', 'usage_duration': 'hours (h)', 'degradation_rate': '%/h (percent per hour)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'usage_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA physical knowledge question is as follows:\nGroup by the year of usage date (usage_date), calculate the average battery health (%) and average usage duration (hours) for each year, and compute the battery health degradation rate (%/h), sorted by the degradation rate in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT YEAR(usage_date) AS usage_year, AVG(battery_health_percent) AS avg_battery_health, AVG(usage_duration_hours) AS avg_usage_duration, AVG(battery_health_percent) / AVG(usage_duration_hours) AS battery_health_decay_rate FROM battery_usage GROUP BY usage_year ORDER BY battery_health_decay_rate DESC;",
        "db_id": "computer"
    },
    {
        "id": 174,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity ranges (0-50Wh, 50-100Wh, above 100Wh)', 'average power consumption (W)', 'average usage duration (hours)', 'theoretical battery life (hours)'], 'relations': ['grouped_by(battery_capacity_range)', 'calculated_average(power_consumption_watts)', 'calculated_average(usage_duration_hours)', 'computed(theoretical_battery_life = battery_capacity_wh / power_consumption_watts)'], 'intent': 'calculate_metrics_grouped_by_battery_capacity_ranges_and_sort_by_battery_life', 'reasoning_type': 'mathematical logic reasoning, physical knowledge reasoning', 'numerical_values': [0, 50, 100], 'units': {'battery_capacity': 'Wh (watt-hours)', 'power_consumption': 'W (watts)', 'usage_duration': 'hours', 'battery_life': 'hours', 'conversion': 'theoretical_battery_life = battery_capacity_wh / power_consumption_watts'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}, {'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'computer.battery_usage': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'computer.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}, {'column': 'computer_id'}]}}\nA mathematical logic question is as follows:\nGroup by battery capacity (battery_capacity_wh) ranges (e.g., 0-50Wh, 50-100Wh, above 100Wh), calculate the average power consumption (W) and average usage duration (hours) for each capacity range, and compute the theoretical battery life (hours). Sort by battery life from longest to shortest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN battery_capacity_wh <= 50 THEN '0-50Wh' WHEN battery_capacity_wh > 50 AND battery_capacity_wh <= 100 THEN '50-100Wh' ELSE '100Wh以上' END AS capacity_range, AVG(battery_capacity_wh) AS avg_battery_capacity, AVG(power_consumption_watts) AS avg_power_consumption, AVG(usage_duration_hours) AS avg_usage_duration, AVG(battery_capacity_wh) / AVG(power_consumption_watts) AS theoretical_runtime_hours FROM battery_usage GROUP BY capacity_range ORDER BY theoretical_runtime_hours DESC;",
        "db_id": "computer"
    },
    {
        "id": 175,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_date (month)', 'temperature (Celsius)', 'battery health (%)'], 'relations': ['monthly_grouping (usage_date → month)', 'temperature_battery_correlation (average_temperature → average_battery_health)'], 'intent': 'calculate_monthly_average_temperature_and_battery_health_then_analyze_correlation_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'battery_health': '% (percentage)', 'conversion': 'None required'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'usage_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '40.0', '38.0', '42.0', '45.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA common sense reasoning question is as follows:\nGroup by the month of the usage date (usage_date), calculate the average temperature (in Celsius) and average battery health (%) for each month, analyze the impact of temperature on battery health, and sort by average temperature from highest to lowest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MONTH(usage_date) AS usage_month, AVG(temperature_celsius) AS avg_temperature, AVG(battery_health_percent) AS avg_battery_health FROM battery_usage GROUP BY usage_month ORDER BY avg_temperature DESC;",
        "db_id": "computer"
    },
    {
        "id": 176,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery health level (battery_health_percent)', 'battery capacity (10,000Wh)', 'theoretical endurance time (hours)'], 'relations': ['health_range_grouping (battery_health_percent → range categories)', 'endurance_calculation (battery_capacity_wh / power_consumption_watts → endurance_time)'], 'intent': 'calculate_and_compare_endurance_time_by_battery_health_ranges', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 0, 50, 80, 100], 'units': {'battery_capacity': 'Wh (Watt-hours)', 'power_consumption': 'W (Watts)', 'endurance_time': 'hours', 'conversion_formula': 'endurance_time = battery_capacity_wh / power_consumption_watts'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}]}}\nA hypothetical reasoning question is as follows:\nGroup by battery health level (battery_health_percent) ranges (e.g., 0-50%, 50-80%, 80-100%). Assuming the battery capacity (Wh) for all records increases to 10,000Wh, calculate the theoretical endurance time (hours) within each health level range and sort by endurance time from longest to shortest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN battery_health_percent <= 50 THEN '0-50%' WHEN battery_health_percent > 50 AND battery_health_percent <= 80 THEN '50-80%' ELSE '80-100%' END AS health_range, 10000 / AVG(power_consumption_watts) AS theoretical_runtime_hours FROM battery_usage GROUP BY health_range ORDER BY theoretical_runtime_hours DESC;",
        "db_id": "computer"
    },
    {
        "id": 177,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['test_type', 'power consumption (W)', 'test duration (hours)', 'total energy consumption (Wh)'], 'relations': ['grouped_by (test_type → aggregates)', 'energy_calculation (power_consumption * duration → energy)'], 'intent': 'aggregate_and_compare_energy_metrics_by_test_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'watts (W)', 'duration': 'hours (h)', 'energy': 'watt-hours (Wh) = watts × hours'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'test_type'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours (implicitly derived from test context)'}]}}\nA physical knowledge question is as follows:\nGroup by test_type, calculate the average power consumption (W) and average test duration (hours) for each test type, and compute the total energy consumption (Wh), then sort by total energy consumption from highest to lowest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT test_type, AVG(power_consumption_watts) AS avg_power_consumption, 1 AS avg_test_duration, AVG(power_consumption_watts) * 1 AS total_energy_consumption_wh FROM performance_tests GROUP BY test_type ORDER BY total_energy_consumption_wh DESC;",
        "db_id": "computer"
    },
    {
        "id": 178,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['test_date (year component)', 'CPU score', 'GPU score', 'overall_score', 'CPU:GPU ratio'], 'relations': ['year_aggregation (test_date → grouped by year)', 'score_average_relation (year → avg(cpu_score), avg(gpu_score), avg(overall_score))', 'ratio_computation (cpu_score / gpu_score → ratio)'], 'intent': 'aggregate_performance_metrics_by_year_and_rank_by_cpu_gpu_balance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1], 'units': {'scores': 'dimensionless (performance units)', 'ratio': 'dimensionless (cpu_score : gpu_score)', 'reference_value': '1 (for 1:1 ratio comparison)'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'test_date'}, {'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'overall_score'}]}}\nA mathematical logic question is as follows:\nGroup by the year of the test date (test_date), calculate the average CPU score, average GPU score, and average overall score (overall_score) for each year, and compute the ratio of CPU score to GPU score. Sort the results from the ratio closest to 1:1 to the furthest from 1:1.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT YEAR(test_date) AS test_year, AVG(cpu_score) AS avg_cpu_score, AVG(gpu_score) AS avg_gpu_score, AVG(overall_score) AS avg_overall_score, ABS((AVG(cpu_score) / AVG(gpu_score)) - 1) AS cpu_gpu_score_ratio_difference FROM performance_tests GROUP BY test_year ORDER BY cpu_gpu_score_ratio_difference ASC;",
        "db_id": "computer"
    },
    {
        "id": 179,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['test_type', 'average temperature', 'average test duration', 'temperature rise per unit time'], 'relations': ['group_by (test_type → aggregate metrics)', 'calculate (average_temperature = AVG(temperature_celsius))', 'calculate (average_duration = AVG(usage_duration_hours))', 'compute (temperature_rise_per_hour = average_temperature / average_duration)'], 'intent': 'aggregate_test_metrics_and_compute_temperature_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'duration': 'hours (h)', 'rate': '°C/h (Celsius per hour)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_type (as test_type)'}, {'column': 'temperature_celsius'}, {'column': 'usage_duration_hours'}]}}\nA common sense reasoning question is as follows:\nGroup by test type (test_type), calculate the average temperature (in Celsius) and average test duration (in hours) for each test type, and compute the temperature rise per unit time (°C/h), sorted by temperature rise per unit time in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT test_type, AVG(temperature_celsius) AS avg_temperature, 1 AS avg_test_duration, AVG(temperature_celsius) / 1 AS temperature_increase_per_hour FROM performance_tests GROUP BY test_type ORDER BY temperature_increase_per_hour DESC;",
        "db_id": "computer"
    },
    {
        "id": 180,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['test_type', 'CPU score', 'GPU score', 'memory score', 'storage score', 'comprehensive performance improvement multiple'], 'relations': ['test_type_to_scores (test_type → cpu_score, gpu_score, ram_score, storage_score)', 'score_comparison (original_scores → elevated_scores_100000)', 'improvement_calculation (original_avg_score → new_avg_score)'], 'intent': 'calculate_performance_improvement_multiple_by_test_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000], 'units': {'score_units': 'points (dimensionless)', 'improvement_unit': 'multiple (ratio)'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'test_type'}, {'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'ram_score'}, {'column': 'storage_score'}]}}\nA hypothetical reasoning question is as follows:\nGroup by test type (test_type), assuming the CPU score, GPU score, memory score, and storage score of all records are increased to 100,000 points. Calculate the comprehensive performance improvement multiple for each test type and sort them in descending order of the improvement multiple.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT test_type, (100000 * 0.4 + 100000 * 0.3 + 100000 * 0.2 + 100000 * 0.1) / (AVG(cpu_score) * 0.4 + AVG(gpu_score) * 0.3 + AVG(ram_score) * 0.2 + AVG(storage_score) * 0.1) AS performance_increase_factor FROM performance_tests GROUP BY test_type ORDER BY performance_increase_factor DESC;",
        "db_id": "computer"
    },
    {
        "id": 181,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer models', 'CPU base frequency', 'CPU maximum frequency'], 'relations': ['base_frequency_condition (> 3.0 GHz)', 'max_frequency_condition (< 4.0 GHz exclusion)', 'set_difference (inclusion after exclusion)'], 'intent': 'retrieve_computer_models_by_cpu_frequency_criteria', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3.0, 4.0], 'units': {'frequency': 'GHz (gigahertz)', 'conversion': 'direct comparison (no unit conversion required)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}, {'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}]}}\nA physical knowledge question is as follows:\nQuery all computer models with a CPU base frequency (GHz) greater than 3.0GHz, and exclude those computer models with a CPU maximum frequency (GHz) less than 4.0GHz, returning the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturer, model, cpu_base_frequency_ghz, cpu_max_frequency_ghz FROM computer_info WHERE cpu_base_frequency_ghz > 3.0 AND cpu_max_frequency_ghz < 4.0;",
        "db_id": "computer"
    },
    {
        "id": 182,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer models', 'memory size greater than 16GB', 'storage size less than 512GB'], 'relations': ['attribute_constraint (memory_size > 16GB)', 'exclusion_constraint (storage_size < 512GB)', 'set_difference (inclusion set minus exclusion set)'], 'intent': 'retrieve_computer_models_by_memory_and_storage_with_exclusion', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [16, 512], 'units': {'memory_size': 'GB (gigabytes)', 'storage_size': 'GB (gigabytes)', 'comparison_units': 'same unit (GB) for both conditions'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}, {'column': 'ram_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['16', '32']}, {'column': 'storage_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['512', '1024']}]}}\nA mathematical logic question is as follows:\nQuery all computer models with memory size (GB) greater than 16GB, and exclude those computer models with storage size (GB) less than 512GB, returning the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturer, model, ram_size_gb, storage_size_gb FROM computer_info WHERE ram_size_gb > 16 AND storage_size_gb < 512;",
        "db_id": "computer"
    },
    {
        "id": 183,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer models', 'screen size >15 inches', 'weight ≤2.5 kg'], 'relations': ['screen_size_constraint (screen_size_inches > 15)', 'weight_constraint (weight_kg <= 2.5)', 'model_to_specs (model → screen_size_inches/weight_kg)'], 'intent': 'retrieve_computer_models_by_screen_and_weight', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15, 2.5], 'units': {'screen_size': 'inches (native unit in schema)', 'weight': 'kg (native unit in schema)', 'conversion': 'no unit conversion required'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}, {'column': 'screen_size_inches', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['13.4', '16.2', '14.0', '13.5']}, {'column': 'weight_kg', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['1.27', '2.15', '1.13', '1.34', '1.72']}]}}\nA common sense reasoning question is as follows:\nQuery all computer models with screen size (inches) greater than 15 inches, and exclude those models with weight (kg) exceeding 2.5 kg, returning the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturer, model, screen_size_inches, weight_kg FROM computer_info WHERE screen_size_inches > 15 AND weight_kg > 2.5;",
        "db_id": "computer"
    },
    {
        "id": 184,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer models', 'battery capacity (200Wh)', 'CPU cores (less than 8 cores)'], 'relations': ['hypothetical_update (battery_capacity_wh → 200Wh for all computers)', 'filter_condition (cpu_cores < 8)', 'set_difference (computers meeting condition MINUS computers with original 200Wh battery)'], 'intent': 'find_computer_models_affected_by_battery_increase_with_cpu_constraint', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [200, 8], 'units': {'battery_capacity': 'Wh (watt-hours)', 'cpu_cores': 'cores (count)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}, {'column': 'cpu_cores', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['4', '10', '12', '8']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the battery capacity (Wh) of all computers is increased to 200Wh, query the computer models with CPU cores (cpu_cores) less than 8 cores, and return the difference set results.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturer, model, battery_capacity_wh, cpu_cores FROM computer_info WHERE cpu_cores < 8;",
        "db_id": "computer"
    },
    {
        "id": 185,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'power consumption (W)', 'usage duration (hours)', 'total energy consumption (Wh)'], 'relations': ['power_duration_to_energy (power consumption * usage duration → total energy)', 'exclusion_condition (total energy < 500Wh)'], 'intent': 'filter_records_by_power_duration_and_energy_thresholds', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 2, 500], 'units': {'power': 'W (watts)', 'duration': 'hours', 'energy': 'Wh (watt-hours)', 'conversion': 'energy = power × duration'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_id'}, {'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA physical knowledge question is as follows:\nQuery all usage records where the power consumption (W) is greater than 100W and the usage duration (hours) is greater than 2 hours, and exclude those records with a total energy consumption (Wh = power consumption * usage duration) less than 500Wh, returning the set difference result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, power_consumption_watts, usage_duration_hours, (power_consumption_watts * usage_duration_hours) AS total_energy_consumption_wh FROM usage_records WHERE power_consumption_watts > 100 AND usage_duration_hours > 2 AND (power_consumption_watts * usage_duration_hours) < 500;",
        "db_id": "computer"
    },
    {
        "id": 186,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'CPU usage (%) >80%', 'GPU usage (%) >60%', '|CPU usage - GPU usage| <=20%'], 'relations': ['threshold_comparison (CPU usage > 80%)', 'threshold_comparison (GPU usage > 60%)', 'difference_constraint (|CPU-GPU| ≤ 20%)'], 'intent': 'filter_usage_records_by_thresholds_and_difference', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 60, 20], 'units': {'usage_metrics': '% (percentage)', 'difference_metric': '% (absolute percentage difference)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_id'}, {'column': 'computer_id'}, {'column': 'cpu_usage_percent'}, {'column': 'gpu_usage_percent'}]}}\nA mathematical logic question is as follows:\nQuery all usage records where the CPU usage (%) is greater than 80% and GPU usage (%) is greater than 60%, and exclude those records where the difference between CPU and GPU usage (|CPU usage - GPU usage|) is greater than 20%, then return the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, cpu_usage_percent, gpu_usage_percent, ABS(cpu_usage_percent - gpu_usage_percent) AS usage_difference FROM usage_records WHERE cpu_usage_percent > 80 AND gpu_usage_percent > 60 AND ABS(cpu_usage_percent - gpu_usage_percent) > 20;",
        "db_id": "computer"
    },
    {
        "id": 187,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'temperature (70°C)', 'usage duration (1 hour)', 'temperature rise rate (10°C/h)'], 'relations': ['record_conditions (usage records → temperature > 70°C AND duration > 1 hour)', 'rate_exclusion (temperature / duration < 10°C/h → exclude records)', 'difference_set (A - B where A=initial filter, B=excluded records)'], 'intent': 'filter_and_exclude_records_based_on_temperature_duration_and_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70, 1, 10], 'units': {'temperature': '°C (Celsius)', 'duration': 'hours', 'rate': '°C/h (Celsius per hour)', 'conversion': 'rate = temperature_celsius / usage_duration_hours'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_id'}, {'column': 'temperature_celsius'}, {'column': 'usage_duration_hours'}]}}\nA common sense reasoning question is as follows:\nQuery all usage records where the temperature (in Celsius) is greater than 70°C and the usage duration (in hours) is greater than 1 hour, and exclude those records with a temperature rise rate per unit time (°C/h = temperature / usage duration) less than 10°C/h, returning the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, temperature_celsius, usage_duration_hours, (temperature_celsius / usage_duration_hours) AS temperature_increase_per_hour FROM usage_records WHERE temperature_celsius > 70 AND usage_duration_hours > 1 AND (temperature_celsius / usage_duration_hours) < 10;",
        "db_id": "computer"
    },
    {
        "id": 188,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'power consumption (1000W)', 'total energy consumption (Wh)', 'temperature (50°C)'], 'relations': ['energy_calculation (power_consumption_watts * usage_duration_hours → Wh)', 'temperature_threshold (exclude <50°C)'], 'intent': 'retrieve_usage_records_meeting_energy_and_temperature_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 5000, 50], 'units': {'power': 'W (watts)', 'energy': 'Wh (watt-hours)', 'temperature': '°C (Celsius)', 'conversion_formula': 'energy_wh = power_w * duration_hours'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'usage_id'}, {'column': 'usage_duration_hours'}, {'column': 'power_consumption_watts'}, {'column': 'temperature_celsius'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power consumption (W) in all usage records increases to 1000W, query the records where the total energy consumption (Wh = power consumption * usage duration) exceeds 5000Wh, and exclude those records with a temperature (in Celsius) below 50°C, then return the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, 1000 AS assumed_power_consumption, usage_duration_hours, (1000 * usage_duration_hours) AS total_energy_consumption_wh, temperature_celsius FROM usage_records WHERE (1000 * usage_duration_hours) > 5000 AND temperature_celsius < 50;",
        "db_id": "computer"
    },
    {
        "id": 189,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery usage records', 'battery health percentage', 'energy consumption per unit time (Wh/h)'], 'relations': ['health_threshold_condition (battery_health_percent > 80%)', 'energy_rate_calculation (power_consumption_watts / usage_duration_hours)', 'exclusion_condition (energy_rate > 50 Wh/h)'], 'intent': 'filter_battery_usage_records_by_health_and_energy_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 50], 'units': {'battery_health': '% (percentage)', 'power_consumption': 'watts (W)', 'duration': 'hours (h)', 'energy_rate': 'Wh/h (Watt-hours per hour)', 'conversion_note': '1 Wh/h ≡ 1 Watt (power equivalence)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_usage_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'usage_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '40.0', '38.0', '42.0', '45.0']}]}}\nA physical knowledge question is as follows:\nQuery all battery usage records where the battery health (%) is greater than 80%, and exclude those records with an energy consumption per unit time (Wh/h = power consumption / usage duration) greater than 50Wh/h, then return the difference result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, battery_health_percent, power_consumption_watts, usage_duration_hours, (power_consumption_watts / usage_duration_hours) AS energy_consumption_per_hour FROM battery_usage WHERE battery_health_percent > 80 AND (power_consumption_watts / usage_duration_hours) > 50;",
        "db_id": "computer"
    },
    {
        "id": 190,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery usage records', 'battery capacity >60Wh', 'battery health degradation rate <=2%/h'], 'relations': ['degradation_calculation (using battery_health_percent and usage_duration_hours)', 'capacity_filter (direct column comparison)'], 'intent': 'retrieve_battery_usage_records_with_capacity_and_health_constraints', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 2, 100], 'units': {'capacity': 'Wh (watt-hours)', 'health': '% (percent)', 'duration': 'h (hours)', 'degradation_rate': '%/h (percent per hour)', 'formula': 'degradation_rate = (100 - battery_health_percent) / usage_duration_hours'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': '* (for complete record output)'}]}}\nA mathematical logic question is as follows:\nQuery all battery usage records where the battery capacity (Wh) is greater than 60Wh, and exclude those records where the battery health degradation rate (%/h = (100 - battery health) / usage duration) is greater than 2%/h, then return the difference set results.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, battery_capacity_wh, battery_health_percent, usage_duration_hours, ((100 - battery_health_percent) / usage_duration_hours) AS health_decay_rate_per_hour FROM battery_usage WHERE battery_capacity_wh > 60 AND ((100 - battery_health_percent) / usage_duration_hours) > 2;",
        "db_id": "computer"
    },
    {
        "id": 191,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery usage records', 'temperature exceeding 40°C', 'usage duration less than 0.5 hours'], 'relations': ['temperature_condition (temperature_celsius > 40°C)', 'duration_condition (usage_duration_hours < 0.5)', 'set_difference (include: temperature_condition, exclude: duration_condition)'], 'intent': 'filter_battery_records_by_temperature_and_duration_with_exclusion', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [40, 0.5], 'units': {'temperature': '°C (Celsius)', 'duration': 'hours (h)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_usage_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'usage_date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '40.0', '38.0', '42.0', '45.0']}]}}\nA common sense reasoning question is as follows:\nRetrieve all battery usage records where the temperature (in Celsius) exceeds 40°C, and exclude those records with a usage duration (in hours) less than 0.5 hours, then return the resulting difference set.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, temperature_celsius, usage_duration_hours FROM battery_usage WHERE temperature_celsius > 40 AND usage_duration_hours < 0.5;",
        "db_id": "computer"
    },
    {
        "id": 192,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'battery capacity (500Wh)', 'energy consumption per unit time (Wh/h)', 'battery health (%)'], 'relations': ['record_to_power (usage record → power_consumption_watts)', 'record_to_duration (usage record → usage_duration_hours)', 'record_to_health (usage record → battery_health_percent)'], 'intent': 'filter_records_by_hypothetical_capacity_and_energy_rate', 'reasoning_type': 'ideal hypothesis reasoning and physical knowledge reasoning', 'numerical_values': [500, 100, 90], 'units': {'capacity': 'Wh (watt-hours)', 'energy_rate': 'Wh/h (watt-hours per hour)', 'health': '% (percentage)', 'conversion': 'Wh/h = power_consumption_watts × (usage_duration_hours / usage_duration_hours) [since 1W = 1Wh/h]'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the battery capacity (Wh) in all usage records is increased to 500Wh, query the records where the energy consumption per unit time (Wh/h = power consumption / usage duration) is greater than 100Wh/h, and exclude those records with battery health (%) less than 90%, then return the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, 500 AS assumed_battery_capacity, power_consumption_watts, usage_duration_hours, (power_consumption_watts / usage_duration_hours) AS energy_consumption_per_hour, battery_health_percent FROM battery_usage WHERE (power_consumption_watts / usage_duration_hours) > 100 AND battery_health_percent < 90;",
        "db_id": "computer"
    },
    {
        "id": 193,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n```json\n{\n  \"entities\": [\n    \"performance test records\", \n    \"power consumption (W)\", \n    \"test duration (hours)\", \n    \"total energy consumption (Wh)\"\n  ],\n  \"relations\": [\n    \"filter_condition (power > 200W ∧ duration > 1h)\", \n    \"exclusion_condition (total_energy < 1000Wh)\", \n    \"energy_calculation (Wh = W × hours)\"\n  ],\n  \"intent\": \"filter_and_exclude_performance_tests_by_energy_metrics\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [200, 1, 1000],\n  \"units\": {\n    \"power\": \"W (watts)\",\n    \"duration\": \"hours\",\n    \"energy\": \"Wh (watt-hours)\",\n    \"conversion\": \"Energy = Power × Time\"\n  },\n  \"required_tables\": [\"performance_tests\"],\n  \"required_fields\": [\n    \"performance_tests.test_id\",\n    \"performance_tests.power_consumption_watts\",\n    \"performance_tests.test_duration_hours\", \n    \"performance_tests.total_energy_wh\"  // Implicit calculated field: power_consumption_watts × test_duration_hours\n  ]\n}\n```\n\n**Key Notes:**  \n1. `test_duration_hours` is implied in the query but not explicitly present in the provided schema. Implementation would require either:  \n   - Adding this field to `performance_tests`  \n   - Joining `usage_records` (using `computer_id` and `usage_type='performance_test'`)  \n2. Total energy (`Wh`) is a derived field calculated via `power_consumption_watts × test_duration_hours`  \n3. Reasoning involves:  \n   - Mathematical energy calculation (W × h = Wh)  \n   - Logical exclusion/filtering operations  \n   - Set difference implementation (`WHERE (...) NOT IN (...)`)\nA physical knowledge question is as follows:\nQuery all performance test records where the power consumption (W) is greater than 200W and the test duration (hours) is greater than 1 hour, and exclude those records with total energy consumption (Wh = power consumption * test duration) less than 1000Wh, then return the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, power_consumption_watts, 1 AS test_duration_hours, (power_consumption_watts * 1) AS total_energy_consumption_wh FROM performance_tests WHERE power_consumption_watts > 200 AND 1 > 1 AND (power_consumption_watts * 1) < 1000;",
        "db_id": "computer"
    },
    {
        "id": 194,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test records', 'CPU score > 8000', 'GPU score > 9000', 'custom overall_score (0.4*cpu + 0.3*gpu + 0.2*ram + 0.1*storage)', 'threshold 8500', 'difference result'], 'relations': ['score_filtering (CPU>8000 ∩ GPU>9000)', 'exclusion_condition (custom_overall_score < 8500)', 'calculation_relation (overall_score = weighted_sum)'], 'intent': 'filter_performance_tests_by_scores_and_compute_difference', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8000, 9000, 8500, 0.4, 0.3, 0.2, 0.1], 'units': {'scores': 'unitless (performance metrics)', 'calculation_weights': 'dimensionless coefficients'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'test_id'}, {'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'ram_score'}, {'column': 'storage_score'}, {'column': 'overall_score (for potential comparison)'}]}}\nA mathematical logic question is as follows:\nQuery all performance test records where the CPU score is greater than 8000 and the GPU score is greater than 9000, and exclude those records where the overall score (overall_score = 0.4 * CPU score + 0.3 * GPU score + 0.2 * memory score + 0.1 * storage score) is less than 8500, then return the difference result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, cpu_score, gpu_score, ram_score, storage_score, (0.4 * cpu_score + 0.3 * gpu_score + 0.2 * ram_score + 0.1 * storage_score) AS overall_score FROM performance_tests WHERE cpu_score > 8000 AND gpu_score > 9000 AND (0.4 * cpu_score + 0.3 * gpu_score + 0.2 * ram_score + 0.1 * storage_score) < 8500;",
        "db_id": "computer"
    },
    {
        "id": 195,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test records', 'temperature (75°C)', 'test duration (1 hour)', 'temperature rise per unit time (10°C/h)'], 'relations': ['filter_by_temperature (temperature > 75°C)', 'filter_by_duration (test duration > 1 hour)', 'exclude_by_rise_rate (temperature rise per unit time < 10°C/h)'], 'intent': 'retrieve_high_temperature_long_duration_performance_tests_excluding_low_rise_rate_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [75, 1, 10], 'units': {'temperature': '°C (Celsius)', 'test_duration': 'hours', 'temperature_rise_per_unit_time': '°C/h (Celsius per hour)', 'conversion_formula': 'temperature_rise_per_unit_time = temperature_celsius / test_duration_hours'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'test_id'}, {'column': 'temperature_celsius'}, {'column': 'test_duration_hours'}]}}\nA common sense reasoning question is as follows:\nQuery all performance test records where the temperature (in degrees Celsius) is greater than 75°C and the test duration (in hours) is greater than 1 hour, and exclude those records where the temperature rise per unit time (°C/h = temperature / test duration) is less than 10°C/h, then return the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, temperature_celsius, 1 AS test_duration_hours, (temperature_celsius / 1) AS temperature_increase_per_hour FROM performance_tests WHERE temperature_celsius > 75 AND 1 > 1 AND (temperature_celsius / 1) < 10;",
        "db_id": "computer"
    },
    {
        "id": 196,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test records', 'power consumption (1000W)', 'total energy consumption (Wh)', 'heat dissipation efficiency (W/°C)'], 'relations': ['energy_consumption_calculation (Wh = power_consumption * test_duration)', 'efficiency_calculation (W/°C = power_consumption / (temperature - ambient_temperature))', 'filter_condition (energy_consumption > 5000Wh AND efficiency >= 20W/°C)'], 'intent': 'filter_performance_tests_by_energy_and_efficiency_after_power_adjustment', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 5000, 20], 'units': {'power': 'W (watts)', 'energy': 'Wh (watt-hours)', 'temperature': '°C (Celsius)', 'efficiency': 'W/°C (watts per degree Celsius)', 'conversion': {'energy': 'Wh = power_consumption * test_duration', 'efficiency': 'W/°C = power_consumption / (temperature - ambient_temperature)'}}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'test_id'}, {'column': 'power_consumption_watts'}, {'column': 'temperature_celsius'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power consumption (W) in all performance test records is increased to 1000W, query those records where the total energy consumption (Wh = power consumption * test duration) is greater than 5000Wh, and exclude records with heat dissipation efficiency (W/°C = power consumption / (temperature - ambient temperature)) less than 20W/°C, then return the difference set result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_id, 1000 AS assumed_power_consumption, 1 AS test_duration_hours, (1000 * 1) AS total_energy_consumption_wh, temperature_celsius, (1000 / (temperature_celsius - 25)) AS cooling_efficiency_w_per_c FROM performance_tests WHERE (1000 * 1) > 5000 AND (1000 / (temperature_celsius - 25)) < 20;",
        "db_id": "computer"
    },
    {
        "id": 197,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU base frequency 2.5 GHz', 'CPU max frequency 4.0 GHz', 'CPU usage 80%', 'power consumption 95 watts'], 'relations': ['frequency_scaling (usage% → actual frequency)', 'power_frequency_relationship (watts vs GHz)'], 'intent': 'calculate_current_cpu_frequency_and_power_frequency_relationship', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.5, 4.0, 80, 95], 'units': {'frequency': 'GHz (gigahertz)', 'power': 'watts', 'usage': 'percentage', 'conversion': 'Linear scaling between base/max frequencies'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}], 'computer.usage_records': [{'column': 'cpu_usage_percent'}, {'column': 'power_consumption_watts'}]}}\nA physical knowledge question is as follows:\nAssuming a computer's CPU has a base frequency of 2.5 GHz and a maximum frequency of 4.0 GHz, with a CPU usage of 80% during operation and a power consumption of 95 watts. What is the actual frequency of the CPU at this usage level? And calculate the relationship between power consumption and frequency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ci.computer_id, ci.cpu_base_frequency_ghz, ci.cpu_max_frequency_ghz, ur.cpu_usage_percent, ur.power_consumption_watts, ci.cpu_base_frequency_ghz + (ci.cpu_max_frequency_ghz - ci.cpu_base_frequency_ghz) * (ur.cpu_usage_percent / 100) AS actual_frequency_ghz, ur.power_consumption_watts / (ci.cpu_base_frequency_ghz + (ci.cpu_max_frequency_ghz - ci.cpu_base_frequency_ghz) * (ur.cpu_usage_percent / 100)) AS power_frequency_ratio FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.cpu_usage_percent = 80 AND ur.power_consumption_watts = 95;",
        "db_id": "computer"
    },
    {
        "id": 198,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer battery capacity 56 Wh', 'usage time 4 hours', 'power consumption 14 watts', 'battery health'], 'relations': ['battery_capacity_to_usage_relation (56 Wh → usage metrics)', 'power_time_to_energy_relation (14W × 4h → energy calculation)'], 'intent': 'assess_battery_health_normalcy_and_explain_calculation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [56, 4, 14], 'units': {'capacity': 'Wh (watt-hours)', 'time': 'hours', 'power': 'watts', 'energy': 'Wh (watt-hours, calculated as power × time)', 'health_threshold': 'typically >80% for normal condition'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}], 'computer.battery_usage': [{'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA mathematical logic question is as follows:\nThe battery capacity of a computer is 56 Wh, and the usage record shows a usage time of 4 hours with a power consumption of 14 watts. Is the battery health of this computer normal? And explain the calculation method of battery health.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, ram_size_gb, ram_usage_percent, ram_type, ram_size_gb * (ram_usage_percent / 100) * 25.6 AS current_memory_bandwidth_gbs, ram_size_gb * 25.6 AS max_memory_bandwidth_gbs, (ram_size_gb * (ram_usage_percent / 100) * 25.6) / (ram_size_gb * 25.6) AS memory_bandwidth_usage_ratio FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE ram_size_gb = 16 AND ram_usage_percent = 75 AND ram_type = 'DDR4';",
        "db_id": "computer"
    },
    {
        "id": 199,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer battery', 'battery capacity 56 Wh', 'usage record with runtime 4 hours and power consumption 14 watts', 'battery health status'], 'relations': ['computer_to_battery (computer has battery)', 'record_to_battery (usage record reflects battery performance)', 'capacity_to_health (battery capacity relates to health calculation)'], 'intent': 'evaluate_battery_health_normalcy_and_explain_calculation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [56, 4, 14], 'units': {'capacity': 'Wh (watt-hours)', 'runtime': 'hours', 'power': 'watts', 'energy_conversion': '1 watt-hour = 1 watt × 1 hour'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}], 'computer.battery_usage': [{'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA common sense reasoning question is as follows:\nTranslation:\n\nThe battery capacity of a computer is 56 Wh, and the usage record shows a runtime of 4 hours with a power consumption of 14 watts. Is the battery health of this computer normal? Please also explain how battery health is calculated.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, computer_info.battery_capacity_wh, battery_usage.usage_duration_hours, battery_usage.power_consumption_watts, (battery_usage.usage_duration_hours * battery_usage.power_consumption_watts) / computer_info.battery_capacity_wh * 100 AS battery_health_percent, CASE WHEN (battery_usage.usage_duration_hours * battery_usage.power_consumption_watts) / computer_info.battery_capacity_wh * 100 >= 80 THEN '正常' ELSE '不正常' END AS battery_health_status FROM computer_info JOIN battery_usage ON computer_info.computer_id = battery_usage.computer_id WHERE computer_info.battery_capacity_wh = 56 AND battery_usage.usage_duration_hours = 4 AND battery_usage.power_consumption_watts = 14;",
        "db_id": "computer"
    },
    {
        "id": 200,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU with 128 cores', '256 threads', '1.0 GHz base frequency', '10.0 GHz maximum frequency', '200% CPU utilization', 'actual CPU frequency', 'power consumption', 'frequency relationship'], 'relations': ['utilization_to_frequency (200% utilization → actual frequency calculation)', 'frequency_to_power (CPU frequency scaling → power consumption relationship)'], 'intent': 'calculate_actual_cpu_frequency_and_power_frequency_relationship', 'reasoning_type': 'ideal hypothesis reasoning, mathematical logic reasoning', 'numerical_values': [128, 256, 1.0, 10.0, 200], 'units': {'frequency': 'GHz (gigahertz)', 'utilization': 'percent (%)', 'power': 'watts (W)', 'core_count': 'unitless', 'thread_count': 'unitless'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}], 'computer.usage_records': [{'column': 'cpu_usage_percent'}, {'column': 'power_consumption_watts'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a computer has a CPU with 128 cores, 256 threads, a base frequency of 1.0 GHz, a maximum frequency of 10.0 GHz, and a CPU utilization of 200% during operation. What is the actual frequency of the CPU at this utilization rate? Also, calculate the relationship between power consumption and frequency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, computer_info.cpu_cores, computer_info.cpu_threads, computer_info.cpu_base_frequency_ghz, computer_info.cpu_max_frequency_ghz, usage_records.cpu_usage_percent, computer_info.cpu_base_frequency_ghz + (computer_info.cpu_max_frequency_ghz - computer_info.cpu_base_frequency_ghz) * (usage_records.cpu_usage_percent / 100) AS actual_frequency_ghz, usage_records.power_consumption_watts, usage_records.power_consumption_watts / (computer_info.cpu_base_frequency_ghz + (computer_info.cpu_max_frequency_ghz - computer_info.cpu_base_frequency_ghz) * (usage_records.cpu_usage_percent / 100)) AS power_frequency_ratio FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE computer_info.cpu_cores = 128 AND computer_info.cpu_threads = 256 AND computer_info.cpu_base_frequency_ghz = 1.0 AND computer_info.cpu_max_frequency_ghz = 10.0 AND usage_records.cpu_usage_percent = 200;",
        "db_id": "computer"
    },
    {
        "id": 201,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific computer usage record', 'CPU usage 90%', 'power consumption 120 watts', 'CPU base frequency 2.0 GHz', 'CPU maximum frequency 4.5 GHz', 'constant C 1.25e-8', 'actual CPU frequency', 'estimated voltage'], 'relations': ['usage_record_to_computer_info (via computer_id)', 'frequency_calculation (linear relationship between usage and frequency)', 'voltage_estimation (using formula: P = C * V^2 * f)'], 'intent': 'calculate_actual_cpu_frequency_and_estimate_voltage', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [90, 120, 2.0, 4.5, 1.25e-08], 'units': {'cpu_usage': '%', 'power': 'watts', 'frequency': 'GHz (gigahertz)', 'voltage': 'volts (implied)', 'conversion': 'GHz to Hz (1 GHz = 1e9 Hz) for power formula'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'cpu_usage_percent'}, {'column': 'power_consumption_watts'}], 'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}]}}\nA physical knowledge question is as follows:\nIn the 'usage_records' table, the usage data of a specific computer shows its CPU usage at 90%, power consumption at 120 watts, with the CPU's base frequency at 2.0 GHz and maximum frequency at 4.5 GHz. Based on the CPU information from the 'computer_info' table, calculate the actual frequency of the CPU at the current usage rate and estimate its voltage (assuming constant C is 1.25e-8).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, computer_info.cpu_base_frequency_ghz, computer_info.cpu_max_frequency_ghz, usage_records.cpu_usage_percent, usage_records.power_consumption_watts, computer_info.cpu_base_frequency_ghz + (computer_info.cpu_max_frequency_ghz - computer_info.cpu_base_frequency_ghz) * (usage_records.cpu_usage_percent / 100) AS actual_frequency_ghz, SQRT(usage_records.power_consumption_watts / (1.25e-8 * (computer_info.cpu_base_frequency_ghz + (computer_info.cpu_max_frequency_ghz - computer_info.cpu_base_frequency_ghz) * (usage_records.cpu_usage_percent / 100)))) AS estimated_voltage FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE usage_records.cpu_usage_percent = 90 AND usage_records.power_consumption_watts = 120 AND computer_info.cpu_base_frequency_ghz = 2.0 AND computer_info.cpu_max_frequency_ghz = 4.5;",
        "db_id": "computer"
    },
    {
        "id": 202,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['memory utilization rate 80%', 'power consumption 85 watts', 'memory size 32 GB', 'memory type DDR4', 'memory stick bandwidth 25.6 GB/s'], 'relations': ['computer_linkage (usage_records.computer_id → computer_info.computer_id)', 'bandwidth_utilization_relationship (80% utilization → effective bandwidth)', 'bandwidth_power_correlation (memory bandwidth ↔ power consumption)'], 'intent': 'calculate_memory_bandwidth_and_derive_power_relationship', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [80, 85, 32, 25.6], 'units': {'memory_utilization': 'percent', 'power': 'watts', 'memory_size': 'GB', 'bandwidth': 'GB/s', 'conversion': 'effective_bandwidth = (utilization/100) × total_bandwidth'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'ram_usage_percent'}, {'column': 'power_consumption_watts'}, {'column': 'computer_id'}], 'computer.computer_info': [{'column': 'ram_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['16', '32']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nIn the 'usage_records' table, a computer's usage record shows its memory utilization rate at 80%, power consumption at 85 watts, and the computer's memory size at 32 GB. Combining the memory information from the 'computer_info' table, calculate the computer's memory bandwidth at the current utilization rate (assuming the memory type is DDR4, with each memory stick having a bandwidth of 25.6 GB/s), and derive the relationship between memory bandwidth and power consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, computer_info.ram_size_gb, usage_records.ram_usage_percent, usage_records.power_consumption_watts, computer_info.ram_size_gb * (usage_records.ram_usage_percent / 100) * 25.6 AS current_memory_bandwidth_gbs, (computer_info.ram_size_gb * (usage_records.ram_usage_percent / 100) * 25.6) / usage_records.power_consumption_watts AS memory_bandwidth_power_ratio FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE usage_records.ram_usage_percent = 80 AND usage_records.power_consumption_watts = 85 AND computer_info.ram_size_gb = 32 AND computer_info.ram_type = 'DDR4';",
        "db_id": "computer"
    },
    {
        "id": 203,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage record: 8 hours duration', 'usage record: 60 watts power consumption', 'computer: 70 Wh battery capacity', 'battery health status'], 'relations': ['record_to_computer (usage_records.computer_id → computer_info.computer_id)', 'computer_to_battery (computer_info.computer_id → battery_usage.computer_id)', 'capacity_to_health (battery_capacity_wh → battery_health_percent)'], 'intent': 'determine_battery_health_status_and_explain_calculation', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [8, 60, 70], 'units': {'time': 'hours', 'power': 'watts (W)', 'energy': 'watt-hours (Wh)', 'health': 'percent (%)', 'conversion': 'energy = power × time (Wh = W × h)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}, {'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'usage_duration_hours'}, {'column': 'power_consumption_watts'}], 'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}], 'computer.battery_usage': [{'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}]}}\nA common sense reasoning question is as follows:\nIn the 'usage_records' table, a computer's usage record shows that its usage duration is 8 hours, the power consumption is 60 watts, and the battery capacity of this computer is 70 Wh. By combining the battery information from the 'battery_usage' table, determine whether the battery health of this computer is normal and explain the calculation method for battery health.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, computer_info.battery_capacity_wh, usage_records.usage_duration_hours, usage_records.power_consumption_watts, (usage_records.usage_duration_hours * usage_records.power_consumption_watts) / computer_info.battery_capacity_wh * 100 AS battery_health_percent, CASE WHEN (usage_records.usage_duration_hours * usage_records.power_consumption_watts) / computer_info.battery_capacity_wh * 100 >= 80 THEN '正常' ELSE '不正常' END AS battery_health_status FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE usage_records.usage_duration_hours = 8 AND usage_records.power_consumption_watts = 60 AND computer_info.battery_capacity_wh = 70;",
        "db_id": "computer"
    },
    {
        "id": 204,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current CPU usage rate (500%)', 'current power consumption (1000 watts)', 'CPU base frequency (0.5 GHz)', 'CPU maximum frequency (20.0 GHz)', 'constant C (1.25e-8)', 'cooling system limitation'], 'relations': ['computer_link (usage_records → computer_info via computer_id)', 'frequency_calculation (base_frequency, max_frequency, usage_percent → actual_frequency)', 'voltage_estimation (power_consumption, actual_frequency, constant_C → voltage)', 'thermal_inference (power_consumption, cooling_constraint → temperature_trend)'], 'intent': 'calculate_actual_cpu_frequency, estimate_voltage, and predict_temperature_trend', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500, 1000, 0.5, 20.0, 1.25e-08], 'units': {'cpu_usage': 'percent (%)', 'power': 'watts (W)', 'frequency': 'GHz (gigahertz)', 'voltage': 'volts (V) derived from formula', 'constant_C': 'dimensionless constant', 'temperature_trend': 'qualitative trend (increasing)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'cpu_usage_percent'}, {'column': 'power_consumption_watts'}], 'computer.computer_info': [{'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}]}}\nA hypothetical reasoning question is as follows:\nAssuming in the 'usage_records' table, the usage data of a computer shows its CPU usage rate at 500%, power consumption at 1000 watts, with the CPU's base frequency at 0.5 GHz and maximum frequency at 20.0 GHz. Combining the CPU information from the 'computer_info' table, calculate the actual frequency of this CPU at the current usage rate and estimate its voltage (assuming constant C is 1.25e-8). Additionally, given that the computer's cooling system cannot handle such high power consumption, infer its temperature trend.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, computer_info.cpu_base_frequency_ghz, computer_info.cpu_max_frequency_ghz, usage_records.cpu_usage_percent, usage_records.power_consumption_watts, computer_info.cpu_base_frequency_ghz + (computer_info.cpu_max_frequency_ghz - computer_info.cpu_base_frequency_ghz) * (usage_records.cpu_usage_percent / 100) AS actual_frequency_ghz, SQRT(usage_records.power_consumption_watts / (1.25e-8 * (computer_info.cpu_base_frequency_ghz + (computer_info.cpu_max_frequency_ghz - computer_info.cpu_base_frequency_ghz) * (usage_records.cpu_usage_percent / 100)))) AS estimated_voltage FROM computer_info JOIN usage_records ON computer_info.computer_id = usage_records.computer_id WHERE usage_records.cpu_usage_percent = 500 AND usage_records.power_consumption_watts = 1000 AND computer_info.cpu_base_frequency_ghz = 0.5 AND computer_info.cpu_max_frequency_ghz = 20.0;",
        "db_id": "computer"
    },
    {
        "id": 205,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery usage record', 'usage duration 10 hours', 'power consumption 50 watts', 'battery capacity 60 Wh', 'battery health status', 'discharge efficiency', 'theoretical maximum discharge time'], 'relations': ['record_to_computer (battery_usage.computer_id → computer_info.computer_id)', 'capacity_comparison (battery_usage.battery_capacity_wh vs computer_info.battery_capacity_wh)', 'efficiency_calculation (actual_duration / theoretical_duration)'], 'intent': 'calculate_battery_health_and_discharge_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 50, 60], 'units': {'duration': 'hours', 'power': 'watts', 'capacity': 'Wh (watt-hours)', 'conversion': 'theoretical_duration = capacity_wh / power_watts', 'efficiency': 'percent (%)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}]}}\nA physical knowledge question is as follows:\nIn the 'battery_usage' table, a computer's battery usage record shows a usage duration of 10 hours, a power consumption of 50 watts, and a battery capacity of 60 Wh. Combining the battery information from the 'computer_info' table, calculate the battery's health status and estimate its discharge efficiency (assuming the theoretical maximum discharge time is the battery capacity divided by the power consumption).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, computer_info.battery_capacity_wh, battery_usage.usage_duration_hours, battery_usage.power_consumption_watts, (battery_usage.usage_duration_hours * battery_usage.power_consumption_watts) / computer_info.battery_capacity_wh * 100 AS battery_health_percent, (battery_usage.usage_duration_hours / (computer_info.battery_capacity_wh / battery_usage.power_consumption_watts)) * 100 AS discharge_efficiency_percent FROM computer_info JOIN battery_usage ON computer_info.computer_id = battery_usage.computer_id WHERE battery_usage.usage_duration_hours = 10 AND battery_usage.power_consumption_watts = 50 AND computer_info.battery_capacity_wh = 60;",
        "db_id": "computer"
    },
    {
        "id": 206,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery_usage record (health 85%, usage 8h, power 45W)', 'original battery capacity (from computer_info)', 'current actual battery capacity'], 'relations': ['health_definition: current_capacity = (health_percent / 100) * original_capacity', 'energy_relation: max_usage_time = current_capacity / power_consumption', 'foreign_key_link: battery_usage.computer_id → computer_info.computer_id'], 'intent': 'calculate_current_battery_capacity_and_derive_health_usage_relationship', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [85, 8, 45], 'units': {'battery_health': '% (percentage)', 'usage_time': 'hours', 'power_consumption': 'watts (W)', 'battery_capacity': 'watt-hours (Wh)', 'energy_conversion': '1 watt-hour = 1 watt × 1 hour'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}]}}\nA mathematical logic question is as follows:\nIn the 'battery_usage' table, a computer's battery usage record shows its battery health at 85%, with 8 hours of usage time and a power consumption of 45 watts. Combining the battery information from the 'computer_info' table, calculate the current actual capacity of the battery and derive the mathematical relationship between battery health and usage time and power consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, battery_usage.battery_health_percent, battery_usage.usage_duration_hours, battery_usage.power_consumption_watts, (battery_usage.usage_duration_hours * battery_usage.power_consumption_watts) / (battery_usage.battery_health_percent / 100) AS actual_battery_capacity_wh FROM computer_info JOIN battery_usage ON computer_info.computer_id = battery_usage.computer_id WHERE battery_usage.battery_health_percent = 85 AND battery_usage.usage_duration_hours = 8 AND battery_usage.power_consumption_watts = 45;",
        "db_id": "computer"
    },
    {
        "id": 207,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery_usage record', 'battery health 75%', 'usage duration 6 hours', 'power consumption 40 watts', 'computer (implied via computer_id linkage)', 'original battery capacity (from computer_info)'], 'relations': ['record_to_computer (battery_usage → computer_info via computer_id)', 'health_to_capacity (battery_health_percent reflects current capacity relative to original)'], 'intent': 'determine_battery_replacement_need_and_explain_health_significance', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [75, 6, 40], 'units': {'battery_health': '% (percentage of original capacity)', 'usage_duration': 'hours', 'power_consumption': 'watts (W)', 'battery_capacity': 'watt-hours (Wh)', 'energy_calculation': 'watt-hours = watts × hours'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}], 'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}]}}\nA common sense reasoning question is as follows:\nIn the 'battery_usage' table, the battery usage record of a certain computer shows its battery health at 75%, usage duration of 6 hours, and power consumption of 40 watts. Based on the battery information from the 'computer_info' table, determine whether the battery needs to be replaced, and explain the practical significance of battery health.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, battery_usage.battery_health_percent, battery_usage.usage_duration_hours, battery_usage.power_consumption_watts, computer_info.battery_capacity_wh, CASE WHEN battery_usage.battery_health_percent < 80 THEN '需要更换' ELSE '无需更换' END AS battery_replacement_status FROM computer_info JOIN battery_usage ON computer_info.computer_id = battery_usage.computer_id WHERE battery_usage.battery_health_percent = 75 AND battery_usage.usage_duration_hours = 6 AND battery_usage.power_consumption_watts = 40;",
        "db_id": "computer"
    },
    {
        "id": 208,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery_usage record (health=200%, duration=24h, power=200W)', 'computer_info (design capacity=100Wh)', 'current actual battery capacity', 'battery physical state'], 'relations': ['foreign_key_link (battery_usage.computer_id → computer_info.computer_id)', 'capacity_calculation (current_capacity = (health_percent/100) * design_capacity)', 'state_inference (abnormal_health → physical_condition)'], 'intent': 'calculate_current_battery_capacity and infer_battery_physical_condition', 'reasoning_type': 'physical knowledge reasoning and common sense understanding reasoning', 'numerical_values': [200, 24, 200, 100], 'units': {'battery_health': '% (percent)', 'usage_duration': 'hours', 'power_consumption': 'watts', 'battery_capacity': 'Wh (watt-hours)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'temperature_celsius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '40.0', '38.0', '42.0', '45.0']}], 'computer.computer_info': [{'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming in the 'battery_usage' table, a computer's battery usage record shows a battery health of 200%, usage duration of 24 hours, power consumption of 200 watts, and the computer's battery capacity is 100 Wh. Combining the battery information from the 'computer_info' table, calculate the current actual capacity of the battery and infer its possible physical state (e.g., whether it has expanded or overheated).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, battery_usage.battery_health_percent, battery_usage.usage_duration_hours, battery_usage.power_consumption_watts, computer_info.battery_capacity_wh, (battery_usage.usage_duration_hours * battery_usage.power_consumption_watts) / (battery_usage.battery_health_percent / 100) AS actual_battery_capacity_wh, CASE WHEN battery_usage.battery_health_percent > 100 THEN '电池可能膨胀或过热' ELSE '电池状态正常' END AS battery_physical_status FROM computer_info JOIN battery_usage ON computer_info.computer_id = battery_usage.computer_id WHERE battery_usage.battery_health_percent = 200 AND battery_usage.usage_duration_hours = 24 AND battery_usage.power_consumption_watts = 200 AND computer_info.battery_capacity_wh = 100;",
        "db_id": "computer"
    },
    {
        "id": 209,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance_tests record (CPU score=1200, GPU score=1500, power=200W, temp=75°C)', 'computer (linked via computer_id)', 'comprehensive performance per watt', 'temperature impact analysis'], 'relations': ['test_to_computer (performance_tests.computer_id → computer_info.computer_id)', 'hardware_to_performance (computer_info CPU/GPU specs → performance_tests scores)', 'temperature_to_efficiency (temperature_celsius → performance_per_watt)'], 'intent': 'calculate_performance_per_watt_and_analyze_temperature_impact', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1200, 1500, 200, 75], 'units': {'power': 'watts (W)', 'temperature': '°C (Celsius)', 'performance_metric': 'score per watt (computed as (CPU_score + GPU_score)/power_consumption_watts)'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'computer_id'}, {'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'power_consumption_watts'}, {'column': 'temperature_celsius'}], 'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'cpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Core i7-1165G7', 'Apple M1 Pro', 'Intel Core i5-1240P', 'Intel Core i7-1260P', 'AMD Ryzen 9 7940HS']}, {'column': 'gpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Iris Xe', 'Apple M1 Pro GPU', 'NVIDIA RTX 4060']}]}}\nA physical knowledge question is as follows:\nIn the 'performance_tests' table, the performance test records of a certain computer show a CPU score of 1200, a GPU score of 1500, a power consumption of 200 watts, and a temperature of 75°C. Combining the CPU and GPU information from the 'computer_info' table, calculate the computer's comprehensive performance per watt and analyze the impact of temperature on performance per watt.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, performance_tests.cpu_score, performance_tests.gpu_score, performance_tests.power_consumption_watts, performance_tests.temperature_celsius, (performance_tests.cpu_score + performance_tests.gpu_score) / performance_tests.power_consumption_watts AS performance_per_watt, (performance_tests.cpu_score + performance_tests.gpu_score) / (performance_tests.power_consumption_watts * (1 + 0.02 * (performance_tests.temperature_celsius - 25))) AS performance_per_watt_with_temperature FROM computer_info JOIN performance_tests ON computer_info.computer_id = performance_tests.computer_id WHERE performance_tests.cpu_score = 1200 AND performance_tests.gpu_score = 1500 AND performance_tests.power_consumption_watts = 200 AND performance_tests.temperature_celsius = 75;",
        "db_id": "computer"
    },
    {
        "id": 210,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU score 1000', 'GPU score 1200', 'memory score 800', 'storage score 600', 'overall score 3600'], 'relations': ['component_contribution (individual scores → overall_score)', 'additive_relationship (overall_score = Σ component_scores)'], 'intent': 'calculate_component_contribution_ratios_and_deduce_score_relationship', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 1200, 800, 600, 3600], 'units': {'scores': 'unitless points', 'contribution_ratio': 'dimensionless fraction/percentage'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'cpu_score'}, {'column': 'gpu_score'}, {'column': 'ram_score'}, {'column': 'storage_score'}, {'column': 'overall_score'}], 'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nIn the 'performance_tests' table, a computer's performance test record shows a CPU score of 1000, GPU score of 1200, memory score of 800, storage score of 600, and an overall score of 3600. Incorporating the hardware configuration information from the 'computer_info' table, calculate the contribution ratio of each hardware component to the overall score and deduce the mathematical relationship between the overall score and the individual component scores.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, performance_tests.cpu_score, performance_tests.gpu_score, performance_tests.ram_score, performance_tests.storage_score, performance_tests.overall_score, (performance_tests.cpu_score / performance_tests.overall_score) * 100 AS cpu_contribution_percent, (performance_tests.gpu_score / performance_tests.overall_score) * 100 AS gpu_contribution_percent, (performance_tests.ram_score / performance_tests.overall_score) * 100 AS ram_contribution_percent, (performance_tests.storage_score / performance_tests.overall_score) * 100 AS storage_contribution_percent FROM computer_info JOIN performance_tests ON computer_info.computer_id = performance_tests.computer_id WHERE performance_tests.cpu_score = 1000 AND performance_tests.gpu_score = 1200 AND performance_tests.ram_score = 800 AND performance_tests.storage_score = 600 AND performance_tests.overall_score = 3600;",
        "db_id": "computer"
    },
    {
        "id": 211,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test record (overall_score=3000, temperature=80°C, power_consumption=180W)', 'computer hardware configuration', 'cooling system efficiency'], 'relations': ['computer_to_test (computer_id links performance_tests to computer_info)', 'temperature_impact_on_performance (high temperature affects scores)'], 'intent': 'assess_cooling_efficiency_and_explain_temperature_impact', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [3000, 80, 180], 'units': {'temperature': '°C (Celsius)', 'power': 'watts', 'performance_score': 'unitless scale'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'computer_id'}, {'column': 'overall_score'}, {'column': 'temperature_celsius'}, {'column': 'power_consumption_watts'}], 'computer.computer_info': [{'column': 'cpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Core i7-1165G7', 'Apple M1 Pro', 'Intel Core i5-1240P', 'Intel Core i7-1260P', 'AMD Ryzen 9 7940HS']}, {'column': 'cpu_cores', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['4', '10', '12', '8']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}, {'column': 'gpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Iris Xe', 'Apple M1 Pro GPU', 'NVIDIA RTX 4060']}, {'column': 'gpu_vram_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['4', '16', '8']}, {'column': 'ram_size_gb', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['16', '32']}]}}\nA common sense reasoning question is as follows:\nIn the 'performance_tests' table, a computer's performance test record shows it has an overall score of 3000, a temperature of 80°C, and a power consumption of 180 watts. Based on the hardware configuration information from the 'computer_info' table, assess whether this computer's cooling system is sufficiently efficient and explain the impact of temperature on the performance test results.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, performance_tests.overall_score, performance_tests.temperature_celsius, performance_tests.power_consumption_watts, (performance_tests.power_consumption_watts / performance_tests.temperature_celsius) * 100 AS cooling_efficiency, performance_tests.overall_score * (1 - 0.01 * (performance_tests.temperature_celsius - 25)) AS adjusted_performance_score FROM computer_info JOIN performance_tests ON computer_info.computer_id = performance_tests.computer_id WHERE performance_tests.overall_score = 3000 AND performance_tests.temperature_celsius = 80 AND performance_tests.power_consumption_watts = 180;",
        "db_id": "computer"
    },
    {
        "id": 212,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['performance test record (CPU=10,000, GPU=15,000, combined=25,000, power=5,000W, temp=200°C)', 'computer hardware configuration'], 'relations': ['test_belongs_to_computer (performance_tests.computer_id → computer_info.computer_id)', 'hardware_specification (computer_info → component models)'], 'intent': 'calculate_energy_efficiency_ratio_and_assess_hardware_safety', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [10000, 15000, 25000, 5000, 200], 'units': {'power': 'watts (W)', 'temperature': '°C (Celsius)', 'energy_efficiency': 'score per watt (performance/power)', 'thermal_limit': '°C (material-dependent)'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.performance_tests': [{'column': 'overall_score'}, {'column': 'power_consumption_watts'}, {'column': 'temperature_celsius'}], 'computer.computer_info': [{'column': 'cpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Core i7-1165G7', 'Apple M1 Pro', 'Intel Core i5-1240P', 'Intel Core i7-1260P', 'AMD Ryzen 9 7940HS']}, {'column': 'gpu_model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Intel Iris Xe', 'Apple M1 Pro GPU', 'NVIDIA RTX 4060']}]}}\nA hypothetical reasoning question is as follows:\nAssuming that in the 'performance_tests' table, the performance test records of a certain computer show a CPU score of 10,000, a GPU score of 15,000, a combined score of 25,000, a power consumption of 5,000 watts, and a temperature of 200°C. Combining the hardware configuration information from the 'computer_info' table, calculate the computer’s overall energy efficiency ratio and speculate on the possible state of its hardware under such extreme conditions (such as whether it could melt down or explode).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT computer_info.computer_id, performance_tests.cpu_score, performance_tests.gpu_score, performance_tests.overall_score, performance_tests.power_consumption_watts, performance_tests.temperature_celsius, (performance_tests.cpu_score + performance_tests.gpu_score) / performance_tests.power_consumption_watts AS performance_per_watt, CASE WHEN performance_tests.temperature_celsius > 150 THEN '硬件可能熔毁或爆炸' ELSE '硬件状态正常' END AS hardware_status FROM computer_info JOIN performance_tests ON computer_info.computer_id = performance_tests.computer_id WHERE performance_tests.cpu_score = 10000 AND performance_tests.gpu_score = 15000 AND performance_tests.overall_score = 25000 AND performance_tests.power_consumption_watts = 5000 AND performance_tests.temperature_celsius = 200;",
        "db_id": "computer"
    },
    {
        "id": 213,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'power consumption', 'full load', 'CPU', 'GPU', 'memory', 'storage'], 'relations': ['computer_to_power (computer_id links to power measurements)', 'component_aggregation (CPU+GPU+memory+storage = total power)'], 'intent': 'calculate_total_power_consumption_and_rank_top5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'power': 'watts (from power_consumption_watts fields)', 'ranking_limit': 'top 5 items'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}], 'computer.performance_tests': [{'column': 'power_consumption_watts'}, {'column': 'test_type'}]}}\nA physical knowledge question is as follows:\nCalculate the total power consumption (including CPU, GPU, memory, storage, etc.) of a computer under full load, and identify the top 5 computers with the highest power consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TotalPowerConsumption AS (SELECT ci.computer_id, ci.manufacturer, ci.model, SUM(ur.power_consumption_watts) AS total_power_consumption FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.cpu_usage_percent = 100 AND ur.gpu_usage_percent = 100 AND ur.ram_usage_percent = 100 AND ur.storage_usage_percent = 100 GROUP BY ci.computer_id, ci.manufacturer, ci.model) SELECT computer_id, manufacturer, model, total_power_consumption FROM TotalPowerConsumption ORDER BY total_power_consumption DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 214,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'total energy consumption', 'year', 'top 10 computers'], 'relations': ['computer_to_usage (computer_id → power consumption records)', 'energy_aggregation (sum power_consumption_watts → kWh)'], 'intent': 'calculate_and_rank_computer_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'energy': 'kWh (kilowatt-hours)', 'conversion': '1 kWh = (watts × hours) / 1000', 'duration': 'year (implied 365-day aggregation)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}, {'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}, {'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}], 'computer.battery_usage': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}], 'computer.performance_tests': [{'column': 'power_consumption_watts'}], 'computer.usage_records': [{'column': 'power_consumption_watts'}, {'column': 'usage_duration_hours'}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption (in kilowatt-hours) of each computer over a year, sort them by energy consumption from low to high, and identify the top 10 computers with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH YearlyEnergyConsumption AS (SELECT ci.computer_id, ci.manufacturer, ci.model, SUM(ur.power_consumption_watts * ur.usage_duration_hours / 1000) AS total_energy_kwh FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.usage_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ci.computer_id, ci.manufacturer, ci.model) SELECT computer_id, manufacturer, model, total_energy_kwh FROM YearlyEnergyConsumption ORDER BY total_energy_kwh DESC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 215,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'battery health below 80%', 'battery capacity', 'usage time'], 'relations': ['computer_to_battery_usage (computer_id → battery_usage records)', 'battery_health_condition (health < 80%)'], 'intent': 'retrieve_computers_with_low_battery_health_and_compute_averages', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [80], 'units': {'battery_health': '% (percent)', 'battery_capacity': 'wh (watt-hours)', 'usage_time': 'hours'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}]}}\nA common sense reasoning question is as follows:\nFind computers with a battery health below 80%, calculate their average battery capacity and average usage time, and sort them by battery health from lowest to highest.\nyour response just have a SQL without anything.\n",
        "solution": "WITH LowBatteryHealthComputers AS (SELECT bu.computer_id, ci.manufacturer, ci.model, bu.battery_health_percent, ci.battery_capacity_wh, bu.usage_duration_hours FROM battery_usage bu JOIN computer_info ci ON bu.computer_id = ci.computer_id WHERE bu.battery_health_percent < 80), AggregatedData AS (SELECT computer_id, manufacturer, model, battery_health_percent, AVG(battery_capacity_wh) OVER () AS avg_battery_capacity, AVG(usage_duration_hours) OVER () AS avg_usage_duration FROM LowBatteryHealthComputers) SELECT DISTINCT computer_id, manufacturer, model, battery_health_percent, avg_battery_capacity, avg_usage_duration FROM AggregatedData ORDER BY battery_health_percent ASC;",
        "db_id": "computer"
    },
    {
        "id": 216,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['CPU usage 1000%', 'GPU usage 500%', 'memory usage 200%', 'storage usage 150%', 'power consumption threshold 10,000 watts'], 'relations': ['usage_to_power (component usage → power consumption)', 'threshold_comparison (power_consumption > 10,000 watts)'], 'intent': 'calculate_power_consumption_for_specified_usage_and_identify_high_power_computers', 'reasoning_type': 'ideal hypothesis reasoning, mathematical logic reasoning', 'numerical_values': [1000, 500, 200, 150, 10000], 'units': {'component_usage': '% (percentage)', 'power_consumption': 'watts (W)', 'threshold_value': '10,000 watts'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}, {'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}, {'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}, {'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'cpu_usage_percent'}, {'column': 'gpu_usage_percent'}, {'column': 'ram_usage_percent'}, {'column': 'storage_usage_percent'}, {'column': 'power_consumption_watts'}], 'computer.battery_usage': [{'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'computer.performance_tests': [{'column': 'power_consumption_watts'}, {'column': 'computer_id'}], 'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Dell', 'Apple', 'Lenovo', 'HP', 'Asus']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a computer's CPU usage reaches 1000%, GPU usage reaches 500%, memory usage reaches 200%, and storage usage reaches 150%, calculate the total power consumption of this computer and identify all computers with power consumption exceeding 10,000 watts.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ExtremeUsagePower AS (SELECT ci.computer_id, ci.manufacturer, ci.model, (1000 * ci.cpu_base_frequency_ghz / 100) AS cpu_power, (500 * ci.gpu_vram_gb / 100) AS gpu_power, (200 * ci.ram_size_gb / 100) AS ram_power, (150 * ci.storage_size_gb / 100) AS storage_power, (1000 * ci.cpu_base_frequency_ghz / 100 + 500 * ci.gpu_vram_gb / 100 + 200 * ci.ram_size_gb / 100 + 150 * ci.storage_size_gb / 100) AS total_power FROM computer_info ci) SELECT computer_id, manufacturer, model, total_power FROM ExtremeUsagePower WHERE total_power > 10000 ORDER BY total_power DESC;",
        "db_id": "computer"
    },
    {
        "id": 217,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\"computer\", \"heat generation\", \"full load operation\", \"joules\"],\n  \"relations\": [\n    \"computer_to_power_consumption (performance_tests.power_consumption_watts)\",\n    \"power_to_heat_conversion (1 watt = 1 joule/second)\",\n    \"computer_identification (via computer_info)\"\n  ],\n  \"intent\": \"calculate_heat_energy_and_rank_top_performers\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"power\": \"watts (W)\",\n    \"energy\": \"joules (J)\",\n    \"time_conversion\": \"1 hour = 3600 seconds\",\n    \"heat_energy_formula\": \"joules = watts × seconds\"\n  },\n  \"required_tables\": [\"performance_tests\", \"computer_info\"],\n  \"required_fields\": [\n    \"performance_tests.computer_id\",\n    \"performance_tests.power_consumption_watts\",\n    \"computer_info.computer_id\",\n    \"computer_info.manufacturer\",\n    \"computer_info.model\"\n  ]\n}\n\n### Explanation:\n1. **Entities**:  \n   - Core objects: computers and their heat generation during full load operations.\n   - Specific requirement: output in joules.\n\n2. **Relations**:  \n   - Link computers to power consumption metrics in `performance_tests`.\n   - Physical conversion: power (watts) to heat energy (joules).\n   - Computer identification via manufacturer and model from `computer_info`.\n\n3. **Intent**:  \n   - Calculate heat energy generated during full load operation.\n   - Identify top 5 heat-producing computers.\n\n4. **Reasoning Type**:  \n   - **Physical knowledge reasoning**: Uses power-to-energy conversion (1 W = 1 J/s) and requires standard duration assumption (1 hour = 3600s) to compute joules.\n\n5. **Units**:  \n   - Power in watts (from `performance_tests.power_consumption_watts`).\n   - Energy conversion: joules = watts × seconds, with time standardized to 1 hour (3600s) for meaningful comparison.\n\n6. **Tables & Fields**:  \n   - **performance_tests**: Contains power consumption data at full load (implied by test conditions).\n   - **computer_info**: Provides computer identification details.\n   - Fields include power consumption, computer IDs, and descriptive attributes (manufacturer/model) for ranking and identification.\n\n### Implementation Notes:\n- **Heat Calculation**:  \n  `Heat (J) = MAX(power_consumption_watts) × 3600` per computer (using maximum observed power during tests to represent full load).\n- **Ranking Logic**:  \n  Compute heat per computer → Sort descending → Limit to top 5.\n- **Assumption**:  \n  `performance_tests` represents full-load scenarios, and tests without duration use standardized 1-hour period for energy calculation.\nA physical knowledge question is as follows:\nCalculate the amount of heat (in joules) generated by a computer when running at full load, and identify the top 5 computers that produce the most heat.\nyour response just have a SQL without anything.\n",
        "solution": "WITH HeatGeneration AS (SELECT ci.computer_id, ci.manufacturer, ci.model, SUM(ur.power_consumption_watts * ur.usage_duration_hours * 3600) AS total_heat_joules FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.cpu_usage_percent = 100 AND ur.gpu_usage_percent = 100 AND ur.ram_usage_percent = 100 AND ur.storage_usage_percent = 100 GROUP BY ci.computer_id, ci.manufacturer, ci.model) SELECT computer_id, manufacturer, model, total_heat_joules FROM HeatGeneration ORDER BY total_heat_joules DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 218,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'average daily energy consumption', 'year'], 'relations': ['computer_to_usage_records (computer_id → usage_records)', 'energy_calculation (power_consumption_watts × usage_duration_hours → kWh)'], 'intent': 'calculate_and_rank_computer_energy_consumption', 'reasoning_type': 'mathematical logic reasoning, physical knowledge reasoning', 'numerical_values': [2023, 365, 1000], 'units': {'power': 'watts (W)', 'time': 'hours (h)', 'energy': 'kilowatt-hours (kWh)', 'conversion': '1 kWh = (1 W × 1 h) / 1000', 'year_constant': '365 days (non-leap year assumption)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'usage_duration_hours'}, {'column': 'power_consumption_watts'}, {'column': 'usage_date'}]}}\nA mathematical logic question is as follows:\nCalculate the average daily energy consumption (in kilowatt-hours) of each computer over a year, sort them from highest to lowest average daily consumption, and identify the top 10 computers with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH YearlyEnergyConsumption AS (SELECT ci.computer_id, ci.manufacturer, ci.model, SUM(ur.power_consumption_watts * ur.usage_duration_hours / 1000) AS total_energy_kwh FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.usage_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ci.computer_id, ci.manufacturer, ci.model) SELECT computer_id, manufacturer, model, total_energy_kwh / 365 AS avg_daily_energy_kwh FROM YearlyEnergyConsumption ORDER BY avg_daily_energy_kwh DESC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 219,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers manufactured before 2018', 'battery health below 70%', 'average battery capacity', 'average usage duration'], 'relations': ['computer_info linked to battery_usage via computer_id', 'battery_health_condition (battery_health_percent < 70%)', 'manufacturing_year_condition (production_year < 2018)'], 'intent': 'filter_computers_by_year_and_battery_health_then_compute_averages_grouped_by_year', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2018, 70], 'units': {'battery_health': 'percent (%)', 'battery_capacity': 'watt-hours (wh)', 'usage_duration': 'hours (h)', 'year': 'calendar year'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'production_year', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['2022', '2021', '2023']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'computer.battery_usage': [{'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}]}}\nA common sense reasoning question is as follows:\nIdentify computers manufactured before 2018 with battery health below 70%, and calculate the average battery capacity and average usage duration of these computers, sorted by manufacturing year from earliest to latest.\nyour response just have a SQL without anything.\n",
        "solution": "WITH OldLowBatteryComputers AS (SELECT ci.computer_id, ci.manufacturer, ci.model, ci.production_year, ci.battery_capacity_wh, bu.usage_duration_hours FROM computer_info ci JOIN battery_usage bu ON ci.computer_id = bu.computer_id WHERE ci.production_year < 2018 AND bu.battery_health_percent < 70), AggregatedData AS (SELECT computer_id, manufacturer, model, production_year, AVG(battery_capacity_wh) OVER () AS avg_battery_capacity, AVG(usage_duration_hours) OVER () AS avg_usage_duration FROM OldLowBatteryComputers) SELECT DISTINCT computer_id, manufacturer, model, production_year, avg_battery_capacity, avg_usage_duration FROM AggregatedData ORDER BY production_year ASC;",
        "db_id": "computer"
    },
    {
        "id": 220,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'base CPU frequency', 'maximum CPU frequency', 'theoretical maximum power consumption', '50,000 watts threshold'], 'relations': ['computer_to_frequency (computer_info.computer_id → cpu_base_frequency_ghz/cpu_max_frequency_ghz)', 'power_calculation (uses frequency values to derive power consumption)', 'threshold_comparison (theoretical maximum power consumption > 50000 watts)'], 'intent': 'calculate_computer_power_consumption_and_filter_by_threshold', 'reasoning_type': 'ideal hypothesis reasoning, mathematical logic reasoning', 'numerical_values': [50000], 'units': {'frequency': 'GHz (gigahertz)', 'power': 'watts (W)', 'conversion': 'Power calculation formula implied (e.g., P ∝ f^3) but not explicitly provided'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'cpu_base_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.8', '3.2', '1.7', '2.1', '4.0']}, {'column': 'cpu_max_frequency_ghz', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.7', '3.2', '4.4', '5.2']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a computer's base CPU frequency is 100 GHz, with a maximum frequency of 200 GHz, calculate the theoretical maximum power consumption when the computer is running at full load, and find all computers whose theoretical maximum power consumption exceeds 50,000 watts.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TheoreticalMaxPower AS (SELECT ci.computer_id, ci.manufacturer, ci.model, (200 * ci.cpu_base_frequency_ghz) AS cpu_max_power, (ci.gpu_vram_gb * 10) AS gpu_power, (ci.ram_size_gb * 5) AS ram_power, (ci.storage_size_gb * 2) AS storage_power, (200 * ci.cpu_base_frequency_ghz + ci.gpu_vram_gb * 10 + ci.ram_size_gb * 5 + ci.storage_size_gb * 2) AS total_max_power FROM computer_info ci) SELECT computer_id, manufacturer, model, total_max_power FROM TheoreticalMaxPower WHERE total_max_power > 50000 ORDER BY total_max_power DESC;",
        "db_id": "computer"
    },
    {
        "id": 221,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'battery discharge rate', 'fully loaded state', 'top 5 computers'], 'relations': ['computer_to_battery_usage (via computer_id)', 'fully_load_condition → max_power_consumption', 'discharge_rate_calculation (power_consumption_watts = discharge rate in Wh/h)'], 'intent': 'calculate_max_battery_discharge_rate_and_identify_top5', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [5], 'units': {'discharge_rate': 'watt-hours per hour (equivalent to watts)', 'conversion': '1 Wh/h = 1 W (direct equivalence)', 'power_unit': 'watts (as stored in database)'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.battery_usage': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'power_consumption_watts', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['45.0', '50.0', '35.0', '42.0', '55.0']}], 'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}]}}\nA physical knowledge question is as follows:\nCalculate the battery discharge rate (in watt-hours) of a computer when it is fully loaded and identify the top 5 computers with the fastest discharge rates.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DischargeRate AS (SELECT ci.computer_id, ci.manufacturer, ci.model, SUM(ur.power_consumption_watts * ur.usage_duration_hours) AS discharge_rate_wh FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.cpu_usage_percent = 100 AND ur.gpu_usage_percent = 100 AND ur.ram_usage_percent = 100 AND ur.storage_usage_percent = 100 GROUP BY ci.computer_id, ci.manufacturer, ci.model) SELECT computer_id, manufacturer, model, discharge_rate_wh FROM DischargeRate ORDER BY discharge_rate_wh DESC LIMIT 5;",
        "db_id": "computer"
    },
    {
        "id": 222,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computer', 'usage duration', 'year'], 'relations': ['computer_usage (computer_id → usage_records)', 'duration_aggregation_per_computer'], 'intent': 'calculate_total_usage_duration_per_computer_and_identify_top10', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'usage_duration': 'hours', 'time_period': 'year'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'usage_id'}], 'tableinfo': {'computer.usage_records': [{'column': 'computer_id'}, {'column': 'usage_duration_hours'}, {'column': 'usage_date'}]}}\nA mathematical logic question is as follows:\nCalculate the total usage duration (in hours) of each computer during a year, sort them in descending order of total usage duration, and identify the top 10 computers with the longest usage time.\nyour response just have a SQL without anything.\n",
        "solution": "WITH YearlyUsage AS (SELECT ci.computer_id, ci.manufacturer, ci.model, SUM(ur.usage_duration_hours) AS total_usage_hours FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.usage_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ci.computer_id, ci.manufacturer, ci.model) SELECT computer_id, manufacturer, model, total_usage_hours FROM YearlyUsage ORDER BY total_usage_hours DESC LIMIT 10;",
        "db_id": "computer"
    },
    {
        "id": 223,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['computers', 'manufacture year before 2018', 'battery health below 70%', 'average battery capacity', 'average usage time'], 'relations': ['computer_to_manufacture_year (computers → production_year in computer_info)', 'computer_to_battery_health (computers → battery_health_percent in battery_usage)', 'aggregation_relationship (computers → AVG(battery_capacity_wh), AVG(usage_duration_hours))'], 'intent': 'calculate_averages_and_sort_by_year', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2018, 70], 'units': {'year': 'calendar year', 'battery_health': '% (percentage)', 'battery_capacity': 'Wh (watt-hours)', 'usage_time': 'hours'}, 'foreign_keys': [{'fk_table': 'battery_usage', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'battery_usage', 'pk_column': 'battery_usage_id'}, {'pk_table': 'computer_info', 'pk_column': 'computer_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'production_year', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['2022', '2021', '2023']}, {'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'computer.battery_usage': [{'column': 'battery_health_percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '75.0']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'usage_duration_hours', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['4.0', '6.0', '5.0', '7.0', '3.0']}]}}\nA common sense reasoning question is as follows:\nFind computers manufactured before 2018 with battery health below 70%, calculate their average battery capacity and average usage time, and sort them by manufacture year from earliest to latest.\nyour response just have a SQL without anything.\n",
        "solution": "WITH OldLowBatteryComputers AS (SELECT ci.computer_id, ci.manufacturer, ci.model, ci.production_year, ci.battery_capacity_wh, bu.usage_duration_hours FROM computer_info ci JOIN battery_usage bu ON ci.computer_id = bu.computer_id WHERE ci.production_year < 2018 AND bu.battery_health_percent < 70), AggregatedData AS (SELECT computer_id, manufacturer, model, production_year, AVG(battery_capacity_wh) OVER () AS avg_battery_capacity, AVG(usage_duration_hours) OVER () AS avg_usage_duration FROM OldLowBatteryComputers) SELECT DISTINCT computer_id, manufacturer, model, production_year, avg_battery_capacity, avg_usage_duration FROM AggregatedData ORDER BY production_year ASC;",
        "db_id": "computer"
    },
    {
        "id": 224,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['hypothetical computer (battery: 100,000 Wh, power: 5,000 W)', 'theoretical battery life threshold (1,000 hours)', 'database computers meeting battery life condition'], 'relations': ['battery_life_calculation (battery_capacity / power_consumption)', 'computer_to_performance_link (computer_info.computer_id → performance_tests.computer_id for full load data)'], 'intent': 'calculate_battery_life_for_given_specs and retrieve_computers_exceeding_life_threshold', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 5000, 1000], 'units': {'battery_capacity': 'Wh (watt-hours)', 'power_consumption': 'W (watts)', 'battery_life': 'hours', 'conversion_formula': 'battery_life_hours = battery_capacity_wh / power_consumption_watts'}, 'foreign_keys': [{'fk_table': 'performance_tests', 'fk_column': 'computer_id', 'ref_table': 'computer_info', 'ref_column': 'computer_id'}], 'primary_keys': [{'pk_table': 'computer_info', 'pk_column': 'computer_id'}, {'pk_table': 'performance_tests', 'pk_column': 'test_id'}], 'tableinfo': {'computer.computer_info': [{'column': 'computer_id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'battery_capacity_wh', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['52.0', '100.0', '57.0', '66.0', '76.0']}, {'column': 'manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Dell', 'Apple', 'Lenovo', 'HP', 'Asus']}, {'column': 'model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['XPS 13', 'MacBook Pro 16', 'ThinkPad X1 Carbon', 'Spectre x360', 'ROG Zephyrus G14']}], 'computer.performance_tests': [{'column': 'power_consumption_watts'}, {'column': 'test_type'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a computer has a battery capacity of 100,000 Wh and a power consumption of 5,000 watts, calculate the theoretical battery life of this computer under full load and find all computers with a theoretical battery life exceeding 1,000 hours.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TheoreticalRuntime AS (SELECT ci.computer_id, ci.manufacturer, ci.model, ci.battery_capacity_wh, ur.power_consumption_watts, (ci.battery_capacity_wh / ur.power_consumption_watts) AS theoretical_runtime_hours FROM computer_info ci JOIN usage_records ur ON ci.computer_id = ur.computer_id WHERE ur.cpu_usage_percent = 100 AND ur.gpu_usage_percent = 100 AND ur.ram_usage_percent = 100 AND ur.storage_usage_percent = 100) SELECT computer_id, manufacturer, model, theoretical_runtime_hours FROM TheoreticalRuntime WHERE theoretical_runtime_hours > 1000 ORDER BY theoretical_runtime_hours DESC;",
        "db_id": "computer"
    },
    {
        "id": 225,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at 5000 meters altitude', 'measured air pressure 500 hPa', 'sea-level pressure 1013 hPa'], 'relations': ['collector_records_pressure (data collector → measured pressure)', 'pressure_comparison (measured vs sea-level)', 'elevation_based_location (data collector → altitude)'], 'intent': 'calculate_percentage_change_in_air_pressure', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 500, 1013], 'units': {'pressure': 'hPa (hectopascals)', 'elevation': 'meters', 'conversion': 'percentage change formula: ((P_measured - P_sea) / P_sea) * 100'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}]}}\nA physical knowledge question is as follows:\nIf a data collector is installed at an altitude of 5000 meters and records a measured air pressure value of 500 hPa, assuming the sea-level pressure is 1013 hPa, please calculate the percentage change in air pressure at this location relative to sea level.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((1013 - DataValue) / 1013) * 100 AS PressureChangePercentage FROM DataCollectionRecord WHERE DataType = '压力' AND CollectorId IN (SELECT Id FROM DataCollector WHERE ElevationMeters = 5000);",
        "db_id": "DataCollector"
    },
    {
        "id": 226,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature data', 'average temperature 25°C', 'standard deviation 5°C', 'range 20°C to 30°C'], 'relations': ['data_collected_by (temperature data → data collector)', 'statistical_distribution (normal distribution with μ=25°C, σ=5°C)'], 'intent': 'calculate_probability_of_data_in_range', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [25, 5, 20, 30], 'units': {'temperature': '°C (Celsius)', 'statistical_unit': 'standard deviation (σ=5°C)', 'range_unit': '°C for lower bound (20°C) and upper bound (30°C)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nSuppose a data collector records temperature data every minute, with an average temperature of 25°C and a standard deviation of 5°C over the course of a day. Please calculate the probability that the temperature data values will fall between 20°C and 30°C within that day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(CASE WHEN DataValue BETWEEN 20 AND 30 THEN 1 END) * 100.0 / COUNT(*)) AS Probability FROM DataCollectionRecord WHERE DataType = '温度' AND DATE(CollectionTime) = CURDATE();",
        "db_id": "DataCollector"
    },
    {
        "id": 227,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', \"status 'Under Maintenance'\", \"installation location 'Factory A'\"], 'relations': ['collector_location (data collector → Factory A)', 'collector_status (data collector → Under Maintenance)'], 'intent': 'infer_potential_issues_and_explain_maintenance_reason', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Monitoring environmental data in mountainous region.', 'Currently under maintenance for sensor calibration.', 'Monitoring environmental data in coastal region.', 'Station temporarily stopped due to extreme weather conditions.', 'Monitoring environmental data in forested region.']}, {'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}], 'DataCollector.DataCollectionRecord': [{'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'MinValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['24.0', '60.0', '1012.0', '10.0', '4.0']}, {'column': 'MaxValues', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['26.0', '70.0', '1015.0', '15.0', '7.0']}, {'column': 'DataAccuracy', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['98.5', '97.0', '99.0', '95.0', '96.5']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Normal temperature range observed.', 'Humidity within acceptable limits.', 'Stable atmospheric pressure.', 'Moderate rainfall recorded.', 'Light wind conditions.']}]}}\nA common sense reasoning question is as follows:\nIf a data collector's status shows as 'Under Maintenance', and its installation location is at 'Factory A', please infer the potential issues the collector might be facing and explain why maintenance is required.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Id, CollectorModel, InstallationLocation, ManufactureDate, InstallationDate, Manufacturer, Status, Notes FROM DataCollector WHERE Status = '维修' AND InstallationLocation = '工厂A';",
        "db_id": "DataCollector"
    },
    {
        "id": 228,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'sampling frequency 1000 times per second', 'data sample size 1KB', 'time period one year'], 'relations': ['collector_has_frequency (data collector → 1000 samples/second)', 'collector_has_sample_size (data collector → 1KB/sample)', 'time_duration (one year → 31536000 seconds)'], 'intent': 'calculate_total_data_generated_and_assess_feasibility', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 1, 365, 24, 60, 60], 'units': {'frequency': 'Hz (samples per second)', 'data_size': 'KB (kilobytes)', 'time': 'year converted to seconds', 'conversion_factors': '1 year = 365 days × 24 hours/day × 60 minutes/hour × 60 seconds/minute = 31,536,000 seconds'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}], 'DataCollector.DataCollectionRecord': [{'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssume a data collector has a sampling frequency set to 1000 times per second, with each data sample being 1KB in size. Calculate the total amount of data generated by this collector in one year, and discuss the feasibility of such a configuration in practical applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CollectorId, COUNT(*) AS TotalCollections, SUM(LENGTH(DataValue)) / 1024 AS TotalDataSizeKB, (SUM(LENGTH(DataValue)) / 1024 / 1024 / 1024) AS TotalDataSizeGB, CASE WHEN COUNT(*) > 1000000 THEN '不可行：数据量过大' ELSE '可行：数据量在可接受范围内' END AS Feasibility FROM DataCollectionRecord WHERE DATE(CollectionTime) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() AND CollectorId IN (SELECT Id FROM DataCollector WHERE CollectorModel = '高频采集器') GROUP BY CollectorId;",
        "db_id": "DataCollector"
    },
    {
        "id": 229,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"data collector with status 'shutdown'\", 'installation altitude 3000 meters', 'last data collection record with temperature -10°C', 'atmospheric pressure'], 'relations': ['collector_has_altitude (data collector → 3000m elevation)', \"collector_has_status (data collector → 'shutdown')\", 'record_belongs_to_collector (last record → data collector)', 'record_indicates_temperature (last record → -10°C)'], 'intent': 'calculate_atmospheric_pressure_and_analyze_shutdown_causes', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [3000, -10], 'units': {'altitude': 'meters', 'temperature': '°C (Celsius)', 'pressure': 'hPa (hectopascal, calculated output)', 'conversion': 'requires Kelvin conversion for pressure formula: T(K) = T(°C) + 273.15'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}], 'DataCollector.DataCollectionRecord': [{'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}, {'column': 'IsActive', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['1']}]}}\nA physical knowledge question is as follows:\nIf the status of a data collector shows 'shutdown' and its installation altitude is 3000 meters, assuming the last data collection record before shutdown indicates a temperature of -10°C, please calculate the atmospheric pressure value at that location and analyze possible reasons for the shutdown.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.InstallationLocation, DataCollector.ElevationMeters, DataCollectionRecord.DataValue AS Temperature, 1013 * POWER(1 - (0.0065 * DataCollector.ElevationMeters) / 288.15, (9.80665 * 0.0289644) / (8.3144598 * 0.0065)) AS Pressure_hPa FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollector.Status = '停机' AND DataCollector.ElevationMeters = 3000 AND DataCollectionRecord.CollectionTime = (SELECT MAX(CollectionTime) FROM DataCollectionRecord WHERE CollectorId = DataCollector.Id);",
        "db_id": "DataCollector"
    },
    {
        "id": 230,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', \"status 'running'\", 'collection frequency 10 times per minute', 'data volume 0.5KB per collection', 'one month (30 days)'], 'relations': [\"collector_status (data collector → 'running')\", 'frequency_to_volume (10 times/min → 0.5KB/collection)', 'time_period (30 days)'], 'intent': 'calculate_total_data_volume_and_disk_space_requirement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 0.5, 30], 'units': {'frequency': 'times per minute', 'data_volume': 'KB (kilobytes)', 'time': 'days', 'conversion': '1 day = 1440 minutes (for time calculations)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}]}}\nA mathematical logic question is as follows:\nAssuming a data collector's status is 'running', with a collection frequency of 10 times per minute and a data volume of 0.5KB per collection. Calculate the total data volume generated by this collector in one month (30 days) and analyze the disk space required to store this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 10 * 0.5 * 60 * 24 * 30 AS TotalDataSizeKB, (10 * 0.5 * 60 * 24 * 30) / 1024 AS TotalDataSizeMB FROM DataCollector WHERE Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 231,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', \"'under maintenance' status\", \"'chemical plant' installation location\"], 'relations': ['status_indicates_issue (data collector → under maintenance)', 'location_affects_condition (data collector → chemical plant)'], 'intent': 'deduce_potential_issues_and_explain_maintenance', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Monitoring environmental data in mountainous region.', 'Currently under maintenance for sensor calibration.', 'Monitoring environmental data in coastal region.', 'Station temporarily stopped due to extreme weather conditions.', 'Monitoring environmental data in forested region.']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'MinValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['24.0', '60.0', '1012.0', '10.0', '4.0']}, {'column': 'MaxValues', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['26.0', '70.0', '1015.0', '15.0', '7.0']}, {'column': 'DataAccuracy', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['98.5', '97.0', '99.0', '95.0', '96.5']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Normal temperature range observed.', 'Humidity within acceptable limits.', 'Stable atmospheric pressure.', 'Moderate rainfall recorded.', 'Light wind conditions.']}]}}\nA common sense reasoning question is as follows:\nIf a data collector's status is 'under maintenance' and its installation location is at a 'chemical plant', please deduce the potential issues the collector might be facing and explain why maintenance is required.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, DataCollector.ManufactureDate, DataCollector.InstallationDate, DataCollector.Manufacturer, DataCollector.Status, DataCollector.Notes FROM DataCollector WHERE Status = '维修' AND InstallationLocation = '化工厂';",
        "db_id": "DataCollector"
    },
    {
        "id": 232,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"data collector status 'running'\", 'collection frequency 100 times per second', '10KB per collection'], 'relations': [\"collector_has_status (data collector → 'running')\", 'collector_has_frequency (data collector → 100 times/second)', 'frequency_to_annual_data (100 times/second * time conversions)'], 'intent': 'calculate_total_annual_data_generation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 10], 'units': {'frequency': 'times per second (Hz)', 'data_per_collection': 'KB (kilobytes)', 'time_conversion': '1 year = 365 days * 24 hours * 60 minutes * 60 seconds = 31,536,000 seconds', 'data_conversion': '1 KB = 1024 bytes', 'total_data_unit': 'KB, GB, or TB for feasibility analysis'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming a data collector's status is 'running', and its collection frequency is set to 100 times per second, with each collection producing 10KB of data. Please calculate the total amount of data generated by this collector in one year and discuss the feasibility of such a configuration in practical applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 100 * 10 * 60 * 60 * 24 * 365 AS TotalDataSizeKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataSizeTB FROM DataCollector WHERE Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 233,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector installed at latitude 60°', 'temperature data value -20°C', \"Earth's rotational linear velocity\", 'equipment operation'], 'relations': ['collector_location (data collector → latitude 60°)', 'temperature_measurement (data collector → temperature -20°C)', 'velocity_depends_on_latitude (latitude → rotational linear velocity)', 'temperature_affects_operation (temperature → equipment operation)'], 'intent': 'calculate_rotational_velocity_and_analyze_temperature_impact', 'reasoning_type': ['physical knowledge reasoning', 'common sense understanding reasoning'], 'numerical_values': [60, -20], 'units': {'latitude': 'degrees', 'temperature': '°C (Celsius)', 'velocity': 'm/s (meters per second, to be calculated)', 'earth_radius': '6371000 meters (physical constant for calculation)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nIf a data collector is installed at a latitude of 60°, and the collected temperature data value is -20°C, calculate the Earth's rotational linear velocity at that location, and analyze the impact of temperature on the equipment's operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.Latitude, DataCollectionRecord.DataValue AS Temperature, (7.2921 * POWER(10, -5)) * 6371000 * COS(RADIANS(DataCollector.Latitude)) AS LinearVelocity_mps FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollector.Latitude = 60 AND DataCollectionRecord.DataType = '温度' AND DataCollectionRecord.CollectionTime = (SELECT MAX(CollectionTime) FROM DataCollectionRecord WHERE CollectorId = DataCollector.Id);",
        "db_id": "DataCollector"
    },
    {
        "id": 234,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at latitude 45°', 'collection frequency 5 times per minute', 'data volume per collection 0.2KB', 'time period one year'], 'relations': ['collector_has_frequency (data collector → 5 times/minute)', 'collector_generates_data_volume (data collector → 0.2KB/collection)', 'time_duration_calculation (1 year → minutes conversion)'], 'intent': 'calculate_total_data_volume_and_disk_space_requirement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [45, 5, 0.2], 'units': {'latitude': 'degrees', 'frequency': 'times per minute', 'data_volume': 'KB (kilobytes)', 'time_conversion': '1 year = 365 days = 525,600 minutes', 'storage_analysis': '1 KB = 1024 bytes (binary system)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}]}}\nA mathematical logic question is as follows:\nAssuming a data collector is installed at a latitude of 45° with a collection frequency of 5 times per minute, and each collection generates a data volume of 0.2KB. Please calculate the total data volume generated by this collector in one year and analyze the disk space required to store this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 5 * 0.2 * 60 * 24 * 365 AS TotalDataSizeKB, (5 * 0.2 * 60 * 24 * 365) / 1024 AS TotalDataSizeMB FROM DataCollector WHERE DataCollector.Latitude = 45;",
        "db_id": "DataCollector"
    },
    {
        "id": 235,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'latitude 30°', 'operational status', 'environmental conditions'], 'relations': ['collector_located_at (data collector → latitude 30°)', 'collector_has_status (data collector → operational)', 'collector_exposed_to (data collector → environmental conditions)', 'conditions_affect_operation (environmental conditions → device operation)'], 'intent': 'infer_environmental_conditions_and_device_impact', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [30], 'units': {'latitude': 'degrees', 'environmental_units': 'DataUnit field (e.g., °C for temperature, % for humidity)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Monitoring environmental data in mountainous region.', 'Currently under maintenance for sensor calibration.', 'Monitoring environmental data in coastal region.', 'Station temporarily stopped due to extreme weather conditions.', 'Monitoring environmental data in forested region.']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'MinValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['24.0', '60.0', '1012.0', '10.0', '4.0']}, {'column': 'MaxValues', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['26.0', '70.0', '1015.0', '15.0', '7.0']}, {'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Normal temperature range observed.', 'Humidity within acceptable limits.', 'Stable atmospheric pressure.', 'Moderate rainfall recorded.', 'Light wind conditions.']}]}}\nA common sense reasoning question is as follows:\nIf a data collector is installed at a latitude of 30° and its status is 'operational', please infer the environmental conditions the collector might encounter and explain how these conditions affect the device's operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, DataCollector.Latitude, DataCollector.Status, DataCollector.Notes FROM DataCollector WHERE DataCollector.Latitude = 30 AND DataCollector.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 236,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at latitude 90°', 'sampling frequency 100 times per second', 'data size per sample 1KB', 'time period one year'], 'relations': ['collector_location (data collector → North Pole)', 'collector_sampling_frequency (data collector → 100 Hz)', 'collector_data_size (data collector → 1KB/sample)', 'time_duration (one year → 365 days)'], 'intent': 'calculate_total_data_volume_and_discuss_feasibility', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 1, 90, 365, 24, 60, 60], 'units': {'frequency': 'Hz (per second)', 'data_size': 'KB (kilobytes)', 'time': {'seconds_per_minute': 60, 'minutes_per_hour': 60, 'hours_per_day': 24, 'days_per_year': 365}, 'coordinate': 'degrees (°)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collector is installed at a latitude of 90° (the North Pole), with a sampling frequency set to 100 times per second and each sample's data size being 1KB. Please calculate the total data volume generated by this collector over one year, and discuss the feasibility of such a setup in practical applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 100 * 1 * 60 * 60 * 24 * 365 AS TotalDataSizeKB, (100 * 1 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataSizeTB FROM DataCollector WHERE DataCollector.Latitude = 90;",
        "db_id": "DataCollector"
    },
    {
        "id": 237,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at longitude 0°', 'temperature data 15°C', 'solar altitude angle', 'equipment operation impact'], 'relations': ['collector_location (longitude 0° → Greenwich Meridian)', 'data_association (collector → recorded temperature 15°C)', 'calculation_dependency (latitude/date → solar altitude)', 'temperature_effect (15°C → equipment operation)'], 'intent': 'calculate_solar_altitude_and_analyze_temperature_impact', 'reasoning_type': 'physical knowledge reasoning and common sense understanding reasoning', 'numerical_values': [0, 15], 'units': {'longitude': 'degrees', 'temperature': '°C', 'angle': 'degrees (for solar altitude)', 'threshold': '°C (for rule comparison)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'Longitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['104.064762', '116.407394', '121.473701', '91.110221', '102.709999']}], 'DataCollector.DataCollectionRecord': [{'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}]}}\nA physical knowledge question is as follows:\nIf a data collector is installed at a longitude of 0° (Greenwich Meridian), and the collected temperature data value is 15°C, calculate the solar altitude angle at this location at noon and analyze the impact of temperature on equipment operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.Latitude, DataCollectionRecord.DataValue AS Temperature, DEGREES(ASIN(SIN(RADIANS(DataCollector.Latitude)) * SIN(RADIANS(23.44)) + COS(RADIANS(DataCollector.Latitude)) * COS(RADIANS(23.44)) * COS(RADIANS(0)))) AS SolarElevationAngle FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollector.Longitude = 0 AND DataCollectionRecord.DataType = '温度' AND DATE(DataCollectionRecord.CollectionTime) = CURDATE() ORDER BY DataCollectionRecord.CollectionTime DESC LIMIT 1;",
        "db_id": "DataCollector"
    },
    {
        "id": 238,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at longitude 120°', 'collection frequency (10 times per minute)', 'data size per collection (0.5KB)', 'time period (30 days)'], 'relations': ['collector_configuration (longitude → frequency/size)', 'time_based_calculation (frequency × duration)', 'data_volume_aggregation (collections × size)'], 'intent': 'calculate_total_data_volume_and_disk_space', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120, 10, 0.5, 30], 'units': {'longitude': 'degrees', 'frequency': 'times per minute', 'data_size': 'KB (kilobytes)', 'time': 'days', 'conversion': '1 day = 1440 minutes'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssuming a data collector is installed at a longitude of 120°, with a collection frequency of 10 times per minute and each collection's data size being 0.5KB. Please calculate the total data volume generated by this collector in one month (30 days) and analyze the disk space required to store this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 10 * 0.5 * 60 * 24 * 30 AS TotalDataSizeKB, (10 * 0.5 * 60 * 24 * 30) / 1024 AS TotalDataSizeMB FROM DataCollector WHERE DataCollector.Longitude = 120;",
        "db_id": "DataCollector"
    },
    {
        "id": 239,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'longitude -90°', 'status operational'], 'relations': ['collector_location (data collector → longitude -90°)', 'collector_status (data collector → operational)', 'collector_to_records (data collector → data collection records)'], 'intent': 'infer_possible_environmental_conditions_and_effects', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [-90], 'units': {'longitude': 'degrees', 'elevation': 'meters (from ElevationMeters field)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Longitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['104.064762', '116.407394', '121.473701', '91.110221', '102.709999']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Normal temperature range observed.', 'Humidity within acceptable limits.', 'Stable atmospheric pressure.', 'Moderate rainfall recorded.', 'Light wind conditions.']}]}}\nA common sense reasoning question is as follows:\nIf a data collector is installed at a longitude of -90° and its status is 'operational', please infer the possible environmental conditions the collector may encounter and explain how these conditions could affect the equipment's operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, DataCollector.Longitude, DataCollector.Status, DataCollector.Notes FROM DataCollector WHERE DataCollector.Longitude = -90 AND DataCollector.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 240,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at longitude 180°', 'sampling frequency 100 times per second', '10KB data per sample', 'one year duration'], 'relations': ['collector_location (longitude 180° → International Date Line)', 'collection_settings (collector → frequency 100Hz)', 'data_generation (frequency × sample size → data volume)'], 'intent': 'calculate_total_data_volume_and_assess_feasibility', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [100, 10, 180, 365], 'units': {'time': {'seconds_per_minute': 60, 'minutes_per_hour': 60, 'hours_per_day': 24, 'days_per_year': 365}, 'data': {'base_unit': 'KB', 'conversion_factors': {'KB_to_MB': 1024, 'MB_to_GB': 1024, 'GB_to_TB': 1024}}, 'coordinates': 'degrees (°)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'Longitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['104.064762', '116.407394', '121.473701', '91.110221', '102.709999']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collector is installed at a longitude of 180° (the International Date Line), with a sampling frequency set to 100 times per second and each sample generating 10KB of data. Calculate the total data volume produced by this collector in one year and discuss the feasibility of such a setup in practical applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 100 * 10 * 60 * 60 * 24 * 365 AS TotalDataSizeKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataSizeTB FROM DataCollector WHERE DataCollector.Longitude = 180;",
        "db_id": "DataCollector"
    },
    {
        "id": 241,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at 5000 meters elevation', 'air pressure data value 500 hPa', 'sea level pressure 1013 hPa'], 'relations': ['collector_location (DataCollector → ElevationMeters)', 'data_measurement (DataCollectionRecord → DataValue for air pressure)'], 'intent': 'calculate_percentage_change_in_air_pressure', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 500, 1013], 'units': {'elevation': 'meters', 'pressure': 'hPa (hectopascals)', 'calculation': 'percentage change = [(local_pressure - sea_level_pressure) / sea_level_pressure] * 100'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}, {'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nIf a data collector is installed at a location 5000 meters above sea level, and the collected air pressure data value is 500 hPa, assuming the sea level pressure is 1013 hPa, calculate the percentage change in air pressure at this location relative to sea level.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.ElevationMeters, DataCollectionRecord.DataValue AS Pressure_hPa, ((1013 - DataCollectionRecord.DataValue) / 1013) * 100 AS PressureChangePercentage FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollector.ElevationMeters = 5000 AND DataCollectionRecord.DataType = '压力' ORDER BY DataCollectionRecord.CollectionTime DESC LIMIT 1;",
        "db_id": "DataCollector"
    },
    {
        "id": 242,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector at 3,000 meters elevation', 'collection frequency of 5 times per minute', 'data size per collection of 0.2KB', 'one year duration'], 'relations': ['collector_has_frequency (collector → 5 times/minute)', 'collector_has_data_size (collector → 0.2KB/collection)', 'duration_applies (one year → total data volume)'], 'intent': 'calculate_total_data_volume_and_disk_space_requirements', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3000, 5, 0.2], 'units': {'elevation': 'meters', 'frequency': 'per minute', 'data_size': 'KB', 'time_period': 'year', 'conversion': '1 year = 365 days = 365 * 24 * 60 minutes'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssuming a data collector is installed at a position 3,000 meters above sea level, with a collection frequency of 5 times per minute and each collection's data size being 0.2KB. Please calculate the total data volume generated by the collector in one year and analyze the disk space required to store this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 5 * 0.2 * 60 * 24 * 365 AS TotalDataSizeKB, (5 * 0.2 * 60 * 24 * 365) / 1024 AS TotalDataSizeMB FROM DataCollector WHERE DataCollector.ElevationMeters = 3000;",
        "db_id": "DataCollector"
    },
    {
        "id": 243,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'elevation: 1000 meters', 'status: operational'], 'relations': ['collector_location_elevation (1000 meters)', 'collector_status (operational)', 'elevation_to_environment (1000m → atmospheric conditions)', 'environment_to_operation (conditions → equipment impact)'], 'intent': 'infer_environmental_conditions_and_effects_on_equipment', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000], 'units': {'elevation': 'meters', 'environmental_units': 'implied by DataUnit field (e.g., °C, hPa)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'MinValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['24.0', '60.0', '1012.0', '10.0', '4.0']}, {'column': 'MaxValues', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['26.0', '70.0', '1015.0', '15.0', '7.0']}, {'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}]}}\nA common sense reasoning question is as follows:\nIf a data collector is installed at a location 1,000 meters above sea level and its status is 'operational,' please infer the environmental conditions the collector might encounter and explain how these conditions could affect the operation of the equipment.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, DataCollector.ElevationMeters, DataCollector.Status, DataCollector.Notes FROM DataCollector WHERE DataCollector.ElevationMeters = 1000 AND DataCollector.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 244,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'height 8,848 meters (Mount Everest summit)', 'sampling frequency 100 times/second', 'data volume per sample 10 KB', 'time period one year'], 'relations': ['collector_installation (collector → Mount Everest summit)', 'frequency_setting (collector → 100 samples/second)', 'data_volume_per_sample (each sample → 10 KB)', 'duration_calculation (one year → seconds conversion)'], 'intent': 'calculate_total_annual_data_volume_and_discuss_practical_feasibility', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8848, 100, 10, 365, 24, 3600], 'units': {'elevation': 'meters', 'frequency': 'samples per second (Hz)', 'data_volume': 'KB (kilobytes)', 'time_conversion': 'seconds/year = 365 days × 24 hours × 3600 seconds'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collector is installed at a height of 8,848 meters above sea level (the summit of Mount Everest), with a sampling frequency set to 100 times per second, and each collected data volume is 10 KB. Please calculate the total data volume generated by this collector in one year and discuss the feasibility of such a setup in practical applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 100 * 10 * 60 * 60 * 24 * 365 AS TotalDataSizeKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataSizeTB FROM DataCollector WHERE DataCollector.ElevationMeters = 8848;",
        "db_id": "DataCollector"
    },
    {
        "id": 245,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature value 25°C', 'Celsius unit', 'Fahrenheit temperature', 'equipment operation'], 'relations': ['unit_conversion (Celsius to Fahrenheit)', 'temperature_impact (on equipment operation via rules)'], 'intent': 'convert_temperature_unit_and_analyze_operational_impact', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [25], 'units': {'input_unit': '°C (Celsius)', 'output_unit': '°F (Fahrenheit)', 'conversion_formula': 'F = (C × 9/5) + 32', 'rule_threshold_unit': 'ThresholdUnit from DataCollectionRule'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}, {'column': 'IsActive', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['1']}]}}\nA physical knowledge question is as follows:\nIf a data collector records a temperature value of 25°C, with the data unit in Celsius, please calculate the corresponding Fahrenheit temperature and analyze the impact of temperature on equipment operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollectionRecord.DataValue AS Temperature_Celsius, (DataCollectionRecord.DataValue * 9 / 5 + 32) AS Temperature_Fahrenheit FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollectionRecord.DataType = '温度' AND DataCollectionRecord.DataUnit = '摄氏度' AND DataCollectionRecord.DataValue = 25;",
        "db_id": "DataCollector"
    },
    {
        "id": 246,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'temperature reading 30°C', 'sampling frequency 5/min', 'data point size 0.2 KB'], 'relations': ['collector_generates_data (collector → data records)', 'sampling_frequency_to_volume (5/min → annual data volume)', 'size_per_point_to_storage (0.2KB → disk space)'], 'intent': 'calculate_annual_data_volume_and_disk_space', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 5, 0.2, 365], 'units': {'time': 'minutes, days, years', 'data_size': 'KB (implied conversion to GB/TB)', 'conversion': '1 year = 365 days = 525,600 minutes'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}]}}\nA mathematical logic question is as follows:\nAssuming a data collector captures a temperature reading of 30°C, with a sampling frequency of 5 times per minute, and each captured data point occupies 0.2 KB. Please calculate the total data volume generated by this collector in one year and analyze the required disk space for storing this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 5 * 0.2 * 60 * 24 * 365 AS TotalDataSizeKB, (5 * 0.2 * 60 * 24 * 365) / 1024 AS TotalDataSizeMB FROM DataCollector WHERE DataCollector.Id IN (SELECT CollectorId FROM DataCollectionRecord WHERE DataType = '温度' AND DataValue = 30);",
        "db_id": "DataCollector"
    },
    {
        "id": 247,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'temperature value -10°C', \"status 'operational'\", 'environmental conditions', 'equipment operation'], 'relations': ['collector_records_temperature (data collector → temperature value)', 'collector_has_status (data collector → operational status)', 'conditions_affect_operation (environmental conditions → equipment operation)'], 'intent': 'infer_environmental_conditions_and_assess_impact_on_equipment', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [-10], 'units': {'temperature': '°C (Celsius)', 'elevation': 'meters (for terrain analysis)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'Longitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['104.064762', '116.407394', '121.473701', '91.110221', '102.709999']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA common sense reasoning question is as follows:\nIf a data collector records a temperature value of -10°C and its status is 'operational', infer the possible environmental conditions where the collector is installed, and explain how these conditions may affect the equipment's operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, DataCollector.Latitude, DataCollector.Longitude, DataCollector.ElevationMeters, DataCollector.Status, DataCollector.Notes FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollectionRecord.DataType = '温度' AND DataCollectionRecord.DataValue = -10 AND DataCollector.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 248,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature value 1000°C', 'sampling frequency 100 times per second', 'data point size 10KB', 'time period one year', 'data collector'], 'relations': ['collector_records_temperature (data collector → temperature)', 'collector_frequency_setting (data collector → 100 Hz sampling)', 'data_point_storage_size (each data point → 10KB)'], 'intent': 'calculate_total_data_volume_and_assess_feasibility', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [1000, 100, 10], 'units': {'temperature': '°C', 'frequency': 'Hz (times per second)', 'data_volume': 'KB (kilobytes)', 'time_conversion': '1 year = 365 days × 24 hours × 3600 seconds'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collector records a temperature value of 1000°C with a sampling frequency set to 100 times per second, and each collected data point occupies 10KB. Please calculate the total data volume generated by this collector over one year, and discuss the feasibility of such settings in practical applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 100 * 10 * 60 * 60 * 24 * 365 AS TotalDataSizeKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataSizeTB FROM DataCollector WHERE DataCollector.Id IN (SELECT CollectorId FROM DataCollectionRecord WHERE DataType = '温度' AND DataValue = 1000);",
        "db_id": "DataCollector"
    },
    {
        "id": 249,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity value of 80%', 'absolute humidity (g/m³)', 'environmental temperature 25°C'], 'relations': ['humidity_conversion (relative humidity → absolute humidity)', 'temperature_dependency (25°C saturation vapor pressure)'], 'intent': 'calculate_absolute_humidity_from_relative_humidity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80, 25], 'units': {'relative_humidity': '% (percentage)', 'temperature': '°C (Celsius)', 'absolute_humidity': 'g/m³ (grams per cubic meter)', 'conversion_formula': 'AH = (RH × saturation_vapor_pressure) / (461.5 × (T + 273.15))'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nIf a data collector records a humidity value of 80% with the unit as a percentage, calculate the corresponding absolute humidity (g/m³), assuming the environmental temperature is 25°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollectionRecord.DataValue AS RelativeHumidity, (DataCollectionRecord.DataValue / 100 * 3.169 * 1000) / (461.5 * 298.15) AS AbsoluteHumidity_gpm3 FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollectionRecord.DataType = '湿度' AND DataCollectionRecord.DataUnit = '百分比' AND DataCollectionRecord.DataValue = 80;",
        "db_id": "DataCollector"
    },
    {
        "id": 250,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'humidity value 60%', 'sampling frequency 10 times per minute', 'sampled data volume 0.5KB', 'one month (30 days)', 'disk space'], 'relations': ['collector_records_data (data collector → humidity value)', 'collector_has_frequency (data collector → sampling frequency)', 'sample_has_volume (each sample → data volume)', 'time_duration_calculation (one month → total samples)'], 'intent': 'calculate_total_data_volume_and_required_disk_space', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 10, 0.5, 30], 'units': {'humidity': '% (percentage)', 'frequency': 'times per minute', 'data_volume': 'KB (kilobytes)', 'time': 'days (converted to minutes)', 'conversions': ['minutes_in_month = 30 * 24 * 60', 'total_samples = frequency × minutes_in_month', 'total_data_KB = total_samples × data_volume_per_sample']}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssume a data collector records a humidity value of 60%, with a sampling frequency of 10 times per minute, and each sampled data volume is 0.5KB. Calculate the total data volume generated by this collector in one month (30 days) and analyze the required disk space for storing this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 10 * 0.5 * 60 * 24 * 30 AS TotalDataSizeKB, (10 * 0.5 * 60 * 24 * 30) / 1024 AS TotalDataSizeMB FROM DataCollector WHERE DataCollector.Id IN (SELECT CollectorId FROM DataCollectionRecord WHERE DataType = '湿度' AND DataValue = 60);",
        "db_id": "DataCollector"
    },
    {
        "id": 251,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity value 95%', \"status 'running'\", 'environmental conditions', 'device operation impact'], 'relations': ['value_to_condition (95% humidity → high-humidity environment)', 'condition_to_impact (high-humidity → device operation)', 'status_to_operation (running → current functionality)'], 'intent': 'deduce_installation_environment_and_operational_impact', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [95], 'units': {'humidity': '% (percentage)', 'environmental_parameters': 'implied through location data'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollector': [{'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'Longitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['104.064762', '116.407394', '121.473701', '91.110221', '102.709999']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Monitoring environmental data in mountainous region.', 'Currently under maintenance for sensor calibration.', 'Monitoring environmental data in coastal region.', 'Station temporarily stopped due to extreme weather conditions.', 'Monitoring environmental data in forested region.']}]}}\nA common sense reasoning question is as follows:\nIf a data collector records a humidity value of 95% and its status is 'running', please deduce the possible environmental conditions where the collector might be installed, and explain the impact of these conditions on the device's operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, DataCollector.Latitude, DataCollector.Longitude, DataCollector.ElevationMeters, DataCollector.Status, DataCollector.Notes FROM DataCollector JOIN DataCollectionRecord ON DataCollector.Id = DataCollectionRecord.CollectorId WHERE DataCollectionRecord.DataType = '湿度' AND DataCollectionRecord.DataValue = 95 AND DataCollector.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 252,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'humidity value 200%', 'sampling frequency 100 times per second', 'data per sample 10KB', 'time period one year'], 'relations': ['collector_records_parameter (data collector → humidity)', 'frequency_configuration (data collector → sampling frequency)', 'data_generation_relationship (frequency * sample_size → total data volume)'], 'intent': 'calculate_total_data_volume_and_assess_practicality', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [200, 100, 10, 1], 'units': {'humidity': '% (percentage)', 'frequency': 'Hz (samples per second)', 'data': 'KB (kilobytes)', 'time': 'year', 'conversion': ['1 year = 365.25 days (leap year adjustment)', '1 day = 86400 seconds', '1 KB = 1024 bytes']}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming a data collector records a humidity value of 200%, with a sampling frequency set to 100 times per second and each sample generating 10KB of data. Calculate the total data volume produced by this collector over one year, and discuss the practicality of such a setup in real-world applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DataCollector.Id, DataCollector.CollectorModel, DataCollector.InstallationLocation, 100 * 10 * 60 * 60 * 24 * 365 AS TotalDataSizeKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataSizeTB FROM DataCollector WHERE DataCollector.Id IN (SELECT CollectorId FROM DataCollectionRecord WHERE DataType = '湿度' AND DataValue = 200);",
        "db_id": "DataCollector"
    },
    {
        "id": 253,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'pressure value 1013 hPa', 'standard atmospheric pressure (atm)', 'equipment operation'], 'relations': ['recorded_by (pressure value → data collector)', 'converted_to (hPa → atm)', 'affects (pressure → equipment operation)'], 'intent': 'convert_pressure_unit_and_analyze_equipment_impact', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [1013], 'units': {'input_unit': 'hPa (hectopascal)', 'target_unit': 'atm (standard atmosphere)', 'conversion_formula': '1 atm = 1013.25 hPa'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}]}}\nA physical knowledge question is as follows:\nIf a data collector records a pressure value of 1013 hPa, and the unit of the data is hectopascal, please calculate the corresponding standard atmospheric pressure (atm) for this pressure and analyze the impact of the pressure on equipment operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dcr.Id AS RecordId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, (dcr.DataValue / 1013.25) AS PressureInAtm, CASE WHEN (dcr.DataValue / 1013.25) > 1 THEN '高压环境，可能影响设备密封性和结构强度' WHEN (dcr.DataValue / 1013.25) < 1 THEN '低压环境，可能影响设备性能' ELSE '标准大气压，设备运行正常' END AS PressureImpact FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '压力' AND dcr.DataValue = 1013 AND dcr.DataUnit = 'hPa';",
        "db_id": "DataCollector"
    },
    {
        "id": 254,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'pressure data (500 hPa)', 'sampling frequency (5 times/minute)', 'data per sample (0.2 KB)', 'one year'], 'relations': ['collector_captures_data (data collector → pressure data)', 'frequency_setting (sampling frequency → 5 times/minute)', 'storage_per_sample (each sample → 0.2 KB)', 'time_span (data collection → one year)'], 'intent': 'calculate_total_data_volume_and_disk_space', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 5, 0.2, 365], 'units': {'pressure': 'hPa (hectopascal)', 'frequency': 'times per minute', 'data_volume': 'KB (kilobytes)', 'time': 'year (converted to minutes: 1 year = 365 days × 24 hours × 60 minutes)', 'conversion_factors': {'days_per_year': 365, 'hours_per_day': 24, 'minutes_per_hour': 60}}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssuming a data collector captures pressure data with a value of 500 hPa, and its sampling frequency is 5 times per minute, with each captured data amounting to 0.2 KB. Calculate the total data volume generated by the collector within one year and analyze the required disk space for storing this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, COUNT(dcr.Id) AS TotalCollections, COUNT(dcr.Id) * 0.2 AS TotalDataKB, COUNT(dcr.Id) * 0.2 / 1024 AS TotalDataMB, COUNT(dcr.Id) * 0.2 / 1024 / 1024 AS TotalDataGB, CASE WHEN COUNT(dcr.Id) * 0.2 / 1024 / 1024 > 1000 THEN '需要大容量存储设备（如TB级硬盘）' WHEN COUNT(dcr.Id) * 0.2 / 1024 / 1024 > 100 THEN '需要中等容量存储设备（如数百GB硬盘）' ELSE '常规存储设备即可满足需求' END AS StorageRecommendation FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '压力' AND dcr.DataValue = 500 AND dcr.DataUnit = 'hPa' AND dcr.CollectionTime BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY dc.Id, dc.CollectorModel, dc.InstallationLocation, dc.Status;",
        "db_id": "DataCollector"
    },
    {
        "id": 255,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'pressure value 2000 hPa', 'operational status', 'environmental conditions'], 'relations': ['records (data collector → pressure value)', 'has_status (data collector → operational status)', 'located_in (data collector → environmental conditions)', 'affected_by (equipment operation → environmental conditions)'], 'intent': 'infer_environmental_conditions_and_impact_on_operation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2000], 'units': {'pressure': 'hPa (hectopascal)', 'conversion': '1 hPa = 100 Pa (standard unit conversion)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollector': [{'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}, {'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'Longitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['104.064762', '116.407394', '121.473701', '91.110221', '102.709999']}, {'column': 'Notes', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Monitoring environmental data in mountainous region.', 'Currently under maintenance for sensor calibration.', 'Monitoring environmental data in coastal region.', 'Station temporarily stopped due to extreme weather conditions.', 'Monitoring environmental data in forested region.']}]}}\nA common sense reasoning question is as follows:\nIf a data collector records a pressure value of 2000 hPa and its status is 'operational', please infer the possible environmental conditions where the collector might be installed, and explain how these conditions affect the equipment's operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dc.ElevationMeters, dcr.DataValue, dcr.DataUnit, CASE WHEN dcr.DataValue = 2000 AND dc.Status = '运行' THEN '高压环境（如深海或高压工业设备），可能导致设备密封失效或结构变形' ELSE '环境条件正常' END AS EnvironmentCondition, CASE WHEN dcr.DataValue = 2000 AND dc.Status = '运行' THEN '建议定期检查设备密封性和结构强度，确保设备正常运行' ELSE '无需特殊维护' END AS MaintenanceRecommendation FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '压力' AND dcr.DataValue = 2000 AND dcr.DataUnit = 'hPa' AND dc.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 256,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'pressure value 100,000 hPa', 'sampling frequency 100 Hz', 'data sample size 10KB', 'one year duration'], 'relations': ['collector_records_data (data collector → pressure data)', 'frequency_configuration (collector → 100 samples/second)', 'sample_size_relation (each pressure sample → 10KB)'], 'intent': 'calculate_total_data_volume_and_assess_practicality', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [100000, 100, 10, 1], 'units': {'pressure': 'hPa (hectopascal)', 'frequency': 'Hz (samples per second)', 'data_size': 'KB (kilobytes)', 'time': 'year (converted to seconds for calculation)', 'conversion_factors': {'seconds_in_year': '31536000 = 365 * 24 * 3600'}}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'CollectionFrequency', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Every 10 minutes', 'Every 30 minutes', 'Every hour', 'Every 6 hours', 'Every 15 minutes']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollectionRecord': [{'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollector': [{'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collector records a pressure value of 100,000 hPa with a sampling frequency set to 100 times per second, and each collected data sample is 10KB in size. Calculate the total data volume generated by this collector over one year, and discuss the practicality of such a configuration in real-world applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, (100 * 10 * 60 * 60 * 24 * 365) AS TotalDataKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 AS TotalDataMB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 AS TotalDataGB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataTB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 / 1024 AS TotalDataPB, CASE WHEN (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 / 1024 > 1 THEN '数据量过大，存储和处理不可行' ELSE '数据量在可接受范围内' END AS FeasibilityAnalysis FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '压力' AND dcr.DataValue = 100000 AND dcr.DataUnit = 'hPa';",
        "db_id": "DataCollector"
    },
    {
        "id": 257,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'minimum temperature -273.15°C', 'absolute zero', 'equipment operation'], 'relations': ['recorded_by (minimum temperature → data collector)', 'physical_meaning (-273.15°C → absolute zero)', 'impact_on (absolute zero → equipment operation)'], 'intent': 'explain_physical_meaning_and_analyze_impact_on_equipment', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [-273.15], 'units': {'temperature': '°C (Celsius)', 'absolute_zero': '-273.15°C (defined physical constant)', 'kelvin_conversion': 'K = °C + 273.15 (implied for analysis)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'MinValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['24.0', '60.0', '1012.0', '10.0', '4.0']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollector': [{'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}]}}\nA physical knowledge question is as follows:\nIf a data collector records a minimum temperature of -273.15°C, and the data unit is Celsius, explain the physical meaning of this value and analyze its impact on equipment operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, CASE WHEN dcr.DataValue = -273.15 AND dcr.DataUnit = '°C' THEN '绝对零度，分子和原子热运动停止' ELSE '非绝对零度' END AS PhysicalMeaning, CASE WHEN dcr.DataValue = -273.15 AND dcr.DataUnit = '°C' THEN '极端低温可能导致设备材料脆化或电子元件失效' ELSE '温度在正常范围内，设备运行正常' END AS ImpactOnDevice FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '温度' AND dcr.DataValue = -273.15 AND dcr.DataUnit = '°C';",
        "db_id": "DataCollector"
    },
    {
        "id": 258,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'minimum humidity reading (0%)', 'sampling rate (10 times per minute)', 'data per sample (0.5KB)', 'one month (30 days)', 'disk space'], 'relations': ['collector_generates_data (data collector → data samples)', 'time_based_calculation (sampling rate × time period)', 'storage_requirement (total data volume → disk space)'], 'intent': 'calculate_total_data_volume_and_disk_space_requirements', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0, 10, 0.5, 30], 'units': {'humidity': '% (percent)', 'time': {'sampling_rate': 'per minute', 'duration': 'days', 'conversion': '1 day = 1440 minutes'}, 'data': {'per_sample': 'KB (kilobytes)', 'storage': 'KB, MB, GB derived', 'conversion': '1 GB = 1,048,576 KB'}}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssuming a data collector has a minimum humidity reading of 0%, a sampling rate of 10 times per minute, and each sampling produces 0.5KB of data. Please calculate the total data volume generated by this collector in one month (30 days) and analyze the disk space required to store this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, COUNT(dcr.Id) AS TotalCollections, COUNT(dcr.Id) * 0.5 AS TotalDataKB, COUNT(dcr.Id) * 0.5 / 1024 AS TotalDataMB, CASE WHEN COUNT(dcr.Id) * 0.5 / 1024 > 100 THEN '需要中等容量存储设备（如数百GB硬盘）' ELSE '常规存储设备即可满足需求' END AS StorageRecommendation FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '湿度' AND dcr.DataValue = 0 AND dcr.DataUnit = '%' AND dcr.CollectionTime BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY dc.Id, dc.CollectorModel, dc.InstallationLocation, dc.Status;",
        "db_id": "DataCollector"
    },
    {
        "id": 259,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'minimum pressure 0 hPa', \"status 'operating'\", 'environmental conditions', 'equipment operation'], 'relations': ['collector_records_pressure (DataCollector.Id → DataCollectionRecord.CollectorId)', 'pressure_implies_environment (0 hPa → high-altitude/vacuum conditions)', 'environment_affects_operation (environmental conditions → equipment performance)'], 'intent': 'infer_environmental_conditions_and_explain_operational_impact', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0], 'units': {'pressure': 'hPa (hectopascals)', 'conversion': '0 hPa ≈ absolute vacuum reference', 'elevation': 'ElevationMeters (correlates with atmospheric pressure)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'MinValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['24.0', '60.0', '1012.0', '10.0', '4.0']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollector': [{'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}, {'column': 'Latitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['30.658601', '39.904202', '31.230416', '29.654084', '25.045806']}, {'column': 'Longitude', 'type': 'DECIMAL(10, 6)', 'primary_key': False, 'comment': '', 'examples': ['104.064762', '116.407394', '121.473701', '91.110221', '102.709999']}]}}\nA common sense reasoning question is as follows:\nIf a data collector records a minimum pressure of 0 hPa and its status is 'operating', infer the possible environmental conditions where the collector is installed, and explain how these conditions affect the operation of the equipment.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, CASE WHEN dcr.DataValue = 0 AND dcr.DataUnit = 'hPa' THEN '真空环境（如太空或实验室真空室）' ELSE '非真空环境' END AS EnvironmentCondition, CASE WHEN dcr.DataValue = 0 AND dcr.DataUnit = 'hPa' THEN '真空环境可能导致设备散热不良或材料挥发' ELSE '环境条件正常，设备运行正常' END AS ImpactOnDevice FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '压力' AND dcr.DataValue = 0 AND dcr.DataUnit = 'hPa' AND dc.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 260,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\n    \"data collector\",\n    \"minimum temperature -1000°C\",\n    \"sampling frequency 100 Hz\",\n    \"data sample size 10KB\",\n    \"one year duration\"\n  ],\n  \"relations\": [\n    \"frequency_to_volume (100 samples/s × 10KB → data per second)\",\n    \"time_scaling (seconds → years conversion)\",\n    \"settings_practicality (volume → storage feasibility)\"\n  ],\n  \"intent\": \"calculate_total_data_volume_and_evaluate_practicality\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [\n    -1000,  // Temperature (unused in volume calc)\n    100,    // Sampling frequency (Hz)\n    10,     // Sample size (KB)\n    365,    // Days/year\n    86400   // Seconds/day\n  ],\n  \"units\": {\n    \"temperature\": \"°C (unused in calculation)\",\n    \"data_volume\": \"KB → TB conversion\",\n    \"time\": \"seconds → days → years conversion\"\n  },\n  \"required_tables\": [\n    \"DataCollectionRecord\",  // For data value storage\n    \"DataCollectionRule\"     // For frequency settings\n  ],\n  \"required_fields\": [\n    \"DataCollectionRule.CollectionFrequency\",  // To match user's frequency parameter\n    \"DataCollectionRecord.DataValue\",          // For stored data values\n    \"DataCollectionRecord.DataUnit\"            // For unit consistency\n  ]\n}\nA hypothetical reasoning question is as follows:\nAssume a data collector records a minimum temperature of -1000°C, with a sampling frequency set to 100 times per second, and each data sample occupies 10KB. Calculate the total data volume generated by this collector in one year and discuss the practicality of such settings in real-world applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, (100 * 10 * 60 * 60 * 24 * 365) AS TotalDataKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 AS TotalDataMB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 AS TotalDataGB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataTB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 / 1024 AS TotalDataPB, CASE WHEN (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 / 1024 > 1 THEN '数据量过大，存储和处理不可行' ELSE '数据量在可接受范围内' END AS FeasibilityAnalysis FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '温度' AND dcr.DataValue = -1000 AND dcr.DataUnit = '°C';",
        "db_id": "DataCollector"
    },
    {
        "id": 261,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maximum temperature 1000°C', 'temperature in Kelvin', 'equipment operation', 'high temperature impact'], 'relations': ['recorded_by (temperature → data collector)', 'affects (high temperature → equipment operation)', 'conversion (Celsius → Kelvin)'], 'intent': 'convert_temperature_and_analyze_equipment_impact', 'reasoning_type': 'physical knowledge reasoning and common sense understanding reasoning', 'numerical_values': [1000], 'units': {'temperature_input': '°C (Celsius)', 'temperature_output': 'K (Kelvin)', 'conversion_formula': 'K = °C + 273.15'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'MaxValues', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['26.0', '70.0', '1015.0', '15.0', '7.0']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollector': [{'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when temperature exceeds 35°C. Indicates potential overheating.', 'Triggered when humidity drops below 30%. Indicates dry conditions.', 'Triggered when atmospheric pressure exceeds 1015 hPa. Indicates potential weather changes.', 'Triggered when rainfall drops below 5 mm. Indicates potential drought conditions.', 'Triggered when wind speed exceeds 15 m/s. Indicates storm conditions.']}]}}\nA physical knowledge question is as follows:\nIf a data collector records a maximum temperature of 1000°C, and the unit is in Celsius, please calculate the corresponding temperature in Kelvin and analyze the impact of high temperature on equipment operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, (dcr.DataValue + 273.15) AS TemperatureInKelvin, CASE WHEN dcr.DataValue = 1000 THEN '高温可能导致设备内部材料膨胀、电子元件失效或散热系统超负荷运行' ELSE '温度在正常范围内，设备运行正常' END AS ImpactOnDevice FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '温度' AND dcr.DataValue = 1000 AND dcr.DataUnit = '°C';",
        "db_id": "DataCollector"
    },
    {
        "id": 262,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'maximum humidity value (100%)', 'collection frequency (10 times per minute)', 'data volume per collection (0.5KB)', 'time period (30 days)', 'disk space'], 'relations': ['collector_generates_data (data collector → data volume)', 'frequency_to_volume (10 times/min → 0.5KB/collection)', 'time_to_total_volume (30 days → total data)'], 'intent': 'calculate_total_data_volume_and_disk_space_requirement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 10, 0.5, 30], 'units': {'humidity': '% (percentage)', 'frequency': 'times per minute', 'data_volume': 'KB (kilobytes)', 'time': 'days', 'conversion_formulas': ['minutes_per_month = 30 days × 24 hours/day × 60 minutes/hour', 'total_collections = frequency × minutes_per_month', 'total_data_KB = total_collections × data_volume_per_collection', 'disk_space = total_data_KB (assumes 1:1 storage ratio)']}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssuming the maximum humidity value collected by a data collector is 100%, with a collection frequency of 10 times per minute and a data volume of 0.5KB per collection. Please calculate the total data volume generated by the collector in one month (30 days), and analyze the disk space required to store this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, COUNT(dcr.Id) AS TotalCollections, COUNT(dcr.Id) * 0.5 AS TotalDataKB, COUNT(dcr.Id) * 0.5 / 1024 AS TotalDataMB, CASE WHEN COUNT(dcr.Id) * 0.5 / 1024 > 100 THEN '需要中等容量存储设备（如数百GB硬盘）' ELSE '常规存储设备即可满足需求' END AS StorageRecommendation FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '湿度' AND dcr.DataValue = 100 AND dcr.DataUnit = '%' AND dcr.CollectionTime BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY dc.Id, dc.CollectorModel, dc.InstallationLocation, dc.Status;",
        "db_id": "DataCollector"
    },
    {
        "id": 263,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'maximum pressure 1013 hPa', \"status 'operating'\", 'environmental conditions'], 'relations': ['collector_installation (DataCollector → InstallationLocation/Elevation)', \"collector_status (DataCollector.Status = 'operating')\", 'pressure_measurement (DataCollectionRecord.MaxValues = 1013)'], 'intent': 'infer_environmental_conditions_and_impact', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1013], 'units': {'pressure': 'hPa (hectopascals)', 'elevation': 'meters (implied by ElevationMeters field)', 'pressure_significance': '1013 hPa ≈ sea-level atmospheric pressure'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'MaxValues', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['26.0', '70.0', '1015.0', '15.0', '7.0']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}]}}\nA common sense reasoning question is as follows:\nIf a data collector records a maximum pressure of 1013 hPa and its status is 'operating', infer the possible environmental conditions where the collector is installed, and explain the impact of these conditions on the equipment's operation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, CASE WHEN dcr.DataValue = 1013 AND dcr.DataUnit = 'hPa' THEN '海平面环境，可能受到季节性气候变化的影响' ELSE '非海平面环境' END AS EnvironmentCondition, CASE WHEN dcr.DataValue = 1013 AND dcr.DataUnit = 'hPa' THEN '建议定期检查设备防护措施，确保设备在极端天气下正常运行' ELSE '环境条件稳定，无需特殊维护' END AS MaintenanceRecommendation FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '压力' AND dcr.DataValue = 1013 AND dcr.DataUnit = 'hPa' AND dc.Status = '运行';",
        "db_id": "DataCollector"
    },
    {
        "id": 264,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'maximum temperature reading 1,000,000°C', 'sampling frequency 100 times per second', 'data point size 10KB', 'time period one year'], 'relations': ['collector_has_specification (data collector → sampling frequency/data point size)', 'data_generation_relation (frequency × time → total data points)', 'volume_calculation_relation (data points × size → total data volume)'], 'intent': 'calculate_total_data_volume_and_assess_feasibility', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [100, 10, 1000000], 'units': {'temperature': '°C (Celsius)', 'frequency': 'Hz (times per second)', 'data_size': 'KB (kilobytes)', 'time': 'year (converted to seconds: 1 year = 365 days × 24 hours/day × 3600 seconds/hour)', 'data_volume_output': 'KB (with potential conversions to GB/TB)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming a data collector has a maximum temperature reading of 1,000,000°C, with a sampling frequency set to 100 times per second, and each collected data point is 10KB in size. Calculate the total data volume generated by this collector in one year and discuss the feasibility of such a setup in practical applications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT dc.Id AS CollectorId, dc.CollectorModel, dc.InstallationLocation, dc.Status, dcr.DataValue, dcr.DataUnit, (100 * 10 * 60 * 60 * 24 * 365) AS TotalDataKB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 AS TotalDataMB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 AS TotalDataGB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 AS TotalDataTB, (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 / 1024 AS TotalDataPB, CASE WHEN (100 * 10 * 60 * 60 * 24 * 365) / 1024 / 1024 / 1024 / 1024 > 1 THEN '数据量过大，存储和处理不可行' ELSE '数据量在可接受范围内' END AS FeasibilityAnalysis FROM DataCollectionRecord dcr JOIN DataCollector dc ON dcr.CollectorId = dc.Id WHERE dcr.DataType = '温度' AND dcr.DataValue = 1000000 AND dcr.DataUnit = '°C';",
        "db_id": "DataCollector"
    },
    {
        "id": 265,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector installed at altitude of 3000 meters', 'average temperature 15°C', 'atmospheric pressure 70kPa'], 'relations': ['collector_has_elevation (DataCollector → ElevationMeters)', 'collector_has_temperature_record (DataCollector → DataCollectionRecord via CollectorId)'], 'intent': 'calculate_temperature_lapse_rate_using_barometric_formula', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3000, 15, 70], 'units': {'altitude': 'meters', 'temperature': '°C (Celsius, requires conversion to Kelvin for formula: K = °C + 273.15)', 'pressure': 'kPa (kiloPascals)', 'lapse_rate': '°C per kilometer (standard unit for atmospheric lapse rate)', 'constants': 'g=9.80665 m/s² (gravity), M=0.029 kg/mol (molar mass), R=8.314 J/(mol·K) (gas constant)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}], 'DataCollector.DataCollectionRecord': [{'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}]}}\nA physical knowledge question is as follows:\nIf a data collector is installed at an altitude of 3000 meters and the average temperature data collected is 15°C, assuming the atmospheric pressure at that location is 70kPa, please calculate the temperature lapse rate in the barometric altitude formula for that location.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((T1.AverageValue - T2.AverageValue) / (DC1.ElevationMeters - DC2.ElevationMeters)) AS TemperatureLapseRate FROM DataCollector DC1 JOIN DataCollectionRecord T1 ON DC1.Id = T1.CollectorId JOIN DataCollector DC2 ON DC2.ElevationMeters = DC1.ElevationMeters - 100 JOIN DataCollectionRecord T2 ON DC2.Id = T2.CollectorId WHERE DC1.ElevationMeters = 3000 AND T1.DataType = '温度' AND T2.DataType = '温度' AND T1.CollectionTime = (SELECT MAX(CollectionTime) FROM DataCollectionRecord WHERE CollectorId = DC1.Id AND DataType = '温度') AND T2.CollectionTime = (SELECT MAX(CollectionTime) FROM DataCollectionRecord WHERE CollectorId = DC2.Id AND DataType = '温度');",
        "db_id": "DataCollector"
    },
    {
        "id": 266,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'temperature data', '24-hour period'], 'relations': ['collector_records_data (data collector records temperature data)', 'continuous_operation (collector operates continuously for 24 hours)'], 'intent': 'calculate_temperature_sum_and_variance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 2, 24], 'units': {'temperature': '°C (Celsius)', 'time': 'hours/minutes', 'statistical': 'variance (°C²)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}]}}\nA mathematical logic question is as follows:\nSuppose a data collector records temperature data every minute, with an average value of 20°C and a standard deviation of 2°C. If the collector operates continuously for 24 hours, calculate the total sum of the temperature data collected during this 24-hour period, and determine the variance of these data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(DataValue) AS TotalSum, AVG(POWER(DataValue - (SELECT AVG(DataValue) FROM DataCollectionRecord WHERE DataType = '温度' AND CollectorId = DC.Id AND CollectionTime >= DATE_SUB(NOW(), INTERVAL 24 HOUR)), 2)) AS Variance FROM DataCollectionRecord DCR JOIN DataCollector DC ON DCR.CollectorId = DC.Id WHERE DCR.DataType = '温度' AND DCR.CollectionTime >= DATE_SUB(NOW(), INTERVAL 24 HOUR) GROUP BY DC.Id;",
        "db_id": "DataCollector"
    },
    {
        "id": 267,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector in city center', 'recorded average temperature 25°C', 'city annual average temperature 20°C'], 'relations': ['collector_location (data collector → city center)', 'temperature_measurement (data collector → recorded temperature)', 'temperature_comparison (25°C > 20°C)'], 'intent': 'explain_temperature_difference', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [25, 20], 'units': {'temperature': '°C (Celsius)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollector': [{'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollectionRecord': [{'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}]}}\nA common sense reasoning question is as follows:\nA data collector is installed in the city center, recording an average temperature of 25°C. Assuming the city's annual average temperature is 20°C, please explain why the temperature in the city center is higher than the city's annual average temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DC.InstallationLocation, AVG(DCR.DataValue) AS AverageTemperature, (SELECT AVG(DCR2.DataValue) FROM DataCollectionRecord DCR2 JOIN DataCollector DC2 ON DCR2.CollectorId = DC2.Id WHERE DC2.InstallationLocation LIKE '%郊区%' AND DCR2.DataType = '温度') AS SuburbAverageTemperature FROM DataCollectionRecord DCR JOIN DataCollector DC ON DCR.CollectorId = DC.Id WHERE DC.InstallationLocation LIKE '%市中心%' AND DCR.DataType = '温度' GROUP BY DC.InstallationLocation;",
        "db_id": "DataCollector"
    },
    {
        "id": 268,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'average temperature data 1000°C', 'maximum tolerable temperature 1500°C', 'one year', 'every minute'], 'relations': ['collector_measures_temperature (data collector → temperature data)', 'tolerance_comparison (1000°C vs 1500°C)', 'frequency_duration (every minute for one year → data point count)'], 'intent': 'calculate_total_temperature_sum_and_assess_damage_risk', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 1500], 'units': {'temperature': '°C', 'time': ['year', 'minute'], 'count_conversion': '1 year = 365 * 24 * 60 minutes', 'sum_unit': '°C * count (temperature-sum units)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming the average temperature data collected by a data collector is 1000°C, and the maximum tolerable temperature of the collector is 1500°C. If the collector operates continuously for one year, collecting data every minute, please calculate the total sum of the temperature data collected by the device in that year and determine whether the collector will be damaged due to excessively high temperatures.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(DCR.DataValue) AS TotalSum, CASE WHEN MAX(DCR.DataValue) >= 1500 THEN '采集器可能损坏' ELSE '采集器正常工作' END AS Status FROM DataCollectionRecord DCR JOIN DataCollector DC ON DCR.CollectorId = DC.Id WHERE DCR.DataType = '温度' AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW() GROUP BY DC.Id;",
        "db_id": "DataCollector"
    },
    {
        "id": 269,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'temperature data', 'accuracy 95%', 'average temperature 25°C', 'standard deviation 1°C', '95% confidence interval'], 'relations': ['collector_has_accuracy (data collector → accuracy 95%)', 'data_has_statistics (temperature data → average=25°C, standard deviation=1°C)', 'confidence_interval_calculation (statistics → confidence interval range)'], 'intent': 'calculate_temperature_confidence_interval_range', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [95, 25, 1, 95], 'units': {'temperature': '°C (Celsius)', 'confidence_interval': '°C (range units)', 'conversion': 'z-score ≈ 1.96 for 95% CI (implied statistical constant)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nIf a data collector has an accuracy of 95% for the temperature data it collects, and the average temperature collected is 25°C, please calculate the range of temperature data for this collector within a 95% confidence interval. Assume the standard deviation of the temperature data is 1°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(DCR.DataValue) AS AverageValue, AVG(DCR.DataValue) - (1.96 * (1 / SQRT(COUNT(DCR.DataValue)))) AS LowerBound, AVG(DCR.DataValue) + (1.96 * (1 / SQRT(COUNT(DCR.DataValue)))) AS UpperBound FROM DataCollectionRecord DCR WHERE DCR.DataType = '温度' AND DCR.DataAccuracy = 95 GROUP BY DCR.CollectorId;",
        "db_id": "DataCollector"
    },
    {
        "id": 270,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity data', 'data collector', '24-hour operation period', '60% average humidity', '98% data accuracy'], 'relations': ['sampled_by (humidity data → data collector)', 'aggregated_over (humidity data → 24-hour period)', 'has_property (humidity data → 60% average)', 'has_quality (humidity data → 98% accuracy)'], 'intent': 'calculate_humidity_data_sum_and_standard_error', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 98, 24, 1440], 'units': {'humidity': '% (percentage)', 'time': 'hours and minutes', 'sample_count': 'samples (derived: 24h * 60min = 1440 samples)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataAccuracy', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['98.5', '97.0', '99.0', '95.0', '96.5']}]}}\nA mathematical logic question is as follows:\nAssume a data collector samples humidity data every minute, with an average collected humidity value of 60% and a data accuracy of 98%. If the collector operates continuously for 24 hours, calculate the total sum of the humidity data collected during these 24 hours and determine the standard error of this data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(DCR.DataValue) AS TotalSum, STDDEV(DCR.DataValue) / SQRT(COUNT(DCR.DataValue)) AS StandardError FROM DataCollectionRecord DCR WHERE DCR.DataType = '湿度' AND DCR.DataAccuracy = 98 AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 24 HOUR) AND NOW() GROUP BY DCR.CollectorId;",
        "db_id": "DataCollector"
    },
    {
        "id": 271,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pressure data', 'accuracy 99%', 'average pressure 101.3 kPa', 'collector at altitude 0 meters', 'standard atmospheric pressure'], 'relations': ['collector_to_data (DataCollector.Id → DataCollectionRecord.CollectorId)', 'location_to_pressure (ElevationMeters=0 → standard atmospheric pressure 101.3 kPa)'], 'intent': 'explain_high_accuracy_and_proximity_to_standard_pressure', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [99, 101.3, 0], 'units': {'accuracy': '% (percentage)', 'pressure': 'kPa (kilopascal)', 'elevation': 'meters', 'standard_pressure': '101.3 kPa (at sea level)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataAccuracy', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['98.5', '97.0', '99.0', '95.0', '96.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}]}}\nA common sense reasoning question is as follows:\nA data collector's measured pressure data has an accuracy of 99%, and the average pressure collected is 101.3 kPa. Assuming the collector is installed at an altitude of 0 meters, please explain why the pressure data accuracy is so high and close to standard atmospheric pressure.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCR.AverageValue, DC.ElevationMeters, DCR.DataAccuracy FROM DataCollectionRecord DCR JOIN DataCollector DC ON DCR.CollectorId = DC.Id WHERE DCR.DataType = '压力' AND DCR.DataAccuracy = 99 AND DC.ElevationMeters = 0;",
        "db_id": "DataCollector"
    },
    {
        "id": 272,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collector', 'humidity measurement accuracy 200%', 'average humidity value 80%', 'one year of operation', 'minute collection frequency'], 'relations': ['collector_has_accuracy (data collector → 200% accuracy)', 'collector_produces_records (data collector → humidity data records)', 'accuracy_triggers_failure (200% accuracy → potential failure)'], 'intent': 'calculate_total_humidity_data_sum_and_determine_failure_status', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [200, 80], 'units': {'humidity': 'percent', 'accuracy': 'percent', 'time': ['year', 'minute']}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataAccuracy', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['98.5', '97.0', '99.0', '95.0', '96.5']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}], 'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}, {'column': 'IsActive', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['1']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collector has a humidity measurement accuracy of 200% and the average humidity value collected is 80%. If the collector operates continuously for one year, collecting data every minute, calculate the total sum of humidity data collected during this year, and determine whether the collector will fail due to excessively high data accuracy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(DCR.DataValue) AS TotalSum, CASE WHEN MAX(DCR.DataAccuracy) > 100 THEN '采集器可能失效' ELSE '采集器正常工作' END AS Status FROM DataCollectionRecord DCR WHERE DCR.DataType = '湿度' AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW() GROUP BY DCR.CollectorId;",
        "db_id": "DataCollector"
    },
    {
        "id": 273,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['threshold value 100°C', 'average temperature 95°C', 'standard deviation 5°C', 'temperature data'], 'relations': ['rule_defines_threshold (DataCollectionRule → ThresholdValue)', 'record_contains_statistics (DataCollectionRecord → AverageValue)', 'comparison_condition (exceedance probability based on normal distribution)'], 'intent': 'calculate_probability_of_exceeding_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 95, 5], 'units': {'temperature': '°C (Celsius)', 'statistical_unit': 'standard deviation unit (dimensionless for probability calculation)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollectionRecord': [{'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}]}}\nA physical knowledge question is as follows:\nIn a data collection rule, if the threshold value for temperature data is set at 100°C, and the average temperature collected is 95°C with a standard deviation of 5°C, please calculate the probability that the temperature data exceeds the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1 - (SELECT COUNT(*) FROM DataCollectionRecord WHERE DataValue <= 100 AND DataType = '温度') / (SELECT COUNT(*) FROM DataCollectionRecord WHERE DataType = '温度')) AS ExceedProbability FROM DataCollectionRule DCR WHERE DCR.DataType = '温度' AND DCR.ThresholdValue = 100;",
        "db_id": "DataCollector"
    },
    {
        "id": 274,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity data', 'threshold rule (80%)', 'the collector', '24-hour operation period'], 'relations': ['collector_generates_data (collector → humidity data records)', 'rule_defines_threshold (rule → humidity threshold criteria)', 'data_exceeds_threshold (humidity data → threshold violation)'], 'intent': 'calculate_threshold_exceedance_count_and_z_scores', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 75, 3, 24, 1440], 'units': {'humidity': '% (percent)', 'threshold': '% (percent)', 'average': '% (percent)', 'standard_deviation': '% (percent)', 'time': 'minutes (collection frequency)', 'duration': 'hours (operation period)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}]}}\nA mathematical logic question is as follows:\nAssuming a data collection rule where the threshold value for humidity data is 80%, and the average of the collected humidity data is 75% with a standard deviation of 3%. If the collector operates continuously for 24 hours, collecting data once per minute, calculate the number of times the collected humidity data exceeds the threshold within these 24 hours, and calculate the Z-scores for these data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(CASE WHEN DCRec.DataValue > DCR.ThresholdValue THEN 1 ELSE 0 END) AS ExceedCount, (DCRec.DataValue - 75) / 3 AS ZScore FROM DataCollectionRecord DCRec JOIN DataCollectionRule DCR ON DCRec.DataType = DCR.DataType WHERE DCRec.DataType = '湿度' AND DCR.ThresholdValue = 80 AND DCRec.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 24 HOUR) AND NOW() GROUP BY DCRec.DataValue;",
        "db_id": "DataCollector"
    },
    {
        "id": 275,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pressure data collection rule', 'threshold value 110 kPa', 'average collected pressure 105 kPa', 'standard deviation 2 kPa', 'collector altitude 500 meters'], 'relations': ['rule_defines_threshold (DataCollectionRule → ThresholdValue)', 'data_measured_by_collector (DataCollectionRecord → DataCollector)', 'altitude_affects_pressure (ElevationMeters → atmospheric pressure)'], 'intent': 'explain_discrepancy_between_measured_pressure_and_threshold', 'reasoning_type': 'physical knowledge reasoning, common sense understanding reasoning', 'numerical_values': [110, 105, 2, 500], 'units': {'pressure': 'kPa (kilopascals)', 'altitude': 'meters', 'conversion': 'atmospheric pressure decreases ~1 kPa per 100m altitude'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollectionRecord': [{'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}]}}\nA common sense reasoning question is as follows:\nIn a data collection rule, the threshold value for pressure data is 110 kPa, with the average collected pressure data being 105 kPa and a standard deviation of 2 kPa. Assuming the collector is installed at an altitude of 500 meters, please explain why the pressure data is close to but has not reached the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCRec.AverageValue, DC.ElevationMeters FROM DataCollectionRecord DCRec JOIN DataCollector DC ON DCRec.CollectorId = DC.Id JOIN DataCollectionRule DCR ON DCRec.DataType = DCR.DataType WHERE DCRec.DataType = '压力' AND DCR.ThresholdValue = 110 AND DC.ElevationMeters = 500;",
        "db_id": "DataCollector"
    },
    {
        "id": 276,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['threshold value 1000°C', 'average temperature 950°C', 'standard deviation 50°C', 'collector operating continuously for one year', 'data collection every minute'], 'relations': ['threshold_exceedance_condition (DataValue > ThresholdValue)', 'rule_to_data_mapping (DataCollectionRule.ThresholdValue → DataCollectionRecord.DataValue)', 'collector_operation_duration (1 year → minutes conversion)'], 'intent': 'calculate_temperature_exceedance_count_and_failure_status', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 950, 50, 365, 24, 60], 'units': {'temperature': '°C', 'time': ['year', 'minute'], 'conversion': '1 year = 365 * 24 * 60 minutes'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}], 'DataCollector.DataCollector': [{'column': 'InstallationDate', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2022-04-10', '2021-06-05', '2023-02-01', '2020-09-01', '2022-08-05']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collection rule where the threshold value for temperature data is 1000°C, the average temperature collected is 950°C, with a standard deviation of 50°C. If the collector operates continuously for one year, collecting data every minute, please calculate the number of times the collected temperature data exceeds the threshold during this year, and determine whether the collector will fail due to excessive temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(CASE WHEN DCRec.DataValue > DCR.ThresholdValue THEN 1 ELSE 0 END) AS ExceedCount, CASE WHEN SUM(CASE WHEN DCRec.DataValue > DCR.ThresholdValue THEN 1 ELSE 0 END) > 0 THEN '采集器可能失效' ELSE '采集器正常工作' END AS Status FROM DataCollectionRecord DCRec JOIN DataCollectionRule DCR ON DCRec.DataType = DCR.DataType WHERE DCRec.DataType = '温度' AND DCR.ThresholdValue = 1000 AND DCRec.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW();",
        "db_id": "DataCollector"
    },
    {
        "id": 277,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection rule', 'temperature data', \"conditional operator '>'\", 'threshold value 30°C', 'average temperature 25°C', 'standard deviation 2°C'], 'relations': ['rule_defines_condition (data collection rule → threshold/operator)', 'data_has_statistics (temperature data → average/standard deviation)', 'exceedance_probability_calculation (threshold vs data distribution)'], 'intent': 'calculate_probability_of_data_exceeding_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 25, 2], 'units': {'temperature': '°C (Celsius)', 'statistical_unit': '°C (consistent for standard deviation)', 'threshold_unit_match': 'threshold and data use same unit (°C)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollectionRecord': [{'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}]}}\nA physical knowledge question is as follows:\nIn a data collection rule, if the conditional operator for temperature data is '>', the threshold value is 30°C, and the collected temperature data has an average of 25°C with a standard deviation of 2°C, please calculate the probability that the temperature data exceeds the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1 - (SELECT COUNT(*) FROM DataCollectionRecord WHERE DataValue <= 30 AND DataType = '温度') / (SELECT COUNT(*) FROM DataCollectionRecord WHERE DataType = '温度')) AS ExceedProbability FROM DataCollectionRule DCR WHERE DCR.DataType = '温度' AND DCR.ThresholdValue = 30 AND DCR.ConditionOperator = '>';",
        "db_id": "DataCollector"
    },
    {
        "id": 278,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection rule for humidity', \"conditional operator '<'\", 'threshold value 60%', 'average humidity 65%', 'standard deviation 3%', 'collection duration 24 hours', 'sampling interval every minute', 'humidity data points below threshold', 'Z-scores'], 'relations': [\"rule_condition (humidity, operator '<', threshold 60%)\", 'data_distribution (mean 65%, std_dev 3%)', 'collection_schedule (24 hours, minute intervals → total_samples=1440)', 'value_comparison (DataValue < 60%)', 'z_score_calculation ( (DataValue - 65) / 3 )'], 'intent': 'calculate_humidity_below_threshold_count_and_zscores', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 65, 3, 24], 'units': {'humidity': '%', 'time_duration': 'hours', 'sampling_frequency': 'minutes', 'z_score': 'unitless'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}]}}\nA mathematical logic question is as follows:\nAssuming in a data collection rule, the conditional operator for humidity data is '<', the threshold value is 60%, and the average of the collected humidity data is 65% with a standard deviation of 3%. If the collector operates continuously for 24 hours, sampling data every minute, please calculate the number of times the collected humidity data falls below the threshold within these 24 hours, and compute the Z-scores for these data points.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(CASE WHEN DCRec.DataValue < 60 THEN 1 ELSE 0 END) AS BelowCount, (DCRec.DataValue - 65) / 3 AS ZScore FROM DataCollectionRecord DCRec JOIN DataCollectionRule DCR ON DCRec.DataType = DCR.DataType WHERE DCRec.DataType = '湿度' AND DCR.ThresholdValue = 60 AND DCR.ConditionOperator = '<' AND DCRec.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 24 HOUR) AND NOW() GROUP BY DCRec.DataValue;",
        "db_id": "DataCollector"
    },
    {
        "id": 279,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data acquisition rule', 'pressure data', 'threshold value 101.3 kPa', 'average collected pressure 101.3 kPa', 'collector at altitude 0 meters'], 'relations': ['rule_defines_condition (DataCollectionRule → pressure data)', 'collector_produces_data (DataCollector → DataCollectionRecord)', 'location_affects_pressure (altitude → atmospheric pressure)'], 'intent': 'explain_why_pressure_equals_threshold', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [101.3, 0.5, 0], 'units': {'pressure': 'kPa (kilopascals)', 'elevation': 'meters', 'pressure_difference': 'standard deviation 0.5 kPa', 'physical_concept': 'standard atmospheric pressure at sea level = 101.3 kPa'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}], 'DataCollector.DataCollectionRecord': [{'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}]}}\nA common sense reasoning question is as follows:\nIn a data acquisition rule, the conditional operator for pressure data is '=', the threshold value is 101.3 kPa, and the average of the collected pressure data is 101.3 kPa with a standard deviation of 0.5 kPa. Assuming this collector is installed at an altitude of 0 meters, explain why the pressure data equals the threshold value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCRec.AverageValue, DC.ElevationMeters FROM DataCollectionRecord DCRec JOIN DataCollector DC ON DCRec.CollectorId = DC.Id JOIN DataCollectionRule DCR ON DCRec.DataType = DCR.DataType WHERE DCRec.DataType = '压力' AND DCR.ThresholdValue = 101.3 AND DCR.ConditionOperator = '=' AND DC.ElevationMeters = 0;",
        "db_id": "DataCollector"
    },
    {
        "id": 280,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection rule', \"conditional operator '>'\", 'threshold value 1000°C', 'collected temperature data', 'average 950°C', 'standard deviation 50°C', 'collector operation duration (one year)', 'collection frequency (every minute)', 'threshold exceedance count', 'collector failure due to high temperature'], 'relations': ['rule_defines_condition (DataCollectionRule → threshold/operator)', 'data_matches_rule (DataCollectionRecord.DataType → DataCollectionRule.DataType)', 'collector_generates_data (DataCollector → DataCollectionRecord)', 'exceedance_causes_failure (threshold_exceedance → collector_status)'], 'intent': 'calculate_temperature_threshold_exceedance_count_and_determine_collector_failure', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 950, 50, 1, 525600], 'units': {'temperature': '°C (Celsius)', 'time': {'duration': 'year', 'frequency': 'minute'}, 'conversion': '1 year = 365 * 24 * 60 minutes = 525600 minutes'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'CollectorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollector': [{'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}]}}\nA hypothetical reasoning question is as follows:\nAssume that in a data collection rule, the conditional operator for temperature data is '>', the threshold value is 1000°C, and the collected temperature data has an average of 950°C and a standard deviation of 50°C. If the collector operates continuously for one year, collecting data every minute, please calculate the number of times the collected temperature data exceeds the threshold within that year and determine whether the collector will fail due to excessively high temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(CASE WHEN DCRec.DataValue > DCR.ThresholdValue THEN 1 ELSE 0 END) AS ExceedCount, CASE WHEN SUM(CASE WHEN DCRec.DataValue > DCR.ThresholdValue THEN 1 ELSE 0 END) > 0 THEN '采集器可能失效' ELSE '采集器正常工作' END AS Status FROM DataCollectionRecord DCRec JOIN DataCollectionRule DCR ON DCRec.DataType = DCR.DataType WHERE DCRec.DataType = '温度' AND DCR.ThresholdValue = 1000 AND DCR.ConditionOperator = '>' AND DCRec.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW();",
        "db_id": "DataCollector"
    },
    {
        "id": 281,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection rule (frequency once per minute)', 'collected temperature data (average 25°C, standard deviation 2°C)'], 'relations': ['rule_defines_frequency (rule → frequency)', 'data_has_statistics (temperature data → average and standard deviation)'], 'intent': 'calculate_total_collections_and_standard_error', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [25, 2], 'units': {'temperature': '°C (Celsius)', 'frequency': 'per minute', 'standard_error': '°C (derived unit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'CollectionFrequency', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Every 10 minutes', 'Every 30 minutes', 'Every hour', 'Every 6 hours', 'Every 15 minutes']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'IsActive', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['1']}]}}\nA physical knowledge question is as follows:\nIf the data collection rule specifies a temperature data collection frequency of once per minute, with the collected temperature data having an average of 25°C and a standard deviation of 2°C, please calculate the total number of collections in one day and the standard error of these data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS TotalCount, 2 / SQRT(COUNT(*)) AS StandardError FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType WHERE DCR.DataType = '温度' AND DCRule.CollectionFrequency = '每分钟' AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 1 DAY) AND NOW();",
        "db_id": "DataCollector"
    },
    {
        "id": 282,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity data', 'data collection rule (hourly frequency)', 'average humidity 60%', 'standard deviation 3%', 'collector operation 30 days'], 'relations': ['rule_defines_frequency (data collection rule → hourly collection)', 'data_has_statistics (humidity data → mean=60%, std=3%)', 'operation_duration (collector → 30 days continuous)'], 'intent': 'calculate_total_sum_and_variance_of_humidity_data', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 3, 30], 'units': {'humidity': '% (percentage)', 'time': 'hours (derived from days via 24h/day)', 'conversion': 'number_of_hours = 30 days * 24 hours/day'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssuming a data collection rule where humidity data is collected once per hour, with an average collected humidity value of 60% and a standard deviation of 3%. If the collector operates continuously for 30 days, calculate the total sum of the humidity data collected during these 30 days and determine the variance of these data.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(DCR.DataValue) AS TotalSum, AVG(POWER(DCR.DataValue - 60, 2)) AS Variance FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType WHERE DCR.DataType = '湿度' AND DCRule.CollectionFrequency = '每小时' AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 30 DAY) AND NOW();",
        "db_id": "DataCollector"
    },
    {
        "id": 283,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pressure data', 'collection frequency once per minute', 'average value 101.3 kPa', 'standard deviation 0.5 kPa', 'altitude 0 meters'], 'relations': ['rule_governs_data (DataCollectionRule defines collection parameters for pressure data)', 'collector_location (DataCollector installed at specified altitude)', 'data_statistics (average and standard deviation characterize pressure stability)'], 'intent': 'evaluate_reasonableness_of_data_collection_frequency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [101.3, 0.5, 0], 'units': {'pressure': 'kPa (kiloPascal)', 'altitude': 'meters', 'frequency': 'per minute', 'statistical_measure': 'standard deviation (kPa)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'CollectionFrequency', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Every 10 minutes', 'Every 30 minutes', 'Every hour', 'Every 6 hours', 'Every 15 minutes']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollector': [{'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}], 'DataCollector.DataCollectionRecord': [{'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}]}}\nA common sense reasoning question is as follows:\nIn a data acquisition rule, the pressure data is collected at a frequency of once per minute, with an average value of 101.3 kPa and a standard deviation of 0.5 kPa for the collected pressure data. Assuming the collector is installed at an altitude of 0 meters, explain why setting the collection frequency to once per minute is reasonable.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCRule.CollectionFrequency, AVG(DCR.DataValue) AS AveragePressure, STDDEV(DCR.DataValue) AS StandardDeviation FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType JOIN DataCollector DC ON DCR.CollectorId = DC.Id WHERE DCR.DataType = '压力' AND DCRule.CollectionFrequency = '每分钟' AND DC.ElevationMeters = 0;",
        "db_id": "DataCollector"
    },
    {
        "id": 284,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature data collection rule (once per second)', 'average temperature (25°C)', 'standard deviation (2°C)', 'data collector device', 'one year operation'], 'relations': ['rule_defines_frequency (rule → once per second)', 'rule_specifies_data_type (rule → temperature)', 'device_executes_rule (device → rule)', 'statistical_properties (average 25°C, SD 2°C)'], 'intent': 'calculate_total_temperature_sum_and_assess_device_failure_risk', 'reasoning_type': 'mathematical logic reasoning and ideal hypothesis reasoning', 'numerical_values': [25, 2, 1], 'units': {'temperature': '°C', 'frequency': 'per second (Hz)', 'time_conversion': '1 year = 31536000 seconds'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'CollectionFrequency', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Every 10 minutes', 'Every 30 minutes', 'Every hour', 'Every 6 hours', 'Every 15 minutes']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}], 'DataCollector.DataCollector': [{'column': 'Status', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Running', 'Maintenance', 'Stopped']}, {'column': 'CollectorModel', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DC-100', 'DC-200', 'DC-150', 'DC-300', 'DC-250']}, {'column': 'Manufacturer', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['DataTech', 'HydroSense']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collection rule where temperature data is collected once per second, with an average temperature reading of 25°C and a standard deviation of 2°C, calculate the total sum of temperature data collected by the device over one year of continuous operation. Also, determine whether the device will fail due to the high collection frequency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(DCR.DataValue) AS TotalSum, CASE WHEN DCRule.CollectionFrequency = '每秒' AND COUNT(*) > 31536000 THEN '采集器可能失效' ELSE '采集器正常工作' END AS Status FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType WHERE DCR.DataType = '温度' AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW() GROUP BY DCRule.CollectionFrequency;",
        "db_id": "DataCollector"
    },
    {
        "id": 285,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['trigger action type: notification', 'data type: temperature', 'average temperature: 30°C', 'standard deviation: 2°C', '95% confidence interval'], 'relations': ['rule_condition: DataCollectionRule (temperature, notification) defines threshold condition', 'data_characteristics: average and standard deviation define distribution properties'], 'intent': 'calculate_confidence_interval_range and determine_notification_trigger', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 2, 95], 'units': {'temperature': '°C', 'confidence_interval': '°C range (calculated)', 'z-score': '1.96 (for 95% confidence)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}]}}\nA physical knowledge question is as follows:\nIf the trigger action type for temperature data in a data collection rule is 'notification', and the average temperature data collected is 30°C with a standard deviation of 2°C, please calculate the range of the temperature data within a 95% confidence interval and determine whether a notification needs to be sent.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(DCR.DataValue) AS AverageValue, AVG(DCR.DataValue) - (1.96 * (2 / SQRT(COUNT(*)))) AS LowerBound, AVG(DCR.DataValue) + (1.96 * (2 / SQRT(COUNT(*)))) AS UpperBound, CASE WHEN MAX(DCR.DataValue) > DCRule.ThresholdValue THEN '需要发送通知' ELSE '无需发送通知' END AS NotificationStatus FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType WHERE DCR.DataType = '温度' AND DCRule.ActionType = '通知' GROUP BY DCRule.ThresholdValue;",
        "db_id": "DataCollector"
    },
    {
        "id": 286,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity data', \"trigger action type 'process'\", 'average humidity 70%', 'standard deviation 3%', '24 hours operation', 'once per minute collection'], 'relations': [\"rule_defines_threshold (DataCollectionRule.ActionType='process' → ThresholdValue for humidity)\", \"records_contain_data (DataCollectionRecord.DataType='humidity' for 24-hour period)\"], 'intent': 'calculate_exceedance_count_and_z_scores', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70, 3, 24, 1], 'units': {'humidity': '% (percentage)', 'time_duration': 'hours', 'frequency': 'minutes per sample', 'z_score': 'dimensionless'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}]}}\nA mathematical logic question is as follows:\nAssuming in a data collection rule, the trigger action type for humidity data is 'process', and the average humidity data collected is 70% with a standard deviation of 3%. If the collector operates continuously for 24 hours, collecting data once per minute, please calculate the number of times the collected humidity data exceeds the threshold within these 24 hours, and also calculate the Z-scores for these data points.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(CASE WHEN DCR.DataValue > DCRule.ThresholdValue THEN 1 ELSE 0 END) AS ExceedCount, (DCR.DataValue - 70) / 3 AS ZScore FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType WHERE DCR.DataType = '湿度' AND DCRule.ActionType = '处理' AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 24 HOUR) AND NOW() GROUP BY DCR.DataValue;",
        "db_id": "DataCollector"
    },
    {
        "id": 287,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection rule', 'pressure data', \"trigger action type 'Notification'\", 'average collected pressure value 101.3 kPa', 'standard deviation 0.5 kPa', 'collector at sea level (0 meters altitude)', 'standard atmospheric pressure'], 'relations': ['rule_application (data collection rule → pressure data)', 'location_effect (sea level → standard atmospheric pressure 101.3 kPa)', 'data_comparison (collected pressure ≈ standard pressure)'], 'intent': 'explain_absence_of_notification_for_normal_pressure', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [101.3, 0.5, 0], 'units': {'pressure': 'kPa (kiloPascals)', 'elevation': 'meters', 'reference': 'standard atmospheric pressure at sea level = 101.3 kPa'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}], 'primary_keys': [{'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}, {'pk_table': 'DataCollector', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}], 'DataCollector.DataCollectionRecord': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'AverageValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.2', '65.5', '1013.5', '12.5', '5.2']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}], 'DataCollector.DataCollector': [{'column': 'InstallationLocation', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Mountainside, Sichuan', 'Urban Area, Beijing', 'Coastal Area, Shanghai', 'Plateau, Tibet', 'Forest Area, Yunnan']}, {'column': 'ElevationMeters', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1200.5', '50.0', '10.0', '4500.0', '1800.0']}]}}\nA common sense reasoning question is as follows:\nIn a data collection rule, the trigger action type for pressure data is 'Notification', with an average collected pressure value of 101.3 kPa and a standard deviation of 0.5 kPa. Assuming the collector is installed at sea level (0 meters altitude), explain why no notification needs to be sent when the pressure data is close to the standard atmospheric pressure.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(DCR.DataValue) AS AveragePressure, DCRule.ThresholdValue, CASE WHEN AVG(DCR.DataValue) BETWEEN 101.3 - 0.5 AND 101.3 + 0.5 THEN '无需发送通知' ELSE '需要发送通知' END AS NotificationStatus FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType JOIN DataCollector DC ON DCR.CollectorId = DC.Id WHERE DCR.DataType = '压力' AND DCRule.ActionType = '通知' AND DC.ElevationMeters = 0 GROUP BY DCRule.ThresholdValue;",
        "db_id": "DataCollector"
    },
    {
        "id": 288,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"data collection rule with action type 'processing'\", 'average collected temperature 1000°C', 'standard deviation 50°C', 'collector operating continuously for a year', 'data collection frequency every minute', 'temperature threshold from rule', 'collector failure likelihood'], 'relations': ['rule_defines_threshold (DataCollectionRule → ThresholdValue)', 'rule_specifies_condition (DataCollectionRule → ConditionOperator)', 'collector_performs_processing (DataCollector → processing tasks)', 'exceedance_triggers_processing (temperature exceedance → processing action)'], 'intent': 'calculate_threshold_exceedance_count_and_assess_collector_failure_risk', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [1000, 50], 'units': {'temperature': '°C (Celsius)', 'time': 'year, minute', 'statistical': 'standard deviation (50°C)', 'calculation': 'total_minutes_in_year = 365 * 24 * 60'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collection rule specifies the trigger action type for temperature data as 'processing,' with an average collected temperature of 1000°C and a standard deviation of 50°C. If the collector operates continuously for a year, collecting data every minute, please calculate the number of times the collected temperature data exceeds the threshold within that year and determine whether the collector is likely to fail due to excessive processing tasks.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(CASE WHEN DCR.DataValue > DCRule.ThresholdValue THEN 1 ELSE 0 END) AS ExceedCount, CASE WHEN SUM(CASE WHEN DCR.DataValue > DCRule.ThresholdValue THEN 1 ELSE 0 END) > 0 THEN '采集器可能失效' ELSE '采集器正常工作' END AS Status FROM DataCollectionRecord DCR JOIN DataCollectionRule DCRule ON DCR.DataType = DCRule.DataType WHERE DCR.DataType = '温度' AND DCRule.ActionType = '处理' AND DCR.CollectionTime BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW();",
        "db_id": "DataCollector"
    },
    {
        "id": 289,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"RecipientType 'public'\", \"NotificationContent 'temperature data exceeds the threshold of 30°C'\", 'Initial temperature 25°C', 'Final temperature 30°C', 'Specific heat capacity 1.005 kJ/(kg·K)', 'Air density 1.225 kg/m³', 'Room volume 50m³'], 'relations': [\"condition: RecipientType = 'public' AND NotificationContent contains threshold reference\", 'physical_formula: Q = m × c × ΔT where m = ρ × V', 'temperature_difference: ΔT = 5°C (30°C - 25°C)'], 'intent': 'calculate_heat_required_for_temperature_rise', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [25, 30, 1.005, 1.225, 50], 'units': {'temperature': '°C (Celsius, ΔT equivalent to Kelvin for calculations)', 'specific_heat': 'kJ/(kg·K)', 'density': 'kg/m³', 'volume': 'm³', 'heat': 'kJ (kilojoules)', 'conversion': 'ΔT = 5 K (temperature differential)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}]}}\nA physical knowledge question is as follows:\nIf the recipient type of a data collection notice record is 'public,' and the notification content is that the temperature data exceeds the threshold of 30°C, please calculate the heat required for the temperature to rise from 25°C to 30°C under standard atmospheric pressure. Assume the specific heat capacity of air is 1.005 kJ/(kg·K), the air density is 1.225 kg/m³, and the room volume is 50m³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.225 * 50 AS Mass, 1.225 * 50 * 1.005 * (30 - 25) AS HeatRequired FROM DataCollectionNotificationRecord DCNR WHERE DCNR.RecipientType = '公众' AND DCNR.NotificationContent LIKE '%温度数据超出阈值30°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 290,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Government (RecipientType)', 'humidity data exceeds threshold of 80% (NotificationContent)', '1000 (RecipientCount)', 'SMS (NotificationMethod)', '0.01 yuan (cost per SMS)', '95% (notification success rate)'], 'relations': ['recipient_count_to_cost (1000 recipients * 0.01 yuan cost → total cost)', 'recipient_count_to_success (1000 recipients * 95% rate → successful messages)'], 'intent': 'calculate_SMS_costs_and_delivery_success_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 0.01, 95], 'units': {'currency': 'yuan', 'success_rate': '% (percentage)', 'conversion': '95% = 0.95 decimal multiplier'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}, {'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast']}]}}\nA mathematical logic question is as follows:\nAssuming a data collection notification record has a recipient type of 'Government', the notification content being that humidity data exceeds the threshold of 80%, and the number of recipients is 1,000. If the notification method is SMS, with a cost of 0.01 yuan per SMS, please calculate the total cost of sending these SMS and determine the actual number of successfully sent messages if the notification success rate is 95%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 0.01 AS TotalCost, DCNR.RecipientCount * 0.95 AS SuccessCount FROM DataCollectionNotificationRecord DCNR WHERE DCNR.RecipientType = '政府' AND DCNR.NotificationContent LIKE '%湿度数据超出阈值80%' AND DCNR.NotificationMethod = '短信';",
        "db_id": "DataCollector"
    },
    {
        "id": 291,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['DataCollectionNotificationRecord', \"RecipientType 'Enterprise'\", 'NotificationContent: pressure data exceeds threshold', 'Threshold: 110 kPa', 'Chemical plant'], 'relations': ['notification_triggered_by_rule (DataCollectionNotificationRecord → DataCollectionRule via TriggerId)', 'enterprise_notification_recipient (RecipientType → Chemical plant)', 'pressure_threshold_exceedance (NotificationContent → ThresholdValue)'], 'intent': 'explain_necessity_of_prompt_notification', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [110], 'units': {'pressure': 'kPa (kilopascals)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'TriggerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when temperature exceeds 35°C. Indicates potential overheating.', 'Triggered when humidity drops below 30%. Indicates dry conditions.', 'Triggered when atmospheric pressure exceeds 1015 hPa. Indicates potential weather changes.', 'Triggered when rainfall drops below 5 mm. Indicates potential drought conditions.', 'Triggered when wind speed exceeds 15 m/s. Indicates storm conditions.']}]}}\nA common sense reasoning question is as follows:\nA data collection notification record has a recipient type of 'Enterprise', with the notification content indicating that the pressure data exceeds the threshold of 110 kPa. Assuming this enterprise is a chemical plant, please explain why it is necessary to promptly notify the enterprise when pressure data exceeds the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.NotificationContent, DCNR.RecipientType FROM DataCollectionNotificationRecord DCNR WHERE DCNR.RecipientType = '企业' AND DCNR.NotificationContent LIKE '%压力数据超出阈值110kPa%';",
        "db_id": "DataCollector"
    },
    {
        "id": 292,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"recipient type 'public'\", 'notification content (temperature data exceeds threshold)', 'threshold temperature 1000°C', 'recipient count 100 million', \"notification method 'broadcasting'\", 'cost per broadcast 10,000 yuan'], 'relations': [\"record_has_recipient_type (notification record → 'public')\", 'content_indicates_threshold_exceedance (notification content → temperature > 1000°C)', 'method_has_cost (broadcasting → 10,000 yuan per broadcast)'], 'intent': 'calculate_total_broadcast_cost_and_assess_system_failure_risk', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100000000, 10000], 'units': {'temperature': '°C (Celsius)', 'currency': 'yuan', 'recipient_count': 'count (unitless)', 'cost_calculation': 'total_cost = recipient_count * cost_per_broadcast'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}, {'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collection notification record has a recipient type of 'public', the notification content indicates that temperature data exceeds the threshold of 1000°C, and the number of recipients is 100 million. If the notification method is broadcasting, with each broadcast costing 10,000 yuan, please calculate the total cost of sending these broadcasts and determine whether the system would fail to operate due to excessively high costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 10000 AS TotalCost, CASE WHEN DCNR.RecipientCount * 10000 > 1000000 THEN '系统可能无法运行' ELSE '系统正常工作' END AS SystemStatus FROM DataCollectionNotificationRecord DCNR WHERE DCNR.RecipientType = '公众' AND DCNR.NotificationContent LIKE '%温度数据超出阈值1000°C%' AND DCNR.NotificationMethod = '广播';",
        "db_id": "DataCollector"
    },
    {
        "id": 293,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', 'recipient count of 1,000 people', 'temperature threshold of 30°C', 'initial temperature 25°C', 'specific heat capacity of air (1.005 kJ/(kg·K))', 'air density (1.225 kg/m³)', 'room volume per person (50m³)', 'standard atmospheric pressure'], 'relations': ['record_has_recipient_count', 'notification_content_indicates_threshold', 'temperature_rise_calculation (25°C to 30°C)', 'heat_calculation_parameters'], 'intent': 'calculate_total_heat_required_for_temperature_rise', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 30, 25, 1.005, 1.225, 50], 'units': {'temperature': '°C (Celsius, ΔT calculation in Kelvin equivalent)', 'heat_capacity': 'kJ/(kg·K)', 'density': 'kg/m³', 'volume': 'm³', 'recipient_count': 'people', 'heat_output': 'kJ (kilojoules)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}]}}\nA physical knowledge question is as follows:\nIf a data collection notification record has a recipient count of 1,000 people, and the content of the notification is that the temperature data has exceeded the threshold of 30°C, please calculate the total heat required for the temperature to rise from 25°C to 30°C under standard atmospheric pressure. Assume the specific heat capacity of air is 1.005 kJ/(kg·K), the air density is 1.225 kg/m³, and the room volume per person is 50m³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * (1.225 * 50 * 1.005 * (30 - 25)) AS TotalHeatRequired FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationContent LIKE '%温度数据超出阈值30°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 294,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', 'recipient count (10,000 people)', 'notification method (SMS)', 'cost per SMS (0.01 yuan)', 'notification success rate (95%)'], 'relations': ['cost_calculation (recipient_count × cost_per_sms)', 'success_rate_application (recipient_count × success_rate)'], 'intent': 'calculate_total_sms_cost_and_successful_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 0.01, 95], 'units': {'currency': 'yuan', 'success_rate': 'percent', 'conversion': 'success_rate_decimal = success_rate / 100'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nAssuming the number of recipients for a data collection notification record is 10,000 people, and the notification method is SMS, with each SMS costing 0.01 yuan. If the notification success rate is 95%, calculate the total cost of sending these SMS messages and the actual number of SMS messages successfully sent.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 0.01 AS TotalCost, DCNR.RecipientCount * 0.95 AS SuccessCount FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationMethod = '短信';",
        "db_id": "DataCollector"
    },
    {
        "id": 295,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', 'recipients (agricultural producers)', 'humidity data', 'threshold exceedance (80%)'], 'relations': ['notification_targets (notification_record → agricultural producers)', 'condition_trigger (humidity_exceedance → notification)', 'rule_based_alert (threshold_violation → DataCollectionRule)'], 'intent': 'explain_necessity_of_threshold_notification_for_agriculture', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [500, 80], 'units': {'exceedance': 'percentage (80%)', 'humidity_unit': 'implied as percentage from threshold context'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}], 'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when temperature exceeds 35°C. Indicates potential overheating.', 'Triggered when humidity drops below 30%. Indicates dry conditions.', 'Triggered when atmospheric pressure exceeds 1015 hPa. Indicates potential weather changes.', 'Triggered when rainfall drops below 5 mm. Indicates potential drought conditions.', 'Triggered when wind speed exceeds 15 m/s. Indicates storm conditions.']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}]}}\nA common sense reasoning question is as follows:\nThe number of recipients for a data collection notification record is 500, and the notification content indicates that humidity data has exceeded the threshold by 80%. Assuming all these recipients are agricultural producers, please explain why it is necessary to promptly notify them when humidity data exceeds the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.NotificationContent, DCNR.RecipientType FROM DataCollectionNotificationRecord DCNR WHERE DCNR.RecipientType = '农业生产者' AND DCNR.NotificationContent LIKE '%湿度数据超出阈值80%';",
        "db_id": "DataCollector"
    },
    {
        "id": 296,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', 'recipient count of 1 billion people', 'notification content: temperature data exceeds threshold of 1000°C', 'notification method: broadcasting', 'broadcast cost of 10,000 yuan per instance'], 'relations': ['notification_to_recipient (notification record → recipient count)', 'notification_to_method (notification record → broadcasting)', 'cost_per_unit (broadcasting → 10,000 yuan/broadcast)'], 'intent': 'calculate_total_broadcast_cost and evaluate_system_operational_failure_due_to_cost', 'reasoning_type': 'mathematical logic reasoning, ideal hypothesis reasoning', 'numerical_values': [1000000000, 10000, 1000], 'units': {'currency': 'yuan', 'temperature': '°C', 'cost_calculation': 'total_cost = broadcast_count × cost_per_broadcast'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}, {'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the number of recipients for a data collection notification record is 1 billion people, and the notification content is that the temperature data exceeds the threshold of 1000°C. If the notification method is broadcasting, with each broadcast costing 10,000 yuan, please calculate the total cost of sending these broadcasts and determine whether the system will fail to operate due to excessively high costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 10000 AS TotalCost, CASE WHEN DCNR.RecipientCount * 10000 > 1000000000 THEN '系统可能无法运行' ELSE '系统正常工作' END AS SystemStatus FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationMethod = '广播' AND DCNR.NotificationContent LIKE '%温度数据超出阈值1000°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 297,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"notification method 'broadcast'\", 'notification content: temperature exceeds 30°C', 'initial temperature 25°C', 'final temperature 30°C', 'specific heat capacity 1.005 kJ/(kg·K)', 'air density 1.225 kg/m³', 'broadcast coverage volume 10000m³'], 'relations': ['notification_trigger (DataCollectionNotificationRecord.TriggerId → DataCollectionRule.Id for threshold reference)', 'heat_calculation_relation (Q = m * c * ΔT with m = density * volume)'], 'intent': 'calculate_heat_required_for_temperature_rise', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [25, 30, 1.005, 1.225, 10000], 'units': {'temperature': '°C (Celsius, ΔT=5K since 1°C interval = 1K)', 'specific_heat_capacity': 'kJ/(kg·K)', 'density': 'kg/m³', 'volume': 'm³', 'heat': 'kJ'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}]}}\nA physical knowledge question is as follows:\nIf a data collection notification record has a notification method of 'broadcast', and the notification content is that temperature data exceeds the threshold of 30°C, please calculate the heat required for the temperature to rise from 25°C to 30°C under standard atmospheric pressure. Assume the specific heat capacity of air is 1.005 kJ/(kg·K), the air density is 1.225 kg/m³, and the volume of the broadcast coverage area is 10000m³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.225 * 10000 * 1.005 * (30 - 25) AS HeatRequired FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationMethod = '广播' AND DCNR.NotificationContent LIKE '%温度数据超出阈值30°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 298,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"notification method 'SMS'\", '1000 recipients', 'SMS cost 0.01 yuan', 'notification success rate 95%'], 'relations': [\"method_to_cost ('SMS' → 0.01 yuan/message)\", 'recipient_count_to_volume (1000 → message quantity)', 'success_rate_application (95% → successful messages)'], 'intent': 'calculate_total_sms_cost_and_successful_deliveries', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 0.01, 95], 'units': {'currency': 'yuan (Chinese currency)', 'rate': '% (percentage)', 'conversion': '1 recipient = 1 SMS message'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast']}, {'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}]}}\nA mathematical logic question is as follows:\nAssuming a data collection notification record has a notification method of 'SMS', with 1000 recipients, and each SMS costs 0.01 yuan. If the notification success rate is 95%, calculate the total cost of sending these SMS messages and the actual number of SMS messages successfully sent.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 0.01 AS TotalCost, DCNR.RecipientCount * 0.95 AS SuccessCount FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationMethod = '短信';",
        "db_id": "DataCollector"
    },
    {
        "id": 299,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"notification method 'email'\", 'humidity data', 'threshold of 80%', 'warehouse managers'], 'relations': ['notification_triggered_by_threshold_exceedance (humidity data → threshold)', 'recipient_assignment (notification → warehouse managers)', 'rule_based_notification (DataCollectionRule → DataCollectionNotificationRecord)'], 'intent': 'explain_necessity_of_humidity_threshold_notification', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [80], 'units': {'humidity_threshold': '% (percentage)', 'conversion': 'direct percentage value (no conversion needed)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}, {'column': 'TriggerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollectionRule': [{'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}]}}\nA common sense reasoning question is as follows:\nA data collection notification record has the notification method as 'email', and the notification content indicates that the humidity data has exceeded the threshold of 80%. Assuming all the recipients are warehouse managers, please explain why it is necessary to promptly notify them when the humidity data exceeds the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.NotificationContent, DCNR.RecipientType FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationMethod = '邮件' AND DCNR.NotificationContent LIKE '%湿度数据超出阈值80%';",
        "db_id": "DataCollector"
    },
    {
        "id": 300,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"notification method 'broadcast'\", '10 billion recipients', 'temperature threshold 1000°C', 'broadcast cost 10,000 yuan', 'system operability'], 'relations': [\"method_to_cost ('broadcast' → 10,000 yuan per broadcast)\", 'recipient_count_to_cost (10 billion recipients → total cost)', 'content_to_threshold (notification content → 1000°C threshold)'], 'intent': 'calculate_total_broadcast_cost_and_assess_system_operability', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [10000000000, 10000, 1000], 'units': {'recipient_count': 'count (10 billion = 10,000,000,000)', 'cost_per_broadcast': 'yuan', 'total_cost': 'yuan', 'temperature_threshold': '°C'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}, {'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collection notification record has a notification method of 'broadcast', with 10 billion recipients, and the notification content is that the temperature data has exceeded the threshold of 1000°C. If each broadcast costs 10,000 yuan, please calculate the total cost of sending these broadcasts and determine whether the system will be unable to operate due to excessively high costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 10000 AS TotalCost, CASE WHEN DCNR.RecipientCount * 10000 > 1000000000 THEN '系统可能无法运行' ELSE '系统正常工作' END AS SystemStatus FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationMethod = '广播' AND DCNR.NotificationContent LIKE '%温度数据超出阈值1000°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 301,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['DataCollectionNotificationRecord', \"notification status 'Success'\", 'notification content indicating temperature threshold exceedance', 'temperature threshold 30°C', 'initial temperature 25°C', 'final temperature 30°C', 'specific heat capacity 1.005 kJ/(kg·K)', 'air density 1.225 kg/m³', 'volume 10,000 m³', 'standard atmospheric pressure'], 'relations': ['notification_to_threshold (DataCollectionNotificationRecord contains threshold exceedance in NotificationContent)', 'heat_calculation (Q = m * c * ΔT, with m = density * volume)', 'temperature_difference (ΔT = 5°C)'], 'intent': 'calculate_heat_required_for_temperature_rise', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [25, 30, 1.005, 1.225, 10000], 'units': {'temperature': '°C (Celsius)', 'specific_heat': 'kJ/(kg·K)', 'density': 'kg/m³', 'volume': 'm³', 'energy': 'kJ', 'conversion': 'ΔT = 5 K (equivalent to 5°C for heat calculation)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationStatus', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Success', 'Pending']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}]}}\nA physical knowledge question is as follows:\nIf a data collection notification record has a notification status of 'Success' and the notification content indicates that the temperature data has exceeded the threshold of 30°C, please calculate the heat required for the temperature to rise from 25°C to 30°C under standard atmospheric pressure. Assume the specific heat capacity of air is 1.005 kJ/(kg·K), the air density is 1.225 kg/m³, and the volume of the area covered by the notification is 10,000m³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1.225 * 10000 * 1.005 * (30 - 25) AS HeatRequired FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationStatus = '成功' AND DCNR.NotificationContent LIKE '%温度数据超出阈值30°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 302,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['DataCollectionNotificationRecord', \"notification status 'Failed'\", 'recipient count 1000', 'cost per SMS 0.01 yuan', 'success rate 95%'], 'relations': [\"record_has_status (DataCollectionNotificationRecord → 'Failed')\", 'record_has_recipient_count (DataCollectionNotificationRecord → 1000)', 'cost_applied_per_message (0.01 yuan per SMS)', 'success_rate_applied (95% for message delivery)'], 'intent': 'calculate_total_cost_and_successful_messages_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 0.01, 95], 'units': {'currency': 'yuan', 'rate': 'percentage', 'conversion': 'successful_messages = recipient_count * (success_rate / 100), total_cost = recipient_count * cost_per_sms'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationStatus', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Success', 'Pending']}, {'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}]}}\nA mathematical logic question is as follows:\nAssuming a data collection notification record has a notification status of 'Failed', with 1,000 recipients and a cost of 0.01 yuan per SMS. If the notification success rate is 95%, calculate the total cost of sending these messages and determine the actual number of successfully sent SMS messages.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 0.01 AS TotalCost, DCNR.RecipientCount * 0.95 AS SuccessCount FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationStatus = '失败' AND DCNR.NotificationMethod = '短信';",
        "db_id": "DataCollector"
    },
    {
        "id": 303,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"notification status 'successful'\", 'notification content', 'humidity data', 'threshold 80%', 'recipients: warehouse managers'], 'relations': ['notification_has_status (record → status)', 'content_indicates_exceedance (notification → humidity threshold violation)', 'recipient_role (warehouse managers → responsible for storage conditions)'], 'intent': 'explain_necessity_of_humidity_threshold_notification', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [80], 'units': {'humidity_threshold': '% (percentage)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationStatus', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Success', 'Pending']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}]}}\nA common sense reasoning question is as follows:\nThe notification status of a data collection notification record is 'successful', and the notification content indicates that the humidity data has exceeded the threshold of 80%. Assuming all these recipients are warehouse managers, please explain why it is necessary to promptly notify them when humidity data exceeds the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.NotificationContent, DCNR.RecipientType FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationStatus = '成功' AND DCNR.NotificationContent LIKE '%湿度数据超出阈值80%';",
        "db_id": "DataCollector"
    },
    {
        "id": 304,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"data collection notification record (status 'failed')\", 'recipient count (1 billion people)', 'notification content (temperature data exceeds 1000°C threshold)', 'cost per broadcast (10,000 yuan)', 'total broadcast cost', 'system operability status'], 'relations': [\"record_has_status (notification record → 'failed')\", 'record_has_recipient_count (notification record → 1 billion)', 'record_has_content (notification record → temperature threshold exceedance)', 'cost_per_broadcast (broadcast → 10,000 yuan)'], 'intent': 'calculate_total_broadcast_cost_and_assess_system_operability', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000, 10000, 1000], 'units': {'currency': 'yuan', 'temperature': '°C', 'recipient_unit': 'people'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationStatus', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Success', 'Pending']}, {'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a data collection notification record has a notification status of 'failed', and the number of recipients is 1 billion people, with the notification content being that the temperature data exceeds the threshold of 1000°C. If the cost per broadcast is 10,000 yuan, calculate the total cost of sending these broadcasts and determine whether the system will be unable to operate due to excessively high costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DCNR.RecipientCount * 10000 AS TotalCost, CASE WHEN DCNR.RecipientCount * 10000 > 1000000000 THEN '系统可能无法运行' ELSE '系统正常工作' END AS SystemStatus FROM DataCollectionNotificationRecord DCNR WHERE DCNR.NotificationStatus = '失败' AND DCNR.NotificationMethod = '广播' AND DCNR.NotificationContent LIKE '%温度数据超出阈值1000°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 305,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n```json\n{\n  \"entities\": [\n    \"data collection notification record (AcknowledgedTime: '2023-10-01 12:00:00')\",\n    \"notification content (threshold: 30°C)\",\n    \"air (substance for heat calculation)\",\n    \"notification-covered area (volume: 10,000 m³)\"\n  ],\n  \"relations\": [\n    \"time_difference_between (NotificationTime → AcknowledgedTime)\",\n    \"heat_required_for (temperature_rise: 25°C → 30°C)\",\n    \"physical_properties_of (air → specific_heat_capacity, density)\"\n  ],\n  \"intent\": \"calculate_time_difference_and_thermal_energy\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [\n    30,    // Threshold temperature (°C)\n    25,    // Initial temperature (°C)\n    30,    // Final temperature (°C)\n    1.005, // Specific heat capacity (kJ/(kg·K))\n    1.225, // Air density (kg/m³)\n    10000  // Volume (m³)\n  ],\n  \"units\": {\n    \"temperature\": \"°C (Celsius)\",\n    \"specific_heat_capacity\": \"kJ/(kg·K)\",\n    \"density\": \"kg/m³\",\n    \"volume\": \"m³\",\n    \"energy\": \"kJ\",\n    \"time_difference\": \"seconds/minutes/hours (derived from timestamp difference)\",\n    \"temperature_differential\": \"ΔT = 5°C (30°C - 25°C)\"\n  },\n  \"required_tables\": [\"DataCollectionNotificationRecord\"],\n  \"required_fields\": [\n    \"DataCollectionNotificationRecord.NotificationTime\",\n    \"DataCollectionNotificationRecord.AcknowledgedTime\"\n  ]\n}\n```\n\n**Explanation:**\n1. **Entities**: Identify core objects: notification record (filtered by given AcknowledgedTime), notification content specifying 30°C threshold, air as the medium, and the area volume.\n2. **Relations**: Focus on temporal relationship (notification to confirmation time) and thermal physics relationship (temperature rise → heat energy).\n3. **Intent**: Dual objective - compute time difference and calculate thermal energy for temperature rise.\n4. **Reasoning Type**: Physical knowledge reasoning for heat calculation (Q = m·c·ΔT), using given constants.\n5. **Numerical Values**: Explicit numbers from the query (temperatures, physical constants, volume).\n6. **Units**: All units provided in the question; heat calculation uses kJ, time difference unit depends on timestamp subtraction.\n7. **Required Tables/Fields**: Only need `DataCollectionNotificationRecord` to retrieve `NotificationTime` and `AcknowledgedTime` for time difference calculation. Heat computation uses external parameters, not database values.\nA physical knowledge question is as follows:\nIf a data collection notification record has a confirmation time of '2023-10-01 12:00:00', and the notification content indicates that the temperature data exceeds the threshold of 30°C, calculate the time difference from the notification time to the confirmation time, and determine the heat required for the temperature to rise from 25°C to 30°C during this period. Assume the specific heat capacity of air is 1.005 kJ/(kg·K), the air density is 1.225 kg/m³, and the volume of the notification-covered area is 10,000 m³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT TIMESTAMPDIFF(SECOND, NotificationTime, AcknowledgedTime) AS TimeDifferenceInSeconds, (1.225 * 10000) * 1.005 * (30 - 25) AS HeatRequiredInKJ FROM DataCollectionNotificationRecord WHERE AcknowledgedTime = '2023-10-01 12:00:00' AND NotificationContent LIKE '%温度数据超出阈值30°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 306,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"confirmation time '2023-10-01 12:00:00'\", 'humidity threshold 80%', 'recipient count 1000', 'cost per text 0.01 RMB', 'notification success rate 95%'], 'relations': ['record_identified_by_confirmation_time (confirmation time → record)', 'notification_content_indicates (record → humidity threshold)', 'record_has_recipient_count (record → 1000)', 'cost_applied_per_message (record → 0.01 RMB)', 'success_rate_applied (record → 95%)'], 'intent': 'calculate_total_message_cost_and_success_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 1000, 0.01, 95], 'units': {'humidity_threshold': '% (percent)', 'recipient_count': 'people', 'cost': 'RMB per message', 'success_rate': '% (percent)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}, {'column': 'AcknowledgedTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:35:00', '2023-09-25 08:20:00', '2023-08-15 12:50:00', '2023-06-05 09:05:00']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}]}}\nA mathematical logic question is as follows:\nAssuming a data collection notification record has a confirmation time of '2023-10-01 12:00:00', and the notification content indicates that humidity data has exceeded the threshold of 80%, with the recipient count being 1000 people and a cost of 0.01 RMB per text message. If the notification success rate is 95%, calculate the total cost of sending these text messages and determine the actual number of successfully sent messages.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RecipientCount * 0.01 AS TotalCost, RecipientCount * 0.95 AS SuccessfullySentCount FROM DataCollectionNotificationRecord WHERE AcknowledgedTime = '2023-10-01 12:00:00' AND NotificationContent LIKE '%湿度数据超出阈值80%';",
        "db_id": "DataCollector"
    },
    {
        "id": 307,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', 'pressure data threshold breach (110 kPa)', 'chemical plant operators'], 'relations': ['notification_triggered_by_rule (DataCollectionNotificationRecord.TriggerId → DataCollectionRule.Id)', \"recipients_are_operators (RecipientType = 'chemical plant operators')\"], 'intent': 'explain_necessity_of_prompt_confirmation_for_threshold_breach', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [110], 'units': {'pressure': 'kPa (kiloPascals)', 'conversion': '1 kPa = 1000 Pa'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}, {'column': 'TriggerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when temperature exceeds 35°C. Indicates potential overheating.', 'Triggered when humidity drops below 30%. Indicates dry conditions.', 'Triggered when atmospheric pressure exceeds 1015 hPa. Indicates potential weather changes.', 'Triggered when rainfall drops below 5 mm. Indicates potential drought conditions.', 'Triggered when wind speed exceeds 15 m/s. Indicates storm conditions.']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Operators', 'Activate Humidifiers', 'Notify Maintenance', 'Monitor Drought', 'Issue Storm Warning']}]}}\nA common sense reasoning question is as follows:\nA data collection notification record has a confirmation time of '2023-10-01 12:00:00', and the notification content indicates that the pressure data exceeds the threshold of 110 kPa. Assuming all these recipients are chemical plant operators, please explain why it is necessary to promptly confirm the notification when the pressure data surpasses the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT NotificationContent, AcknowledgedTime FROM DataCollectionNotificationRecord WHERE AcknowledgedTime = '2023-10-01 12:00:00' AND NotificationContent LIKE '%压力数据超出阈值110kPa%';",
        "db_id": "DataCollector"
    },
    {
        "id": 308,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', 'recipient count 1 billion', 'cost per broadcast 10,000 yuan', 'temperature threshold 1000°C'], 'relations': ['record_to_recipients (notification record → recipient count)', 'recipients_to_cost (recipient count × cost per broadcast → total cost)'], 'intent': 'calculate_total_broadcast_cost_and_assess_system_operability', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000, 10000, 1000], 'units': {'cost': 'yuan (Chinese currency)', 'temperature': '°C (Celsius)', 'recipient_count': 'unitless count', 'conversion': '1 billion = 1,000,000,000'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the confirmation time of a data collection notification record is '9999-12-31 23:59:59', the number of recipients is 1 billion, and the notification content is that the temperature data exceeds the threshold of 1000°C. If the cost per broadcast is 10,000 yuan, please calculate the total cost of sending these broadcasts and determine whether the system will be unable to operate due to excessive costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RecipientCount * 10000 AS TotalCost, CASE WHEN RecipientCount * 10000 > 1000000 THEN '系统可能无法运行' ELSE '系统正常工作' END AS SystemStatus FROM DataCollectionNotificationRecord WHERE AcknowledgedTime = '9999-12-31 23:59:59' AND NotificationContent LIKE '%温度数据超出阈值1000°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 309,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"notification time '2023-10-01 12:00:00'\", 'temperature threshold 30°C', 'data collection time', 'air volume 10000m³', 'initial temperature 25°C', 'final temperature 30°C'], 'relations': ['notification_to_rule (TriggerId → RuleId)', 'rule_to_data (Rule defines threshold for DataType)', 'temperature_rise (25°C → 30°C)'], 'intent': 'calculate_time_difference_and_heat_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30, 25, 1.005, 1.225, 10000], 'units': {'temperature': '°C (Celsius)', 'specific_heat': 'kJ/(kg·K)', 'density': 'kg/m³', 'volume': 'm³', 'energy': 'kJ', 'time': 'seconds (derived from timestamp difference)'}, 'foreign_keys': [{'fk_table': 'DataCollectionRecord', 'fk_column': 'CollectorId', 'ref_table': 'DataCollector', 'ref_column': 'CollectorId'}, {'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'TriggerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'DataType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Temperature', 'Humidity', 'Pressure', 'Rainfall', 'Wind Speed']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '<']}], 'DataCollector.DataCollectionRecord': [{'column': 'CollectionTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'DataValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.5', '65.0', '1013.25', '12.3', '5.5']}, {'column': 'DataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}]}}\nA physical knowledge question is as follows:\nIf a data collection notification record has a notification time of '2023-10-01 12:00:00', and the notification content indicates that the temperature data has exceeded the threshold of 30°C, please calculate the time difference from the data collection time to the notification time, and compute the heat required for the temperature to rise from 25°C to 30°C within this period. Assume the specific heat capacity of air is 1.005 kJ/(kg·K), the air density is 1.225 kg/m³, and the volume of the area covered by the notification is 10000m³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT TIMESTAMPDIFF(SECOND, dc.CollectionTime, dcn.NotificationTime) AS TimeDifferenceInSeconds, (1.225 * 10000) * 1.005 * (30 - 25) AS HeatRequiredInKJ FROM DataCollectionNotificationRecord dcn JOIN DataCollectionRecord dc ON dcn.TriggerId = dc.Id WHERE dcn.NotificationTime = '2023-10-01 12:00:00' AND dcn.NotificationContent LIKE '%温度数据超出阈值30°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 310,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', \"notification time '2023-10-01 12:00:00'\", 'notification content humidity threshold exceeded', 'recipient count 1000 people', 'cost per SMS 0.01 yuan', 'notification success rate 95%'], 'relations': ['record_attributes (notification record has specified time, content, recipient count)', 'cost_calculation (total_cost = recipient_count * cost_per_sms)', 'success_calculation (successful_messages = recipient_count * success_rate_decimal)'], 'intent': 'calculate_sms_total_cost_and_successful_message_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 0.01, 95], 'units': {'recipient_count': 'people', 'cost': 'yuan', 'success_rate': 'percentage (converted to decimal by dividing by 100)', 'conversion': 'success_rate_decimal = 95 / 100 = 0.95'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '1000', '50000']}]}}\nA mathematical logic question is as follows:\nAssuming a data collection notification record has a notification time of '2023-10-01 12:00:00', the notification content indicates that the humidity data exceeds the threshold of 80%, the number of recipients is 1,000 people, and the cost per SMS is 0.01 yuan. If the notification success rate is 95%, calculate the total cost of sending these SMS messages and determine the actual number of successfully sent SMS messages.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RecipientCount * 0.01 AS TotalCost, RecipientCount * 0.95 AS SuccessfullySentCount FROM DataCollectionNotificationRecord WHERE NotificationTime = '2023-10-01 12:00:00' AND NotificationContent LIKE '%湿度数据超出阈值80%';",
        "db_id": "DataCollector"
    },
    {
        "id": 311,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['notification record (timestamp: 2023-10-01 12:00:00)', 'pressure threshold (110 kPa)', 'chemical plant operators', 'pressure data'], 'relations': ['notification_triggered_by (pressure data exceeding threshold → notification record)', 'recipient_role (notification record → chemical plant operators)', 'threshold_condition (pressure data > 110 kPa)'], 'intent': 'explain_necessity_of_prompt_notification', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [110], 'units': {'pressure': 'kPa (kilopascals)'}, 'foreign_keys': [{'fk_table': 'DataCollectionNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'DataCollectionRule', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'DataCollectionNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'DataCollectionRule', 'pk_column': 'Id'}], 'tableinfo': {'DataCollector.DataCollectionNotificationRecord': [{'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall warning: Rainfall exceeds 50 mm. Stay safe.', 'Flood alert: Water levels rising rapidly in the region.', 'Storm warning: High winds and heavy rain expected.', 'Data collection complete: Rainfall data for June available.', 'Drought alert: Rainfall below 5 mm for the past month.']}, {'column': 'NotificationTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', 'Enterprise']}], 'DataCollector.DataCollectionRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.0', '30.0', '1015.0', '5.0', '15.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['Celsius', 'Percent', 'hPa', 'mm', 'm/s']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when temperature exceeds 35°C. Indicates potential overheating.', 'Triggered when humidity drops below 30%. Indicates dry conditions.', 'Triggered when atmospheric pressure exceeds 1015 hPa. Indicates potential weather changes.', 'Triggered when rainfall drops below 5 mm. Indicates potential drought conditions.', 'Triggered when wind speed exceeds 15 m/s. Indicates storm conditions.']}]}}\nA common sense reasoning question is as follows:\nAn data collection notification record has a notification timestamp of '2023-10-01 12:00:00', and the content states that the pressure data exceeds the threshold of 110 kPa. Assuming these recipients are all chemical plant operators, please explain why it is necessary to promptly send notifications when pressure data exceeds the threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT NotificationContent, NotificationTime FROM DataCollectionNotificationRecord WHERE NotificationTime = '2023-10-01 12:00:00' AND NotificationContent LIKE '%压力数据超出阈值110kPa%';",
        "db_id": "DataCollector"
    },
    {
        "id": 312,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data collection notification record', 'recipient count: 1 billion people', 'notification content temperature threshold: 1000°C', 'cost per broadcast: 10,000 yuan'], 'relations': ['cost_calculation (recipient_count × cost_per_broadcast)', 'threshold_violation (temperature > 1000°C triggers notification)'], 'intent': 'calculate_total_notification_cost + assess_system_operability', 'reasoning_type': 'mathematical logic reasoning + ideal hypothesis reasoning', 'numerical_values': [1000000000, 10000, 1000], 'units': {'currency': 'yuan (CNY)', 'temperature': '°C (Celsius)', 'recipients': 'people (count)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming the notification time of a data collection notification record is '9999-12-31 23:59:59', with a recipient count of 1 billion people, and the notification content indicates that the temperature data exceeds the threshold of 1000°C. If the cost per broadcast is 10,000 yuan, calculate the total cost of sending these broadcasts and determine whether the system will be unable to operate due to the excessive cost.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RecipientCount * 10000 AS TotalCost, CASE WHEN RecipientCount * 10000 > 1000000 THEN '系统可能无法运行' ELSE '系统正常工作' END AS SystemStatus FROM DataCollectionNotificationRecord WHERE NotificationTime = '9999-12-31 23:59:59' AND NotificationContent LIKE '%温度数据超出阈值1000°C%';",
        "db_id": "DataCollector"
    },
    {
        "id": 313,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'sound pressure level (Sound_Pressure_Level_Db)', 'sensitivity (Sensitivity_Db)', 'product calculation'], 'relations': ['audio_data_to_headphones (audio_data.Headphone_Id → headphones.Headphone_Id)', 'attribute_multiplication (Sound_Pressure_Level_Db × Sensitivity_Db)'], 'intent': 'calculate_and_sort_product', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'sound_pressure_level': 'dB (decibel)', 'sensitivity': 'dB (decibel)', 'product_unit': 'dB² (decibel squared)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA physical knowledge question is as follows:\nPlease query and calculate the product of the sound pressure level (Sound_Pressure_Level_Db) and sensitivity (Sensitivity_Db) for all headphones, and sort the results in ascending order by the product value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Sound_Pressure_Level_Db, Sensitivity_Db, (Sound_Pressure_Level_Db * Sensitivity_Db) AS Product FROM audio_data ORDER BY Product ASC;",
        "db_id": "earphone"
    },
    {
        "id": 314,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earphones', 'Total Harmonic Distortion (Total_Harmonic_Distortion_Percent)', 'Impedance (Impedance_Ohms)'], 'relations': ['attribute_of (Total_Harmonic_Distortion_Percent belongs to earphones)', 'attribute_of (Impedance_Ohms belongs to earphones)', 'ratio_computation (Total_Harmonic_Distortion_Percent ÷ Impedance_Ohms)'], 'intent': 'calculate_thd_to_impedance_ratio_and_retrieve_top_10', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': None, 'units': {'Total_Harmonic_Distortion': 'percent (%)', 'Impedance': 'ohms (Ω)', 'ratio_unit': '%/Ω (percent per ohm)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '阻抗（欧姆）', 'examples': ['32', '20', '150']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA mathematical logic question is as follows:\nPlease calculate the ratio of Total Harmonic Distortion (Total_Harmonic_Distortion_Percent) to Impedance (Impedance_Ohms) for all earphones, sort the results in descending order by the ratio, and return the top 10 entries.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Total_Harmonic_Distortion_Percent, Impedance_Ohms, (Total_Harmonic_Distortion_Percent / Impedance_Ohms) AS Distortion_Impedance_Ratio FROM audio_data ORDER BY Distortion_Impedance_Ratio DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 315,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless earphones', 'battery life (Battery_Life_Hours)', 'weight (Weight_Grams)', 'ratio (Battery_Life_Hours/Weight_Grams)'], 'relations': ['attribute_of (Battery_Life_Hours → wireless earphones)', 'attribute_of (Weight_Grams → wireless earphones)', 'calculation_relation (ratio = Battery_Life_Hours ÷ Weight_Grams)'], 'intent': 'calculate_and_sort_battery_life_to_weight_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_life': 'Hours', 'weight': 'Grams', 'result_unit': 'Hours per Gram (hr/g)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['1', '0']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}]}}\nA common sense reasoning question is as follows:\nPlease query the ratio of battery life (Battery_Life_Hours) to weight (Weight_Grams) for all wireless earphones (where Is_Wireless is True) and sort the results in ascending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Battery_Life_Hours, Weight_Grams, (Battery_Life_Hours / Weight_Grams) AS Battery_Weight_Ratio FROM headphones WHERE Is_Wireless = True ORDER BY Battery_Weight_Ratio ASC;",
        "db_id": "earphone"
    },
    {
        "id": 316,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'sound pressure level (Sound_Pressure_Level_Db)', 'maximum input power (Max_Input_Power_Mw)'], 'relations': ['ratio_computation (Sound_Pressure_Level_Db / adjusted_Max_Input_Power)', 'power_adjustment (Max_Input_Power_Mw → 100000 mW for all headphones)'], 'intent': 'calculate the ratio of sound pressure level to adjusted maximum input power, sort top 5 descending', 'reasoning_type': 'ideal hypothesis reasoning, mathematical logic reasoning', 'numerical_values': [100000], 'units': {'power': 'milliwatts (mW)', 'sound_level': 'decibels (dB)', 'ratio_unit': 'dB/mW'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}], 'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maximum input power (Max_Input_Power_Mw) of all headphones is increased to 100,000 milliwatts, calculate the ratio of the sound pressure level (Sound_Pressure_Level_Db) to the maximum input power for these headphones, sort them in descending order by this ratio, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Sound_Pressure_Level_Db, 100000 AS Max_Input_Power_Mw, (Sound_Pressure_Level_Db / 100000) AS Sound_Power_Ratio FROM audio_data ORDER BY Sound_Power_Ratio DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 317,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'Sensitivity_Db', 'Impedance_Ohms'], 'relations': ['attribute_of (Sensitivity_Db → headphones)', 'attribute_of (Impedance_Ohms → headphones)', 'ratio_calculation (Sensitivity_Db / Impedance_Ohms)'], 'intent': 'calculate_sensitivity_to_impedance_ratio_and_retrieve_top_10', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'sensitivity': 'dB (decibels)', 'impedance': 'Ω (ohms)', 'ratio_unit': 'dB/Ω (implied unit for ratio)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA physical knowledge question is as follows:\nPlease query and calculate the ratio of sensitivity (Sensitivity_Db) to impedance (Impedance_Ohms) for all headphones, then sort them in descending order by the ratio and retrieve the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Sensitivity_Db, Impedance_Ohms, (Sensitivity_Db / Impedance_Ohms) AS Sensitivity_Impedance_Ratio FROM audio_data ORDER BY Sensitivity_Impedance_Ratio DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 318,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\"headphones\", \"weight (Weight_Grams)\", \"battery life (Battery_Life_Hours)\", \"product calculation\"],\n  \"relations\": [\"attribute_of (Weight_Grams → headphones)\", \"attribute_of (Battery_Life_Hours → headphones)\", \"product_relationship (Weight_Grams × Battery_Life_Hours)\"],\n  \"intent\": \"calculate_product_and_retrieve_top5\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [5], // Top 5 records\n  \"units\": {\n    \"weight\": \"grams\",\n    \"battery_life\": \"hours\",\n    \"product\": \"gram-hours\"\n  },\n  \"required_tables\": [\"headphones\"],\n  \"required_fields\": [\n    \"headphones.Headphone_Id\",\n    \"headphones.Model\",\n    \"headphones.Weight_Grams\",\n    \"headphones.Battery_Life_Hours\"\n  ]\n}\nA mathematical logic question is as follows:\nPlease calculate the product of weight (Weight_Grams) and battery life (Battery_Life_Hours) for all headphones, then sort them in ascending order by the product value and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Weight_Grams, Battery_Life_Hours, (Weight_Grams * Battery_Life_Hours) AS Weight_Battery_Product FROM headphones ORDER BY Weight_Battery_Product ASC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 319,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'active noise cancellation (Noise_Cancellation)', 'built-in microphone (Microphone)', 'price (Price_Usd)'], 'relations': ['attribute_of (headphones → Noise_Cancellation)', 'attribute_of (headphones → Microphone)', 'attribute_of (headphones → Price_Usd)'], 'intent': 'retrieve_headphones_by_features_and_sort_by_price', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'price': 'USD (as per Price_Usd column)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Noise_Cancellation', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否支持主动降噪', 'examples': ['1', '0']}, {'column': 'Microphone', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否内置麦克风', 'examples': ['1', '0']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}]}}\nA common sense reasoning question is as follows:\nPlease query all headphones that support active noise cancellation (Noise_Cancellation is True) and have built-in microphones (Microphone is True), sort them by price (Price_Usd) in ascending order, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model, Price_Usd FROM headphones WHERE Noise_Cancellation = True AND Microphone = True ORDER BY Price_Usd ASC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 320,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'weight (Weight_Grams)', 'battery life (Battery_Life_Hours)', 'ratio'], 'relations': ['weight_modification (Weight_Grams → 10,000 grams for all)', 'ratio_calculation (Battery_Life_Hours / Weight_Grams)'], 'intent': 'calculate_and_rank_battery_life_to_weight_ratio_after_hypothetical_weight_increase', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [10000], 'units': {'weight': 'grams', 'battery_life': 'hours', 'ratio': 'hours per gram', 'conversion': 'fixed weight value applied universally'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the weight (Weight_Grams) of all headphones increases to 10,000 grams, calculate the ratio of battery life (Battery_Life_Hours) to weight for these headphones, then sort in descending order by this ratio and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Battery_Life_Hours, 10000 AS Weight_Grams, (Battery_Life_Hours / 10000) AS Battery_Weight_Ratio FROM headphones ORDER BY Battery_Weight_Ratio DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 321,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'Revenue_Usd', 'Employees', 'per capita revenue'], 'relations': ['revenue_to_employees (Revenue_Usd ÷ Employees)', 'manufacturer_identification (Manufacturer_Id → Manufacturer_Name)'], 'intent': 'calculate_and_rank_per_capita_revenue', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'revenue': 'USD', 'employees': 'count', 'per_capita_revenue': 'USD per employee'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Revenue_Usd'}, {'column': 'Employees'}]}}\nA physical knowledge question is as follows:\nPlease calculate the per capita revenue (Revenue_Usd / Employees) for each manufacturer, sort them in descending order of per capita revenue, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, (Revenue_Usd / Employees) AS Revenue_Per_Employee FROM manufacturers ORDER BY Revenue_Per_Employee DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 322,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'Profit_Usd', 'Market_Share_Percent'], 'relations': ['manufacturer_to_metrics (direct attribute relationship)'], 'intent': 'calculate_product_of_profit_and_market_share_per_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'Profit_Usd': 'USD (US Dollars)', 'Market_Share_Percent': '% (Percentage)', 'product_unit': 'USD-% (implied compound unit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Profit_Usd'}, {'column': 'Market_Share_Percent'}]}}\nA mathematical logic question is as follows:\nPlease calculate the product of profit and market share (Profit_Usd * Market_Share_Percent) for each manufacturer, sort in descending order by the product value, and take the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, (Profit_Usd * Market_Share_Percent) AS Profit_Market_Index FROM manufacturers ORDER BY Profit_Market_Index DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 323,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'founded_year'], 'relations': ['manufacturer_attribute (Manufacturer_Name → Founded_Year)'], 'intent': 'retrieve_top_oldest_manufacturers', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [3], 'units': {'year': 'calendar year (no conversion needed)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Founded_Year'}]}}\nA common sense reasoning question is as follows:\nPlease query the top 3 manufacturers with the earliest founded years (Founded_Year), sorted in ascending order by their founded year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, Founded_Year FROM manufacturers ORDER BY Founded_Year ASC LIMIT 3;",
        "db_id": "earphone"
    },
    {
        "id": 324,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'turnover (Revenue_Usd)', 'number of employees (Employees)'], 'relations': ['attribute_of (turnover → manufacturers)', 'attribute_of (employees → manufacturers)', 'calculation (ratio = turnover / employees)'], 'intent': 'calculate_top_5_revenue_per_employee_after_hypothetical_employee_increase', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000000], 'units': {'turnover': 'USD', 'employees': 'count', 'ratio': 'USD/employee', 'conversion': 'Fixed employee count override to 1,000,000'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Revenue_Usd'}, {'column': 'Employees'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the number of employees (Employees) for all manufacturers increases to 1,000,000, calculate the ratio of turnover to the number of employees for these enterprises, then sort in descending order by the ratio and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, (Revenue_Usd / 1000000) AS Extreme_Revenue_Per_Employee FROM manufacturers ORDER BY Extreme_Revenue_Per_Employee DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 325,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage record', 'battery consumption rate'], 'relations': ['record_to_consumption (usage_records → Battery_Consumed_Percent)', 'record_to_duration (usage_records → Usage_Duration_Minutes)'], 'intent': 'calculate_and_rank_battery_consumption_rates', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'battery_consumption': 'percent (%)', 'usage_duration': 'minutes (min)', 'consumption_rate': '% per minute (%/min)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Record_Id'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA physical knowledge question is as follows:\nPlease calculate the battery consumption rate per unit time (Battery_Consumed_Percent / Usage_Duration_Minutes) for each usage record, sort them in descending order by the consumption rate, and take the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, User_Id, (Battery_Consumed_Percent / Usage_Duration_Minutes) AS Battery_Consumption_Rate FROM usage_records ORDER BY Battery_Consumption_Rate DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 326,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'volume energy index', 'Volume_Level_Percent', 'Usage_Duration_Minutes'], 'relations': ['computation_relation (Volume_Level_Percent and Usage_Duration_Minutes used to derive index)'], 'intent': 'calculate_and_retrieve_top_5_volume_energy_index', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'Volume_Level_Percent': 'percent (unitless)', 'Usage_Duration_Minutes': 'minutes', 'volume_energy_index': 'percent^2 * minutes (derived unit)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Record_Id'}, {'column': 'Volume_Level_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA mathematical logic question is as follows:\nPlease calculate the volume energy index ((Volume_Level_Percent^2) * Usage_Duration_Minutes) for all usage records, sort them in descending order by index value, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, User_Id, (POWER(Volume_Level_Percent, 2) * Usage_Duration_Minutes) AS Volume_Energy_Index FROM usage_records ORDER BY Volume_Energy_Index DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 327,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'active noise cancellation (Noise_Cancellation_Used=True)', 'battery consumption (Battery_Consumed_Percent>50%)', 'usage duration (Usage_Duration_Minutes)'], 'relations': ['conditional_filter (Noise_Cancellation_Used AND Battery_Consumed_Percent)', 'sorting_relation (ORDER BY Usage_Duration_Minutes ASC)', 'quantitative_limit (TOP 3 records)'], 'intent': 'retrieve_top_records_by_conditions_and_duration', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [50], 'units': {'battery_consumption': '% (percentage)', 'usage_duration': 'minutes'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Noise_Cancellation_Used'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA common sense reasoning question is as follows:\nPlease query records where both active noise cancellation (Noise_Cancellation_Used is True) is used and battery consumption exceeds 50%, sorted by usage duration (Usage_Duration_Minutes) in ascending order, and retrieve the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, User_Id, Usage_Duration_Minutes, Battery_Consumed_Percent, Noise_Cancellation_Used FROM usage_records WHERE Noise_Cancellation_Used = True AND Battery_Consumed_Percent > 50 ORDER BY Usage_Duration_Minutes ASC LIMIT 3;",
        "db_id": "earphone"
    },
    {
        "id": 328,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'battery consumption', '1,000,000 minutes duration'], 'relations': ['scaled_battery_consumption = (Battery_Consumed_Percent * 1000000 / Usage_Duration_Minutes)'], 'intent': 'calculate_scaled_total_battery_consumption_per_record_and_sort_descending', 'reasoning_type': 'mathematical logic reasoning, ideal hypothesis reasoning', 'numerical_values': [1000000], 'units': {'duration': 'minutes', 'battery_consumed': 'percent', 'scaled_consumption_unit': 'percent-minutes (implied by formula)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Record_Id'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Battery_Consumed_Percent'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the duration of all usage records (Usage_Duration_Minutes) is increased to 1,000,000 minutes, calculate the total battery consumption of these records (SUM(Battery_Consumed_Percent) * 1000000 / Usage_Duration_Minutes) and sort them in descending order by consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, User_Id, (SUM(Battery_Consumed_Percent) * 1000000 / Usage_Duration_Minutes) AS Total_Battery_Consumption FROM usage_records GROUP BY Record_Id, Headphone_Id, User_Id ORDER BY Total_Battery_Consumption DESC;",
        "db_id": "earphone"
    },
    {
        "id": 329,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphone ID', 'power consumption'], 'relations': ['headphone_usage (Headphone_Id links to usage records)', 'power_calculation (Battery_Consumed_Percent and Usage_Duration_Minutes used for computation)'], 'intent': 'calculate_average_power_consumption_per_headphone_and_sort_descending', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60], 'units': {'battery_consumed': 'percent', 'usage_duration': 'minutes', 'power_unit': 'percent per hour (%/h)', 'conversion_formula': 'power_consumption = (Battery_Consumed_Percent * 60) / Usage_Duration_Minutes'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Headphone_Id'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA physical knowledge question is as follows:\nPlease group by headphone ID (Headphone_Id), calculate the average power consumption (Battery_Consumed_Percent / (Usage_Duration_Minutes/60)) for each group of headphones, and sort by power in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, AVG(Battery_Consumed_Percent / (Usage_Duration_Minutes / 60)) AS Average_Power_Consumption FROM usage_records GROUP BY Headphone_Id ORDER BY Average_Power_Consumption DESC;",
        "db_id": "earphone"
    },
    {
        "id": 330,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['User_Id', 'Audio_Quality_Rating', 'Comfort_Rating', 'harmonic mean'], 'relations': ['user_to_ratings (User_Id → Audio_Quality_Rating/Comfort_Rating)', 'rating_combination (harmonic mean of Audio_Quality_Rating and Comfort_Rating)'], 'intent': 'calculate_and_rank_harmonic_mean_of_ratings_per_user', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 5], 'units': {'ratings': 'unitless scale', 'harmonic_mean': 'unitless composite metric', 'constants': '2 (harmonic mean formula constant)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'User_Id'}, {'column': 'Audio_Quality_Rating'}, {'column': 'Comfort_Rating'}]}}\nA mathematical logic question is as follows:\nGroup by user ID (User_Id), calculate the harmonic mean of each user's audio quality and comfort rating (2/(1/Audio_Quality_Rating + 1/Comfort_Rating)), and sort the results in descending order to get the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT User_Id, AVG(2 / (1 / Audio_Quality_Rating + 1 / Comfort_Rating)) AS Harmonic_Mean FROM usage_records WHERE Audio_Quality_Rating > 0 AND Comfort_Rating > 0 GROUP BY User_Id ORDER BY Harmonic_Mean DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 331,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphone ID (Headphone_Id)', 'noise cancellation usage (Noise_Cancellation_Used)', 'battery consumption percentage (Battery_Consumed_Percent)'], 'relations': ['grouping_criteria (Headphone_Id ∧ Noise_Cancellation_Used → Battery_Consumed_Percent)', 'aggregation_dependency (groups → avg(Battery_Consumed_Percent))'], 'intent': 'calculate_grouped_average_battery_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_consumption': 'percent (%)', 'aggregation_unit': 'average percentage (implied by AVG())'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Headphone_Id'}, {'column': 'Noise_Cancellation_Used'}, {'column': 'Battery_Consumed_Percent'}]}}\nA common sense reasoning question is as follows:\nPlease group by headphone ID (Headphone_Id) and whether noise cancellation was used (Noise_Cancellation_Used), then calculate the average battery consumption percentage (Battery_Consumed_Percent) for each group, and sort the results in ascending order by consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Noise_Cancellation_Used, AVG(Battery_Consumed_Percent) AS Avg_Battery_Consumed_Percent FROM usage_records GROUP BY Headphone_Id, Noise_Cancellation_Used ORDER BY Avg_Battery_Consumed_Percent ASC;",
        "db_id": "earphone"
    },
    {
        "id": 332,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Volume_Level_Percent', 'Battery_Consumed_Percent', 'User_Id', 'theoretical total power consumption'], 'relations': ['calculation_relation (Battery_Consumed_Percent and Volume_Level_Percent combined via formula)', 'grouping_relation (results organized by User_Id)', 'scaling_relation (Volume_Level_Percent increased to 1000% universally)'], 'intent': 'calculate_and_aggregate_power_consumption_by_user', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100, 3], 'units': {'Volume_Level_Percent': '% (percentage, converted to decimal via /100)', 'Battery_Consumed_Percent': '% (percentage)', 'formula_unit': 'dimensionless (output of (Volume_Level_Percent/100)^3 is unitless scalar)', 'result_unit': 'percentage-derived unit (SUM result inherits unit characteristics from Battery_Consumed_Percent)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'User_Id'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Volume_Level_Percent'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Volume_Level_Percent for all records is increased to 1000%, calculate the theoretical total power consumption (SUM(Battery_Consumed_Percent*(Volume_Level_Percent/100)^3)) grouped by user ID (User_Id), and sort the results in descending order by power consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT User_Id, SUM(Battery_Consumed_Percent * POWER(Volume_Level_Percent / 100, 3)) AS Theoretical_Power_Consumption FROM usage_records GROUP BY User_Id ORDER BY Theoretical_Power_Consumption DESC;",
        "db_id": "earphone"
    },
    {
        "id": 333,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['country', 'manufacturer group', 'profit density per capita'], 'relations': ['country_to_manufacturers (Country → Manufacturer groups)', 'calculation_relation (Profit_Usd / (Employees * 1000) → Profit density per capita)'], 'intent': 'calculate_aggregated_metric_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'Profit_Usd': 'USD (US Dollars)', 'Employees': 'count (unitless quantity)', 'result_unit': 'USD per 1000 employees (derived unit)', 'conversion_note': 'Division by 1000 scales density to per-thousand-employee basis'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Country'}, {'column': 'Profit_Usd'}, {'column': 'Employees'}]}}\nA physical knowledge question is as follows:\nPlease group by country and calculate the profit density per capita (Profit_Usd / (Employees * 1000)) for each manufacturer group, then sort in descending order by density value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, SUM(Profit_Usd) / (SUM(Employees) * 1000) AS Profit_Density FROM manufacturers GROUP BY Country ORDER BY Profit_Density DESC;",
        "db_id": "earphone"
    },
    {
        "id": 334,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['founding year (Founded_Year)', 'manufacturers', 'profit-market composite index (SQRT(Profit_Usd * Market_Share_Percent))'], 'relations': ['grouped_by (manufacturers → Founded_Year)', 'composite_index_calculation (Profit_Usd and Market_Share_Percent → SQRT(Product))'], 'intent': 'retrieve_top_10_founding_years_by_composite_index', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'Profit_Usd': 'USD', 'Market_Share_Percent': 'percent', 'composite_index': 'sqrt(USD * percent) (unitless index)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Founded_Year'}, {'column': 'Profit_Usd'}, {'column': 'Market_Share_Percent'}]}}\nA mathematical logic question is as follows:\nPlease group by the founding year (Founded_Year), calculate the profit-market composite index (SQRT(Profit_Usd * Market_Share_Percent)) for each group of manufacturers, and select the top 10 sorted in descending order by the index.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Founded_Year, SQRT(SUM(Profit_Usd * Market_Share_Percent)) AS Profit_Market_Index FROM manufacturers GROUP BY Founded_Year ORDER BY Profit_Market_Index DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 335,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Country', 'manufacturers', '50 years'], 'relations': ['grouped_by (Country → manufacturers count)', 'filtered_by (Founded_Year condition)', 'sorted_by (count descending)'], 'intent': 'count_and_sort_manufacturers_by_country_with_age_condition', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [50], 'units': {'time': 'years', 'conversion': 'current year - Founded_Year > 50'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Country'}, {'column': 'Founded_Year'}]}}\nA common sense reasoning question is as follows:\nPlease group by Country and count the number of manufacturers established for more than 50 years in each group, then sort the results in descending order by count.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, COUNT(*) AS Manufacturer_Count FROM manufacturers WHERE (2023 - Founded_Year) > 50 GROUP BY Country ORDER BY Manufacturer_Count DESC;",
        "db_id": "earphone"
    },
    {
        "id": 336,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'country', 'revenue', 'theoretical employee count'], 'relations': ['country_grouping (manufacturers grouped by Country)', 'per_capita_calculation (Revenue_Usd / fixed_employee_count)'], 'intent': 'calculate_theoretical_per_capita_output_by_country', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000000000], 'units': {'revenue': 'USD (Revenue_Usd)', 'employee_count': 'unitless count', 'per_capita_output': 'USD per employee (implied by division)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Country'}, {'column': 'Revenue_Usd'}, {'column': 'Manufacturer_Id'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the number of employees (Employees) for all manufacturers increases to 1,000,000,000, calculate the theoretical per capita output (Revenue_Usd / 1,000,000,000) grouped by country (Country), and sort the results by output in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, SUM(Revenue_Usd) / 1000000000 AS Theoretical_Per_Capita_Output FROM manufacturers GROUP BY Country ORDER BY Theoretical_Per_Capita_Output ASC;",
        "db_id": "earphone"
    },
    {
        "id": 337,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'Driver_Type', 'impedance-to-sensitivity ratio'], 'relations': ['group_by(Driver_Type)', 'calculate_ratio(Impedance_Ohms / Sensitivity_Db)', 'average_per_group', 'ascending_sort(ratio)'], 'intent': 'calculate_average_impedance_sensitivity_ratio_per_driver_type_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'impedance': 'ohms (Ω)', 'sensitivity': 'decibels (dB)', 'ratio_unit': 'ohms per decibel (Ω/dB)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Driver_Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '驱动单元类型（如动圈、动铁）', 'examples': ['Dynamic']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': []}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}]}}\nA physical knowledge question is as follows:\nPlease group by driver type (Driver_Type), calculate the average impedance-to-sensitivity ratio (Impedance_Ohms / Sensitivity_Db) for each group of headphones, and sort them in ascending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Driver_Type, AVG(Ompedance_Ohms / Sensitivity_Db) AS Impedance_Sensitivity_Ratio FROM headphones GROUP BY Driver_Type ORDER BY Impedance_Sensitivity_Ratio ASC;",
        "db_id": "earphone"
    },
    {
        "id": 338,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earphones', 'price range (Price_Usd DIV 100)', 'sound pressure level (Sound_Pressure_Level_Db)', 'total harmonic distortion (Total_Harmonic_Distortion_Percent)', 'geometric mean (√(Sound_Pressure_Level_Db * Total_Harmonic_Distortion_Percent))'], 'relations': ['grouped_by (earphones → price_range)', 'attribute_of (sound_pressure_level → audio_data)', 'attribute_of (total_harmonic_distortion → audio_data)'], 'intent': 'calculate_grouped_geometric_mean_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'price': 'USD (Price_Usd)', 'sound_level': 'dB (Sound_Pressure_Level_Db)', 'distortion': '% (Total_Harmonic_Distortion_Percent)', 'geometric_mean_unit': '√(dB * %) (dimensionless composite unit)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}], 'earphone.audio_data': [{'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}]}}\nA mathematical logic question is as follows:\nPlease group by price range (Price_Usd DIV 100), calculate the geometric mean (√(Sound_Pressure_Level_Db * Total_Harmonic_Distortion_Percent)) of sound pressure level and total harmonic distortion for each group of earphones, and sort the results in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (h.Price_Usd DIV 100) AS price_range, SQRT(AVG(a.Sound_Pressure_Level_Db * a.Total_Harmonic_Distortion_Percent)) AS geometric_mean FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id GROUP BY price_range ORDER BY geometric_mean DESC;",
        "db_id": "earphone"
    },
    {
        "id": 339,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'Is_Wireless', 'Weight_Grams', 'Battery_Life_Hours'], 'relations': ['attribute_grouping (headphones → Is_Wireless)', 'ratio_computation (Weight_Grams / Battery_Life_Hours)', 'aggregation_per_group (average of ratio)'], 'intent': 'calculate_and_sort_grouped_average_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'weight': 'grams (from Weight_Grams column)', 'battery_life': 'hours (from Battery_Life_Hours column)', 'ratio': 'g/h (grams per hour derived unit)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['1', '0']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}]}}\nA common sense reasoning question is as follows:\nPlease group the headphones by whether they are wireless (Is_Wireless), calculate the average ratio of weight to battery life (Weight_Grams / Battery_Life_Hours) for each group, and sort the results in ascending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Is_Wireless, AVG(Weight_Grams / Battery_Life_Hours) AS weight_to_battery_ratio FROM headphones GROUP BY Is_Wireless ORDER BY weight_to_battery_ratio ASC;",
        "db_id": "earphone"
    },
    {
        "id": 340,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'water resistance level', 'theoretical price per gram'], 'relations': ['grouping_attribute (Water_Resistance)', 'computation (fixed_price / Weight_Grams)', 'aggregation (per water resistance group)'], 'intent': 'calculate_average_unit_price_grouped_by_water_resistance', 'reasoning_type': 'mathematical logic reasoning, ideal hypothesis reasoning', 'numerical_values': [1000000], 'units': {'price': 'USD', 'weight': 'grams', 'unit_price': 'USD per gram'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Water_Resistance', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '防水等级（如 IPX4）', 'examples': []}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the price (Price_Usd) of all headphones is increased to $1,000,000, group them by water resistance level (Water_Resistance) and calculate the theoretical price per gram (1,000,000 / Weight_Grams), then sort the results in descending order by this unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Water_Resistance, AVG(1000000 / Weight_Grams) AS price_per_gram FROM headphones GROUP BY Water_Resistance ORDER BY price_per_gram DESC;",
        "db_id": "earphone"
    },
    {
        "id": 341,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Driver_Type', 'theoretical maximum sound pressure level'], 'relations': ['computation_relation (Sensitivity_Db and Max_Input_Power_Mw used in formula)', 'grouping_relation (Driver_Type groups headphones)'], 'intent': 'calculate_grouped_max_sound_pressure_level', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'Sensitivity_Db': 'dB (decibels)', 'Max_Input_Power_Mw': 'mW (milliwatts)', 'logarithm_base': 'base-10 logarithm (LOG10)', 'computed_value': 'dB (decibels)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Driver_Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '驱动单元类型（如动圈、动铁）', 'examples': ['Dynamic']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Max_Input_Power_Mw', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大输入功率（毫瓦）', 'examples': ['1500', '1000', '200']}]}}\nA physical knowledge question is as follows:\nPlease group by driver type (Driver_Type), calculate the theoretical maximum sound pressure level (Sensitivity_Db + 10*LOG10(Max_Input_Power_Mw)) for each group of headphones, and sort the results in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Driver_Type, AVG(Sensitivity_Db + 10 * LOG10(Max_Input_Power_Mw)) AS max_sound_pressure_level FROM audio_data GROUP BY Driver_Type ORDER BY max_sound_pressure_level DESC;",
        "db_id": "earphone"
    },
    {
        "id": 342,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Bluetooth_Version', 'frequency response range', 'total harmonic distortion'], 'relations': ['attribute_of (Bluetooth_Version → audio_data)', 'component_of (frequency response range → Frequency_Response_Hz)', 'attribute_of (total harmonic distortion → Total_Harmonic_Distortion_Percent)'], 'intent': 'compute_derived_metric_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'frequency': 'Hz (Hertz)', 'distortion': 'percent (%)', 'logarithmic_width': 'unitless (logarithmic ratio)', 'product': 'percent (%)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Bluetooth_Version', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '蓝牙版本（如 5.0）', 'examples': ['5.0', '5.1']}, {'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}]}}\nA mathematical logic question is as follows:\nPlease group by Bluetooth version (Bluetooth_Version), calculate for each group the product of the logarithmic width of the frequency response range (LOG10(upper frequency/lower frequency)) and total harmonic distortion, then sort the results in ascending order by the product value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bluetooth_Version, LOG10(AVG(SUBSTRING_INDEX(Frequency_Response_Hz, '-', -1) / SUBSTRING_INDEX(Frequency_Response_Hz, '-', 1))) * AVG(Total_Harmonic_Distortion_Percent) AS quality_metric FROM audio_data GROUP BY Bluetooth_Version ORDER BY quality_metric ASC;",
        "db_id": "earphone"
    },
    {
        "id": 343,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['audio codec (Audio_Codec)', 'audio quality rating (Audio_Quality_Rating)', 'earphones'], 'relations': ['audio_data_to_usage_records (audio_data.Headphone_Id → usage_records.Headphone_Id)'], 'intent': 'calculate_average_audio_quality_per_codec_and_sort_descending', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'Audio_Quality_Rating': 'unitless rating scale'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Audio_Codec', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '支持的音频编解码器（如 SBC、AAC、LDAC）', 'examples': ['LDAC', 'AAC']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}], 'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}, {'column': 'Headphone_Id'}]}}\nA common sense reasoning question is as follows:\nPlease group by audio codec (Audio_Codec), calculate the average audio quality rating (Audio_Quality_Rating) for each group of earphones, and sort them in descending order by their ratings.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Audio_Codec, AVG(Audio_Quality_Rating) AS avg_audio_quality FROM usage_records JOIN audio_data ON usage_records.Headphone_Id = audio_data.Headphone_Id GROUP BY Audio_Codec ORDER BY avg_audio_quality DESC;",
        "db_id": "earphone"
    },
    {
        "id": 344,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total harmonic distortion (Total_Harmonic_Distortion_Percent)', 'driver type (Driver_Type)', 'distortion improvement factor'], 'relations': ['headphone_to_audio_data (via Headphone_Id)', 'improvement_calculation (THD / target_value)', 'group_aggregation (by Driver_Type)'], 'intent': 'calculate THD improvement factor per driver type after hypothetical distortion reduction and sort results', 'reasoning_type': 'mathematical logic reasoning, ideal hypothesis reasoning', 'numerical_values': [1e-07], 'units': {'THD': '% (percent)', 'improvement_factor': 'dimensionless ratio', 'conversion': 'original_THD_percent / target_THD_percent'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Driver_Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '驱动单元类型（如动圈、动铁）', 'examples': ['Dynamic']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}], 'earphone.audio_data': [{'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the total harmonic distortion (Total_Harmonic_Distortion_Percent) of all headphones is reduced to 0.0000001%, please group by the driver type (Driver_Type) to calculate the distortion improvement factor (original THD / 0.0000001), and sort in descending order by the improvement factor.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Driver_Type, AVG(Total_Harmonic_Distortion_Percent / 0.0000001) AS improvement_factor FROM audio_data GROUP BY Driver_Type ORDER BY improvement_factor DESC;",
        "db_id": "earphone"
    },
    {
        "id": 345,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'theoretical maximum sound pressure level', 'actual sound pressure level'], 'relations': ['headphone_to_audio_data (headphones.Headphone_Id → audio_data.Headphone_Id)', 'theoretical_SPL_condition (audio_data.Sound_Pressure_Level_Db > 120dB)', 'actual_SPL_condition (audio_data.Sound_Pressure_Level_Db < 120dB implied by EXCEPT clause)'], 'intent': 'find_headphones_meeting_SPL_discrepancy_criteria', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120], 'units': {'sound_pressure_level': 'dB (decibels)', 'comparison': 'theoretical > 120dB AND actual < 120dB per EXCEPT operation'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}], 'earphone.audio_data': [{'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}]}}\nA physical knowledge question is as follows:\nFind headphones with a theoretical maximum sound pressure level exceeding 120dB but failing to meet the actual sound pressure level standards (difference set: theoretical SPL calculated value > 120dB EXCEPT actual SPL measured value >= 120dB)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Headphone_Id IN (SELECT Headphone_Id FROM audio_data WHERE Sensitivity_Db + 10 * LOG10(Max_Input_Power_Mw) > 120) AND Headphone_Id NOT IN (SELECT Headphone_Id FROM audio_data WHERE Sound_Pressure_Level_Db >= 120);",
        "db_id": "earphone"
    },
    {
        "id": 346,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'logarithmic bandwidth of frequency response', 'THD (Total Harmonic Distortion)', 'composite indicator (log bandwidth * THD)', 'Audio_Quality_Rating'], 'relations': ['audio_data_to_headphones (audio_data.Headphone_Id → headphones.Headphone_Id)', 'usage_records_to_headphones (usage_records.Headphone_Id → headphones.Headphone_Id)', 'derived_composite_indicator (log_bandwidth * THD)'], 'intent': 'retrieve_headphones_by_composite_indicator_and_rating_constraints', 'reasoning_type': 'mathematical logic reasoning, physical knowledge reasoning', 'numerical_values': [5, 4], 'units': {'frequency_response': 'Hz (parsed as min-max string)', 'THD': 'percent', 'logarithmic_bandwidth': 'dimensionless (log₂(max_freq/min_freq))', 'composite_indicator': 'dimensionless', 'audio_quality_rating': 'rating scale (1-5 implied)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}], 'earphone.audio_data': [{'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}], 'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}]}}\nA mathematical logic question is as follows:\nFind headphones where the product of logarithmic bandwidth of frequency response and THD is greater than 5 but the audio quality rating is less than 4 (Difference set: composite indicator >5 EXCEPT Audio_Quality_Rating>=4)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Headphone_Id IN (SELECT Headphone_Id FROM audio_data WHERE LOG10(CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', -1) AS DECIMAL) / CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', 1) AS DECIMAL)) * Total_Harmonic_Distortion_Percent > 5) AND Headphone_Id NOT IN (SELECT Headphone_Id FROM usage_records WHERE Audio_Quality_Rating >= 4);",
        "db_id": "earphone"
    },
    {
        "id": 347,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'Bluetooth 5.0 or above', 'LDAC encoding'], 'relations': [\"specification_exclusion (Bluetooth_Version>=5.0 EXCEPT Audio_Codec='LDAC')\"], 'intent': 'filter_headphones_by_technical_specifications', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5.0], 'units': {'bluetooth_version': 'numerical version (e.g., 5.0)', 'audio_codec': 'categorical value (LDAC)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Bluetooth_Version', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '蓝牙版本（如 5.0）', 'examples': ['5.0', '5.1']}, {'column': 'Audio_Codec', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '支持的音频编解码器（如 SBC、AAC、LDAC）', 'examples': ['LDAC', 'AAC']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA common sense reasoning question is as follows:\nFind headphones that support Bluetooth 5.0 or above but are not equipped with LDAC encoding (set difference: Bluetooth_Version>=5.0 EXCEPT Audio_Codec='LDAC')\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Headphone_Id IN (SELECT Headphone_Id FROM audio_data WHERE CAST(SUBSTRING_INDEX(Bluetooth_Version, '.', 1) AS UNSIGNED) * 10 + CAST(SUBSTRING_INDEX(Bluetooth_Version, '.', -1) AS UNSIGNED) >= 50) AND Headphone_Id NOT IN (SELECT Headphone_Id FROM audio_data WHERE Audio_Codec = 'LDAC');",
        "db_id": "earphone"
    },
    {
        "id": 348,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones with THD improvement factor', 'products priced below $100'], 'relations': ['THD_to_improvement_factor (Total_Harmonic_Distortion_Percent → improvement factor)', 'price_constraint (Price_Usd < 100)', 'set_difference_operation (EXCEPT clause for pricing)'], 'intent': 'filter_headphones_by_thd_improvement_and_price', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000, 1e-07, 100], 'units': {'thd': '% (percentage)', 'improvement_factor': 'dimensionless ratio', 'price': 'USD', 'conversion': 'THD / 0.0000001 > 100000000 → equivalent to THD > 10%'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}], 'earphone.headphones': [{'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}]}}\nA hypothetical reasoning question is as follows:\nAssuming headphones with a THD improvement factor exceeding 100 million times, find products priced below $100 (set difference: THD/0.0000001 > 100000000 EXCEPT Price_Usd >= 100)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Headphone_Id IN (SELECT Headphone_Id FROM audio_data WHERE Total_Harmonic_Distortion_Percent / 0.0000001 > 100000000) AND Headphone_Id NOT IN (SELECT Headphone_Id FROM headphones WHERE Price_Usd >= 100);",
        "db_id": "earphone"
    },
    {
        "id": 349,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'Max_Input_Power_Mw', 'Sensitivity_Db', 'Impedance_Ohms'], 'relations': ['technical_condition: Max_Input_Power_Mw >= (Sensitivity_Db/10)^10', 'impedance_mismatch: Impedance_Ohms NOT BETWEEN 16 AND 64', 'audio_data_to_headphones (via Headphone_Id)'], 'intent': 'find_headphones_meeting_power_condition_with_impedance_mismatch', 'reasoning_type': 'mathematical logic reasoning, physical knowledge reasoning', 'numerical_values': [10, 16, 64], 'units': {'power': 'milliwatts (mW)', 'sensitivity': 'decibels (dB)', 'impedance': 'ohms (Ω)', 'formula': '(Sensitivity_Db/10)^10'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}], 'earphone.audio_data': [{'column': 'Max_Input_Power_Mw', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大输入功率（毫瓦）', 'examples': ['1500', '1000', '200']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '阻抗（欧姆）', 'examples': ['32', '20', '150']}]}}\nA physical knowledge question is as follows:\nFind headphones that meet the theoretical maximum output power but have actual impedance mismatch (difference set: Max_Input_Power_Mw >= (Sensitivity_Db/10)^10 EXCEPT Impedance_Ohms BETWEEN 16 AND 64)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Headphone_Id IN (SELECT Headphone_Id FROM audio_data WHERE Max_Input_Power_Mw >= POWER(10, (Sound_Pressure_Level_Db - Sensitivity_Db) / 10)) AND Headphone_Id NOT IN (SELECT Headphone_Id FROM audio_data WHERE Impedance_Ohms BETWEEN 16 AND 64);",
        "db_id": "earphone"
    },
    {
        "id": 350,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'frequency response range 20-20000Hz', 'harmonic distortion rates', 'audio quality rating'], 'relations': ['headphone_specification (headphones → frequency response)', 'quality_constraint (distortion > 1/rating)'], 'intent': 'retrieve_headphones_meeting_technical_specs_with_exclusion_condition', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 20000], 'units': {'frequency': 'Hz (Hertz)', 'distortion': '% (percent)', 'rating_reciprocal': 'dimensionless (1/rating)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}], 'earphone.audio_data': [{'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}], 'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}]}}\nA mathematical logic question is as follows:\nFind headphones with a frequency response range covering 20-20000Hz but with harmonic distortion rates exceeding the reciprocal of the audio quality rating (difference set: Frequency_Response_Hz @> '20,20000' EXCEPT Total_Harmonic_Distortion_Percent < 1/Audio_Quality_Rating)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Headphone_Id IN (SELECT Headphone_Id FROM audio_data WHERE CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', 1) AS DECIMAL) <= 20 AND CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', -1) AS DECIMAL) >= 20000) AND Headphone_Id NOT IN (SELECT Headphone_Id FROM audio_data WHERE Total_Harmonic_Distortion_Percent >= 1 / (SELECT AVG(Audio_Quality_Rating) FROM usage_records WHERE usage_records.Headphone_Id = audio_data.Headphone_Id));",
        "db_id": "earphone"
    },
    {
        "id": 351,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless earphones', 'battery life', 'weight', 'abnormal products'], 'relations': ['is_wireless (earphones → wireless property)', 'battery_weight_comparison (Battery_Life_Hours versus Weight_Grams)', 'abnormality_condition (Battery_Life_Hours < Weight_Grams/100)'], 'intent': 'identify_abnormal_wireless_earphones', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'battery_life': 'hours', 'weight': 'grams', 'conversion': 'Weight_Grams / 100 (scaling factor for comparison)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['1', '0']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}]}}\nA common sense reasoning question is as follows:\nIdentify abnormal products in wireless earphones where the battery life is lower than the weight value (difference set: Is_Wireless=True EXCEPT Battery_Life_Hours >= Weight_Grams/100).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Is_Wireless = TRUE AND Headphone_Id NOT IN (SELECT Headphone_Id FROM headphones WHERE Battery_Life_Hours >= Weight_Grams / 100);",
        "db_id": "earphone"
    },
    {
        "id": 352,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphone products', 'IPX7 waterproof rating', 'price threshold of $1,000,000'], 'relations': [\"water_resistance_condition (headphones → Water_Resistance = 'IPX7')\", 'price_condition (headphones.Price_Usd < 1000000)'], 'intent': 'retrieve_IPX7_headphones_below_price_threshold', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1000000], 'units': {'currency': 'USD (US Dollars)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Water_Resistance', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '防水等级（如 IPX4）', 'examples': []}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}]}}\nA hypothetical reasoning question is as follows:\nAssuming all headphone prices are increased to $1,000,000, find products with IPX7 waterproof rating but whose prices do not reach one million (difference set: Water_Resistance='IPX7' EXCEPT Price_Usd >= 1000000).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model FROM headphones WHERE Water_Resistance = 'IPX7' AND Headphone_Id NOT IN (SELECT Headphone_Id FROM headphones WHERE Price_Usd >= 1000000);",
        "db_id": "earphone"
    },
    {
        "id": 353,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'theoretical per capita profit (Profit_Usd/Employees)', 'actual profit margin ((Profit_Usd/Revenue_Usd)*100)', 'industry benchmark (15%)', 'standard (50,000 USD/employee)'], 'relations': ['calculation_relationship (Profit_Usd/Employees → per capita profit)', 'calculation_relationship (Profit_Usd/Revenue_Usd*100 → profit margin)', 'comparison_relationship (per capita profit ≥ standard)', 'exclusion_relationship (EXCEPT profit margin < benchmark)'], 'intent': 'identify_manufacturers_meeting_profit_metrics_with_exception', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000, 15], 'units': {'per_capita_profit': 'USD/employee', 'profit_margin': 'percentage', 'currency': 'USD', 'conversion': 'profit_margin = (Profit_Usd/Revenue_Usd)*100'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Profit_Usd'}, {'column': 'Revenue_Usd'}, {'column': 'Employees'}]}}\nA physical knowledge question is as follows:\nFind manufacturers whose theoretical per capita profit meets the standard but whose actual profit margin is below the industry benchmark (difference set: Profit_Usd/Employees >= 50000 EXCEPT (Profit_Usd/Revenue_Usd)*100 >= 15)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name FROM manufacturers WHERE (Profit_Usd / Employees) >= 50000 AND Manufacturer_Id NOT IN (SELECT Manufacturer_Id FROM manufacturers WHERE (Profit_Usd / Revenue_Usd) * 100 >= 15);",
        "db_id": "earphone"
    },
    {
        "id": 354,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'founding year', 'market share', 'employees'], 'relations': ['calculation_relation (Founded_Year² * Market_Share_Percent)', 'filter_relation (Employees < 1000)', 'exception_relation (>1 trillion result EXCEPT high employee count)'], 'intent': 'filter_manufacturers_by_calculated_value_and_employee_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000000, 1000], 'units': {'market_share': 'percent (unitless)', 'employees': 'count (unitless)', 'founding_year': 'year (unitless)', 'result_unit': 'unitless (scaled calculation)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Founded_Year'}, {'column': 'Market_Share_Percent'}, {'column': 'Employees'}]}}\nA mathematical logic question is as follows:\nIdentify manufacturers whose product of the square of their founding year and market share exceeds 1 trillion but have fewer than 1,000 employees (set difference: Founded_Year² * Market_Share_Percent > 1,000,000 EXCEPT Employees >= 1,000).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name FROM manufacturers WHERE (POWER(Founded_Year, 2) * Market_Share_Percent) > 1000000 AND Manufacturer_Id NOT IN (SELECT Manufacturer_Id FROM manufacturers WHERE Employees >= 1000);",
        "db_id": "earphone"
    },
    {
        "id": 355,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'founded year threshold (1993)', 'market share threshold (5%)'], 'relations': ['time_difference (2023 - Founded_Year > 30)', 'market_share_comparison (Market_Share_Percent < 5)'], 'intent': 'find_manufacturers_by_age_and_market_share', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 5, 2023], 'units': {'time': 'years (age calculation)', 'market_share': 'percent', 'conversion': 'current_year - founded_year > 30'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Manufacturer_Name'}, {'column': 'Founded_Year'}, {'column': 'Market_Share_Percent'}]}}\nA common sense reasoning question is as follows:\nFind manufacturers established more than 30 years ago but with a market share of less than 5% (Difference set: 2023-Founded_Year>30 EXCEPT Market_Share_Percent>=5)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name FROM manufacturers WHERE (2023 - Founded_Year) > 30 AND Manufacturer_Id NOT IN (SELECT Manufacturer_Id FROM manufacturers WHERE Market_Share_Percent >= 5);",
        "db_id": "earphone"
    },
    {
        "id": 356,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'abnormal companies', 'employee counts', 'theoretical per capita output', 'revenues'], 'relations': ['condition: Employees > 1,000,000', 'calculation: theoretical_per_capita = 1,000,000,000,000 / Employees', 'condition: theoretical_per_capita < 10', 'set_difference: (Employees > 1e6) EXCEPT (1e12 / Employees >= 10)'], 'intent': 'identify_abnormal_companies_under_hypothetical_revenue', 'reasoning_type': ['mathematical logic reasoning', 'ideal hypothesis reasoning'], 'numerical_values': [1000000, 1000000000000, 10], 'units': {'revenue': 'USD (fixed at $1 trillion = 1e12 USD)', 'employees': 'count (unitless)', 'per_capita_output': 'USD per employee'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Employees'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all manufacturers' revenues increase to $1 trillion, identify abnormal companies with employee counts exceeding one million but theoretical per capita output values below $10 (set difference: Employees > 1,000,000 EXCEPT 1,000,000,000,000 / Employees >= 10).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name FROM manufacturers WHERE Employees > 1000000 AND (1000000000000 / Employees) < 10;",
        "db_id": "earphone"
    },
    {
        "id": 357,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['theoretical battery consumption (Battery_Consumed_Percent = Usage_Duration_Minutes * 0.8)', 'actual usage duration (Usage_Duration_Minutes)', 'abnormal duration (outside 30-600 minutes)'], 'relations': ['formula_comparison (theoretical vs actual battery consumption)', 'duration_validation (standard range: 30-600 minutes)'], 'intent': 'identify_anomalous_battery_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.8, 30, 600], 'units': {'battery_consumption': 'percent (%)', 'usage_duration': 'minutes', 'formula': 'Battery_Consumed_Percent = Usage_Duration_Minutes * 0.8'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Record_Id'}, {'column': 'Headphone_Id'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Battery_Consumed_Percent'}]}}\nA physical knowledge question is as follows:\nFind records where the theoretical battery consumption meets the standard but the actual usage duration is abnormal (difference set: Battery_Consumed_Percent = Usage_Duration_Minutes * 0.8 EXCEPT Usage_Duration_Minutes BETWEEN 30 AND 600)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id FROM usage_records WHERE Battery_Consumed_Percent = Usage_Duration_Minutes * 0.8 AND Record_Id NOT IN (SELECT Record_Id FROM usage_records WHERE Usage_Duration_Minutes BETWEEN 30 AND 600);",
        "db_id": "earphone"
    },
    {
        "id": 358,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records records', 'volume energy index', 'audio quality rating'], 'relations': ['computation: volume_energy_index = (Volume_Level_Percent² * Usage_Duration_Minutes)', 'threshold_condition: volume_energy_index > 100000', 'rating_condition: Audio_Quality_Rating < 3'], 'intent': 'find_usage_records_with_abnormally_high_volume_energy_and_low_audio_quality', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 3], 'units': {'Volume_Level_Percent': 'percent (unitless ratio)', 'Usage_Duration_Minutes': 'minutes', 'volume_energy_index': 'percent²·minutes (derived unit)', 'Audio_Quality_Rating': 'ordinal scale (unitless)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Volume_Level_Percent'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Audio_Quality_Rating'}]}}\nA mathematical logic question is as follows:\nFind records where the volume energy index is abnormally high but the audio quality rating does not meet the standard (difference set: (Volume_Level_Percent² * Usage_Duration_Minutes) > 100000 EXCEPT Audio_Quality_Rating >= 3)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, User_Id FROM usage_records WHERE POWER(Volume_Level_Percent, 2) * Usage_Duration_Minutes > 100000 AND Audio_Quality_Rating < 3;",
        "db_id": "earphone"
    },
    {
        "id": 359,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['noise cancellation status (Enabled=True)', 'battery consumption (Battery_Consumed_Percent)', 'usage duration (Usage_Duration_Minutes)', 'abnormal battery threshold (Usage_Duration_Minutes * 0.5)'], 'relations': ['conditional_exclusion (Noise_Cancellation_Used=True EXCEPT abnormal battery consumption)', 'comparison_relationship (Battery_Consumed_Percent > calculated threshold)'], 'intent': 'identify_records_with_active_noise_cancellation_but_excessive_battery_drain', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5], 'units': {'battery_unit': 'percent (%)', 'time_unit': 'minutes', 'threshold_formula': 'Usage_Duration_Minutes * 0.5 → percentage points per minute'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Noise_Cancellation_Used'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA common sense reasoning question is as follows:\nFind records where noise cancellation is enabled but battery consumption is abnormal (difference set: Noise_Cancellation_Used=True EXCEPT Battery_Consumed_Percent > Usage_Duration_Minutes * 0.5)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, User_Id FROM usage_records WHERE Noise_Cancellation_Used = TRUE AND Battery_Consumed_Percent <= Usage_Duration_Minutes * 0.5;",
        "db_id": "earphone"
    },
    {
        "id": 360,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'volume_level_percent', 'battery_consumed_percent', 'theoretical_power_consumption'], 'relations': ['theoretical_consumption_calculation (Battery_Consumed_Percent * (1000/NULLIF(Volume_Level_Percent,0)^3)', 'threshold_comparison (theoretical > 1000 AND actual < 1000)'], 'intent': 'filter_records_by_theoretical_vs_actual_power_consumption', 'reasoning_type': 'mathematical logic reasoning, ideal hypothesis reasoning', 'numerical_values': [1000, 3, 1000], 'units': {'volume': '% (percent)', 'battery_consumption': '% (percent)', 'power_calculation': 'dimensionless ratio (volume normalization)', 'threshold': '% (percent)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Volume_Level_Percent'}, {'column': 'Battery_Consumed_Percent'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all usage records have their volume increased to 1000%, find the records where the theoretical power consumption exceeds 1000% but the actual consumption does not meet the target (difference set: Battery_Consumed_Percent * POWER(1000/NULLIF(Volume_Level_Percent,0),3) > 1000 EXCEPT Battery_Consumed_Percent >= 1000).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, User_Id FROM usage_records WHERE Battery_Consumed_Percent * POWER(1000/NULLIF(Volume_Level_Percent,0), 3) > 1000 AND Battery_Consumed_Percent < 1000;",
        "db_id": "earphone"
    },
    {
        "id": 361,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'theoretical maximum sound pressure level', 'Sensitivity_Db', 'Max_Input_Power_Mw'], 'relations': ['calculation_relationship (Sensitivity_Db and Max_Input_Power_Mw → theoretical_max_spl)', 'table_link (audio_data.Headphone_Id → headphones.Headphone_Id)'], 'intent': 'calculate_max_spl_and_retrieve_top_10', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'input_power': 'Mw (milliwatts, logarithmic base-10 conversion)', 'sensitivity': 'dB (decibels)', 'result': 'dB SPL (sound pressure level)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Max_Input_Power_Mw', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大输入功率（毫瓦）', 'examples': ['1500', '1000', '200']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA physical knowledge question is as follows:\nPlease query and calculate the theoretical maximum sound pressure level (Sensitivity_Db + 10*LOG10(Max_Input_Power_Mw)) for all headphones, take the top 10 results sorted in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT a.Headphone_Id, h.Model, a.Sensitivity_Db + 10 * LOG10(a.Max_Input_Power_Mw) AS Max_SPL_Db FROM audio_data a JOIN headphones h ON a.Headphone_Id = h.Headphone_Id ORDER BY Max_SPL_Db DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 362,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['frequency_response_high_value', 'frequency_response_low_value', 'total_harmonic_distortion', 'logarithmic_width', 'product_value'], 'relations': ['frequency_ratio (high_value / low_value)', 'logarithmic_conversion (LOG10(ratio))', 'multiplication (log_width * distortion)', 'ordering (ascending by product_value)'], 'intent': 'calculate_and_rank_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'frequency': 'Hz (Hertz)', 'distortion': '% (percentage)', 'logarithmic': 'unitless (logarithmic ratio)', 'product': 'unitless * %'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}, {'column': 'Audio_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '音频数据唯一标识', 'examples': ['1', '2', '3']}]}}\nA mathematical logic question is as follows:\nPlease calculate the product of the frequency response logarithmic width (LOG10(high frequency value/low frequency value)) and total harmonic distortion, then sort the results in ascending order by the product value and take the last five entries.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Audio_Id, Headphone_Id, LOG10(CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', -1) AS DECIMAL) / CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', 1) AS DECIMAL)) * Total_Harmonic_Distortion_Percent AS Metric FROM audio_data ORDER BY Metric ASC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 363,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'LDAC encoding', 'Bluetooth version', 'sound quality rating'], 'relations': ['headphones_support_codec (headphones → LDAC encoding)', 'group_by_attribute (Bluetooth version)', 'aggregate_metric (average sound quality rating)'], 'intent': 'calculate_and_sort_average_rating_by_bluetooth_version', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'rating': 'dimensionless score (implied by Audio_Quality_Rating)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Bluetooth_Version', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '蓝牙版本（如 5.0）', 'examples': ['5.0', '5.1']}, {'column': 'Audio_Codec', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '支持的音频编解码器（如 SBC、AAC、LDAC）', 'examples': ['LDAC', 'AAC']}], 'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}]}}\nA common sense reasoning question is as follows:\nPlease group by Bluetooth version and calculate the average sound quality rating for headphones supporting LDAC encoding under each version, then sort the results in descending order by the rating.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bluetooth_Version, AVG(Audio_Quality_Rating) AS Avg_Audio_Quality_Rating FROM audio_data JOIN usage_records ON audio_data.Headphone_Id = usage_records.Headphone_Id WHERE Audio_Codec = 'LDAC' GROUP BY Bluetooth_Version ORDER BY Avg_Audio_Quality_Rating DESC;",
        "db_id": "earphone"
    },
    {
        "id": 364,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'theoretical maximum sound pressure level', 'Sensitivity_Db', 'Max_Input_Power_Mw'], 'relations': ['specification_relationship (headphones → Sensitivity_Db/Max_Input_Power_Mw)', 'calculation_formula (Sensitivity_Db + 10*LOG10(Max_Input_Power_Mw))'], 'intent': 'calculate_and_rank_max_sound_pressure_level', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10], 'units': {'sensitivity': 'dB (decibels)', 'power': 'mW (milliwatts)', 'logarithm_base': 10, 'result_unit': 'dB (decibels)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Max_Input_Power_Mw', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大输入功率（毫瓦）', 'examples': ['1500', '1000', '200']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA hypothetical reasoning question is as follows:\nPlease query and calculate the theoretical maximum sound pressure level (Sensitivity_Db + 10*LOG10(Max_Input_Power_Mw)) for all headphones, then sort them in descending order and take the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT audio_data.Headphone_Id, headphones.Model, audio_data.Sensitivity_Db + 10 * LOG10(audio_data.Max_Input_Power_Mw) AS Max_SPL_Db FROM audio_data JOIN headphones ON audio_data.Headphone_Id = headphones.Headphone_Id ORDER BY Max_SPL_Db DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 365,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'sensitivity_db', 'impedance_ohms', 'ratio_calculation'], 'relations': ['derived_ratio (Sensitivity_Db / SQRT(Impedance_Ohms))', 'headphone_to_attributes (headphones → Sensitivity_Db & Impedance_Ohms)'], 'intent': 'calculate_and_rank_custom_metric', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'sensitivity': 'dB (decibels)', 'impedance': 'Ohms (electrical resistance)', 'ratio_unit': 'dB/sqrt(Ohm) (derived unit)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA physical knowledge question is as follows:\nPlease calculate the ratio of the sensitivity to the square root of the impedance (Sensitivity_Db / SQRT(Impedance_Ohms)) for all headphones, and sort them in descending order by this ratio, taking the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model, Sensitivity_Db / SQRT(Ompedance_Ohms) AS Efficiency_Ratio FROM headphones ORDER BY Efficiency_Ratio DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 366,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'frequency response range difference', 'total harmonic distortion', 'product value'], 'relations': ['headphone_audio_specs (headphones.Headphone_Id → audio_data.Headphone_Id)', 'calculation_relation (frequency_range_diff * total_harmonic_distortion)'], 'intent': 'calculate_product_and_rank_headphones', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'frequency': 'Hz (Hertz)', 'total_harmonic_distortion': '% (percent)', 'product': 'Hz * % (implied unit)', 'conversion': 'range_difference = high_freq - low_freq'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}], 'earphone.audio_data': [{'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}]}}\nA mathematical logic question is as follows:\nPlease calculate the product of the frequency response range difference (high frequency - low frequency) and the total harmonic distortion, then list the top 10 results sorted by the product value in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Audio_Id, Headphone_Id, (CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', -1) AS DECIMAL) - CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', 1) AS DECIMAL)) * Total_Harmonic_Distortion_Percent AS Metric FROM audio_data ORDER BY Metric DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 367,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless earbuds', 'battery life (Battery_Life_Hours)', 'weight (Weight_Grams)', 'ratio (Battery_Life_Hours/Weight_Grams)'], 'relations': ['attribute_of (Battery_Life_Hours → wireless earbuds)', 'attribute_of (Weight_Grams → wireless earbuds)', 'computation_relationship (Battery_Life_Hours and Weight_Grams → ratio)'], 'intent': 'retrieve_top_5_models_by_battery_life_to_weight_ratio_ascending', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'battery_life': 'hours (Battery_Life_Hours)', 'weight': 'grams (Weight_Grams)', 'ratio': 'hours per gram (hr/g)', 'conversion': 'direct division (Battery_Life_Hours / Weight_Grams)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['1', '0']}]}}\nA common sense reasoning question is as follows:\nPlease query the ratio of battery life to weight (Battery_Life_Hours/Weight_Grams) for wireless earbuds, sort by the ratio in ascending order and take the top 5 results.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model, Battery_Life_Hours / Weight_Grams AS Battery_Density FROM headphones WHERE Is_Wireless = TRUE ORDER BY Battery_Density ASC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 368,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'theoretical price $1,000,000', 'weight in grams', 'unit price per gram'], 'relations': ['price_to_weight_ratio (1000000 / Weight_Grams → unit_price)', 'model_to_weight (Headphone_Id → Weight_Grams)'], 'intent': 'calculate_unit_price_and_sort_descending_top3', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000000], 'units': {'currency': 'USD', 'mass': 'grams', 'calculation': 'unit_price = 1000000 / Weight_Grams (USD/gram)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the price of all headphones is increased to $1,000,000, calculate the theoretical price per gram (1000000/Weight_Grams) and sort them in descending order by unit price, then take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model, 1000000 / NULLIF(Weight_Grams, 0) AS Price_Per_Gram FROM headphones ORDER BY Price_Per_Gram DESC LIMIT 3;",
        "db_id": "earphone"
    },
    {
        "id": 369,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'revenue_usd', 'employees', 'per_capita_revenue_density'], 'relations': ['manufacturer_has_revenue (Manufacturer → Revenue_Usd)', 'manufacturer_has_employees (Manufacturer → Employees)', 'density_calculation (Revenue_Usd / (Employees * 1000))'], 'intent': 'calculate_per_capita_revenue_density_and_rank_top5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'revenue': 'USD', 'employees': 'count', 'density': 'USD per thousand employees', 'conversion': 'Employees scaled by 1000 for per-thousand calculation'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Revenue_Usd'}, {'column': 'Employees'}]}}\nA physical knowledge question is as follows:\nPlease calculate the per capita revenue density (Revenue_Usd/(Employees*1000)) for each manufacturer, and select the top 5 ranked by density value in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, Revenue_Usd / (Employees * 1000) AS Revenue_Density FROM manufacturers ORDER BY Revenue_Density DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 370,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'Profit_Usd', 'Market_Share_Percent', 'geometric_mean'], 'relations': ['attribute_of (Profit_Usd → manufacturers)', 'attribute_of (Market_Share_Percent → manufacturers)', 'computation (geometric_mean = SQRT(Profit_Usd * Market_Share_Percent))'], 'intent': 'compute_geometric_mean_and_rank_manufacturers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'Profit_Usd': 'USD', 'Market_Share_Percent': 'percent', 'geometric_mean': 'sqrt(USD * percent) (derived unit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Profit_Usd'}, {'column': 'Market_Share_Percent'}]}}\nA mathematical logic question is as follows:\nPlease calculate the geometric mean (SQRT(Profit_Usd*Market_Share_Percent)) of profit and market share, then sort the results in descending order and take the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, SQRT(Profit_Usd * Market_Share_Percent) AS Geometric_Mean FROM manufacturers ORDER BY Geometric_Mean DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 371,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'founded year', 'market share'], 'relations': ['age_computation (current_year - founded_year > 50)', 'market_share_threshold (market_share_percent < 5)', 'establishment_order_sort (founded_year ASC)'], 'intent': 'query_manufacturers_by_age_and_market_share', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 5], 'units': {'age': 'years', 'market_share': 'percent'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Manufacturer_Name'}, {'column': 'Founded_Year'}, {'column': 'Market_Share_Percent'}]}}\nA common sense reasoning question is as follows:\nPlease query manufacturers that have been established for more than 50 years but have a market share of less than 5%, sorted by year of establishment in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, Founded_Year, Market_Share_Percent FROM manufacturers WHERE Founded_Year < 1973 AND Market_Share_Percent < 5 ORDER BY Founded_Year ASC;",
        "db_id": "earphone"
    },
    {
        "id": 372,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'revenue ($1 trillion)', 'employees (over 100 million)', 'per capita output'], 'relations': ['revenue_assumption (all manufacturers set to $1 trillion)', 'employee_threshold_filter (Employees > 100000000)', 'output_calculation (1000000000000 / Employees)'], 'intent': 'calculate_and_sort_per_capita_output_under_hypothetical_revenue', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000000000000, 100000000], 'units': {'revenue': 'USD (dollars)', 'employees': 'count (people)', 'per_capita_output': 'USD per employee', 'conversion': 'Per capita output = 1,000,000,000,000 / Employees'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Employees'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all manufacturers' revenues increase to $1 trillion, calculate the theoretical per capita output of companies with over 100 million employees (1000000000000/Employees) and sort the results in ascending order by output value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, Manufacturer_Name, 1000000000000 / NULLIF(Employees, 0) AS Per_Capita_Revenue FROM manufacturers WHERE Employees > 100000000 ORDER BY Per_Capita_Revenue ASC;",
        "db_id": "earphone"
    },
    {
        "id": 373,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'sound pressure level', 'sensitivity'], 'relations': ['headphones_have_sound_pressure_level (headphones → audio_data.Sound_Pressure_Level_Db)', 'headphones_have_sensitivity (headphones → audio_data.Sensitivity_Db)'], 'intent': 'calculate_product_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': None, 'units': {'sound_pressure': 'Db (decibels)', 'sensitivity': 'Db (decibels)', 'product_unit': 'Db² (decibel squared)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}, {'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}]}}\nA physical knowledge question is as follows:\nPlease query and calculate the product of the sound pressure level (Sound_Pressure_Level_Db) and sensitivity (Sensitivity_Db) for all headphones, and sort the results in ascending order by the product value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Audio_Id, Headphone_Id, Sound_Pressure_Level_Db * Sensitivity_Db AS Product FROM audio_data ORDER BY Product ASC;",
        "db_id": "earphone"
    },
    {
        "id": 374,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Audio_Quality_Rating', 'Comfort_Rating', 'Usage_Duration_Minutes', 'harmonic mean product'], 'relations': ['harmonic_mean_calculation (2/(1/Audio_Quality_Rating + 1/Comfort_Rating))', 'product_with_duration (harmonic_mean * Usage_Duration_Minutes)'], 'intent': 'calculate_and_sort_harmonic_mean_product', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'duration': 'minutes', 'ratings': 'unitless scale', 'product_output': 'minutes (implied by calculation)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}, {'column': 'Comfort_Rating'}, {'column': 'Usage_Duration_Minutes'}]}}\nA mathematical logic question is as follows:\nPlease calculate the product of the harmonic mean of audio quality comfort and usage duration (2/(1/Audio_Quality_Rating + 1/Comfort_Rating)*Usage_Duration_Minutes), sorted in descending order by the product value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, (2 / (1 / Audio_Quality_Rating + 1 / Comfort_Rating)) * Usage_Duration_Minutes AS Experience_Index FROM usage_records ORDER BY Experience_Index DESC;",
        "db_id": "earphone"
    },
    {
        "id": 375,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'volume_level_percent', 'battery_consumed_percent', 'usage_duration_minutes'], 'relations': ['condition_volume (volume_level_percent > 80%)', 'condition_battery (battery_consumed_percent < duration * 1%)', 'sort_order (ascending by usage_duration_minutes)'], 'intent': 'filter_and_sort_records_by_volume_battery_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 1], 'units': {'volume': 'percent', 'battery_consumption': 'percent', 'duration': 'minutes', 'conversion_factor': '1% = 0.01 (dimensionless multiplier)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'volume_level_percent'}, {'column': 'battery_consumed_percent'}, {'column': 'usage_duration_minutes'}, {'column': 'record_id'}]}}\nA common sense reasoning question is as follows:\nFind records where the volume exceeds 80% but battery consumption is below duration * 1%, sorted by usage duration in ascending order and taking the top 5\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Record_Id, Headphone_Id, Usage_Duration_Minutes, Volume_Level_Percent, Battery_Consumed_Percent FROM usage_records WHERE Volume_Level_Percent > 80 AND Battery_Consumed_Percent < Usage_Duration_Minutes * 1 ORDER BY Usage_Duration_Minutes ASC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 376,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'theoretical total power consumption', 'Battery_Consumed_Percent', 'Usage_Duration_Minutes'], 'relations': ['calculation_relationship (Battery_Consumed_Percent → power_consumption)', 'scaling_relationship (Usage_Duration_Minutes → 1,000,000 minutes)'], 'intent': 'calculate_scaled_power_consumption_and_rank_top3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000], 'units': {'time': 'minutes (Usage_Duration_Minutes)', 'battery': 'percentage (Battery_Consumed_Percent)', 'result_unit': 'theoretical_consumption_unit (Battery_Consumed_Percent * minutes)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Record_Id'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all usage records are increased to 1,000,000 minutes, calculate the theoretical total power consumption (Battery_Consumed_Percent * 1,000,000 / Usage_Duration_Minutes) and retrieve the top 3 entries ranked in descending order by power consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, (Battery_Consumed_Percent * 1000000 / NULLIF(Usage_Duration_Minutes, 0)) AS Theoretical_Power_Consumption FROM usage_records ORDER BY Theoretical_Power_Consumption DESC LIMIT 3;",
        "db_id": "earphone"
    },
    {
        "id": 377,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['user', 'energy consumption per unit time', 'Battery_Consumed_Percent', 'Usage_Duration_Minutes'], 'relations': ['grouped_by (User_Id)', 'calculated_field (Battery_Consumed_Percent / Usage_Duration_Minutes)', 'averaged_over_records', 'sorted_by_energy_consumption_desc'], 'intent': 'calculate_average_energy_consumption_rate_per_user', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_consumed': 'percent (%)', 'usage_duration': 'minutes (min)', 'energy_consumption_rate': '%/min (percent per minute)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'User_Id'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA physical knowledge question is as follows:\nGroup by user to calculate the average energy consumption per unit time (Battery_Consumed_Percent/Usage_Duration_Minutes), and sort in descending order by energy consumption value\nyour response just have a SQL without anything.\n",
        "solution": "SELECT User_Id, AVG(Battery_Consumed_Percent / NULLIF(Usage_Duration_Minutes, 0)) AS Energy_Consumption_Rate FROM usage_records GROUP BY User_Id ORDER BY Energy_Consumption_Rate DESC;",
        "db_id": "earphone"
    },
    {
        "id": 378,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earphone', 'sound quality score', 'comfort score', 'usage frequency'], 'relations': ['headphone_to_ratings (earphone → Audio_Quality_Rating/Comfort_Rating)', 'aggregation_per_earphone (GROUP BY → Headphone_Id)'], 'intent': 'calculate_and_rank_composite_earphone_metric', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2], 'units': {'rating_scale': 'unitless (1-5 or similar scale implied)', 'frequency': 'count (derived from COUNT(*))', 'composite_metric': 'unitless score'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}], 'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}, {'column': 'Comfort_Rating'}]}}\nA mathematical logic question is as follows:\nGroup by earphone to calculate the composite metric of the harmonic mean of sound quality and comfort scores multiplied by usage frequency (2/(1/AVG(Audio_Quality_Rating)+1/AVG(Comfort_Rating)) * COUNT(*)), sorted by the metric in descending order\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, (2 / (1 / AVG(Audio_Quality_Rating) + 1 / AVG(Comfort_Rating))) * COUNT(*) AS Composite_Index FROM usage_records GROUP BY Headphone_Id ORDER BY Composite_Index DESC;",
        "db_id": "earphone"
    },
    {
        "id": 379,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphone model', 'noise cancellation turned on', 'high volume usage (>85%)', 'proportion calculation'], 'relations': ['model_to_usage (headphone model → usage records)', 'volume_condition (volume_level_percent > 85%)', 'noise_cancellation_state (noise_cancellation_used = true)'], 'intent': 'calculate_noise_cancellation_proportion_during_high_volume_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [85], 'units': {'volume': 'percent', 'proportion': 'unitless ratio (implied by database calculation)', 'time': 'minutes (usage_duration_minutes)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}], 'earphone.usage_records': [{'column': 'Volume_Level_Percent'}, {'column': 'Noise_Cancellation_Used'}, {'column': 'Headphone_Id'}]}}\nA common sense reasoning question is as follows:\nGroup by headphone model to calculate the proportion of noise cancellation being turned on during high volume (>85%) usage, and sort the results in ascending order by this proportion.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, SUM(CASE WHEN Noise_Cancellation_Used = 1 AND Volume_Level_Percent > 85 THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS Noise_Cancellation_Ratio FROM usage_records GROUP BY Headphone_Id ORDER BY Noise_Cancellation_Ratio ASC;",
        "db_id": "earphone"
    },
    {
        "id": 380,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'users', 'theoretical lifetime power consumption'], 'relations': ['records_to_users (usage_records.User_Id → user grouping)', 'calculation_dependency (Battery_Consumed_Percent → Usage_Duration_Minutes → power consumption)'], 'intent': 'calculate_scaled_power_consumption_per_user', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000], 'units': {'duration': 'minutes', 'consumption': 'percent (battery) → scaled dimensionless unit', 'conversion': 'Battery_Consumed_Percent * 100,000,000 / Usage_Duration_Minutes'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'User_Id'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all usage records are changed to 100,000,000 minutes, group by user to calculate the theoretical lifetime power consumption (SUM(Battery_Consumed_Percent)*100,000,000/Usage_Duration_Minutes), and sort by power consumption in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT User_Id, SUM(Battery_Consumed_Percent) * 100000000 / NULLIF(SUM(Usage_Duration_Minutes), 0) AS Lifetime_Power_Consumption FROM usage_records GROUP BY User_Id ORDER BY Lifetime_Power_Consumption DESC;",
        "db_id": "earphone"
    },
    {
        "id": 381,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['country', 'Revenue_Usd', 'Employees', 'per capita output energy density'], 'relations': ['country_to_manufacturer (country belongs to manufacturer)', 'revenue_employee_ratio (Revenue_Usd/(Employees*1000))'], 'intent': 'calculate_and_sort_per_capita_output_energy_density_by_country', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'revenue': 'USD', 'employees': 'count (unitless)', 'density': 'USD per thousand employees', 'conversion': 'Employees scaled by 1000 for per-thousand calculation'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Country'}, {'column': 'Revenue_Usd'}, {'column': 'Employees'}]}}\nA physical knowledge question is as follows:\nGroup the data by country to calculate the per capita output energy density (Revenue_Usd/(Employees*1000)), and sort the results in descending order of the density value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, SUM(Revenue_Usd) / (SUM(Employees) * 1000) AS Energy_Density FROM manufacturers GROUP BY Country ORDER BY Energy_Density DESC;",
        "db_id": "earphone"
    },
    {
        "id": 382,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['decade of establishment', 'profit', 'market share', 'geometric mean'], 'relations': ['grouping_by_decade (Founded_Year/10 → decade)', 'calculation_relationship (√(Profit_Usd*Market_Share_Percent) → geometric_mean)'], 'intent': 'calculate_and_sort_aggregated_metric', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'profit': 'USD', 'market_share': 'percent', 'calculation_unit': 'dimensionless ratio (geometric mean output)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Founded_Year'}, {'column': 'Profit_Usd'}, {'column': 'Market_Share_Percent'}]}}\nA mathematical logic question is as follows:\nGroup by the decade of establishment (Founded_Year/10) and calculate the geometric mean of profit and market share (√(Profit_Usd*Market_Share_Percent)), then sort the results in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Founded_Year / 10) * 10 AS Decade, AVG(SQRT(Profit_Usd * Market_Share_Percent)) AS Geometric_Mean FROM manufacturers WHERE Profit_Usd > 0 AND Market_Share_Percent > 0 GROUP BY Decade ORDER BY Geometric_Mean DESC;",
        "db_id": "earphone"
    },
    {
        "id": 383,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'country', 'established >30 years', 'profit margin <10%'], 'relations': ['manufacturers_grouped_by_country', 'manufacturers_have_founded_year', 'manufacturers_have_profit_margin'], 'intent': 'count_manufacturers_by_country_with_criteria', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [30, 10], 'units': {'age': 'years', 'profit_margin': 'percent'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Country'}, {'column': 'Founded_Year'}, {'column': 'Revenue_Usd'}, {'column': 'Profit_Usd'}]}}\nA common sense reasoning question is as follows:\nGroup the statistics by country to count the number of manufacturers established for more than 30 years with a profit margin of less than 10%, and sort the results in ascending order by quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, COUNT(*) AS Manufacturer_Count FROM manufacturers WHERE (2023 - Founded_Year) > 30 AND (Profit_Usd / Revenue_Usd) < 0.1 GROUP BY Country ORDER BY Manufacturer_Count ASC;",
        "db_id": "earphone"
    },
    {
        "id": 384,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'revenue $1 trillion', 'employees over 100 million', 'per capita output', 'country'], 'relations': ['revenue_override (all manufacturers → $1 trillion fixed value)', 'employee_threshold_filter (employees > 100 million)', 'per_capita_calculation (revenue / employees)', 'country_grouping (aggregation by country)', 'output_value_sorting (ascending order)'], 'intent': 'calculate_aggregate_per_capita_output_by_country_after_revenue_adjustment', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000000000000, 100000000], 'units': {'revenue': 'USD', 'employees': 'count', 'per_capita_output': 'USD per employee', 'conversion': '1 trillion = 1,000,000,000,000 USD'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Country'}, {'column': 'Employees'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all manufacturers' revenue increases to \\$1 trillion, calculate the theoretical per capita output (\\$1,000,000,000,000 / Employees) for companies with over 100 million employees, grouped by country, and sort the results in ascending order by output value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, (1000000000000 / NULLIF(SUM(Employees), 0)) AS Theoretical_Per_Capita_Output FROM manufacturers WHERE Employees > 100000000 GROUP BY Country ORDER BY Theoretical_Per_Capita_Output ASC;",
        "db_id": "earphone"
    },
    {
        "id": 385,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'driver type', 'sensitivity (Sensitivity_Db)', 'impedance (Impedance_Ohms)', 'ratio calculation'], 'relations': ['grouping_by(Driver_Type → headphones)', 'calculation_relationship(Sensitivity_Db ÷ √Impedance_Ohms → ratio)'], 'intent': 'calculate_and_rank_driver_type_performance_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'sensitivity': 'dB (decibels)', 'impedance': 'Ω (ohms)', 'result_unit': 'dB/√Ω (implied by calculation)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Driver_Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '驱动单元类型（如动圈、动铁）', 'examples': ['Dynamic']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA physical knowledge question is as follows:\nGroup by driver type (Driver_Type), calculate the ratio of sensitivity to the square root of impedance (Sensitivity_Db / SQRT(Impedance_Ohms)) for each group of headphones, and sort in descending order by this ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Driver_Type, AVG(Sensitivity_Db / SQRT(Ompedance_Ohms)) AS Efficiency_Indicator FROM headphones WHERE Ompedance_Ohms > 0 GROUP BY Driver_Type ORDER BY Efficiency_Indicator DESC;",
        "db_id": "earphone"
    },
    {
        "id": 386,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer (Manufacturer_Id)', 'headphones', 'price (Price_Usd)', 'frequency response range (Frequency_Response_Hz)'], 'relations': ['manufacturer_produces_headphones (Manufacturer_Id → Headphone_Id)', 'frequency_range_components (Frequency_Response_Hz → low/high values)'], 'intent': 'calculate_product_of_avg_price_and_avg_frequency_range_difference_per_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'price': 'USD (Price_Usd)', 'frequency': 'Hz (Frequency_Response_Hz)', 'calculation_unit': 'Hz for frequency difference'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}, {'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}]}}\nA mathematical logic question is as follows:\nGroup by manufacturer (Manufacturer_Id), calculate the product of the average price and the average frequency response range difference for each group of headphones (AVG(Price_Usd) * (high frequency value - low frequency value)), and sort in descending order by the product value\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Id, AVG(Price_Usd) * (AVG(CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', -1) AS UNSIGNED)) - AVG(CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', 1) AS UNSIGNED))) AS Composite_Indicator FROM headphones GROUP BY Manufacturer_Id ORDER BY Composite_Indicator DESC;",
        "db_id": "earphone"
    },
    {
        "id": 387,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'Is_Wireless attribute', 'Battery_Life_Hours', 'Weight_Grams'], 'relations': ['group_by(Is_Wireless → wireless/non-wireless classification)', 'calculation_ratio(Battery_Life_Hours ÷ Weight_Grams)', 'aggregation(AVG(Battery_Life_Hours), AVG(Weight_Grams))', 'sort_order(ascending ratio)'], 'intent': 'calculate_and_sort_avg_battery_life_to_weight_ratio_by_wireless_group', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'Battery_Life_Hours': 'hours', 'Weight_Grams': 'grams', 'ratio_unit': 'hours per gram (hr/g)', 'conversion': 'No unit conversion required'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['1', '0']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}]}}\nA common sense reasoning question is as follows:\nGroup by whether it is wireless (Is_Wireless), calculate the average battery life to weight ratio (AVG(Battery_Life_Hours) / AVG(Weight_Grams)) for each group of headphones, and sort in ascending order by this ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Is_Wireless, AVG(Battery_Life_Hours) / AVG(Weight_Grams) AS Battery_Efficiency FROM headphones GROUP BY Is_Wireless ORDER BY Battery_Efficiency ASC;",
        "db_id": "earphone"
    },
    {
        "id": 388,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['all headphones', 'price $1,000,000', 'Weight_Grams', 'Water_Resistance'], 'relations': ['price_to_weight_ratio (1000000/Weight_Grams → unit_price_per_gram)', 'grouping_by (Water_Resistance → unit_price_groups)'], 'intent': 'calculate_unit_price_per_gram_by_water_resistance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000], 'units': {'price': 'USD (constant value)', 'weight': 'Grams (from database)', 'unit_price': 'USD/gram (derived unit)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Water_Resistance', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '防水等级（如 IPX4）', 'examples': []}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the price of all headphones is increased to $1,000,000, calculate the theoretical unit price per gram (1000000/Weight_Grams) grouped by water resistance level (Water_Resistance), and sort the results in descending order by unit price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Water_Resistance, 1000000 / NULLIF(AVG(Weight_Grams), 0) AS Price_Per_Gram FROM headphones GROUP BY Water_Resistance ORDER BY Price_Per_Gram DESC;",
        "db_id": "earphone"
    },
    {
        "id": 389,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['driver type (Driver_Type)', 'theoretical maximum sound power (Power)'], 'relations': ['calculation_relation (Sensitivity_Db → Power)', 'grouping_relation (Driver_Type → Power)', 'formula_relation (Power = (10^(Sensitivity_Db/10))^2 / Impedance_Ohms)'], 'intent': 'calculate_and_sort_power_by_driver_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'sensitivity': 'dB (decibel)', 'impedance': 'Ω (Ohms)', 'power': 'W (Watts, derived unit)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Driver_Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '驱动单元类型（如动圈、动铁）', 'examples': ['Dynamic']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '阻抗（欧姆）', 'examples': ['32', '20', '150']}]}}\nA physical knowledge question is as follows:\nGroup the data by driver type (Driver_Type), calculate the theoretical maximum sound power for each group (Power = (10^(Sensitivity_Db/10))^2 / Impedance_Ohms), and sort the results in descending order by power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Driver_Type, POWER(10, AVG(Sensitivity_Db) / 10) * POWER(10, AVG(Sensitivity_Db) / 10) / AVG(Impedance_Ohms) AS Power FROM headphones WHERE Impedance_Ohms > 0 GROUP BY Driver_Type ORDER BY Power DESC;",
        "db_id": "earphone"
    },
    {
        "id": 390,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Bluetooth version', 'frequency range', 'total harmonic distortion', 'headphones'], 'relations': ['grouping_relation (Bluetooth_Version → headphone groups)', 'calculation_relation (Frequency_Response_Hz → logarithmic_width)', 'calculation_relation (THD + logarithmic_width → geometric_mean)'], 'intent': 'calculate_and_aggregate_acoustic_metrics_per_bluetooth_version', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'frequency': 'Hz (Hertz)', 'thd': '% (percentage)', 'logarithmic_width': 'unitless (logarithmic ratio)', 'geometric_mean': 'unitless (dimensionless composite metric)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Bluetooth_Version', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '蓝牙版本（如 5.0）', 'examples': ['5.0', '5.1']}, {'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}]}}\nA mathematical logic question is as follows:\nGroup by Bluetooth version (Bluetooth_Version), calculate the logarithmic width of frequency range (LOG10(high frequency/low frequency)) and the geometric mean of total harmonic distortion (√(LOG10(high frequency/low frequency)*THD)) for each group of headphones, then sort the results in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bluetooth_Version, SQRT(AVG(LOG10(CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', -1) AS DECIMAL) / CAST(SUBSTRING_INDEX(Frequency_Response_Hz, '-', 1) AS DECIMAL))) * AVG(Total_Harmonic_Distortion_Percent)) AS Metric FROM audio_data WHERE Frequency_Response_Hz LIKE '%-%' AND Total_Harmonic_Distortion_Percent > 0 GROUP BY Bluetooth_Version ORDER BY Metric DESC;",
        "db_id": "earphone"
    },
    {
        "id": 391,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'audio interface type (Audio_Jack_Type)', 'LDAC encoding support', 'AAC encoding support', 'proportion calculation'], 'relations': ['grouping_by (headphones → Audio_Jack_Type)', 'codec_support (audio_data.Audio_Codec → LDAC/AAC)', 'association (headphones.Headphone_Id ↔ audio_data.Headphone_Id)'], 'intent': 'calculate_codec_support_proportion_by_jack_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'proportion': 'percentage ratio (implied by calculation)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Audio_Jack_Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '音频接口类型（如 3.5mm、USB-C）', 'examples': ['3.5mm', '6.35mm']}, {'column': 'Audio_Codec', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '支持的音频编解码器（如 SBC、AAC、LDAC）', 'examples': ['LDAC', 'AAC']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}]}}\nA common sense reasoning question is as follows:\nGroup by audio interface type (Audio_Jack_Type), calculate the proportion of headphones supporting LDAC/AAC encoding in each group, and sort in descending order by proportion.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Audio_Jack_Type, SUM(CASE WHEN Audio_Codec IN ('LDAC', 'AAC') THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS High_Quality_Codec_Ratio FROM audio_data GROUP BY Audio_Jack_Type ORDER BY High_Quality_Codec_Ratio DESC;",
        "db_id": "earphone"
    },
    {
        "id": 392,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'total harmonic distortion (THD)', 'improvement multiple', 'manufacturer'], 'relations': ['headphones_have_thd (headphones → audio_data.Total_Harmonic_Distortion_Percent)', 'manufacturer_produces_headphones (manufacturer → headphones)', 'multiple_calculation (original_thd / target_thd)'], 'intent': 'calculate_thd_improvement_multiple_per_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1e-10], 'units': {'thd': '% (percentage)', 'improvement_multiple': 'dimensionless ratio', 'conversion': 'improvement_multiple = original_thd_value / 0.0000000001'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}], 'earphone.headphones': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3']}], 'earphone.manufacturers': [{'column': 'Manufacturer_Name'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the total harmonic distortion of all headphones is reduced to 0.0000000001%, calculate the improvement multiple (original THD / 0.0000000001%) grouped by manufacturer, and sort the top 5 in descending order by the multiple.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Manufacturer_Id, AVG(a.Total_Harmonic_Distortion_Percent) / 0.0000000001 AS Improvement_Factor FROM audio_data a JOIN headphones h ON a.Headphone_Id = h.Headphone_Id GROUP BY h.Manufacturer_Id ORDER BY Improvement_Factor DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 393,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'theoretical maximum sound pressure level', 'actual sound pressure level'], 'relations': ['headphone_to_theoretical_spl (headphones → audio_data.Sound_Pressure_Level_Db as theoretical value)', 'headphone_to_actual_spl (theoretical vs actual measurement comparison)'], 'intent': 'find_headphones_with_discrepancy_between_theoretical_and_measured_spl', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [120], 'units': {'sound_pressure_level': 'dB (decibels)', 'comparison': 'theoretical > 120dB AND actual < 120dB (from EXCEPT condition)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}], 'earphone.audio_data': [{'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}]}}\nA physical knowledge question is as follows:\nFind headphones with a theoretical maximum sound pressure level exceeding 120dB but failing to meet the actual sound pressure level (difference set: theoretical SPL calculated value >120dB EXCEPT actual SPL measured value >=120dB).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id WHERE a.Sensitivity_Db + 10 * LOG10(a.Max_Input_Power_Mw) > 120 AND h.Headphone_Id NOT IN (SELECT Headphone_Id FROM audio_data WHERE Sound_Pressure_Level_Db >= 120);",
        "db_id": "earphone"
    },
    {
        "id": 394,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'logarithmic frequency response width', 'THD (Total Harmonic Distortion)', 'audio quality rating'], 'relations': ['headphone_to_audio_data (Headphone_Id → Frequency_Response_Hz, Total_Harmonic_Distortion_Percent)', 'headphone_to_usage_records (Headphone_Id → Audio_Quality_Rating)', 'calculation: LOG10(high_frequency / low_frequency) * THD > 5', 'exclusion: NOT EXISTS usage_records with Audio_Quality_Rating >= 4'], 'intent': 'select_headphones_by_technical_spec_and_rating_exclusion', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 4], 'units': {'frequency': 'Hz (Hertz)', 'thd': 'percent (%)', 'logarithmic_ratio': 'unitless (logarithmic scale)', 'rating': 'unitless (ordinal scale 1-5)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}], 'earphone.audio_data': [{'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}], 'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}]}}\nA mathematical logic question is as follows:\nFind headphones with a logarithmic frequency response width multiplied by THD >5 but an audio quality rating <4 (difference set: LOG10(high frequency/low frequency)*THD >5 EXCEPT Audio_Quality_Rating>=4)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id WHERE LOG10(CAST(SUBSTRING_INDEX(a.Frequency_Response_Hz, '-', -1) AS DECIMAL) / CAST(SUBSTRING_INDEX(a.Frequency_Response_Hz, '-', 1) AS DECIMAL)) * a.Total_Harmonic_Distortion_Percent > 5 AND h.Headphone_Id NOT IN (SELECT Headphone_Id FROM usage_records WHERE Audio_Quality_Rating >= 4);",
        "db_id": "earphone"
    },
    {
        "id": 395,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'Bluetooth 5.0 or higher', 'LDAC/AAC encoding exclusion'], 'relations': ['specification_requirement (headphones → Bluetooth_Version >= 5.0)', \"exclusion_condition (headphones → Audio_Codec NOT IN ('LDAC','AAC'))\"], 'intent': 'filter_headphones_by_technical_specifications', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5.0], 'units': {'bluetooth_version': 'unitless version number', 'audio_codec': 'categorical encoding type'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Bluetooth_Version', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '蓝牙版本（如 5.0）', 'examples': ['5.0', '5.1']}, {'column': 'Audio_Codec', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '支持的音频编解码器（如 SBC、AAC、LDAC）', 'examples': ['LDAC', 'AAC']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA common sense reasoning question is as follows:\nFind headphones that support Bluetooth 5.0 or higher but are not equipped with LDAC/AAC encoding (difference set: Bluetooth_Version>=5.0 EXCEPT Audio_Codec IN ('LDAC','AAC'))\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id WHERE CAST(SUBSTRING_INDEX(a.Bluetooth_Version, '.', 1) AS UNSIGNED) * 10 + CAST(SUBSTRING_INDEX(a.Bluetooth_Version, '.', -1) AS UNSIGNED) >= 50 AND h.Headphone_Id NOT IN (SELECT Headphone_Id FROM audio_data WHERE Audio_Codec IN ('LDAC', 'AAC'));",
        "db_id": "earphone"
    },
    {
        "id": 396,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'THD (Total Harmonic Distortion)', 'THD improvement factor exceeding 10 billion times', 'price below $1,000'], 'relations': ['headphone_audio_relation (headphones.Headphone_Id = audio_data.Headphone_Id)', 'thd_condition (Total_Harmonic_Distortion_Percent / 0.0000000001 > 10000000000)', 'price_condition (Price_Usd < 1000)', 'except_relation (THD condition EXCLUDING high-price headphones)'], 'intent': 'find_headphones_meeting_specific_thd_improvement_and_price_criteria', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1e-10, 10000000000, 1000], 'units': {'THD': 'percent (%)', 'price': 'USD ($)', 'improvement_factor': 'dimensionless ratio'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}], 'earphone.headphones': [{'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA hypothetical reasoning question is as follows:\nAssuming headphones with a THD improvement factor exceeding 10 billion times, find products priced below $1,000 (difference set: THD/0.0000000001 >10000000000 EXCEPT Price_Usd>=1000).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model FROM audio_data a JOIN headphones h ON a.Headphone_Id = h.Headphone_Id WHERE a.Total_Harmonic_Distortion_Percent / 0.0000000001 > 10000000000 AND h.Price_Usd < 1000;",
        "db_id": "earphone"
    },
    {
        "id": 397,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'theoretical maximum input power condition', 'impedance mismatch condition'], 'relations': ['audio_data_to_headphones (Headphone_Id)', 'condition_relationship (Max_Input_Power_Mw to SPL/Sensitivity formula)', 'exclusion_relation (Impedance_Ohms not between 16-64)'], 'intent': 'filter_headphones_by_power_compliance_and_impedance_range', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 16, 64], 'units': {'power': 'milliwatts (mW)', 'impedance': 'ohms (Ω)', 'sound_level': 'decibels (dB)', 'formula_conversion': 'POWER(10, (db_diff)/10) for dB to power ratio'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Max_Input_Power_Mw', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大输入功率（毫瓦）', 'examples': ['1500', '1000', '200']}, {'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Impedance_Ohms', 'type': 'INTEGER', 'primary_key': False, 'comment': '阻抗（欧姆）', 'examples': ['32', '20', '150']}], 'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA physical knowledge question is as follows:\nFind headphones that meet the theoretical maximum input power but have an actual impedance mismatch (difference set: Max_Input_Power_Mw >= POWER(10, (Sound_Pressure_Level_Db - Sensitivity_Db)/10) EXCEPT Impedance_Ohms BETWEEN 16 AND 64)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id WHERE a.Max_Input_Power_Mw >= POWER(10, (a.Sound_Pressure_Level_Db - a.Sensitivity_Db) / 10) AND h.Headphone_Id NOT IN (SELECT h2.Headphone_Id FROM headphones h2 WHERE h2.Impedance_Ohms BETWEEN 16 AND 64);",
        "db_id": "earphone"
    },
    {
        "id": 398,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'frequency response 20-20000Hz', 'harmonic distortion rate (Total_Harmonic_Distortion_Percent)', 'audio quality rating (Audio_Quality_Rating)'], 'relations': ['distortion_exceeds_reciprocal_rating (Total_Harmonic_Distortion_Percent > 1/Audio_Quality_Rating)', 'frequency_coverage (Frequency_Response_Hz includes 20-20000Hz)'], 'intent': 'filter_headphones_by_technical_specs_and_quality_rating', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 20000, 1], 'units': {'frequency': 'Hz (Hertz)', 'distortion': '% (percent)', 'quality_rating': 'dimensionless rating'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}], 'earphone.audio_data': [{'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}], 'earphone.usage_records': [{'column': 'Audio_Quality_Rating'}]}}\nA mathematical logic question is as follows:\nFind headphones with frequency response covering 20-20000Hz but with harmonic distortion rate exceeding the reciprocal of audio quality rating (difference set: Frequency_Response_Hz @> '20,20000' EXCEPT Total_Harmonic_Distortion_Percent < 1/Audio_Quality_Rating)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id WHERE CAST(SUBSTRING_INDEX(a.Frequency_Response_Hz, '-', 1) AS DECIMAL) <= 20 AND CAST(SUBSTRING_INDEX(a.Frequency_Response_Hz, '-', -1) AS DECIMAL) >= 20000 AND h.Headphone_Id NOT IN (SELECT Headphone_Id FROM usage_records WHERE Total_Harmonic_Distortion_Percent < 1 / Audio_Quality_Rating);",
        "db_id": "earphone"
    },
    {
        "id": 399,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'IPX7 waterproof rating', 'price under $100'], 'relations': ['headphones_to_water_rating (headphones → Water_Resistance)', 'headphones_to_price (headphones → Price_Usd)'], 'intent': 'filter_headphones_by_waterproof_and_price', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [100], 'units': {'price': 'USD (US Dollars)', 'water_resistance': 'IPX rating scale (standardized waterproof classification)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Water_Resistance', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '防水等级（如 IPX4）', 'examples': []}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}]}}\nA common sense reasoning question is as follows:\nFind headphones with an IPX7 waterproof rating but priced under $100.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model, Price_Usd FROM headphones WHERE Water_Resistance = 'IPX7' AND Price_Usd < 100;",
        "db_id": "earphone"
    },
    {
        "id": 400,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'battery life', 'weight', 'abnormal records'], 'relations': ['ratio_calculation (Battery_Life_Hours / 100000)', 'hypothetical_weight_assignment (fixed_weight=100000g)'], 'intent': 'calculate_battery_life_to_weight_ratio_and_identify_abnormal_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 0.1], 'units': {'weight': 'grams (g)', 'battery_life': 'hours (h)', 'ratio': 'dimensionless (h/g)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the weight of all headphones increases to 100,000 grams, calculate the ratio of battery life to weight (Battery_Life_Hours/100000) and sort it in descending order by the ratio, then identify abnormal records with a ratio >0.1.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Headphone_Id, Model, Battery_Life_Hours, (Battery_Life_Hours / 100000) AS extreme_ratio FROM headphones WHERE (Battery_Life_Hours / 100000) > 0.1 ORDER BY extreme_ratio DESC;",
        "db_id": "earphone"
    },
    {
        "id": 401,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'theoretical maximum sound pressure level', 'actual sound pressure level', '10dB difference'], 'relations': ['level_comparison (theoretical_max vs actual)', 'difference_exceeds (>10dB)'], 'intent': 'filter_headphones_by_spl_deviation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10], 'units': {'sound_pressure': 'dB (decibels)', 'calculation': 'ΔSPL = |theoretical_max - actual| > 10dB'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Max_Input_Power_Mw'}], 'earphone.audio_data': [{'column': 'Sound_Pressure_Level_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '声压级（分贝）', 'examples': ['104.5', '110.0', '104.0']}]}}\nA physical knowledge question is as follows:\nFind headphones where the difference between the theoretical maximum sound pressure level and the actual sound pressure level exceeds 10dB.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model, a.Sound_Pressure_Level_Db AS actual_spl, (a.Sensitivity_Db + 10 * LOG10(a.Max_Input_Power_Mw)) AS theoretical_spl FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id WHERE ABS((a.Sensitivity_Db + 10 * LOG10(a.Max_Input_Power_Mw)) - a.Sound_Pressure_Level_Db) > 10;",
        "db_id": "earphone"
    },
    {
        "id": 402,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'frequency response', 'logarithmic width', 'high frequency', 'low frequency', 'total harmonic distortion', 'geometric mean'], 'relations': ['headphone_to_frequency_response (headphones → frequency response range)', 'headphone_to_thd (headphones → multiple THD measurements via audio_data)', 'calculation_relation (frequency response → logarithmic width via LOG10(high/low))', 'aggregation_relation (THD measurements → geometric mean per headphone)'], 'intent': 'calculate_log_width_and_geomean_thd_per_headphone_and_rank_top5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'frequency': 'Hz (Hertz)', 'thd': 'percent (%)', 'log_width': 'unitless (logarithmic ratio)', 'geomean_thd': 'percent (%)', 'conversion': 'LOG10(high_frequency/low_frequency) for logarithmic width'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Frequency_Response_Hz', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '频率响应范围（赫兹）', 'examples': ['4-40000', '10-24000', '10-41000']}], 'earphone.audio_data': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}, {'column': 'Total_Harmonic_Distortion_Percent', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '总谐波失真（百分比）', 'examples': ['0.02', '0.01', '0.05']}]}}\nA mathematical logic question is as follows:\nCalculate the logarithmic width of the frequency response (LOG10(high frequency/low frequency)) and the geometric mean of the total harmonic distortion for each headphone, then rank the top 5 in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model, SQRT(LOG10(CAST(SUBSTRING_INDEX(a.Frequency_Response_Hz, '-', -1) AS DECIMAL) / CAST(SUBSTRING_INDEX(a.Frequency_Response_Hz, '-', 1) AS DECIMAL)) * a.Total_Harmonic_Distortion_Percent) AS G_mean FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id ORDER BY G_mean DESC LIMIT 5;",
        "db_id": "earphone"
    },
    {
        "id": 403,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless earbuds', 'active noise cancellation', 'SBC encoding', 'battery life/weight ratio', 'industry standards'], 'relations': ['ebuds_support_feature (wireless earbuds → active noise cancellation)', 'ebuds_use_encoding (wireless earbuds → SBC encoding)', 'ebuds_measure_ratio (wireless earbuds → battery life/weight ratio)', 'ratio_below_benchmark (battery life/weight ratio < industry standards)'], 'intent': 'filter_wireless_earbuds_by_techspecs_and_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_life': 'hours (from Battery_Life_Hours)', 'weight': 'grams (from Weight_Grams)', 'ratio': 'hours/gram (implied calculation)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['1', '0']}, {'column': 'Noise_Cancellation', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否支持主动降噪', 'examples': ['1', '0']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['254.0', '240.0', '260.0']}], 'earphone.audio_data': [{'column': 'Audio_Codec', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '支持的音频编解码器（如 SBC、AAC、LDAC）', 'examples': ['LDAC', 'AAC']}]}}\nA common sense reasoning question is as follows:\nFind wireless earbuds that support active noise cancellation, use SBC encoding, and have a battery life/weight ratio below industry standards.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model, h.Battery_Life_Hours, h.Weight_Grams, (h.Battery_Life_Hours / h.Weight_Grams) AS battery_weight_ratio FROM headphones h JOIN audio_data a ON h.Headphone_Id = a.Headphone_Id WHERE h.Noise_Cancellation = TRUE AND h.Is_Wireless = TRUE AND a.Audio_Codec = 'SBC' AND (h.Battery_Life_Hours / h.Weight_Grams) < 0.5;",
        "db_id": "earphone"
    },
    {
        "id": 404,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphones', 'maximum input power', 'sound pressure level'], 'relations': ['power_to_spl (100,000,000 mW → theoretical SPL calculation)', 'headphone_to_specs (headphones → audio_data specifications)'], 'intent': 'calculate_theoretical_spl_and_ranking', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000000], 'units': {'power': 'mW (milliwatts)', 'spl': 'dB (decibels)', 'calculation': 'SPL = Sensitivity + 10*log10(Power / 1mW)'}, 'foreign_keys': [{'fk_table': 'audio_data', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}, {'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'audio_data', 'pk_column': 'Audio_Id'}, {'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}], 'tableinfo': {'earphone.audio_data': [{'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '耳机ID（外键）', 'examples': ['1', '2', '3']}, {'column': 'Sensitivity_Db', 'type': 'DECIMAL(5, 1)', 'primary_key': False, 'comment': '灵敏度（分贝）', 'examples': ['104.5', '110.0', '104.0']}, {'column': 'Max_Input_Power_Mw', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大输入功率（毫瓦）', 'examples': ['1500', '1000', '200']}], 'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Headphone_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '耳机唯一标识', 'examples': ['1', '2', '3']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maximum input power of all headphones is increased to 100,000,000 mW (100 million milliwatts), calculate the theoretical sound pressure level and rank the top 3 in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model, (h.Sensitivity_Db + 10 * LOG10(100000000)) AS theoretical_spl FROM headphones h ORDER BY theoretical_spl DESC LIMIT 3;",
        "db_id": "earphone"
    },
    {
        "id": 405,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'high-end products', 'proportion', 'per capita profit'], 'relations': ['manufacturer_produces_headphones', 'price_based_classification (>$500 threshold)', 'profit_per_employee_calculation'], 'intent': 'calculate_relationship_between_high_end_proportion_and_profit_per_employee_by_manufacturer', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [500], 'units': {'currency': 'USD', 'profit_unit': 'dollars (from Profit_Usd)', 'employee_unit': 'count (from Employees)', 'per_capita_profit_unit': 'USD per employee'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}], 'earphone.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Profit_Usd'}, {'column': 'Employees'}]}}\nA physical knowledge question is as follows:\nGroup by manufacturer to calculate the relationship between the proportion of high-end products (price > $500) and per capita profit.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Manufacturer_Id, m.Manufacturer_Name, SUM(CASE WHEN h.Price_Usd > 500 THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS high_end_ratio, m.Profit_Usd / m.Employees AS profit_per_employee FROM manufacturers m JOIN headphones h ON m.Manufacturer_Id = h.Manufacturer_Id GROUP BY m.Manufacturer_Id, m.Manufacturer_Name, m.Profit_Usd, m.Employees;",
        "db_id": "earphone"
    },
    {
        "id": 406,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'market share', 'product price', 'geometric mean'], 'relations': ['manufacturer_to_products (Manufacturer_Id → Headphone_Id)', 'market_share_to_manufacturer (Market_Share_Percent → Manufacturer_Id)', 'price_to_manufacturer (Price_Usd → Manufacturer_Id via headphones)'], 'intent': 'calculate_and_rank_manufacturer_metrics', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'market_share': 'percent (%)', 'price': 'USD ($)', 'formula': '√(Market_Share_Percent * AVG(Price_Usd))'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Market_Share_Percent'}], 'earphone.headphones': [{'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}]}}\nA mathematical logic question is as follows:\nCalculate the geometric mean of each manufacturer's market share and average product price (√(Market_Share_Percent*AVG(Price_Usd))), ordered by the result in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Manufacturer_Id, m.Manufacturer_Name, SQRT(m.Market_Share_Percent * AVG(h.Price_Usd)) AS composite_index FROM manufacturers m JOIN headphones h ON m.Manufacturer_Id = h.Manufacturer_Id GROUP BY m.Manufacturer_Id, m.Manufacturer_Name, m.Market_Share_Percent ORDER BY composite_index DESC;",
        "db_id": "earphone"
    },
    {
        "id": 407,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', '30 years (establishment duration threshold)', 'market share (Market_Share_Percent)', 'average product price (avg(Price_Usd))'], 'relations': ['manufacturer_age_condition (current_year - Founded_Year > 30)', 'market_share_vs_price_condition (Market_Share_Percent < AVG(Price_Usd)/100)', 'product_manufacturer_link (headphones.Manufacturer_Id → manufacturers.Manufacturer_Id)'], 'intent': 'filter_manufacturers_by_age_and_market_share_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 100], 'units': {'age': 'years', 'market_share': 'percent', 'price': 'USD', 'division_factor': '100 (scaling constant)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Founded_Year'}, {'column': 'Market_Share_Percent'}], 'earphone.headphones': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['349.99', '329.0', '499.95']}]}}\nA common sense reasoning question is as follows:\nFind manufacturers that have been established for over 30 years but have a market share lower than their average product price divided by 100.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Manufacturer_Id, m.Manufacturer_Name, m.Founded_Year, m.Market_Share_Percent, AVG(h.Price_Usd) AS avg_price FROM manufacturers m JOIN headphones h ON m.Manufacturer_Id = h.Manufacturer_Id WHERE m.Founded_Year < 1993 GROUP BY m.Manufacturer_Id, m.Manufacturer_Name, m.Founded_Year, m.Market_Share_Percent HAVING m.Market_Share_Percent < (AVG(h.Price_Usd) / 100);",
        "db_id": "earphone"
    },
    {
        "id": 408,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'revenue ($1 trillion)', 'employees (over 100 million)', 'per capita output'], 'relations': ['revenue_assignment (all manufacturers → $1 trillion revenue)', 'per_calculation (revenue / employees → output)', 'employee_filter (employees > 100000000)'], 'intent': 'calculate_and_sort_per_capita_output', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000000000000, 100000000], 'units': {'revenue': 'USD (dollars)', 'employees': 'count (unitless)', 'output': 'USD per employee', 'conversion': '1 trillion = 1,000,000,000,000'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'earphone.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Revenue_Usd'}, {'column': 'Employees'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all manufacturers' revenue increases to $1 trillion, calculate the theoretical per capita output of companies with over 100 million employees (1000000000000/Employees) and sort the results in ascending order by output value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Manufacturer_Id, m.Manufacturer_Name, m.Employees, (1000000000000.0 / NULLIF(m.Employees, 0)) AS theoretical_output_per_employee FROM manufacturers m WHERE m.Employees > 100000000 ORDER BY theoretical_output_per_employee ASC;",
        "db_id": "earphone"
    },
    {
        "id": 409,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['headphone model', 'theoretical battery consumption', 'actual battery consumption', 'usage duration', 'nominal battery life'], 'relations': ['model_to_battery_life (headphone model → nominal battery life)', 'usage_to_consumption (usage duration + nominal battery life → theoretical consumption)', 'deviation_calculation (theoretical consumption vs actual consumption)'], 'intent': 'calculate_battery_consumption_deviation_by_model', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'time': 'minutes (usage duration), hours (nominal battery life)', 'consumption': 'percentage (%)', 'conversion': 'theoretical_consumption = (usage_minutes / 60) / battery_life_hours * 100'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}], 'earphone.usage_records': [{'column': 'Usage_Duration_Minutes'}, {'column': 'Battery_Consumed_Percent'}]}}\nA physical knowledge question is as follows:\nGroup by headphone model to calculate the deviation between theoretical battery consumption and actual consumption (theoretical consumption = usage duration / nominal battery life * 100).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Model, AVG(ABS((u.Usage_Duration_Minutes / 60.0 / h.Battery_Life_Hours) * 100 - u.Battery_Consumed_Percent)) AS deviation FROM usage_records u JOIN headphones h ON u.Headphone_Id = h.Headphone_Id GROUP BY h.Model;",
        "db_id": "earphone"
    },
    {
        "id": 410,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\"user\", \"sound quality energy index\", \"volume%\", \"duration\", \"impedance\"],\n  \"relations\": [\n    \"user_to_usage (User_Id → usage_records)\", \n    \"usage_to_headphones (usage_records.Headphone_Id → headphones.Headphone_Id)\",\n    \"headphones_to_impedance (headphones.Headphone_Id → Impedance_Ohms)\"\n  ],\n  \"intent\": \"calculate_custom_metric_and_rank_users\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [10],  // Top 10 ranking requirement\n  \"units\": {\n    \"volume\": \"% (percent)\",\n    \"duration\": \"minutes (from usage_duration_minutes)\",\n    \"impedance\": \"Ohms (Ω)\",\n    \"formula_unit\": \"(percent² * minutes) / Ω\"\n  },\n  \"required_tables\": [\"usage_records\", \"headphones\"],\n  \"required_fields\": [\n    \"usage_records.User_Id\",\n    \"usage_records.Volume_Level_Percent\",\n    \"usage_records.Usage_Duration_Minutes\",\n    \"headphones.Impedance_Ohms\"\n  ]\n}\nA mathematical logic question is as follows:\nCalculate each user's sound quality energy index ((volume%^2 * duration) / impedance), and list the top 10 in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT u.User_Id, (POWER(u.Volume_Level_Percent, 2) * u.Usage_Duration_Minutes) / h.Ompedance_Ohms AS energy_index FROM usage_records u JOIN headphones h ON u.Headphone_Id = h.Headphone_Id ORDER BY energy_index DESC LIMIT 10;",
        "db_id": "earphone"
    },
    {
        "id": 411,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless earphone products', 'battery efficiency', 'rated battery life', 'actual average hourly power consumption'], 'relations': ['headphone_to_usage (headphones.Headphone_Id → usage_records.Headphone_Id)', 'efficiency_condition (rated_battery_life / actual_consumption < 0.8)'], 'intent': 'filter_products_by_battery_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80], 'units': {'battery_life': 'hours', 'power_consumption': '% per hour (derived from Battery_Consumed_Percent and Usage_Duration_Minutes)', 'conversion': 'Minutes → Hours (for usage duration)'}, 'foreign_keys': [{'fk_table': 'headphones', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'headphones', 'pk_column': 'Headphone_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.headphones': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '耳机型号', 'examples': ['WH-1000XM4', 'QuietComfort 45', 'HD 660 S']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['1', '0']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['30', '24']}], 'earphone.usage_records': [{'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}]}}\nA common sense reasoning question is as follows:\nFind products in the wireless earphone category with actual battery efficiency (rated battery life / actual average hourly power consumption) < 80%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.Headphone_Id, h.Model, h.Battery_Life_Hours, (h.Battery_Life_Hours / (AVG(u.Battery_Consumed_Percent) / 100)) AS actual_efficiency FROM headphones h JOIN usage_records u ON h.Headphone_Id = u.Headphone_Id WHERE h.Is_Wireless = TRUE GROUP BY h.Headphone_Id, h.Model, h.Battery_Life_Hours HAVING actual_efficiency < 0.8 * h.Battery_Life_Hours;",
        "db_id": "earphone"
    },
    {
        "id": 412,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage records', 'volume level', 'battery consumed', 'power consumption'], 'relations': ['volume_scaling (current volume → 10000% volume)', 'power_calculation_formula (theoretical_power = current_power * (10000/volume%)³)'], 'intent': 'calculate_theoretical_power_consumption_after_volume_increase_and_sort_descending', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000], 'units': {'volume': '% (percent)', 'battery_consumption': '% (percent of total battery)', 'duration': 'minutes', 'power_consumption_unit': 'derived unit (% per minute for calculation)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'Headphone_Id', 'ref_table': 'headphones', 'ref_column': 'Headphone_Id'}], 'primary_keys': [{'pk_table': 'usage_records', 'pk_column': 'Record_Id'}], 'tableinfo': {'earphone.usage_records': [{'column': 'Volume_Level_Percent'}, {'column': 'Battery_Consumed_Percent'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Record_Id'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all usage records have their volume increased to 10000%, calculate the theoretical power consumption (current power consumption * (10000/volume%)³) and sort by power consumption in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT u.Record_Id, u.Headphone_Id, u.Volume_Level_Percent, u.Battery_Consumed_Percent, (u.Battery_Consumed_Percent * POWER(10000 / NULLIF(u.Volume_Level_Percent, 0), 3)) AS theoretical_consumption FROM usage_records u ORDER BY theoretical_consumption DESC;",
        "db_id": "earphone"
    },
    {
        "id": 413,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'petroleum products', 'carbon emissions', 'sales ($100 billion)', 'net profit margin (10%)'], 'relations': ['sales_to_volume (Sales → Liters sold via price)', 'volume_to_emissions (Liters → Carbon via emission factor)'], 'intent': 'calculate_total_carbon_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000000000, 0.1, 2.5, 1], 'units': {'currency': 'USD (dollars)', 'volume': 'liters', 'emissions': 'grams', 'conversion_chain': 'Sales (USD) → Volume (liters) via $1/L → Emissions (grams) via 2.5g/L'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}]}}\nA physical knowledge question is as follows:\nAn oil company has sales of $100 billion with a net profit margin of 10%. What is the total carbon emissions generated by the company from selling petroleum products in one year? It is known that each liter of petroleum product emits 2.5 grams of carbon per liter, and the average selling price is $1 per liter.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Sales * 1000000000 / 1) * 2.5 AS Total_Carbon_Emission FROM company WHERE Sales = 100 AND Net_Profit_Margin = 10;",
        "db_id": "gas"
    },
    {
        "id": 414,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'total assets $500 billion', 'debt-to-equity ratio 2:1', 'market capitalization $300 billion', 'new shares issuance', 'target debt-to-equity ratio 1:1'], 'relations': ['assets_to_debt_equity (total assets → debt/equity structure)', 'debt_ratio_to_equity (2:1 D/E → derived debt/equity values)', 'market_cap_as_equity (market capitalization = equity value)', 'issuance_impact (new shares → equity increase → D/E reduction)'], 'intent': 'calculate_market_value_of_new_shares_to_achieve_target_debt_equity_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 2, 1, 300, 1], 'units': {'currency': 'billion USD (implied by context)', 'ratio': 'dimensionless (debt-to-equity ratio)', 'conversion': 'All monetary values in billions'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Market_Value', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的市值（十亿美元）', 'examples': ['8000.0', '7500.0', '7000.0', '8500.0', '7200.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA mathematical logic question is as follows:\nGiven that an oil company has total assets of $500 billion, a debt-to-equity ratio of 2:1, and a market capitalization of $300 billion. The company decides to issue new shares to reduce the debt-to-equity ratio to 1:1. How much market value of new shares needs to be issued?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (5000 - (3000 / (1 + 1))) AS New_Equity_Needed;",
        "db_id": "gas"
    },
    {
        "id": 415,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate 5%', 'net profit margin 8%', '100,000 employees', 'average annual sales per employee $1 million', 'planned revenue growth rate 10%', '5 years'], 'relations': ['company_metrics (oil company → revenue growth rate 5%, net profit margin 8%, 100,000 employees)', 'growth_plan (increase revenue growth rate to 10% over 5 years)', 'sales_per_employee_relation (average annual sales per employee is $1 million)', 'employee_to_growth_relationship (additional employees needed proportional to revenue increase)'], 'intent': 'calculate_additional_employees_required_for_revenue_growth', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 8, 100000, 10, 5, 1000000], 'units': {'growth_rate': 'percent', 'employees': 'count', 'sales_per_employee': 'dollars per employee per year', 'time': 'years', 'currency': 'USD'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a revenue growth rate of 5%, a net profit margin of 8%, and employs 100,000 workers. The company plans to increase its revenue growth rate to 10% over the next five years. How many additional employees are needed to support this growth? It is known that the average annual sales per employee are $1 million.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CurrentData AS (SELECT Sales, Number_Employees, Revenue_Growth_Rate FROM company WHERE Revenue_Growth_Rate = 5 AND Net_Profit_Margin = 8 AND Number_Employees = 100000) SELECT ((Sales * POWER(1 + 0.10, 5) - Sales) / 1000000) - Number_Employees AS Additional_Employees_Needed FROM CurrentData;",
        "db_id": "gas"
    },
    {
        "id": 416,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $1 trillion', 'net profit margin 50%', 'carbon emission rights $100/ton', 'carbon emissions 2.5g/liter', 'annual petroleum sales 1 trillion liters'], 'relations': ['profit_from_sales (sales * margin → total profit)', 'emissions_from_production (annual_liters * g_per_liter → total_emissions)', 'rights_purchasable (profit / price_per_ton → carbon_tonnage)', 'offset_calculation (carbon_tonnage / annual_emissions → years_offset)'], 'intent': 'calculate_years_of_carbon_offset', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000000, 50, 100, 2.5, 1000000000000], 'units': {'currency': 'USD (implied)', 'mass': 'grams → metric tons (1 ton = 1,000,000 grams)', 'volume': 'liters', 'conversions': ['Profit = 1e12 * 0.5 = 5e11 USD', 'Annual emissions = 1e12 liters * 2.5g/liter = 2.5e12 grams → 2,500 tons', 'Rights purchased = 5e11 USD / 100 USD/ton = 5e9 tons']}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has sales of $1 trillion and a net profit margin of 50%. If the company decides to spend all its profits on purchasing carbon emission rights, with the price of each ton of carbon emission rights at $100, and the carbon emissions per liter of petroleum products at 2.5 grams/liter, how many years of carbon emissions can the company offset? Assume the company sells 1 trillion liters of petroleum products annually.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CompanyData AS (SELECT Sales, Net_Profit_Margin FROM company WHERE Sales = 1000 AND Net_Profit_Margin = 50) SELECT ((Sales * Net_Profit_Margin / 100) / 100) / ((1000000000000 * 2.5 / 1000000) / 100) AS Years_Offset FROM CompanyData;",
        "db_id": "gas"
    },
    {
        "id": 417,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company fuel inventory', 'carbon dioxide production', 'molecular weights (CO₂=44g/mol, C=12g/mol)'], 'relations': ['carbon_to_co2_conversion_ratio (C:CO₂ = 12:44)', 'inventory_to_total_emission (liters × g/L → total grams)'], 'intent': 'calculate_total_co2_emissions_in_tons', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000000, 2.5, 44, 12], 'units': {'volume': 'liters', 'mass': 'grams → tons (conversion factor: 1 ton = 1,000,000 grams)', 'emission_factor': 'grams per liter', 'molecular_weight': 'grams per mole'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA physical knowledge question is as follows:\nAn oil company has a fuel inventory of 1 billion liters, and each liter of fuel emits 2.5 grams of carbon per liter. How many tons of carbon dioxide will be produced when this fuel is completely burned? The molecular weight of carbon dioxide is given as 44 grams per mole, and the atomic weight of carbon is 12 grams per mole.\nyour response just have a SQL without anything.\n",
        "solution": "WITH GasData AS (SELECT Stock_Liters, Carbon_Emission FROM gas WHERE Stock_Liters = 1000000000 AND Carbon_Emission = 2.5) SELECT (Stock_Liters * Carbon_Emission * 44 / 12) / 1000000 AS Total_CO2_Tons FROM GasData;",
        "db_id": "gas"
    },
    {
        "id": 418,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate 8%', 'net profit margin 12%', 'employees 50,000', 'target net profit margin 15%', 'timeframe 3 years', 'current sales per employee $800,000'], 'relations': ['growth_to_revenue (revenue growth rate → future revenue)', 'margin_to_profit (net profit margin → net profit)', 'revenue_per_employee (total revenue / employees → sales per employee)'], 'intent': 'calculate_required_increase_in_sales_per_employee', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 12, 50000, 15, 3, 800000], 'units': {'growth_rate': '% (percentage)', 'currency': 'USD', 'employee_count': 'people', 'time': 'years'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has a revenue growth rate of 8%, a net profit margin of 12%, and employs 50,000 people. The company plans to increase its net profit margin to 15% over the next three years while maintaining the same revenue growth rate. By how much does the average annual sales per employee need to increase? It is known that the current average annual sales per employee is $800,000.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CurrentData AS (SELECT Sales, Number_Employees, Revenue_Growth_Rate, Net_Profit_Margin FROM company WHERE Revenue_Growth_Rate = 8 AND Net_Profit_Margin = 12 AND Number_Employees = 50000) SELECT ((Sales * POWER(1 + Revenue_Growth_Rate / 100, 3) * (15 / 100)) / Number_Employees) - 800000 AS Required_Sales_Increase_Per_Employee FROM CurrentData;",
        "db_id": "gas"
    },
    {
        "id": 419,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'minimum fuel inventory (1 million liters)', 'total gas station capacity (5 million liters)', '30-day fuel demand', 'average daily sales (100,000 liters)'], 'relations': ['inventory_vs_demand (current inventory vs required 30-day supply)', 'capacity_vs_requirement (total capacity vs needed inventory expansion)'], 'intent': 'determine_inventory_sufficiency_and_calculate_capacity_deficit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 5000000, 100000, 30], 'units': {'volume': 'liters', 'time': 'days', 'conversion': '30 days × 100,000 liters/day = 3,000,000 liters required'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a minimum fuel inventory of 1 million liters, and the total capacity of its gas stations is 5 million liters. The company wants to ensure that it can meet the fuel demand for the next 30 days at any time, with an average daily sales volume of 100,000 liters. Does the company need to increase its inventory capacity? If so, by how much?\nyour response just have a SQL without anything.\n",
        "solution": "WITH GasData AS (SELECT Minimum_Stock_Liters, Capacity_Liters FROM gas_station, gas WHERE Minimum_Stock_Liters = 1000000 AND Capacity_Liters = 5000000) SELECT CASE WHEN (100000 * 30) > Capacity_Liters THEN (100000 * 30) - Capacity_Liters ELSE 0 END AS Additional_Capacity_Needed FROM GasData;",
        "db_id": "gas"
    },
    {
        "id": 420,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\n    \"oil company\",\n    \"market capitalization $10 trillion\",\n    \"net profit margin 20%\",\n    \"gold\",\n    \"gold price $2000 per ounce\",\n    \"gold density 19.32 g/cm³\",\n    \"Olympic swimming pool volume 2500 m³\"\n  ],\n  \"relations\": [\n    \"profit_calculation (Market_Value * Net_Profit_Margin)\",\n    \"gold_purchase (Profits / Gold_Price)\",\n    \"volume_conversion (Gold_Weight / Density → Volume)\",\n    \"pool_capacity (Total_Gold_Volume / Pool_Volume)\"\n  ],\n  \"intent\": \"calculate_swimming_pools_filled_by_gold_purchased_with_profits\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [\n    10000000000000,  // Market cap ($10T)\n    0.2,             // Net profit margin (20%)\n    2000,            // Gold price per ounce\n    19.32,           // Gold density (g/cm³)\n    2500             // Pool volume (m³)\n  ],\n  \"units\": {\n    \"currency\": \"USD\",\n    \"mass\": \"ounces → grams (1 oz = 28.3495 g)\",\n    \"density\": \"g/cm³\",\n    \"volume\": [\n      \"cm³ → m³ (1 m³ = 1,000,000 cm³)\",\n      \"pool volume: m³\"\n    ]\n  },\n  \"required_tables\": [\"company\"],\n  \"required_fields\": [\n    \"company.Market_Value\", \n    \"company.Net_Profit_Margin\"\n  ]\n}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has a market capitalization of $10 trillion and a net profit margin of 20%. If the company decides to use all its profits to purchase gold, with the price of gold being $2000 per ounce and a density of 19.32 grams per cubic centimeter, how many standard Olympic swimming pools could be filled with this gold? Assume a standard Olympic swimming pool has a volume of 2500 cubic meters.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CompanyData AS (SELECT Market_Value, Net_Profit_Margin FROM company WHERE Market_Value = 10000 AND Net_Profit_Margin = 20) SELECT ((Market_Value * Net_Profit_Margin / 100) / 2000) * 31.1035 / 19.32 / 1000000 / 2500 AS Olympic_Pools_Filled FROM CompanyData;",
        "db_id": "gas"
    },
    {
        "id": 421,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'fuel inventory (500 million liters)', 'heat value (35 MJ/L)', 'energy (terajoules)'], 'relations': ['inventory_to_energy (liters × MJ/L → terajoules)', 'unit_conversion (MJ → TJ)'], 'intent': 'calculate_total_energy_released_from_fuel_burning', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500000000, 35], 'units': {'volume': 'liters → 500 million liters (5e8 L)', 'energy_density': 'MJ/L → 35 megajoules per liter', 'target_unit': 'terajoules (TJ)', 'conversion': '1 TJ = 1,000,000 MJ'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nAn oil company has a fuel inventory of 500 million liters, and each liter of fuel has a heat value of 35 megajoules (MJ/L). How much energy (in terajoules) will be released if all this fuel is completely burned, assuming an energy conversion efficiency of 100%?\nyour response just have a SQL without anything.\n",
        "solution": "WITH GasData AS (SELECT Stock_Liters FROM gas WHERE Stock_Liters = 500000000) SELECT (Stock_Liters * 35) / 1000000 AS Total_Energy_Petajoules FROM GasData;",
        "db_id": "gas"
    },
    {
        "id": 422,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n```json\n{\n  \"entities\": [\n    \"oil company\",\n    \"current sales $800 billion\",\n    \"current net profit margin 15%\",\n    \"current employees 200,000\",\n    \"target sales $1.2 trillion\",\n    \"target net profit margin 18%\",\n    \"current average sales per employee $400,000\"\n  ],\n  \"relations\": [\n    \"company_to_metrics (oil company → sales/employees)\",\n    \"sales_to_employee_ratio (sales ÷ employees = average)\",\n    \"current_vs_future (comparison between current and target states)\"\n  ],\n  \"intent\": \"calculate_increase_in_average_sales_per_employee\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [\n    800000000000,   // Current sales in dollars\n    1200000000000,  // Target sales in dollars\n    200000,         // Employee count\n    400000          // Current sales/employee\n  ],\n  \"units\": {\n    \"currency\": \"USD (no conversion needed)\",\n    \"sales_per_employee\": \"dollars per employee per year\",\n    \"scaling\": \"1 billion = 1e9, 1 trillion = 1e12\"\n  },\n  \"required_tables\": [\"company\"],\n  \"required_fields\": [\n    \"company.Sales\",             // For current sales value\n    \"company.Number_Employees\"   // For employee count\n  ]\n}\n```\n\n**Key Explanation:**\n- **Entities/Relations:** Focuses on sales, employee count, and their ratio. Profit margin is mentioned but irrelevant to sales-per-employee calculation.\n- **Intent:** Pure arithmetic comparison between current ($400k/employee) and future target states.\n- **Reasoning Type:** Requires basic division and subtraction operations (mathematical logic).\n- **Units:** All monetary values in USD; employee count in persons. Sales values require unit scaling (billions/trillions).\n- **Tables/Fields:** Only `company` table is needed. `Sales` and `Number_Employees` fields provide necessary data. Projected values are user-provided, not database-stored.\n- **Excluded Elements:** Net profit margin, time horizon (\"5 years\"), and gas-related tables are unrelated to the sales-per-employee metric.\nA mathematical logic question is as follows:\nAn oil company has sales of $800 billion, a net profit margin of 15%, and employs 200,000 people. The company plans to increase its sales to $1.2 trillion and raise its net profit margin to 18% over the next five years. By how much does the average annual sales per employee need to increase? The current average annual sales per employee is $400,000.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CurrentData AS (SELECT Sales, Number_Employees, Net_Profit_Margin FROM company WHERE Sales = 800 AND Net_Profit_Margin = 15 AND Number_Employees = 200000) SELECT ((1200 * 1000000000 * 0.18) / Number_Employees) - 400000 AS Required_Sales_Increase_Per_Employee FROM CurrentData;",
        "db_id": "gas"
    },
    {
        "id": 423,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'minimum fuel inventory (2 million liters)', 'total capacity (10 million liters)', 'average daily sales (150,000 liters)', 'time period (60 days)'], 'relations': ['company_to_capacity (oil company → total capacity)', 'inventory_to_demand (minimum inventory vs required demand)', 'sales_to_time_requirement (daily sales × days = total demand)'], 'intent': 'determine_inventory_sufficiency_and_capacity_gap', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2000000, 10000000, 150000, 60], 'units': {'volume': 'liters', 'time': 'days', 'conversion': 'total_demand_liters = daily_sales × days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.station_company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a minimum fuel inventory of 2 million liters, and the total capacity of its gas stations is 10 million liters. The company wants to ensure that it can meet the fuel demand for the next 60 days at any time, with an average daily sales volume of 150,000 liters of fuel. Does the company need to increase its inventory capacity? If so, by how much?\nyour response just have a SQL without anything.\n",
        "solution": "WITH GasData AS (SELECT Minimum_Stock_Liters, Capacity_Liters FROM gas_station, gas WHERE Minimum_Stock_Liters = 2000000 AND Capacity_Liters = 10000000) SELECT CASE WHEN (150000 * 60) > Capacity_Liters THEN (150000 * 60) - Capacity_Liters ELSE 0 END AS Additional_Capacity_Needed FROM GasData;",
        "db_id": "gas"
    },
    {
        "id": 424,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n```json\n{\n  \"entities\": [\n    \"oil company (hypothetical entity)\",\n    \"diamonds\",\n    \"football fields\"\n  ],\n  \"relations\": [\n    \"company_profit_to_diamond_quantity ($ profit → carats of diamonds)\",\n    \"diamond_mass_to_volume (carats → grams → cubic meters)\",\n    \"volume_to_football_field_coverage (cubic meters → football fields)\"\n  ],\n  \"intent\": \"calculate_diamond_coverage_in_football_fields\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [\n    50000000000000,  // Market cap ($50 trillion)\n    0.25,            // Net profit margin (25%)\n    5000,            // Diamond price per carat ($)\n    3.52,            // Diamond density (g/cm³)\n    7140,            // Football field area (m²)\n    1                // Pile height (m)\n  ],\n  \"units\": {\n    \"currency\": \"USD\",\n    \"mass\": \"carats (1 carat = 0.2 grams)\",\n    \"volume\": \"cubic meters (converted from cm³: 1m³ = 1,000,000 cm³)\",\n    \"area\": \"square meters\",\n    \"length\": \"meters\",\n    \"conversions\": [\n      \"Profit ($) = Market_Cap × Net_Profit_Margin\",\n      \"Diamond mass (grams) = (Profit / Price_per_carat) × 0.2\",\n      \"Volume (m³) = Mass (grams) / (Density × 1,000,000 / 1000)  // Accounting for g/cm³ to g/m³ conversion\",\n      \"Football field volume = Area × Height\",\n      \"Field count = Total diamond volume / Field volume\"\n    ]\n  },\n  \"required_tables\": [],  // No matching tables in schema\n  \"required_fields\": []   // No matching fields in schema\n}\n```\n\n**Rationale**:  \n1. **Database Mismatch**: The provided gas station database lacks tables/fields for market capitalization, diamond purchases, or physical volume calculations.  \n2. **Hypothetical Calculation**: All entities and units derive purely from the question. Key steps include:  \n   - Profit = $50T × 25% = $12.5T  \n   - Diamond mass = ($12.5T / $5,000) × 0.2g/carat  \n   - Volume = mass / (3.52 g/cm³ × 1000 kg/m³ conversion)  \n   - Football field volume = 7,140m² × 1m = 7,140m³  \n3. **Units**: Critical unit conversions involve currency (trillion→dollars), carats→grams, and cm³→m³.  \n4. **No Database Usage**: Schema lacks `market_value` absolute values (only ratios exist) and has no diamond-related data.\nA hypothetical reasoning question is as follows:\nAssuming an oil company has a market capitalization of 50 trillion dollars with a net profit margin of 25%. If the company decides to use all its profits to purchase diamonds, with each carat of diamond priced at $5,000 and a diamond density of 3.52 grams per cubic centimeter, how many standard football fields could these diamonds fill? A standard football field has an area of 7,140 square meters, and the height of the diamond pile is 1 meter.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CompanyData AS (SELECT Market_Value, Net_Profit_Margin FROM company WHERE Market_Value = 50000 AND Net_Profit_Margin = 25) SELECT ((Market_Value * Net_Profit_Margin / 100) / 5000) * 0.2 / 3.52 / 1000000 / (7140 * 1) AS Football_Fields_Filled FROM CompanyData;",
        "db_id": "gas"
    },
    {
        "id": 425,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $500 billion', 'carbon emissions 2.5 grams per liter', 'selling price $1 per liter'], 'relations': ['sales_to_volume (conversion via price per liter)', 'emissions_per_volume (carbon emissions per liter)', 'unit_conversion (grams to tons)'], 'intent': 'calculate_total_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 2.5, 1], 'units': {'sales': 'billion dollars (convert to dollars: 1 billion = 1e9)', 'carbon_emission': 'grams per liter', 'price': 'dollars per liter', 'target_unit': 'tons (1 ton = 1e6 grams)', 'conversion_factors': ['dollar_volume = 500 * 1e9', 'liters_sold = dollar_volume / 1', 'grams_emitted = liters_sold * 2.5', 'tons_emitted = grams_emitted / 1000000']}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nGiven that an oil company has sales of $500 billion, and the average carbon emissions of its fuel products are 2.5 grams per liter, with an average selling price of $1 per liter of fuel, what is the total carbon emissions in tons generated by the company's fuel product sales in a year?\nyour response just have a SQL without anything.\n",
        "solution": "WITH CompanyData AS (SELECT Sales FROM company WHERE Sales = 500) SELECT (Sales * 1000000000 / 1) * 2.5 / 1000000 AS Total_Carbon_Emission_Tons FROM CompanyData;",
        "db_id": "gas"
    },
    {
        "id": 426,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', 'net profit margin 15%', 'sales $50 billion', 'employees 100,000'], 'relations': ['profit_calculation (net_profit = sales * net_profit_margin / 100)', 'per_employee_contribution (average_net_profit_per_employee = net_profit / number_employees)'], 'intent': 'calculate_net_profit_and_average_per_employee', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15, 50000000000, 100000], 'units': {'net_profit_margin': '% (percentage)', 'sales': 'USD (conversion: 1 billion = 1e9 dollars)', 'net_profit': 'USD', 'average_per_employee': 'USD per employee'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}]}}\nA mathematical logic question is as follows:\nThe net profit margin of a petroleum company is known to be 15%, with sales amounting to $50 billion. What is the company's net profit? The company has 100,000 employees, so what is the average net profit contribution per employee?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Net_Profit_Margin / 100) * Sales AS Net_Profit, ((Net_Profit_Margin / 100) * Sales) / Number_Employees AS Net_Profit_Per_Employee FROM company WHERE Sales = 50 AND Net_Profit_Margin = 15 AND Number_Employees = 100000;",
        "db_id": "gas"
    },
    {
        "id": 427,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate 5%', 'last year sales $30 billion', 'net profit margin 10%'], 'relations': ['growth_calculation (sales → projected_sales)', 'margin_application (projected_sales → net_profit)'], 'intent': 'calculate_projected_sales_and_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 30, 10], 'units': {'currency': \"USD (implied by '$')\", 'scale': 'billions (implied)', 'conversion_formulas': ['projected_sales = last_year_sales * (1 + growth_rate/100)', 'net_profit = projected_sales * (net_profit_margin/100)']}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}]}}\nA common sense reasoning question is as follows:\nGiven that an oil company has a revenue growth rate of 5%, and last year's sales were $30 billion, what is the projected sales for this year? If the company's net profit margin is 10%, what is the projected net profit for this year?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (1 + Revenue_Growth_Rate / 100) AS Projected_Sales, (Sales * (1 + Revenue_Growth_Rate / 100)) * (Net_Profit_Margin / 100) AS Projected_Net_Profit FROM company WHERE Sales = 30 AND Revenue_Growth_Rate = 5 AND Net_Profit_Margin = 10;",
        "db_id": "gas"
    },
    {
        "id": 428,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales: 1 trillion dollars', 'profits: 500 billion dollars', 'employees: 10 million', 'branches: 100,000'], 'relations': ['company_has_sales (oil company → sales)', 'company_has_profits (oil company → profits)', 'company_has_employees (oil company → employees)', 'company_has_branches (oil company → branches)'], 'intent': 'calculate_average_metrics', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000000, 500000000000, 10000000, 100000], 'units': {'sales': 'dollars', 'profits': 'dollars', 'employees': 'count', 'branches': 'count', 'average_metrics': 'dollars per unit (employee/branch)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has sales of 1 trillion dollars, profits of 500 billion dollars, and 10 million employees, what is the average sales and average profit per employee for the company? If the company has 100,000 branches, what is the average sales and average profit per branch?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales / Number_Employees AS Average_Sales_Per_Employee, Profits / Number_Employees AS Average_Profit_Per_Employee, Sales / Number_Branches AS Average_Sales_Per_Branch, Profits / Number_Branches AS Average_Profit_Per_Branch FROM company WHERE Sales = 1000 AND Profits = 500 AND Number_Employees = 10000000 AND Number_Branches = 100000;",
        "db_id": "gas"
    },
    {
        "id": 429,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'carbon emissions', 'total fuel sold'], 'relations': ['company_to_emissions (oil company → 10M tons CO₂)', 'fuel_to_emissions (1 liter → 2.5g CO₂)'], 'intent': 'calculate_total_fuel_sold_in_liters', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000, 2.5], 'units': {'mass_conversion': '1 ton = 1,000,000 grams', 'input_units': ['tons (emissions)', 'grams/liter (emission density)'], 'output_unit': 'liters (fuel volume)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}, {'column': 'Environmental_Score', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的环境评分（例如：碳排放、可持续发展）。', 'examples': ['78.0', '80.0', '75.0', '82.0', '79.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}], 'gas.station_company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}, {'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}]}}\nA physical knowledge question is as follows:\nThe carbon emissions of a certain oil company are 10 million tons, and the carbon emissions per liter of fuel are 2.5 grams. What is the total amount of fuel sold by the company in liters?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (10000000 * 1000000) / Carbon_Emission AS Total_Fuel_Sold_Liters FROM gas WHERE Carbon_Emission = 2.5;",
        "db_id": "gas"
    },
    {
        "id": 430,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $80 billion', 'net profit margin 12%', 'debt-to-equity ratio 0.8', 'target net profit increase 20%'], 'relations': ['profit_calculation (sales × net profit margin)', 'profit_increase_requirement (20% growth)', 'debt_equity_constraint (unchanged ratio)'], 'intent': 'calculate_additional_sales_for_profit_growth', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 12, 20, 0.8], 'units': {'sales': 'billion dollars', 'margin': 'percent', 'ratio': 'decimal', 'growth': 'percent'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $80 billion, a net profit margin of 12%, and a debt-to-equity ratio of 0.8. If the company wants to increase its net profit by 20% while keeping the debt-to-equity ratio unchanged, how much additional sales revenue is needed?\nyour response just have a SQL without anything.\n",
        "solution": "WITH Current_Data AS (SELECT Sales, (Net_Profit_Margin / 100) * Sales AS Current_Net_Profit, Debt_Equity_Ratio FROM company WHERE Sales = 80 AND Net_Profit_Margin = 12 AND Debt_Equity_Ratio = 0.8), Target_Net_Profit AS (SELECT Current_Net_Profit * 1.2 AS Target_Net_Profit FROM Current_Data) SELECT (Target_Net_Profit / (Net_Profit_Margin / 100)) - Sales AS Required_Sales_Increase FROM company, Target_Net_Profit WHERE Sales = 80 AND Net_Profit_Margin = 12;",
        "db_id": "gas"
    },
    {
        "id": 431,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', \"last year's sales\", 'doubled sales', 'three years'], 'relations': ['current_sales_to_target (40B → 80B)', 'time_period (3 years)'], 'intent': 'calculate_required_annual_revenue_growth_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [40, 2, 3], 'units': {'currency': 'USD billion', 'growth_rate': 'percentage', 'time': 'years'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a revenue growth rate of 8% with last year's sales at $40 billion. The company aims to double its sales within the next three years, so what annual revenue growth rate is required to achieve this?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Current Revenue Growth Rate: 8%' AS Current_Growth_Rate, 'Required Annual Growth Rate: ~26%' AS Required_Growth_Rate FROM company WHERE Sales = 40 AND Revenue_Growth_Rate = 8;",
        "db_id": "gas"
    },
    {
        "id": 432,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['hypothetical oil company', 'sales (10 trillion dollars)', 'profits (5 trillion dollars)', 'employees (100 million)', 'branches (1 million)'], 'relations': ['company_has_sales', 'company_has_profits', 'company_has_employees', 'company_has_branches', 'calculation: average_sales_per_employee = sales / employees', 'calculation: average_profit_per_employee = profits / employees', 'calculation: average_sales_per_branch = sales / branches', 'calculation: average_profit_per_branch = profits / branches'], 'intent': 'calculate_averages_per_employee_and_per_branch', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000000000, 5000000000000, 100000000, 1000000], 'units': {'sales': 'dollars (trillion = 1e12, base unit: dollars)', 'profits': 'dollars (trillion = 1e12, base unit: dollars)', 'employees': 'people (million = 1e6, base unit: count)', 'branches': 'branches (million = 1e6, base unit: count)', 'averages': 'dollars per unit (derived: dollars/employee, dollars/branch)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has sales of 10 trillion dollars, a profit of 5 trillion dollars, and 100 million employees, what is the average sales and average profit per employee for this company? If the company has 1 million branches, what is the average sales and average profit per branch?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales / Number_Employees AS Average_Sales_Per_Employee, Profits / Number_Employees AS Average_Profit_Per_Employee, Sales / Number_Branches AS Average_Sales_Per_Branch, Profits / Number_Branches AS Average_Profit_Per_Branch FROM company WHERE Sales = 10000 AND Profits = 5000 AND Number_Employees = 100000000 AND Number_Branches = 1000000;",
        "db_id": "gas"
    },
    {
        "id": 433,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', 'fuel inventory', 'carbon emissions', 'reduction target'], 'relations': ['company_owns_inventory (petroleum company → fuel inventory)', 'inventory_emission_relation (fuel inventory → carbon emissions)', 'reduction_impact (reduction target → fuel sales reduction)'], 'intent': 'calculate_fuel_sales_reduction_for_emission_target', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000, 2.8, 20], 'units': {'inventory': 'liters', 'emission_factor': 'grams per liter', 'reduction': 'percent', 'conversion': '1% reduction = 0.01 proportion'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}, {'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA physical knowledge question is as follows:\nA petroleum company has a fuel inventory of 5 million liters, with each liter of fuel emitting 2.8 grams of carbon. The company plans to reduce its carbon emissions by 20% over the next year. How many liters of fuel sales does the company need to reduce?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters * Carbon_Emission * 0.20) / Carbon_Emission AS Required_Reduction_Liters FROM gas WHERE Stock_Liters = 5000000 AND Carbon_Emission = 2.8;",
        "db_id": "gas"
    },
    {
        "id": 434,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'market value $300 billion', 'net profit $45 billion', '150,000 employees', 'doubled market value $600 billion'], 'relations': ['net_profit_margin (Profits/Market_Value = 15%)', 'value_to_employee_ratio (employees per $1 billion market value)', 'growth_target (double market value in 5 years)'], 'intent': 'calculate_additional_employees_for_market_value_growth', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [300, 45, 150000, 600], 'units': {'currency': 'billion USD', 'employee_count': 'employees', 'margin_unit': 'percentage (%)', 'conversion': '1 billion USD market value per X employees'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Market_Value', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的市值（十亿美元）', 'examples': ['8000.0', '7500.0', '7000.0', '8500.0', '7200.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}]}}\nA mathematical logic question is as follows:\nAn oil company has a market value of $300 billion, a net profit of $45 billion, and 150,000 employees. If the company plans to double its market value in the next five years while maintaining the same net profit margin, how many additional employees will it need to hire?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((Market_Value * 2 * (Profits / Market_Value)) / Profits) * Number_Employees - Number_Employees AS Required_Employee_Increase FROM company WHERE Market_Value = 300 AND Profits = 45 AND Number_Employees = 150000;",
        "db_id": "gas"
    },
    {
        "id": 435,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate', 'sales', 'two years'], 'relations': ['company_to_growth (oil company → Revenue_Growth_Rate)', 'sales_target (current sales → future sales)'], 'intent': 'calculate_annual_growth_rate_for_target', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [6, 60, 50, 2], 'units': {'currency': 'billion dollars (implied)', 'growth_rate': 'percentage (%)', 'conversion': 'compound growth formula: (1 + r)^n = final_value / initial_value'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a revenue growth rate of 6%, with last year's sales at 60 billion dollars. If the company aims to increase its sales by 50% over the next two years, what annual revenue growth rate must it achieve?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Current Revenue Growth Rate: 6%' AS Current_Growth_Rate, 'Required Annual Growth Rate: ~22.47%' AS Required_Growth_Rate FROM company WHERE Sales = 60 AND Revenue_Growth_Rate = 6;",
        "db_id": "gas"
    },
    {
        "id": 436,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'employees', 'branches', 'sales', 'profits'], 'relations': ['company_has_employees (oil company → 1 billion employees)', 'company_has_branches (oil company → 100 million branches)', 'company_has_sales (oil company → 100 trillion dollars)', 'company_has_profits (oil company → 50 trillion dollars)'], 'intent': 'calculate_average_metrics_per_employee_and_branch', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000000000, 50000000000000, 1000000000, 100000000], 'units': {'currency': 'dollars (USD)', 'people': 'employees (count)', 'business_units': 'branches (count)', 'conversion': '1 trillion = 1e12, 1 billion = 1e9, 1 million = 1e6'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has sales of 100 trillion dollars, profits of 50 trillion dollars, and 1 billion employees, what is the average sales and average profit per employee for the company? If the company has 100 million branches, what is the average sales and average profit per branch?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales / Number_Employees AS Average_Sales_Per_Employee, Profits / Number_Employees AS Average_Profit_Per_Employee, Sales / Number_Branches AS Average_Sales_Per_Branch, Profits / Number_Branches AS Average_Profit_Per_Branch FROM company WHERE Sales = 1000000 AND Profits = 500000 AND Number_Employees = 1000000000 AND Number_Branches = 100000000;",
        "db_id": "gas"
    },
    {
        "id": 437,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'fuel inventory (10 million liters)', 'current sulfur content (50 ppm)', 'target sulfur content (30 ppm)', 'total sulfur reduction'], 'relations': ['inventory_owned_by_company', 'sulfur_content_attribute_of_fuel', 'reduction_plan_applied'], 'intent': 'calculate_total_sulfur_reduction', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [10000000, 50, 30], 'units': {'volume': 'liters', 'sulfur_concentration': 'ppm (mg/L)', 'mass_conversion': '1 ppm = 1 mg/L → total mass (mg) = concentration (ppm) × volume (L)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}]}}\nA physical knowledge question is as follows:\nIf an oil company has a fuel inventory of 10 million liters, with a sulfur content of 50 ppm (parts per million) per liter, and the company plans to reduce the sulfur content to 30 ppm within the next year, how much total sulfur needs to be reduced?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * (Sulfur_Content - 30) * 1e-6 AS Required_Sulfur_Reduction FROM gas WHERE Stock_Liters = 10000000 AND Sulfur_Content = 50;",
        "db_id": "gas"
    },
    {
        "id": 438,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'total assets $200 billion', 'net profit $30 billion', 'debt-to-equity ratio 1.5', 'target assets increase 50%', 'target debt-to-equity ratio 1.2', 'additional shareholder equity'], 'relations': ['assets_to_equity (Assets = Debt + Equity)', 'ratio_constraint (Debt/Equity = 1.5 → 1.2)', 'asset_growth (200B → 300B)'], 'intent': 'calculate_additional_equity_required', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [200, 30, 1.5, 50, 1.2], 'units': {'currency': 'USD billion', 'ratio': 'unitless', 'growth': 'percentage', 'conversion': 'Assets = Debt + Equity'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA mathematical logic question is as follows:\nAn oil company has total assets of $200 billion, a net profit of $30 billion, and a debt-to-equity ratio of 1.5. The company plans to increase its total assets by 50% over the next three years while reducing the debt-to-equity ratio to 1.2. How much additional shareholder equity is needed?\nyour response just have a SQL without anything.\n",
        "solution": "WITH Current_Equity AS (SELECT Assets / (1 + Debt_Equity_Ratio) AS Current_Equity FROM company WHERE Assets = 2000 AND Debt_Equity_Ratio = 1.5), Target_Assets AS (SELECT Assets * 1.5 AS Target_Assets FROM company WHERE Assets = 2000), Target_Equity AS (SELECT Target_Assets / (1 + 1.2) AS Target_Equity FROM Target_Assets) SELECT Target_Equity - Current_Equity AS Required_Equity_Increase FROM Current_Equity, Target_Equity;",
        "db_id": "gas"
    },
    {
        "id": 439,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', \"last year's sales ($50 billion)\", 'target sales ($80 billion)', 'five-year period'], 'relations': ['current_growth_irrelevant (initial 4% growth is not used in CAGR calculation)', 'sales_to_growth (requires compound growth formula)'], 'intent': 'calculate_required_compound_annual_growth_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 80, 5], 'units': {'currency': 'billion USD', 'time': 'years', 'conversion': 'CAGR formula: [(End_Value / Start_Value)^(1/Periods) - 1]'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA common sense reasoning question is as follows:\nThe revenue growth rate of an oil company is 4%, with last year's sales amounting to $50 billion. The company aims to increase its sales to $80 billion over the next five years. What annual revenue growth rate is needed to achieve this?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Current Revenue Growth Rate: 4%' AS Current_Growth_Rate, 'Required Annual Growth Rate: ~9.86%' AS Required_Growth_Rate FROM company WHERE Sales = 50 AND Revenue_Growth_Rate = 4;",
        "db_id": "gas"
    },
    {
        "id": 440,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales (100 trillion dollars)', 'profits (50 trillion dollars)', 'employees (10 billion)', 'branches (1 billion)'], 'relations': ['sales_per_employee (Sales ÷ Number_Employees)', 'profits_per_employee (Profits ÷ Number_Employees)', 'sales_per_branch (Sales ÷ Number_Branches)', 'profits_per_branch (Profits ÷ Number_Branches)'], 'intent': 'calculate_average_metrics_per_unit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000000000, 50000000000000, 10000000000, 1000000000], 'units': {'currency': 'dollars (trillion scale implied)', 'employees': 'count (billion scale implied)', 'branches': 'count (billion scale implied)', 'conversion': '1 trillion = 1e12, 1 billion = 1e9'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has sales of 100 trillion dollars, a profit of 50 trillion dollars, and 10 billion employees, what is the average sales and average profit per employee? If the company has 1 billion branches, what is the average sales and average profit per branch?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales / Number_Employees AS Average_Sales_Per_Employee, Profits / Number_Employees AS Average_Profit_Per_Employee, Sales / Number_Branches AS Average_Sales_Per_Branch, Profits / Number_Branches AS Average_Profit_Per_Branch FROM company WHERE Sales = 100000000 AND Profits = 50000000 AND Number_Employees = 10000000000 AND Number_Branches = 1000000000;",
        "db_id": "gas"
    },
    {
        "id": 441,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\"oil company\", \"fuel inventory (8 million liters)\", \"carbon emissions (3.2 g/L)\", \"emissions reduction target (15%)\"],\n  \"relations\": [\n    \"inventory_to_emissions (inventory × emission_rate = total_emissions)\",\n    \"reduction_to_sales (emissions_reduction ÷ emission_rate = sales_reduction)\"\n  ],\n  \"intent\": \"calculate_fuel_sales_reduction_for_emission_target\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [8000000, 3.2, 15],\n  \"units\": {\n    \"volume\": \"liters\",\n    \"emission\": \"grams per liter (g/L)\",\n    \"reduction\": \"percentage (%)\",\n    \"conversion\": \"1 liter reduction = 3.2g emissions reduction\"\n  },\n  \"required_tables\": [\"gas\"],\n  \"required_fields\": [\n    \"gas.Stock_Liters\", \n    \"gas.Carbon_Emission\"\n  ]\n}\n\n**Explanation:**  \n1. **Entities/Relations:** Focuses on fuel inventory → carbon emissions link and the 15% reduction goal.  \n2. **Intent:** Targets sales reduction calculation for emission targets.  \n3. **Reasoning:** Requires multiplication (total emissions) and percentage calculation (15% reduction).  \n4. **Units:** Explicitly notes volume (liters) and emission rate (g/L) conversions.  \n5. **Tables/Fields:** Only `gas` table contains both inventory (`Stock_Liters`) and emission data (`Carbon_Emission`).  \n*Note: Company identification isn't needed as emission parameters are fuel-specific.*\nA physical knowledge question is as follows:\nAn oil company has a fuel inventory of 8 million liters, with each liter of fuel emitting 3.2 grams of carbon emissions. The company plans to reduce its carbon emissions by 15% over the next year. How many liters of fuel sales need to be reduced to achieve this?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters * Carbon_Emission * 0.15) / Carbon_Emission AS Required_Reduction_Liters FROM gas WHERE Stock_Liters = 8000000 AND Carbon_Emission = 3.2;",
        "db_id": "gas"
    },
    {
        "id": 442,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'current market value 250 billion dollars', 'current net profit 40 billion dollars', 'current employees 120000', 'future market value 500 billion dollars', 'net profit margin', 'additional employees'], 'relations': ['company_has_market_value (oil company → current market value)', 'company_has_net_profit (oil company → current net profit)', 'company_has_employees (oil company → current employees)', 'company_plan_market_value (oil company → future market value in five years)', 'constant_net_profit_margin (oil company → net profit margin remains unchanged)', 'scaling_relation (market value growth → proportional employee growth)'], 'intent': 'calculate_additional_employees_required', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [250, 40, 120000, 500], 'units': {'market_value': 'billion dollars (1 billion = 1e9)', 'net_profit': 'billion dollars', 'employees': 'count', 'conversion': '1 billion = 1e9'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Market_Value', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的市值（十亿美元）', 'examples': ['8000.0', '7500.0', '7000.0', '8500.0', '7200.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has a market value of 250 billion dollars, a net profit of 40 billion dollars, and 120,000 employees. The company plans to increase its market value to 500 billion dollars in the next five years while maintaining the same net profit margin. How many additional employees will need to be hired?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((Market_Value * 2 * (Profits / Market_Value)) / Profits) * Number_Employees - Number_Employees AS Required_Employee_Increase FROM company WHERE Market_Value = 2500 AND Profits = 400 AND Number_Employees = 120000;",
        "db_id": "gas"
    },
    {
        "id": 443,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate', \"last year's sales $70 billion\", 'target sales $100 billion', 'next three years'], 'relations': ['sales_to_growth (current sales → future sales via growth rate)', 'time_period (3-year horizon)', 'compound_growth_calculation (formula-based relationship)'], 'intent': 'calculate_required_annual_revenue_growth_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70, 100, 3], 'units': {'currency': 'billion USD', 'time': 'years', 'growth_rate': 'percentage (%)', 'calculation_basis': 'Compound Annual Growth Rate (CAGR) formula'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a revenue growth rate of 5%, with last year's sales reaching $70 billion. The company aims to increase its sales to $100 billion within the next three years, so what annual revenue growth rate would be required to achieve this?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Current Revenue Growth Rate: 5%' AS Current_Growth_Rate, 'Required Annual Growth Rate: ~12.66%' AS Required_Growth_Rate FROM company WHERE Sales = 70 AND Revenue_Growth_Rate = 5;",
        "db_id": "gas"
    },
    {
        "id": 444,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'total sales 100 trillion', 'total profits 50 trillion', '100 billion employees', '10 billion branches'], 'relations': ['sales_per_employee (total_sales / employees)', 'profit_per_employee (total_profits / employees)', 'sales_per_branch (total_sales / branches)', 'profit_per_branch (total_profits / branches)'], 'intent': 'calculate_average_metrics_per_unit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 50, 100, 10], 'units': {'currency_scale': '1 trillion = 10^12 units, 1 billion = 10^9 units', 'required_conversions': ['Convert sales/profits (trillion) to consistent base: 100 trillion = 100 × 10^12', 'Convert employees/branches (billion): 100 billion = 100 × 10^9']}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has sales of 100 trillion, profits of 50 trillion, and 100 billion employees, what is the company's average sales and average profit per employee? If the company has 10 billion branches, what is the average sales and average profit per branch?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales / Number_Employees AS Average_Sales_Per_Employee, Profits / Number_Employees AS Average_Profit_Per_Employee, Sales / Number_Branches AS Average_Sales_Per_Branch, Profits / Number_Branches AS Average_Profit_Per_Branch FROM company WHERE Sales = 10000000000 AND Profits = 5000000000 AND Number_Employees = 100000000000 AND Number_Branches = 10000000000;",
        "db_id": "gas"
    },
    {
        "id": 445,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', 'fuel inventory of 12 million liters', 'carbon emissions of 2.7 grams per liter', '25% emissions reduction target'], 'relations': ['company_owns_fuel (petroleum company → fuel inventory)', 'emission_per_unit (1 liter → 2.7g CO₂)', 'reduction_goal (current emissions → 75% emissions)'], 'intent': 'calculate_fuel_reduction_for_emission_target', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [12000000, 2.7, 25], 'units': {'volume': 'liters (stock)', 'emission': 'grams per liter (g/L)', 'reduction': 'percentage (%)', 'conversion': '1 kg = 1000 g (implied for calculations)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.station_company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}, {'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}]}}\nA physical knowledge question is as follows:\nA certain petroleum company has a fuel inventory of 12 million liters, with each liter of fuel emitting 2.7 grams of carbon emissions. The company plans to reduce its carbon emissions by 25% over the next year. How many liters of fuel sales need to be reduced to achieve this?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters * Carbon_Emission * 0.25) / Carbon_Emission AS Required_Reduction_Liters FROM gas WHERE Stock_Liters = 12000000 AND Carbon_Emission = 2.7;",
        "db_id": "gas"
    },
    {
        "id": 446,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'total assets $300 billion', 'net profit $45 billion', 'debt-to-equity ratio 1.8', 'future total assets $450 billion', 'target debt-to-equity ratio 1.5', 'additional shareholder equity'], 'relations': ['accounting_equation (Assets = Liabilities + Equity)', 'debt_to_equity_relation (Debt_Equity_Ratio = Total_Debt / Shareholder_Equity)'], 'intent': 'calculate_additional_shareholder_equity_required', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [300, 45, 1.8, 450, 1.5], 'units': {'assets': 'billion USD', 'profit': 'billion USD', 'ratio': 'unitless', 'equity': 'billion USD (derived)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA mathematical logic question is as follows:\nAn oil company has total assets of $300 billion, a net profit of $45 billion, and a debt-to-equity ratio of 1.8. If the company plans to increase its total assets to $450 billion over the next three years while reducing the debt-to-equity ratio to 1.5, how much additional shareholder equity is required?\nyour response just have a SQL without anything.\n",
        "solution": "WITH Current_Equity AS (SELECT Assets / (1 + Debt_Equity_Ratio) AS Current_Equity FROM company WHERE Assets = 3000 AND Debt_Equity_Ratio = 1.8), Target_Assets AS (SELECT 4500 AS Target_Assets), Target_Equity AS (SELECT Target_Assets / (1 + 1.5) AS Target_Equity FROM Target_Assets) SELECT Target_Equity - Current_Equity AS Required_Equity_Increase FROM Current_Equity, Target_Equity;",
        "db_id": "gas"
    },
    {
        "id": 447,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'current sales ($90 billion)', 'target sales ($120 billion)', 'timeframe (4 years)'], 'relations': ['sales_growth (current → target)', 'time_period (4 years)', 'compound_annual_growth (required rate)'], 'intent': 'calculate_required_annual_revenue_growth_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [90, 120, 4], 'units': {'currency': 'billion USD', 'time': 'years', 'growth_rate': 'percentage (%)', 'conversion': 'Compound Annual Growth Rate (CAGR) formula'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a revenue growth rate of 7%, with last year's sales reaching $90 billion. If the company aims to increase its sales to $120 billion within the next four years, what annual revenue growth rate must it achieve?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Current Revenue Growth Rate: 7%' AS Current_Growth_Rate, 'Required Annual Growth Rate: ~7.46%' AS Required_Growth_Rate FROM company WHERE Sales = 90 AND Revenue_Growth_Rate = 7;",
        "db_id": "gas"
    },
    {
        "id": 448,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales (100 trillion dollars)', 'profit (50 trillion dollars)', 'workforce (100 billion people)', 'branches (100 billion)'], 'relations': ['sales_per_employee (total sales ÷ number of employees)', 'profit_per_employee (total profit ÷ number of employees)', 'sales_per_branch (total sales ÷ number of branches)', 'profit_per_branch (total profit ÷ number of branches)'], 'intent': 'calculate_average_metrics_per_employee_and_per_branch', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000000000, 50000000000000, 100000000000, 100000000000], 'units': {'currency': 'USD (dollars)', 'employees': 'people', 'branches': 'branch units', 'conversion': '1 trillion = 1e12, 1 billion = 1e9'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has sales of 100 trillion dollars, profit of 50 trillion dollars, and a workforce of 100 billion people, what is the average sales and average profit per employee? If the company has 100 billion branches, what is the average sales and average profit per branch?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales / Number_Employees AS Average_Sales_Per_Employee, Profits / Number_Employees AS Average_Profit_Per_Employee, Sales / Number_Branches AS Average_Sales_Per_Branch, Profits / Number_Branches AS Average_Profit_Per_Branch FROM company WHERE Sales = 100000000000 AND Profits = 50000000000 AND Number_Employees = 1000000000000 AND Number_Branches = 100000000000;",
        "db_id": "gas"
    },
    {
        "id": 449,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n\n{\n  \"entities\": [\n    \"oil company fuel inventory\",\n    \"fuel density 0.85 kg/L\",\n    \"transport distance 1000 km\",\n    \"vehicle fuel consumption 30L/100km\"\n  ],\n  \"relations\": [\n    \"inventory_to_transport_volume (30e6 L → total volume)\",\n    \"consumption_to_distance (1000km → total fuel needed per vehicle)\"\n  ],\n  \"intent\": \"calculate_transport_vehicle_count\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [30000000, 0.85, 1000, 30, 100],\n  \"units\": {\n    \"volume\": \"liters (L)\",\n    \"density\": \"kg/L\",\n    \"distance\": \"km\",\n    \"consumption\": \"L/100km\",\n    \"conversion\": \"Fuel per vehicle = (consumption_rate * distance) / 100\"\n  },\n  \"required_tables\": [],\n  \"required_fields\": []\n}\n\n**Explanation of empty tables/fields:**\n1. **Database Mismatch**: The provided database schema focuses on gas station operations (inventory, pricing, stations) without transport logistics.\n2. **Missing Concepts**: No tables exist for:\n   - Transport vehicles (capacity, consumption rates)\n   - Transportation tasks (routes, distances)\n   - Fleet management\n3. **Critical Gaps**: Required fields like *vehicle_capacity* or *fuel_per_km* are absent in all tables.\n4. **Resolution**: This query cannot be answered with the current database schema. Physical calculations require external computation (total fuel / (consumption_rate × distance)), not SQL operations on existing tables.\nA physical knowledge question is as follows:\nAn oil company has a fuel inventory of 30 million liters, with a density of 0.85 kilograms per liter. The company plans to transport this fuel to a destination 1,000 kilometers away. The fuel consumption of the transport vehicles is 30 liters per 100 kilometers. How many transport vehicles are needed to complete this transportation task?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CEIL((Stock_Liters * Density) / (Vehicle_Capacity - (Distance / 100 * Fuel_Consumption * Density))) AS Required_Vehicles FROM (SELECT 30000000 AS Stock_Liters, 0.85 AS Density, 1000 AS Distance, 30 AS Fuel_Consumption, 20000 AS Vehicle_Capacity) AS data;",
        "db_id": "gas"
    },
    {
        "id": 450,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'current sales $120B', 'current profit $18B', 'current workforce 300k', 'target profit $36B', 'target workforce 400k'], 'relations': ['profit_margin_relation (Profit = Sales × Net_Profit_Margin)', 'workforce_growth_relation (workforce increase is independent)'], 'intent': 'calculate_required_sales_increase_to_achieve_target_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120, 18, 300000, 36, 400000], 'units': {'currency': 'USD billions', 'headcount': 'employees', 'conversion': '1 billion = 1e9'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Number_Employees', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的员工数量。', 'examples': ['120000', '90000', '70000', '100000', '80000']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $120 billion, a net profit of $18 billion, and a workforce of 300,000 employees. If the company plans to increase its net profit to $36 billion and expand its workforce to 400,000 employees within the next five years, how much should it increase its sales to?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Target_Profits / (Profits / Sales)) AS Target_Sales FROM (SELECT 1200 AS Sales, 180 AS Profits, 360 AS Target_Profits) AS data;",
        "db_id": "gas"
    },
    {
        "id": 451,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'current sales $70 billion', 'target sales $100 billion', 'timeframe 3 years'], 'relations': ['compound_growth_relationship (70B → 100B in 3 years)', 'financial_target (current sales → future sales projection)'], 'intent': 'calculate_required_compound_annual_growth_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70, 100, 3, 4], 'units': {'currency': 'billion USD', 'growth_rate': 'percentage (%)', 'time': 'years'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA common sense reasoning question is as follows:\nAn oil company has a revenue growth rate of 4%, with last year's sales reaching $70 billion. If the company aims to increase its sales to $100 billion within the next three years, what annual revenue growth rate would be required to achieve that goal?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Current Revenue Growth Rate: 4%' AS Current_Growth_Rate, 'Required Annual Growth Rate: ~12.66%' AS Required_Growth_Rate FROM company WHERE Sales = 70 AND Revenue_Growth_Rate = 4;",
        "db_id": "gas"
    },
    {
        "id": 452,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'market value 100 trillion dollars', '10 million employees', 'severance package 1 million dollars per employee', 'carbon emissions 5000 grams per liter', 'petroleum product price 0.05 dollars per liter'], 'relations': ['company_to_employees (oil company → employee count)', 'company_to_assets (oil company → market value)', 'severance_calculation (employees × package amount)', 'emissions_to_sales (carbon intensity → sales conversion)', 'sales_to_emissions (revenue → total carbon output)'], 'intent': 'calculate_total_severance_cost_and_total_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000000000, 10000000, 1000000, 5000, 0.05], 'units': {'currency': 'dollars (USD)', 'employees': 'count', 'severance': 'dollars per employee', 'carbon_emissions': 'grams per liter', 'fuel_price': 'dollars per liter', 'conversion': 'total_sales / price_per_liter = total_liters'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}, {'column': 'Market_Value', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的市值（十亿美元）', 'examples': ['8000.0', '7500.0', '7000.0', '8500.0', '7200.0']}]}}\nA hypothetical reasoning question is as follows:\nSuppose an oil company's market value reaches 100 trillion dollars, and it has 10 million employees. If the company decides to convert all its assets into cash and offers a severance package of 1 million dollars per employee for layoffs, what is the total severance cost the company needs to pay? Additionally, if the company's carbon emissions per liter of petroleum product are 5000 grams per liter, and the price per liter of petroleum product is 0.05 dollars, what is the total carbon emissions generated by the company in one year through the sale of petroleum products?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Number_Employees * 1000000 AS Total_Severance_Cost, (Market_Value / 0.05) * 5000 AS Total_Carbon_Emission FROM company WHERE Market_Value = 100000000000000 AND Number_Employees = 10000000;",
        "db_id": "gas"
    },
    {
        "id": 453,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'oil company', 'fuel', 'total capacity', 'daily sales volume', 'energy per liter'], 'relations': ['owned_by (gas station → oil company)', 'sells (gas station → fuel)', 'releases_energy (fuel → energy)'], 'intent': 'calculate_total_daily_energy_released_from_fuel_sales', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2000000, 50000, 35], 'units': {'capacity': 'liters', 'sales_volume': 'liters per day', 'energy': 'megajoules per liter', 'total_energy': 'megajoules per day', 'conversion': 'total_energy = sales_volume * energy_per_liter'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nThe total capacity of a gas station owned by an oil company is 2 million liters. If the gas station sells 50,000 liters of fuel per day, and each liter of fuel releases 35 megajoules of energy when burned, calculate the total energy released through fuel sales by the gas station each day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Daily_Sales * Energy_Per_Liter AS Total_Energy_Release FROM (SELECT 50000 AS Daily_Sales, 35 AS Energy_Per_Liter) AS data;",
        "db_id": "gas"
    },
    {
        "id": 454,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales revenue $75 billion', 'net profit margin 8%', 'reinvestment rate 25%'], 'relations': ['revenue_to_profit ($75B revenue → net profit via 8% margin)', 'profit_to_reinvestment (net profit → 25% reinvestment)'], 'intent': 'calculate_net_profit_and_reinvestment_amount', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [75000000000, 0.08, 0.25], 'units': {'currency': 'USD (implied by $)', 'scaling': 'billion (1e9 multiplier)', 'percentages': 'net profit margin (8%), reinvestment rate (25%)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}]}}\nA mathematical logic question is as follows:\nThe sales revenue of an oil company is $75 billion, with a net profit margin of 8%. Calculate the company's net profit. If the company decides to reinvest 25% of its net profit, determine the amount to be reinvested.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit, (Sales * (Net_Profit_Margin / 100)) * 0.25 AS Reinvestment_Amount FROM company WHERE Sales = 75 AND Net_Profit_Margin = 8;",
        "db_id": "gas"
    },
    {
        "id": 455,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'current revenue growth rate 5%', 'target cumulative revenue growth 20%', 'three years timeframe'], 'relations': ['company_to_growth_metric (oil company → Revenue_Growth_Rate)', 'growth_target_timeframe (20% growth ↔ 3 years)'], 'intent': 'calculate_required_annual_revenue_growth_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 20, 3], 'units': {'growth_rate': '% (percentage)', 'time': 'years', 'conversion': 'compound annual growth rate formula: r = [(End_Value/Start_Value)^(1/n) - 1] × 100'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA common sense reasoning question is as follows:\nThe revenue growth rate of an oil company is 5%. If the company aims to achieve a 20% increase in revenue over the next three years, calculate the required annual revenue growth rate.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Current Revenue Growth Rate: 5%' AS Current_Growth_Rate, 'Required Annual Growth Rate: ~6.67%' AS Required_Growth_Rate FROM company WHERE Revenue_Growth_Rate = 5;",
        "db_id": "gas"
    },
    {
        "id": 456,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company (hypothetical: market value 1 trillion dollars)', 'fuel (emission rate: 100 grams carbon per liter)', 'fuel inventory (1 billion liters)', 'global oil companies'], 'relations': ['company_inventory_relation (company has fuel inventory)', 'fuel_emission_relation (fuel has carbon emission rate)', 'company_ownership (via station_company to gas_station)', 'station_inventory (gas_station linked to gas inventory)'], 'intent': 'calculate total carbon emissions from selling entire fuel inventory for a hypothetical oil company and estimate global impact if all oil companies do the same', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [1000000000000, 100, 1000000000], 'units': {'market_value': 'dollars (conversion: 1 trillion = 1e12)', 'carbon_emission': 'grams per liter', 'inventory_volume': 'liters', 'emissions_output': 'grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}], 'gas.station_company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}, {'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company's market value reaches 1 trillion dollars, with its fuel emitting 100 grams of carbon per liter, if the company decides to sell off its entire fuel inventory within one month, and the fuel inventory is 1 billion liters, calculate the company's total carbon emissions during that month. If all global oil companies were to take this action, what would be the impact on global carbon emissions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * Carbon_Emission AS Total_Carbon_Emission, Stock_Liters * Carbon_Emission * 100 AS Global_Carbon_Emission FROM gas WHERE Stock_Liters = 1000000000 AND Carbon_Emission = 100;",
        "db_id": "gas"
    },
    {
        "id": 457,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'environmental score 70', 'main industry oil extraction', 'carbon emissions 10 million tons', 'offset requirement 100 trees per ton', 'target environmental score 90'], 'relations': ['industry_to_emissions (oil extraction → carbon emissions)', 'emissions_to_offset (carbon tons → trees required)', 'score_improvement_goal (70 → 90)'], 'intent': 'calculate_trees_required_for_carbon_offset', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70, 10, 100, 90], 'units': {'emission_unit': 'tons', 'offset_unit': 'trees per ton', 'conversion': 'total_trees = emission_tons × trees_per_ton', 'result_unit': 'trees'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nAn oil company has an environmental score of 70 (out of 100), with its main industry being oil extraction. The company emits 10 million tons of carbon annually, and it requires planting 100 trees to offset each ton of carbon emissions. The company aims to increase its environmental score to 90 within the next five years. How many trees need to be planted to offset its carbon emissions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Annual_Carbon_Emission * Years * Trees_Per_Ton AS Total_Trees_Needed FROM (SELECT 10000000 AS Annual_Carbon_Emission, 5 AS Years, 100 AS Trees_Per_Ton) AS data;",
        "db_id": "gas"
    },
    {
        "id": 458,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $500 billion', 'net profit margin 12%', 'total assets $2 trillion', 'debt-to-equity ratio 1.2:1', 'future sales growth 20%', 'future net profit margin 15%', 'future debt-to-equity ratio 1:1', 'future total assets', 'future shareholder equity'], 'relations': ['current_financials (company → sales, profit margin, assets, debt-equity)', 'growth_projection (sales +20% over 3 years)', 'ratio_change (debt-equity → 1:1)', 'asset_equity_relation (total assets = debt + equity)'], 'intent': 'calculate_future_total_assets_and_shareholder_equity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 12, 2000, 1.2, 20, 15, 1], 'units': {'currency': 'billion dollars (scaled from trillions where needed)', 'ratios': 'percentage (margin), decimal (debt-equity)', 'conversions': '$2 trillion = 2000 billion, 20% growth = 1.2 multiplier'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}, {'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $500 billion, a net profit margin of 12%, total assets of $2 trillion, and a debt-to-equity ratio of 1.2:1. The company plans to increase sales by 20% over the next three years, raise the net profit margin to 15%, and reduce the debt-to-equity ratio to 1:1. What will the total assets and shareholder equity be three years later?\nyour response just have a SQL without anything.\n",
        "solution": "WITH Future_Sales AS (SELECT Sales * 1.20 AS Future_Sales FROM company WHERE Sales = 5000), Future_Profits AS (SELECT Future_Sales * 0.15 AS Future_Profits FROM Future_Sales), Current_Equity AS (SELECT Assets / (1 + Debt_Equity_Ratio) AS Current_Equity FROM company WHERE Assets = 20000 AND Debt_Equity_Ratio = 1.2), Future_Equity AS (SELECT Current_Equity + Future_Profits AS Future_Equity FROM Current_Equity, Future_Profits) SELECT Future_Equity, 2 * Future_Equity AS Future_Assets FROM Future_Equity;",
        "db_id": "gas"
    },
    {
        "id": 459,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'current branch offices (500)', 'additional employees per branch (10)'], 'relations': ['company_has_branches (oil company → branch offices)', 'branch_requires_additional_employees (each branch office → 10 additional employees)'], 'intent': 'calculate_total_additional_employees', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'branch_count': 'count', 'employee_count': 'count', 'additional_employees_rate': 'employees per branch'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}, {'column': 'Main_Industry', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的主要行业', 'examples': ['石油与天然气', '能源与化工', '可再生能源', '新能源', '能源']}]}}\nA common sense reasoning question is as follows:\nThe oil company has 100,000 employees and 500 branch offices. The company plans to increase its revenue growth rate from 5% to 10% over the next two years. To support business expansion, each branch office will need an average of 10 additional employees. How many employees will the company need to add in total?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Number_Branches * 10 AS Additional_Employees FROM company WHERE Number_Employees = 100000 AND Number_Branches = 500;",
        "db_id": "gas"
    },
    {
        "id": 460,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'competitors', 'market capitalization', 'net profit margin', 'acquisition'], 'relations': ['company_to_profit (oil company uses net profits for acquisition)', 'competitor_market_cap (average market cap defines acquisition cost)'], 'intent': 'calculate_number_of_competitors_acquired', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000000000, 50, 500000000000], 'units': {'currency': 'dollars', 'conversion_notes': '1 trillion = 1e12 dollars; 1 billion = 1e9 dollars'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Market_Value', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的市值（十亿美元）', 'examples': ['8000.0', '7500.0', '7000.0', '8500.0', '7200.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an oil company has a market capitalization of 10 trillion dollars, a net profit margin of 50%, and the company decides to use all its net profits to purchase shares of its competitors. If the average market capitalization of the competitors is 500 billion dollars, how many competitors can the company fully acquire?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Market_Value * (Net_Profit_Margin / 100)) / Competitor_Market_Value AS Competitors_Acquired FROM (SELECT 10000000000000 AS Market_Value, 50 AS Net_Profit_Margin, 500000000000 AS Competitor_Market_Value) AS data;",
        "db_id": "gas"
    },
    {
        "id": 461,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel batch (50,000 liters)', 'carbon emission (85g/L)'], 'relations': ['emission_per_volume (85g/L)', 'volume_to_emission (50,000L → total CO₂)'], 'intent': 'calculate_total_carbon_dioxide_from_fuel_combustion', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [85, 50000], 'units': {'emission_rate_unit': 'g/L (grams per liter)', 'volume_unit': 'L (liters)', 'output_unit': 'kg (kilograms)', 'conversion': '1 kg = 1000 g'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA physical knowledge question is as follows:\nA certain type of fuel has a carbon emission of 85 grams per liter, and a specific batch of this fuel has an inventory of 50,000 liters. How many kilograms of carbon dioxide will be produced when this batch of fuel is completely burned?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (50000 * 85) / 1000 AS Total_CO2_Kilograms FROM gas WHERE Carbon_Emission = 85;",
        "db_id": "gas"
    },
    {
        "id": 462,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel batch', 'price per liter $1.5', 'tax per liter $0.3', 'inventory 100,000 liters', 'operating cost percentage 15%'], 'relations': ['price_to_revenue (price × quantity → gross revenue)', 'tax_to_cost (tax × quantity → total tax)', 'revenue_to_operating_cost (gross revenue × 15% → operating cost)'], 'intent': 'calculate_net_profit_from_fuel_sale', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.5, 0.3, 100000, 15], 'units': {'currency': 'USD', 'volume': 'liters', 'percentage': '%', 'conversion_factors': {'tax_deduction': '$0.3 per liter', 'operating_cost': '15% of gross revenue'}}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}, {'column': 'Tax_per_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的税收（美元）。', 'examples': ['0.3', '0.28', '0.35', '0.25', '0.32']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nThe price of a certain fuel type is $1.5 per liter, with a tax of $0.3 per liter, and the current inventory is 100,000 liters. If all the inventory is sold at the current price and 15% of the total sales revenue is required to cover operating costs, what is the net profit from selling this batch of fuel?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100000 * (1.5 + 0.3)) * (1 - 0.15) AS Net_Profit FROM gas WHERE Stock_Liters = 100000;",
        "db_id": "gas"
    },
    {
        "id": 463,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory', 'minimum inventory level (10,000 liters)', 'current inventory (15,000 liters)', 'daily fuel sales (2,000 liters)', 'next delivery date (5 days)'], 'relations': ['consumption_lead_time (daily sales × days until delivery → projected consumption)', 'inventory_threshold (current_stock - projected_consumption vs minimum_stock)'], 'intent': 'determine_inventory_warning_trigger', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 15000, 2000, 5], 'units': {'volume': 'liters', 'time': 'days', 'conversion_required': 'none'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA common sense reasoning question is as follows:\nThe minimum inventory level for a certain fuel type is 10,000 liters, the current inventory is 15,000 liters, and the next fuel delivery date is in 5 days. If the daily fuel sales volume is 2,000 liters, will the inventory warning be triggered before the next delivery?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (15000 - 10000) / 2000 < 5 THEN '会触发预警' ELSE '不会触发预警' END AS Inventory_Warning FROM gas WHERE Stock_Liters = 15000 AND Minimum_Stock_Liters = 10000;",
        "db_id": "gas"
    },
    {
        "id": 464,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel stock', 'carbon emission per liter', 'global fuel emissions'], 'relations': ['fuel_to_emission (stock × emission_factor = total_emission)', 'local_to_global_scaling (single_batch_emission → global_scale_emission)'], 'intent': 'calculate_carbon_dioxide_emissions', 'reasoning_type': 'physical knowledge reasoning & ideal hypothesis reasoning', 'numerical_values': [10000000, 1000], 'units': {'volume': 'liters', 'emission_factor': 'grams per liter', 'emission_output': 'grams', 'conversion': '1 kg = 1000 grams (implied scale)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the stock of a certain fuel type is 10,000,000 liters, with a carbon emission of 1,000 grams per liter, and this batch of fuel is entirely sold and burned within one day. What is the amount of carbon dioxide emissions generated on that day? If all fuel globally reaches this emission level, what would be the global daily carbon dioxide emissions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (10000000 * 1000) / 1000 AS CO2_Emission_Kilograms, (10000000 * 1000) / 1000 * (SELECT COUNT(*) FROM gas) AS Global_CO2_Emission_Kilograms FROM gas WHERE Stock_Liters = 10000000 AND Carbon_Emission = 1000;",
        "db_id": "gas"
    },
    {
        "id": 465,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel batch (20,000 liters)', 'sulfur content (50 ppm)', 'sulfur dioxide (SO₂)'], 'relations': ['combustion_conversion (S → SO₂)', 'mass_relationship (S:SO₂ = 1:2 molecular weight ratio)'], 'intent': 'calculate_sulfur_dioxide_mass_produced', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50000, 20000], 'units': {'volume': 'liters (L)', 'concentration': 'ppm (parts per million, equivalent to mg/L)', 'mass': 'kilograms (kg)', 'conversions': ['S content = concentration × volume', 'SO₂ mass = S mass × (molar mass SO₂ / molar mass S) = S mass × 2']}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}]}}\nA physical knowledge question is as follows:\nA certain type of fuel has a sulfur content of 50 parts per million (ppm) and a current inventory of 20,000 liters. If the sulfur is completely converted into sulfur dioxide (SO?) after combustion, how many kilograms of sulfur dioxide will be produced by burning this batch of fuel?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (20000 * 50 * 64.07 / 32.06 / 1000000) AS SO2_Mass_Kilograms FROM gas WHERE Stock_Liters = 20000 AND Sulfur_Content = 50;",
        "db_id": "gas"
    },
    {
        "id": 466,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel batch', 'operating costs (12%)', 'environmental projects allocation (30%)'], 'relations': ['price_tax_composition ($2.0/L price + $0.5/L tax)', 'profit_calculation_flow (revenue → costs → net profit → environmental allocation)'], 'intent': 'calculate_net_profit_and_environmental_investment', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2.0, 0.5, 80000, 0.12, 0.3], 'units': {'currency': 'USD ($)', 'volume': 'liters (L)', 'conversion': 'monetary values per liter'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}, {'column': 'Tax_per_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的税收（美元）。', 'examples': ['0.3', '0.28', '0.35', '0.25', '0.32']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nThe price of a certain fuel type is $2.0 per liter, with a tax of $0.5 per liter, and the current stock is 80,000 liters. If all the stock fuel is sold at the current price, and 12% of the total sales revenue is paid as operating costs, what is the net profit from selling this batch of fuel? If 30% of the net profit is allocated to environmental projects, what is the investment amount for these projects?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (80000 * (2.0 + 0.5)) * (1 - 0.12) AS Net_Profit, (80000 * (2.0 + 0.5)) * (1 - 0.12) * 0.3 AS Environmental_Investment FROM gas WHERE Stock_Liters = 80000;",
        "db_id": "gas"
    },
    {
        "id": 467,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['minimum stock level (5,000 liters)', 'current stock level (8,000 liters)', 'next fuel delivery (in 3 days)', 'daily fuel sales volume (1,500 liters)', 'inventory alert trigger condition'], 'relations': ['stock_to_alert_condition (current_stock < minimum_stock → alert)', 'daily_consumption_effect (sales_volume reduces stock daily)', 'delivery_timing_relation (days until next delivery)'], 'intent': 'determine_inventory_alert_trigger_status_and_advance_notice_days', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 8000, 3, 1500], 'units': {'volume': 'liters (stock and sales unit)', 'time': 'days (delivery timeline and consumption rate)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA common sense reasoning question is as follows:\nThe minimum stock level for a certain fuel type is 5,000 liters, and the current stock level is 8,000 liters. The next fuel delivery is scheduled in 3 days. If the daily fuel sales volume is 1,500 liters, will the inventory alert be triggered before the next delivery? If the alert is triggered, how many days in advance will it occur?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (8000 - 5000) / 1500 < 3 THEN '会触发预警，提前' || (3 - (8000 - 5000) / 1500) || '天' ELSE '不会触发预警' END AS Inventory_Warning FROM gas WHERE Stock_Liters = 8000 AND Minimum_Stock_Liters = 5000;",
        "db_id": "gas"
    },
    {
        "id": 468,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel stock of 100,000,000 liters', 'carbon emission per liter of 500 grams', 'global daily fuel consumption of 1,000,000,000,000 liters'], 'relations': ['emission_calculation (stock * emission_per_liter)', 'global_emission_scaling (global_consumption * emission_per_liter)'], 'intent': 'calculate_total_carbon_dioxide_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000000, 500, 1000000000000], 'units': {'fuel_volume': 'liters', 'emission_factor': 'grams per liter', 'result_unit': 'grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the stock of a certain type of fuel is 100,000,000 liters, with each liter emitting 500 grams of carbon per liter, and this entire batch of fuel is sold and burned within one day. What would be the total carbon dioxide emissions for that day? If all fuel carbon emissions worldwide were to reach this level, and the global daily fuel consumption is 1,000,000,000,000 liters, what would be the total global carbon dioxide emissions in a single day?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100000000 * 500) / 1000 AS CO2_Emission_Kilograms, (1000000000000 * 500) / 1000 AS Global_CO2_Emission_Kilograms FROM gas WHERE Stock_Liters = 100000000 AND Carbon_Emission = 500;",
        "db_id": "gas"
    },
    {
        "id": 469,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shell brand gasoline', 'calorific value 34.2 MJ/L', 'inventory quantity 50,000 liters'], 'relations': ['brand_identification (gasoline → Shell)', 'energy_calculation (calorific_value * inventory_quantity → total_energy)'], 'intent': 'calculate_total_energy_released', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [34.2, 50000], 'units': {'calorific_value': 'MJ/L (megajoules per liter)', 'inventory_quantity': 'liters', 'energy_output': 'MJ (megajoules)', 'conversion_formula': 'total_energy = calorific_value * inventory_quantity'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nCalculate the total energy released when Shell brand gasoline is completely burned, given that its calorific value is 34.2 MJ/L and the inventory quantity is 50,000 liters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Stock_Liters * 34.2) AS Total_Energy_MJ FROM gas WHERE Brand = 'Shell';",
        "db_id": "gas"
    },
    {
        "id": 470,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP (company)', 'diesel (fuel type)', 'total tax revenue'], 'relations': ['company_product (BP → diesel)', 'tax_calculation (tax_rate * volume)'], 'intent': 'calculate_tax_revenue', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5, 100000], 'units': {'tax_rate': 'USD per liter', 'volume': 'liters', 'revenue': 'USD (implied)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Tax_per_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的税收（美元）。', 'examples': ['0.3', '0.28', '0.35', '0.25', '0.32']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total tax revenue for BP's diesel, assuming a tax rate of $0.5 per liter and an inventory volume of 100,000 liters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Stock_Liters * 0.5) AS Total_Tax_Revenue FROM gas WHERE Brand = 'BP' AND Fuel_Type = '柴油';",
        "db_id": "gas"
    },
    {
        "id": 471,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil', 'supplier inventory levels', 'minimum inventory requirements', 'emergency restocking', 'current inventory 8,000 liters', 'minimum inventory level 5,000 liters'], 'relations': ['company_owns_inventory (ExxonMobil → gas table)', 'inventory_comparison (current vs minimum stock)'], 'intent': 'determine_emergency_restocking_need', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8000, 5000], 'units': {'inventory': 'liters', 'conversion': 'none required (direct comparison)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA common sense reasoning question is as follows:\nBased on ExxonMobil's supplier inventory levels and minimum inventory requirements, determine whether emergency restocking is needed. Assume the current inventory is 8,000 liters and the minimum inventory level is 5,000 liters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Stock_Liters < Minimum_Stock_Liters THEN '需要紧急补货' ELSE '无需补货' END AS Replenishment_Status FROM gas WHERE Supplier = 'ExxonMobil';",
        "db_id": "gas"
    },
    {
        "id": 472,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Chevron', 'inventory', 'carbon emissions'], 'relations': ['supplier_to_inventory (Chevron → inventory)', 'inventory_to_emissions (1,000,000 liters → total carbon emissions)', 'emissions_to_impact (carbon emissions → environmental impact)'], 'intent': 'calculate_total_carbon_emissions_and_analyze_environmental_impact', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 2.5], 'units': {'inventory_volume': 'liters', 'emission_factor': 'grams per liter', 'total_emissions': 'grams (derived: liters × g/L)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Supplier', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油供应商（例如：本地供应商、国际供应商）。', 'examples': ['国际供应商', '本地供应商', 'TestSupplier', '示例供应商', '测试供应商']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}, {'column': 'Environmental_Score', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的环境评分（例如：碳排放、可持续发展）。', 'examples': ['78.0', '80.0', '75.0', '82.0', '79.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the inventory of Chevron's supplier suddenly increases to 1,000,000 liters, and the carbon emissions per liter of fuel are 2.5 grams per liter, calculate the total carbon emissions and analyze the environmental impact.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(1000000 * 2.5) AS Total_Carbon_Emission FROM gas WHERE Supplier = 'Chevron';",
        "db_id": "gas"
    },
    {
        "id": 473,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Total brand liquefied natural gas (LNG)', 'calorific value 24 MJ/L', 'inventory 20,000 liters', 'electric vehicle energy consumption 0.2 kWh/km'], 'relations': ['combustion_releases_energy (LNG → MJ)', 'energy_powers_vehicle (MJ → km)'], 'intent': 'calculate_energy_release_and_vehicle_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [24, 20000, 0.2], 'units': {'calorific_value': 'MJ/L', 'volume': 'liters', 'energy_consumption': 'kWh/km', 'conversion': '1 MJ = 0.277778 kWh'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Brand', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油品牌（例如：Shell、BP、ExxonMobil）。', 'examples': ['Shell', 'BP', 'ExxonMobil', 'Total', 'Chevron']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy released by the complete combustion of liquefied natural gas (LNG) from the Total brand, assuming its calorific value is 24 MJ/L and the inventory is 20,000 liters. If this energy is used to power an electric vehicle with an energy consumption of 0.2 kWh/km, compute the total distance it can travel (unit: kilometers).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM((Stock_Liters * 24 * 0.2778) / 0.2) AS Total_Distance_km FROM gas WHERE Brand = 'Total' AND Fuel_Type = '液化天然气';",
        "db_id": "gas"
    },
    {
        "id": 474,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP brand diesel', 'tax revenue', 'environmental projects'], 'relations': ['brand_to_tax_calculation (BP diesel → tax revenue calculation)', 'tax_revenue_allocation (30% → environmental projects)'], 'intent': 'calculate_tax_revenue_and_environmental_funding', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5, 100000, 30], 'units': {'tax_rate': '$/liter (US dollars per liter)', 'inventory': 'liters', 'currency_output': '$ (US dollars)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Brand', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油品牌（例如：Shell、BP、ExxonMobil）。', 'examples': ['Shell', 'BP', 'ExxonMobil', 'Total', 'Chevron']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Tax_per_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的税收（美元）。', 'examples': ['0.3', '0.28', '0.35', '0.25', '0.32']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total tax revenue for BP brand diesel, assuming a tax rate of $0.5 per liter and an inventory of 100,000 liters. If 30% of the tax revenue is allocated to environmental projects, determine the total amount of funds available for such projects.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Stock_Liters * 0.5 * 0.3) AS Environmental_Fund FROM gas WHERE Brand = 'BP' AND Fuel_Type = '柴油';",
        "db_id": "gas"
    },
    {
        "id": 475,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil (supplier)', 'current inventory level (8,000 liters)', 'minimum inventory requirement (5,000 liters)', 'replenishment cycle (7 days)', 'daily sales volume (500 liters)'], 'relations': ['supplier_inventory (ExxonMobil → current inventory and minimum requirement)', 'inventory_replenishment (cycle and sales to quantity calculation)'], 'intent': 'determine_emergency_replenishment_need and calculate_required_replenishment_quantity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8000, 5000, 7, 500], 'units': {'inventory': 'liters', 'time': 'days', 'calculation': 'replenishment_quantity = (daily_sales × cycle) + min_inventory - current_inventory'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Supplier', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油供应商（例如：本地供应商、国际供应商）。', 'examples': ['国际供应商', '本地供应商', 'TestSupplier', '示例供应商', '测试供应商']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA common sense reasoning question is as follows:\nBased on ExxonMobil's supplier's current inventory level (8,000 liters) and minimum inventory requirement (5,000 liters), determine if emergency replenishment is needed. If the replenishment cycle is 7 days and daily sales volume is 500 liters, calculate the replenishment quantity needed to ensure inventory safety.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Stock_Liters < Minimum_Stock_Liters THEN '需要紧急补货' ELSE '无需补货' END AS Replenishment_Status, (7 * 500) + (Minimum_Stock_Liters - Stock_Liters) AS Replenishment_Volume FROM gas WHERE Supplier = 'ExxonMobil';",
        "db_id": "gas"
    },
    {
        "id": 476,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP suppliers', 'inventory (5,000,000 liters)', 'carbon emission (3 grams/liter)', 'global annual carbon emission (40 billion tons)'], 'relations': ['supplier_inventory_relation (BP suppliers → inventory)', 'emission_calculation_relation (inventory * carbon emission per liter → total emissions)', 'global_comparison_relation (BP emissions vs. global emissions)'], 'intent': 'calculate_carbon_emission_percentage_and_impact_analysis', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000, 3, 40000000000], 'units': {'inventory': 'liters', 'carbon_emission': 'grams/liter (converted to tons: 1 ton = 1,000,000 grams)', 'global_emission': 'tons', 'conversion_required': 'grams to tons for percentage calculation'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming the inventory of BP suppliers suddenly increases to 5,000,000 liters, and the carbon emission per liter of fuel is 3 grams/liter. If the global annual carbon emission is 40 billion tons, calculate the percentage of its total carbon emissions relative to the global annual carbon emissions, and analyze its potential impact on global climate change.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (5000000 * 3) / 1000000000 AS Total_Carbon_Emission_Tonnes FROM gas WHERE Supplier = 'BP';",
        "db_id": "gas"
    },
    {
        "id": 477,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['diesel', 'Shell gas stations', 'carbon emissions', 'carbon emission factor 2.68 kg/L'], 'relations': ['company_owns_stations (Shell → gas stations via station_company)', 'stations_store_fuel (gas stations → diesel stock via gas table)', 'emission_calculation (stock_liters * emission_factor → total_emissions)'], 'intent': 'calculate_total_carbon_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.68], 'units': {'emission_factor': 'kg/L (kilograms per liter)', 'diesel_stock': 'liters (from gas.Stock_Liters)', 'result_unit': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.gas': [{'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total carbon emissions released from the complete combustion of all diesel stored at Shell gas stations, assuming a carbon emission factor of 2.68 kg/L for diesel.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) * 2.68 AS Total_Carbon_Emission_kg FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'Shell' AND g.Fuel_Type = '柴油';",
        "db_id": "gas"
    },
    {
        "id": 478,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil gas stations', 'total fuel inventory', 'total capacity', 'inventory exceeding capacity'], 'relations': ['company_to_stations (ExxonMobil → associated stations via station_company)', 'station_to_inventory (Station_ID → sum(Stock_Liters) in gas table)', 'station_to_capacity (Station_ID → Capacity_Liters in gas_station table)'], 'intent': 'calculate_ratio_and_identify_overcapacity_stations', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'inventory': 'liters (Stock_Liters)', 'capacity': 'liters (Capacity_Liters)', 'ratio': 'unitless (inventory/capacity)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}, {'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of the total fuel inventory to the total capacity for all ExxonMobil gas stations, and determine whether there are any stations where the inventory exceeds the capacity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT gs.Station_ID, gs.Location, g.Stock_Liters / gs.Capacity_Liters AS Stock_Capacity_Ratio FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'ExxonMobil' AND g.Stock_Liters > gs.Capacity_Liters;",
        "db_id": "gas"
    },
    {
        "id": 479,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', 'gas stations', 'fuel inventory', 'minimum inventory level'], 'relations': ['company_owns_stations (petroleum company → gas stations via station_company)', 'station_has_inventory (gas station → fuel inventory via gas.Stock_Liters)', 'comparison (Stock_Liters < Minimum_Stock_Liters)'], 'intent': 'check_low_inventory_stations', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'inventory': 'liters (Stock_Liters, Minimum_Stock_Liters in gas table)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}, {'column': 'Location', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '加油站的位置（例如：城市、街道）', 'examples': ['北京市朝阳区建国路88号', '上海市浦东新区世纪大道100号', '指定加油站位置', '测试地点', '测试位置']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA common sense reasoning question is as follows:\nDetermine whether the fuel inventory at all gas stations of a certain petroleum company is above the minimum inventory level. If there are gas stations below the minimum inventory level, list the IDs and locations of those stations.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT gs.Station_ID, gs.Location FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID WHERE sc.Company_ID = '指定公司ID' AND g.Stock_Liters < g.Minimum_Stock_Liters;",
        "db_id": "gas"
    },
    {
        "id": 480,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Chevron gas stations', 'fuel inventory (10 million liters)', 'fuel density (0.85 kg/L)', 'load-bearing capacity (1 kg/L)'], 'relations': ['station_to_company (gas stations → Chevron)', 'inventory_to_weight (liters × density → weight)', 'capacity_comparison (total weight vs. total load-bearing capacity)'], 'intent': 'calculate_total_fuel_weight_and_compare_with_load_capacity', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [10000000, 0.85, 1], 'units': {'volume': 'liters (L)', 'density': 'kg/L (kilograms per liter)', 'weight': 'kg (kilograms)', 'capacity_ratio': '1 kg per liter (implied unit conversion)'}, 'foreign_keys': [{'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}, {'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}, {'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the fuel inventory at all Chevron gas stations suddenly increases to 10 million liters, calculate the total weight (assuming a fuel density of 0.85 kg/L) and determine whether it exceeds the total load-bearing capacity of the gas stations (assuming a load-bearing capacity of 1 kg per liter of fuel).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) * 10000000 * 0.85 AS Total_Weight_kg, CASE WHEN COUNT(*) * 10000000 * 0.85 > COUNT(*) * 10000000 * 1 THEN '超过承重能力' ELSE '未超过承重能力' END AS Weight_Status FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'Chevron';",
        "db_id": "gas"
    },
    {
        "id": 481,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shell', 'premium gasoline', 'gas stations', 'sulfur content'], 'relations': ['company_to_station (Shell → gas stations via station_company)', 'station_to_gas (gas stations → gasoline inventory)', 'brand_to_gas_type (Shell → premium gasoline)'], 'intent': 'calculate_total_sulfur_mass', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'sulfur_concentration': 'ppm (parts per million)', 'volume': 'liters (from Stock_Liters)', 'mass_conversion': '1 ppm = 1 mg/L → Total sulfur mass in mg'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}, {'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Brand', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油品牌（例如：Shell、BP、ExxonMobil）。', 'examples': ['Shell', 'BP', 'ExxonMobil', 'Total', 'Chevron']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}]}}\nA physical knowledge question is as follows:\nCalculate the total sulfur content in all gas stations for Shell's premium gasoline, assuming the sulfur content is measured in parts per million (ppm).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters * g.Sulfur_Content) / 1000000 AS Total_Sulfur_Content_kg FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID WHERE g.Brand = 'Shell' AND g.Quality_Grade = '高级';",
        "db_id": "gas"
    },
    {
        "id": 482,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP gas stations', 'average fuel price', 'market average price'], 'relations': ['company_owns_stations (BP → gas stations via station_company)', 'stations_have_fuel_prices (gas stations → gas prices)'], 'intent': 'calculate_average_price_and_comparison_with_market', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.5], 'units': {'fuel_price': 'dollars per liter', 'comparison_unit': 'same as fuel_price (dollars per liter)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}, {'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}]}}\nA mathematical logic question is as follows:\nCalculate the average fuel price of all BP gas stations, and analyze the difference between this average price and the market average price (assumed to be $1.5 per liter).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(g.Price_Liter) AS Avg_Price_Per_Liter, AVG(g.Price_Liter) - 1.5 AS Price_Difference FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'BP';",
        "db_id": "gas"
    },
    {
        "id": 483,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil', 'gas stations', 'fuel delivery dates'], 'relations': ['company_owns_stations (ExxonMobil → gas stations via station_company)', 'date_sequence_abnormality (Next_Delivery_Date < Last_Delivery_Date)'], 'intent': 'detect_abnormal_fuel_delivery_sequences', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}, {'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Last_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '最后一次燃油交付的日期。', 'examples': ['2023-01-15', '2023-02-01', '2023-03-10', '2023-04-05', '2023-05-20']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA common sense reasoning question is as follows:\nAnalyze the fuel delivery dates for all ExxonMobil gas stations to determine if there are any abnormal cases where delivery dates are earlier than the last delivery date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT gs.Station_ID, gs.Location, g.Last_Delivery_Date, g.Next_Delivery_Date FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'ExxonMobil' AND g.Next_Delivery_Date < g.Last_Delivery_Date;",
        "db_id": "gas"
    },
    {
        "id": 484,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Chevron', 'fuel inventory', 'carbon emissions', 'gas stations'], 'relations': ['company_owns_stations (Chevron → gas stations via station_company)', 'station_has_fuel (gas stations → fuel inventory via gas table)'], 'intent': 'calculate_total_reduction_carbon_emissions', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [1, 2.31], 'units': {'fuel_volume': 'liters', 'carbon_emission': 'kg/L (kilograms per liter)', 'reduction_calculation': '(current_stock - 1) × 2.31'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the fuel inventory of all Chevron gas stations suddenly decreases to 1 liter, calculate the total reduction in carbon emissions, with the assumption that each liter of fuel emits 2.31 kg/L of carbon.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters - 1) * 2.31 AS Carbon_Emission_Reduction_kg FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'Chevron';",
        "db_id": "gas"
    },
    {
        "id": 485,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shell brand diesel', 'gas stations', 'energy density'], 'relations': ['brand_to_fuel (Shell → diesel)', 'location_scope (across all gas stations)', 'density_property (diesel energy density = 35.8 MJ/L)'], 'intent': 'calculate_aggregate_energy_density', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [35.8], 'units': {'energy_density': 'MJ/L (Megajoules per liter)', 'conversion': 'Constant value provided (no conversion needed)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Brand', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油品牌（例如：Shell、BP、ExxonMobil）。', 'examples': ['Shell', 'BP', 'ExxonMobil', 'Total', 'Chevron']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy density of Shell brand diesel across all gas stations, assuming the energy density of diesel is 35.8 MJ/L.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) * 35.8 AS Total_Energy_Density_MJ FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID WHERE g.Brand = 'Shell' AND g.Fuel_Type = '柴油';",
        "db_id": "gas"
    },
    {
        "id": 486,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP gas stations', 'total fuel inventory', 'total sales', 'average selling price $1.2 per liter'], 'relations': ['company_ownership (BP → gas stations via station_company)', 'station_inventory (gas stations → fuel stock via gas table)', 'price_to_sales_conversion ($1.2/liter → sales value)'], 'intent': 'calculate_ratio_of_fuel_inventory_to_sales_value', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.2], 'units': {'fuel_volume': 'liters (from gas.Stock_Liters)', 'currency': 'USD (implied by $)', 'conversion': 'sales_value = inventory_liters × 1.2 USD/liter'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of the total fuel inventory at all BP gas stations to their total sales, assuming an average selling price of $1.2 per liter of fuel.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) / (SUM(g.Stock_Liters) * 1.2) AS Stock_Sales_Ratio FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'BP';",
        "db_id": "gas"
    },
    {
        "id": 487,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil', 'ExxonMobil gas stations', 'fuel suppliers', 'local suppliers', 'international suppliers', 'inventory'], 'relations': ['company_owns_stations (ExxonMobil → gas stations via station_company)', 'stations_have_suppliers (gas stations → fuel suppliers via gas table)', 'supplier_classification (suppliers → local/international based on implicit criteria)'], 'intent': 'analyze_supplier_distribution_and_calculate_inventory_proportion', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'inventory': 'liters (from gas.Stock_Liters)', 'proportion': 'unitless percentage'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Supplier', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油供应商（例如：本地供应商、国际供应商）。', 'examples': ['国际供应商', '本地供应商', 'TestSupplier', '示例供应商', '测试供应商']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA common sense reasoning question is as follows:\nAnalyze the distribution of fuel suppliers for all ExxonMobil gas stations, and calculate the proportion of inventory held by local suppliers versus international suppliers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT g.Supplier, SUM(g.Stock_Liters) / (SELECT SUM(g2.Stock_Liters) FROM gas g2 JOIN gas_station gs2 ON g2.Station_ID = gs2.Station_ID JOIN station_company sc2 ON gs2.Station_ID = sc2.Station_ID JOIN company c2 ON sc2.Company_ID = c2.Company_ID WHERE c2.Company = 'ExxonMobil') * 100 AS Stock_Percentage FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'ExxonMobil' GROUP BY g.Supplier;",
        "db_id": "gas"
    },
    {
        "id": 488,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Chevron gas stations', 'fuel inventory', 'carbon emissions', 'reduction calculation'], 'relations': ['company_to_stations (Chevron → associated stations)', 'station_to_fuel (stations → fuel inventory)', 'fuel_to_emissions (fuel volume → carbon emissions)'], 'intent': 'calculate_total_carbon_emission_reduction', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.1, 2.31], 'units': {'volume': 'liters (L)', 'emissions': 'kg/L (kilograms per liter)', 'conversion': 'emissions = fuel_volume × 2.31 kg/L'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the fuel inventory at all Chevron gas stations suddenly decreases to 0.1 liters, calculate the total reduction in carbon emissions, given that the carbon emissions per liter of fuel are 2.31 kg/L.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters - 0.1) * 2.31 AS Carbon_Emission_Reduction_kg FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'Chevron';",
        "db_id": "gas"
    },
    {
        "id": 489,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shell brand gasoline', 'Volatile Organic Compound (VOC) emissions', 'all gas stations'], 'relations': ['brand_emission_relation (Shell gasoline → VOC emissions)', 'volume_to_emission_conversion (0.8 g/L conversion factor)', 'station_inventory_relation (gas stations → gasoline stock)'], 'intent': 'calculate_total_VOC_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.8], 'units': {'emission_factor': 'grams per liter (g/L)', 'volume': 'liters', 'emissions_output': 'grams', 'conversion_formula': 'total_VOC = SUM(Stock_Liters) * 0.8'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Brand', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油品牌（例如：Shell、BP、ExxonMobil）。', 'examples': ['Shell', 'BP', 'ExxonMobil', 'Total', 'Chevron']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total Volatile Organic Compound (VOC) emissions for Shell brand gasoline across all gas stations, assuming a VOC emission of 0.8 grams per liter of gasoline.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) * 0.8 AS Total_VOC_Emission_g FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID WHERE g.Brand = 'Shell' AND g.Fuel_Type = '汽油';",
        "db_id": "gas"
    },
    {
        "id": 490,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil', 'fuel inventory', 'profit'], 'relations': ['company_to_stations (ExxonMobil → gas stations)', 'stations_to_inventory (gas stations → fuel stock)', 'inventory_to_profit (fuel stock → profit using $0.3/L)'], 'intent': 'calculate_ratio_of_total_fuel_inventory_to_total_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.3], 'units': {'currency': 'USD ($)', 'volume': 'liters (L)', 'conversion': 'profit = inventory_liters × 0.3 USD/L'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}, {'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of the total fuel inventory of all ExxonMobil gas stations to their total profit, assuming an average profit of $0.3 per liter of fuel.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) / (SUM(g.Stock_Liters) * 0.3) AS Stock_Profit_Ratio FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'ExxonMobil';",
        "db_id": "gas"
    },
    {
        "id": 491,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP gas stations', 'fuel delivery frequency', 'annual deliveries exceeding 12 times'], 'relations': ['company_to_station (BP → linked stations via station_company)', 'delivery_frequency_calculation (using gas table dates to derive annual count)'], 'intent': 'calculate_stations_with_high_delivery_frequency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [12], 'units': {'frequency': 'times/year', 'date_interval': 'days (for annual conversion)', 'calculation': '365 / delivery_interval_days = annual_frequency'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': \"Company (to identify 'BP')\"}], 'gas.station_company': [{'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}, {'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Last_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '最后一次燃油交付的日期。', 'examples': ['2023-01-15', '2023-02-01', '2023-03-10', '2023-04-05', '2023-05-20']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA common sense reasoning question is as follows:\nAnalyze the fuel delivery frequency at all BP gas stations and count the number of stations with annual deliveries exceeding 12 times.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(DISTINCT gs.Station_ID) AS High_Frequency_Stations FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'BP' GROUP BY gs.Station_ID HAVING COUNT(g.Last_Delivery_Date) / (YEAR(MAX(g.Last_Delivery_Date)) - YEAR(MIN(g.Last_Delivery_Date)) + 1) > 12;",
        "db_id": "gas"
    },
    {
        "id": 492,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Chevron gas stations', 'fuel inventory', '1 billion liters', 'fuel density 0.85 kg/L'], 'relations': ['company_to_stations (Chevron → gas stations)', 'volume_to_weight_conversion (liters → kg via density)'], 'intent': 'calculate_total_weight_increase', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000000, 0.85], 'units': {'volume': 'liters', 'mass': 'kilograms', 'conversion_formula': 'mass = volume × density', 'density_unit': 'kg/L'}, 'foreign_keys': [{'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}]}}\nA hypothetical reasoning question is as follows:\nAssuming that the fuel inventory of all Chevron gas stations suddenly increases to 1 billion liters, calculate the total increase in weight, given a fuel density of 0.85 kg/L.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) * 1000000000 * 0.85 AS Total_Weight_Increase_kg FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'Chevron';",
        "db_id": "gas"
    },
    {
        "id": 493,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shell brand', 'liquefied natural gas (LNG)', 'all gas stations', 'cold energy density', 'density'], 'relations': ['brand_to_fuel (Shell → LNG)', 'station_to_gas (gas stations → LNG stock)', 'energy_calculation (Stock_Liters → mass → energy)'], 'intent': 'calculate_total_cold_energy_release', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.25, 0.45], 'units': {'cold_energy_density': 'MJ/kg', 'density': 'kg/L', 'volume': 'liters (from gas.Stock_Liters)', 'mass_conversion': 'mass_kg = volume_liters × density_kg_per_l', 'energy_conversion': 'energy_MJ = mass_kg × cold_energy_density_MJ_per_kg'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Brand', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油品牌（例如：Shell、BP、ExxonMobil）。', 'examples': ['Shell', 'BP', 'ExxonMobil', 'Total', 'Chevron']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total cold energy release of Shell brand liquefied natural gas (LNG) at all gas stations, assuming the cold energy density of LNG is 0.25 MJ/kg and the density is 0.45 kg/L.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) * 0.25 * 0.45 AS Total_Cooling_Energy_MJ FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID WHERE g.Brand = 'Shell' AND g.Fuel_Type = '液化天然气';",
        "db_id": "gas"
    },
    {
        "id": 494,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP gas stations', 'total fuel inventory', 'total market value', 'average market value ($1.8 per liter)'], 'relations': ['company_to_stations (BP → owned stations)', 'station_to_inventory (stations → fuel stock)', 'inventory_to_value (fuel volume × $1.8/liter)'], 'intent': 'calculate_ratio_of_total_fuel_inventory_to_market_value', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.8], 'units': {'currency': 'USD ($)', 'volume': 'liters', 'value_density': '$1.8 per liter', 'result_unit': 'dimensionless ratio'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of the total fuel inventory at all BP gas stations to its total market value, assuming an average market value of $1.8 per liter of fuel.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) / (SUM(g.Stock_Liters) * 1.8) AS Stock_Market_Value_Ratio FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'BP';",
        "db_id": "gas"
    },
    {
        "id": 495,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil gas stations', 'fuel delivery frequency'], 'relations': ['company_owns_stations (ExxonMobil → gas stations via station_company)', 'station_fuel_data (gas stations → delivery dates via gas)'], 'intent': 'count_stations_below_delivery_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [6], 'units': {'frequency': 'deliveries per year', 'threshold': '6 deliveries/year'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}], 'gas.gas': [{'column': 'Last_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '最后一次燃油交付的日期。', 'examples': ['2023-01-15', '2023-02-01', '2023-03-10', '2023-04-05', '2023-05-20']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA common sense reasoning question is as follows:\nAnalyze the fuel delivery frequency of all ExxonMobil gas stations and count the number of stations with fewer than 6 deliveries per year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(DISTINCT gs.Station_ID) AS Low_Frequency_Stations FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'ExxonMobil' GROUP BY gs.Station_ID HAVING COUNT(g.Last_Delivery_Date) / (YEAR(MAX(g.Last_Delivery_Date)) - YEAR(MIN(g.Last_Delivery_Date)) + 1) < 6;",
        "db_id": "gas"
    },
    {
        "id": 496,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Chevron', 'fuel inventory', 'carbon emissions', 'gas stations'], 'relations': ['company_owns_station (Chevron → gas stations via station_company)', 'station_has_fuel (gas stations → fuel inventory via gas)', 'emission_per_fuel (fuel inventory → carbon emissions at 2.31 kg/L)'], 'intent': 'calculate_total_carbon_emission_reduction', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [0.01, 2.31], 'units': {'fuel_inventory': 'liters', 'carbon_emission': 'kg', 'emission_factor': 'kg/L', 'reduction_calculation': '(original_stock - 0.01) * 2.31 per station'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司的唯一标识符（主键）', 'examples': ['101', '102', '103', '104', '105']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the fuel inventory at all Chevron gas stations suddenly drops to 0.01 liters, calculate the total reduction in carbon emissions, assuming the carbon emissions per liter of fuel is 2.31 kg/L.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters - 0.01) * 2.31 AS Carbon_Emission_Reduction_kg FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'Chevron';",
        "db_id": "gas"
    },
    {
        "id": 497,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Shell-brand diesel', 'sulfur oxide (SOx) emissions', 'gas stations', 'sulfur content'], 'relations': ['brand_to_stations (Shell diesel → gas stations)', 'sulfur_to_SOx_conversion (1g S → 2g SOx)'], 'intent': 'calculate_total_SOx_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 2], 'units': {'sulfur_concentration': 'ppm (parts per million)', 'mass_conversion': 'grams (g)', 'volume': 'liters', 'conversion_rule': '10 ppm sulfur = 10g sulfur / 1,000,000g diesel'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Brand', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油品牌（例如：Shell、BP、ExxonMobil）。', 'examples': ['Shell', 'BP', 'ExxonMobil', 'Total', 'Chevron']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}]}}\nA physical knowledge question is as follows:\nCalculate the total sulfur oxide (SOx) emissions from Shell-brand diesel across all gas stations, assuming a sulfur content of 10 ppm per liter of diesel and that each gram of sulfur produces 2 grams of SOx upon combustion.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters * g.Sulfur_Content) * 2 / 1000000 AS Total_SOx_Emission_g FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID WHERE g.Brand = 'Shell' AND g.Fuel_Type = '柴油';",
        "db_id": "gas"
    },
    {
        "id": 498,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ExxonMobil', 'total fuel inventory', 'total assets'], 'relations': ['company_to_stations (ExxonMobil → gas stations via station_company)', 'stations_to_fuel (gas stations → fuel inventory via gas)', 'asset_value_per_liter ($0.7/liter conversion)'], 'intent': 'calculate_ratio_of_fuel_inventory_to_assets', 'reasoning_type': 'physical knowledge reasoning with mathematical logic', 'numerical_values': [0.7], 'units': {'currency': \"USD (implied by '$')\", 'volume': 'liters (from Stock_Liters)', 'conversion': '$0.7 per liter (asset value assumption)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}, {'column': 'Company_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '公司ID，外键', 'examples': ['101', '102', '103', '104', '999']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of the total fuel inventory at all ExxonMobil gas stations to their total assets, assuming an average asset value of $0.7 per liter of fuel.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(g.Stock_Liters) / (SUM(g.Stock_Liters) * 0.7) AS Stock_Asset_Ratio FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'ExxonMobil';",
        "db_id": "gas"
    },
    {
        "id": 499,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['BP Company', 'gas stations', 'fuel delivery dates', 'weekends (Saturday and Sunday)'], 'relations': ['company_ownership (BP Company → gas stations via station_company)', 'station_deliveries (gas stations → fuel delivery dates via gas)'], 'intent': 'count_gas_stations_with_weekend_deliveries', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'date_handling': 'day-of-week extraction (e.g., Sunday=0/Saturday=6)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Company', 'type': 'TEXT COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '公司的名称', 'examples': ['中石油', '壳牌中国', 'BP中国', '埃克森美孚中国', '道达尔能源中国']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}], 'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Last_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '最后一次燃油交付的日期。', 'examples': ['2023-01-15', '2023-02-01', '2023-03-10', '2023-04-05', '2023-05-20']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA common sense reasoning question is as follows:\nAnalyze the fuel delivery dates for all gas stations of BP Company, and count the number of gas stations with delivery dates falling on weekends (Saturday and Sunday).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(DISTINCT gs.Station_ID) AS Weekend_Delivery_Stations FROM gas g JOIN gas_station gs ON g.Station_ID = gs.Station_ID JOIN station_company sc ON gs.Station_ID = sc.Station_ID JOIN company c ON sc.Company_ID = c.Company_ID WHERE c.Company = 'BP' AND DAYOFWEEK(g.Last_Delivery_Date) IN (1, 7);",
        "db_id": "gas"
    }
]