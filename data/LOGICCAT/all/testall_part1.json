[
    {
        "id": 0,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22 helicopter', 'total rotor disc area 46.2 m²', 'maximum rotor disc loading 14 kg/m²'], 'relations': ['helicopter_to_specs (Robinson R-22 → aircraft specifications)', 'lift_calculation (Max_Gross_Weight = Total_Disk_Area × Max_Disk_Loading)'], 'intent': 'calculate_lift_under_max_gross_weight', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [46.2, 14], 'units': {'area': 'm² (square meters)', 'loading': 'kg/m² (kilograms per square meter)', 'lift': 'kg (kilograms, derived from 46.2 m² × 14 kg/m²)', 'conversion': 'Lift = Total_Disk_Area × Max_Disk_Loading'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}, {'column': 'Max_Disk_Loading', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大旋翼盘载荷（例如：2.6 lb/ft² (14 kg/m²)）', 'examples': ['14.0', '18.0', '43.0', '71.0', '72.0']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}]}}\nA physical knowledge question is as follows:\nIf a Robinson R-22 helicopter has a total rotor disc area of 46.2 square meters and a maximum rotor disc loading of 14 kilograms per square meter, what is its lift under maximum gross weight?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Total_Disk_Area * Max_Disk_Loading AS Lift FROM aircraft WHERE Aircraft = 'Robinson R-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 1,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22', 'Max Gross Weight 635 kg', 'Total Rotor Disc Area 46.2 m²', 'Max Rotor Disc Loading 14 kg/m²', 'Weight Increase 20%'], 'relations': ['aircraft_to_specs (Robinson R-22 → Max_Gross_Weight, Total_Disk_Area, Max_Disk_Loading)', 'weight_change_effect (20% increase → new disc loading)'], 'intent': 'calculate_new_rotor_disc_loading_after_weight_increase', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [635, 46.2, 14, 20], 'units': {'weight': 'kg', 'disc_area': 'm²', 'disc_loading': 'kg/m²', 'percentage_increase': '%'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}, {'column': 'Max_Disk_Loading', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大旋翼盘载荷（例如：2.6 lb/ft² (14 kg/m²)）', 'examples': ['14.0', '18.0', '43.0', '71.0', '72.0']}]}}\nA mathematical logic question is as follows:\nAssuming a Robinson R-22 aircraft has a maximum gross weight of 635 kg, a total rotor disc area of 46.2 square meters, and a maximum rotor disc loading of 14 kg/square meter. If the aircraft's weight increases by 20%, what is the new maximum rotor disc loading?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Max_Gross_Weight * 1.2) / Total_Disk_Area AS New_Max_Disk_Loading FROM aircraft WHERE Aircraft = 'Robinson R-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 2,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22 aircraft', 'maximum gross weight 635 kg', 'total rotor disc area 46.2 m²', 'plateau regions'], 'relations': ['aircraft_to_specs (R-22 → Max_Gross_Weight/Total_Disk_Area)', 'disk_loading_calculation (635 kg / 46.2 m² = 13.74 kg/m²)'], 'intent': 'assess_aircraft_suitability_for_high_altitude_flight', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [635, 46.2], 'units': {'weight': 'kg (kilograms)', 'area': 'm² (square meters)', 'disk_loading': 'kg/m² (kilograms per square meter)', 'threshold': 'typical plateau suitability <15-18 kg/m²'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}, {'column': 'Max_Disk_Loading', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大旋翼盘载荷（例如：2.6 lb/ft² (14 kg/m²)）', 'examples': ['14.0', '18.0', '43.0', '71.0', '72.0']}]}}\nA common sense reasoning question is as follows:\nIf a Robinson R-22 aircraft has a maximum gross weight of 635 kilograms and its total rotor disc area is 46.2 square meters, is this aircraft suitable for flying in plateau regions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Max_Disk_Loading * Total_Disk_Area * 0.75 < Max_Gross_Weight THEN 'Not Suitable' ELSE 'Suitable' END AS Suitability FROM aircraft WHERE Aircraft = 'Robinson R-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 3,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22 helicopter', 'maximum gross weight 635 kg', 'total rotor disc area 46.2 m²', 'maximum rotor disc loading 14 kg/m²', 'sudden weight increase to 10,000 kg'], 'relations': ['helicopter_to_specs (Robinson R-22 → aircraft table parameters)', 'weight_to_disc_area (ΔWeight = 10,000 kg → 46.2 m² disc area)', 'loading_comparison (calculated loading vs max 14 kg/m²)'], 'intent': 'calculate_new_rotor_disc_loading_and_effects', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [635, 46.2, 14, 10000], 'units': {'weight': 'kg', 'area': 'm²', 'loading': 'kg/m²', 'conversion': 'Disc Loading = Weight / Rotor Area'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}, {'column': 'Max_Disk_Loading', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大旋翼盘载荷（例如：2.6 lb/ft² (14 kg/m²)）', 'examples': ['14.0', '18.0', '43.0', '71.0', '72.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a Robinson R-22 helicopter has a maximum gross weight of 635 kg, a total rotor disc area of 46.2 square meters, and a maximum rotor disc loading of 14 kg/square meter. If the weight of this helicopter suddenly increases to 10,000 kg, what would its rotor disc loading be? What would happen to the helicopter under such extreme conditions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 10000 / Total_Disk_Area AS Extreme_Disk_Loading, 'The aircraft will likely stall or crash due to insufficient lift.' AS Consequence FROM aircraft WHERE Aircraft = 'Robinson R-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 4,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['London Heathrow Airport', 'international passenger volume', 'total passenger volume'], 'relations': ['airport_to_passengers (London Heathrow Airport → passenger statistics)', 'percentage_calculation (international / total)'], 'intent': 'calculate_percentage_of_international_passengers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [67054745, 61344438], 'units': {'passengers': 'count (unitless)', 'percentage': 'percent (%) rounded to two decimal places', 'calculation': '(international_passengers / total_passengers) * 100'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Airport_Name', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '机场的名称（例如：London Heathrow）', 'examples': ['London Heathrow', 'London Gatwick', 'London Stansted', 'Manchester', 'London Luton']}, {'column': 'International_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '国际乘客量（例如：61344438）', 'examples': ['61344400.0', '30431100.0', '19996900.0', '18119200.0', '8853220.0']}, {'column': 'Total_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '机场的总乘客量（例如：67054745）', 'examples': ['67054700.0', '34205900.0', '22360400.0', '21219200.0', '10180700.0']}]}}\nA mathematical logic question is as follows:\nAssuming the total annual passenger volume at London Heathrow Airport is 67,054,745, with international passengers accounting for 61,344,438, domestic passengers for 5,562,516, and transit passengers for 147,791. Please calculate the percentage of international passenger volume relative to the total passenger volume, rounding to two decimal places.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND((International_Passengers / Total_Passengers) * 100, 2) AS International_Passenger_Percentage FROM airport WHERE Airport_Name = 'LondonHeathrow';",
        "db_id": "AirCraft"
    },
    {
        "id": 5,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['London Heathrow Airport', 'Aircraft_Movements 478,893', 'Freight_Tonnes 1,397,054'], 'relations': ['airport_to_operations (Heathrow → Aircraft_Movements)', 'airport_to_cargo (Heathrow → Freight_Tonnes)'], 'intent': 'calculate_average_cargo_per_movement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [478893, 1397054], 'units': {'cargo_volume': 'metric tons', 'movements': 'unitless count', 'average': 'metric tons per takeoff/landing'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Aircraft_Movements', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机起降次数（例如：478693）', 'examples': ['478693.0', '263653.0', '193282.0', '204610.0', '117859.0']}, {'column': 'Freight_Tonnes', 'type': 'FLOAT', 'primary_key': False, 'comment': '货运量（以公吨为单位，例如：1397054）', 'examples': ['1397050.0', '107702.0', '197738.0', '141781.0', '40518.0']}]}}\nA common sense reasoning question is as follows:\nIf the number of takeoffs and landings at London Heathrow Airport is 478,893 with a cargo volume of 1,397,054 metric tons, what is the average cargo volume per takeoff or landing?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Freight_Tonnes / Aircraft_Movements AS Average_Freight_Per_Movement FROM airport WHERE Airport_Name = 'LondonHeathrow';",
        "db_id": "AirCraft"
    },
    {
        "id": 6,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['London Heathrow Airport', 'annual total passenger volume 67,054,745', 'average luggage per passenger 2 items', 'average luggage weight 20 kg', 'Robinson R-22 helicopter capacity 635 kg'], 'relations': ['passenger_to_luggage (passengers × 2 items → total luggage count)', 'luggage_weight_to_total (total luggage × 20 kg → total weight)', 'total_weight_to_capacity (total weight ÷ 635 kg → ceiling(trips))'], 'intent': 'calculate_total_luggage_weight_and_helicopter_trips', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [67054745, 2, 20, 635], 'units': {'passengers': 'person', 'luggage': 'items', 'weight': 'kg (kilograms)', 'helicopter_capacity': 'kg (Max_Gross_Weight)', 'trips': 'unitless (rounded up to nearest integer)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}, {'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Total_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '机场的总乘客量（例如：67054745）', 'examples': ['67054700.0', '34205900.0', '22360400.0', '21219200.0', '10180700.0']}], 'AirCraft.aircraft': [{'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming that London Heathrow Airport has an annual total passenger volume of 67,054,745 people, with each passenger carrying an average of 2 luggage items and each item weighing an average of 20 kilograms, what is the total annual weight of luggage at the airport? If all these luggage items were to be transported by Robinson R-22 helicopters, with each helicopter having a maximum total weight capacity of 635 kilograms, how many helicopter trips would be required to transport all the luggage?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Total_Passengers * 2 * 20) AS Total_Luggage_Weight, CEIL((Total_Passengers * 2 * 20) / 635) AS Required_Flights FROM airport WHERE Airport_Name = 'LondonHeathrow';",
        "db_id": "AirCraft"
    },
    {
        "id": 7,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['international passengers 61,344,438', 'domestic passengers 5,562,516', 'transfer passengers 147,791', 'annual growth rate 1.5%', 'annual growth rate 2%', 'annual decline rate -0.5%', '5 years'], 'relations': ['international_passengers_to_growth (61,344,438 → 1.5% annual increase)', 'domestic_passengers_to_growth (5,562,516 → 2% annual increase)', 'transit_passengers_to_decline (147,791 → -0.5% annual decrease)', 'time_horizon (5 years)'], 'intent': 'calculate_future_total_passenger_volume_with_varying_growth_rates', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [61344438, 5562516, 147791, 1.5, 2, -0.5, 5], 'units': {'passengers': 'unitless count (passengers)', 'growth_rate': '% annual change (percentage)', 'time': 'years'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'International_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '国际乘客量（例如：61344438）', 'examples': ['61344400.0', '30431100.0', '19996900.0', '18119200.0', '8853220.0']}, {'column': 'Domestic_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '国内乘客量（例如：5562516）', 'examples': ['5562520.0', '3730960.0', '2343430.0', '2943720.0', '1320680.0']}, {'column': 'Transit_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '中转乘客量（例如：147791）', 'examples': ['147791.0', '43873.0', '19989.0', '156246.0', '6832.0']}]}}\nA mathematical logic question is as follows:\nAssuming an airport had a total passenger volume of 67,054,745 in 2023, including 61,344,438 international passengers, 5,562,516 domestic passengers, and 147,791 transfer passengers. If the international passenger volume grows by 1.5% annually, the domestic passenger volume grows by 2% annually, and the transfer passenger volume decreases by 0.5% annually, what will the airport's total passenger volume be after 5 years?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (International_Passengers * POW(1 + 0.015, 5) + Domestic_Passengers * POW(1 + 0.02, 5) + Transit_Passengers * POW(1 - 0.005, 5)) AS Total_Passengers_After_5_Years FROM airport WHERE Airport_Name = 'London Heathrow';",
        "db_id": "AirCraft"
    },
    {
        "id": 8,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"pilot\", \"competitions\", \"age 23\", \"age 30\", \"championship win\"],\n  \"relations\": [\"pilot_to_competition (participation history)\", \"age_progression (23→30)\", \"performance_consistency (sustained competitive edge)\"],\n  \"intent\": \"evaluate_age_impact_on_pilot_performance\",\n  \"reasoning_type\": \"common sense understanding reasoning\",\n  \"numerical_values\": [23, 30],\n  \"units\": {\n    \"age\": \"years\",\n    \"performance\": \"competition ranking/achievement (implied)\"\n  },\n  \"required_tables\": [\"pilot\", \"match\"],\n  \"required_fields\": [\n    \"pilot.Age (current age)\",\n    \"match.Date (competition timing)\",\n    \"match.Winning_Pilot (historical wins)\",\n    \"pilot.Name (to track individual history)\"\n  ]\n}\n\nNote: While the database schema includes fields to track pilots and competitions, it lacks critical data points needed to answer this question definitively:\n1. Pilots' age at time of competition (only current age stored)\n2. Performance metrics beyond win/loss results\n3. Longitudinal data tracking skill progression over time\nThe question requires comparing performance at two different life stages, but the available data cannot establish a pilot's age during past competitions.\nA common sense reasoning question is as follows:\nIf a pilot participated in a competition and won the championship at the age of 23, can they still maintain the same level of competitive performance by the age of 30?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Age + 7 <= 30 THEN '可能保持竞技状态' ELSE '可能无法保持竞技状态' END AS Competitive_Status FROM pilot WHERE Name = 'Prof. Zackery Collina';",
        "db_id": "AirCraft"
    },
    {
        "id": 9,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22 helicopter', 'maximum gross weight', 'rotor disc area', 'maximum rotor disc loading'], 'relations': ['helicopter_to_specs (R-22 → Max_Gross_Weight/Total_Disk_Area/Max_Disk_Loading)', 'disc_area_to_lift (Total_Disk_Area ∝ Lift)', 'disc_loading_to_lift (Max_Disk_Loading ∝ Lift)'], 'intent': 'understand_lift_generation_mechanics', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'weight': 'lb (pounds)', 'disc_area': 'ft² (square feet)', 'disc_loading': 'lb/ft² (pounds per square foot)', 'lift': 'lb (pounds) (implied by equilibrium with weight)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}, {'column': 'Max_Disk_Loading', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大旋翼盘载荷（例如：2.6 lb/ft² (14 kg/m²)）', 'examples': ['14.0', '18.0', '43.0', '71.0', '72.0']}]}}\nA physical knowledge question is as follows:\nIf a Robinson R-22 helicopter takes off at its maximum gross weight, how does its rotor disc area and maximum rotor disc loading affect its lift?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Aircraft, Max_Gross_Weight, Total_Disk_Area, Max_Disk_Loading FROM aircraft WHERE Aircraft = 'RobinsonR-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 10,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['London Heathrow Airport', 'total passenger volume 2020 (67,054,745)', '1.5% change'], 'relations': ['airport_to_passenger_data (London Heathrow Airport → passenger volumes)', 'percentage_change_relation (ΔP=1.5%)'], 'intent': 'calculate_total_passenger_volume_2019', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [67054745, 1.5], 'units': {'passengers': 'unitless (count of individuals)', 'percentage_change': '% (implied by database schema)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Airport_Name', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '机场的名称（例如：London Heathrow）', 'examples': ['London Heathrow', 'London Gatwick', 'London Stansted', 'Manchester', 'London Luton']}, {'column': 'Total_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '机场的总乘客量（例如：67054745）', 'examples': ['67054700.0', '34205900.0', '22360400.0', '21219200.0', '10180700.0']}, {'column': 'Change_2019', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '与2019年相比的乘客量变化百分比（例如：1.5%）', 'examples': ['1.5%', '2.9%', '6.0%', '4.0%', '2.6%']}]}}\nA mathematical logic question is as follows:\nCalculate the total passenger volume for London Heathrow Airport in 2019, given that the total passenger volume in 2020 was 67,054,745, with a 1.5% change compared to 2019.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Total_Passengers / (1 + Change_2019 / 100) AS Total_Passengers_2019 FROM airport WHERE Airport_Name = 'LondonHeathrow';",
        "db_id": "AirCraft"
    },
    {
        "id": 11,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['airport', 'domestic passenger volume (80%)', 'international passenger volume (15%)', 'transfer passenger volume (5%)'], 'relations': ['passenger_distribution (80%+15%+5% = 100%)', 'total_passenger_volume (airport.Total_Passengers)'], 'intent': 'retrieve_total_passenger_volume_from_airport', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [80, 15, 5], 'units': {'passenger_volume': 'passengers (unitless count)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Total_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '机场的总乘客量（例如：67054745）', 'examples': ['67054700.0', '34205900.0', '22360400.0', '21219200.0', '10180700.0']}]}}\nA common sense reasoning question is as follows:\nIf an airport's domestic passenger volume accounts for 80% of the total passenger volume, international passenger volume accounts for 15%, and transfer passenger volume accounts for 5%, then what is the total passenger volume of this airport?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Domestic_Passengers / 0.80 AS Total_Passengers FROM airport;",
        "db_id": "AirCraft"
    },
    {
        "id": 12,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['aircraft', 'maximum total weight 1,000,000 lb', 'rotor disc area 1,000,000 ft²', 'rotor disc area 10,000,000 ft²'], 'relations': ['weight_to_disc_area (Max_Gross_Weight / Total_Disk_Area = Max_Disk_Loading)', 'area_change_effect (ΔArea = 9,000,000 ft²)'], 'intent': 'calculate_and_compare_rotor_disc_loading', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 10000000], 'units': {'weight': 'lb (pounds)', 'area': 'ft² (square feet)', 'disc_loading': 'lb/ft² (calculated unit)', 'conversion': 'Max_Disk_Loading = Max_Gross_Weight / Total_Disk_Area'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}, {'column': 'Max_Disk_Loading', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大旋翼盘载荷（例如：2.6 lb/ft² (14 kg/m²)）', 'examples': ['14.0', '18.0', '43.0', '71.0', '72.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a maximum total weight of an aircraft is 1,000,000 lb and the rotor disc area is 1,000,000 ft², calculate its maximum rotor disc loading and discuss how the maximum rotor disc loading would change if the rotor disc area increases to 10,000,000 ft².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_Gross_Weight / Total_Disk_Area AS Max_Disk_Loading, Max_Gross_Weight / 10000000 AS Max_Disk_Loading_New FROM aircraft WHERE Max_Gross_Weight = 1000000 AND Total_Disk_Area = 1000000;",
        "db_id": "AirCraft"
    },
    {
        "id": 13,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22', 'maximum gross weight', 'total disk area'], 'relations': ['aircraft_to_weight (Robinson R-22 → Max_Gross_Weight)', 'aircraft_to_disk_area (Robinson R-22 → Total_Disk_Area)', 'disc_loading (Max_Gross_Weight / Total_Disk_Area)'], 'intent': 'calculate_rotor_disc_loading', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['Max_Gross_Weight', 'Total_Disk_Area'], 'units': {'weight': 'pounds (implied for helicopter gross weight)', 'area': 'square feet (implied for rotor disk area)', 'disc_loading': 'pounds per square foot (derived unit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}]}}\nA physical knowledge question is as follows:\nCalculate what is the rotor disc loading of the Robinson R-22 helicopter at its maximum gross weight?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_Gross_Weight / Total_Disk_Area AS Disk_Loading FROM aircraft WHERE Aircraft = 'Robinson R-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 14,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pilot age 23', 'minimum pilot license age (common sense assumption)'], 'relations': [\"age_to_license_year (pilot's age → earliest year calculation)\"], 'intent': 'determine_earliest_pilot_license_year', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [23], 'units': {'age': 'years', 'year': 'calendar year (implied calculation)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'pilot', 'pk_column': 'Pilot_ID'}], 'tableinfo': {'AirCraft.pilot': [{'column': 'Age', 'type': 'INTEGER', 'primary_key': False, 'comment': '飞行员的年龄（例如：23）', 'examples': ['23', '20', '25', '31', '37']}]}}\nA hypothetical reasoning question is as follows:\nIf a pilot is 23 years old, in which year could he have obtained his pilot's license at the earliest?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT YEAR(CURDATE()) - (Age - 17) AS Earliest_License_Year FROM pilot WHERE Age = 23;",
        "db_id": "AirCraft"
    },
    {
        "id": 15,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22 helicopter', 'maximum gross weight', 'gravitational acceleration 9.81 m/s²'], 'relations': ['helicopter_to_weight (Robinson R-22 → Max_Gross_Weight)', 'weight_to_force (Max_Gross_Weight × gravitational acceleration)'], 'intent': 'calculate_lift_requirement_for_helicopter', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [9.81], 'units': {'gravitational_acceleration': 'm/s² (meters per second squared)', 'lift_force': 'N (Newtons, derived from Max_Gross_Weight [kg?] × 9.81 m/s²)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}]}}\nA physical knowledge question is as follows:\nCalculate the lift requirement for the Robinson R-22 helicopter at maximum gross weight, assuming a gravitational acceleration of 9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Aircraft, CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(Max_Gross_Weight, '(', -1), 'kg', 1) AS FLOAT) * 9.81 AS Lift_Required FROM aircraft WHERE Aircraft = 'RobinsonR-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 16,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MiraZayd, Abu Dhabi competition', 'aircraft', 'rotor disc area'], 'relations': ['competition_to_aircraft (MiraZayd, Abu Dhabi → match.Winning_Aircraft)', 'aircraft_to_disc_area (Aircraft_ID → Total_Disk_Area)'], 'intent': 'calculate_total_and_average_rotor_disc_area', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'rotor_disc_area': 'unit specified in aircraft.Total_Disk_Area column (e.g., m²)'}, 'foreign_keys': [{'fk_table': 'match', 'fk_column': 'Winning_Pilot', 'ref_table': 'pilot', 'ref_column': 'Winning_Pilot'}, {'fk_table': 'match', 'fk_column': 'Winning_Aircraft', 'ref_table': 'aircraft', 'ref_column': 'Winning_Aircraft'}], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}, {'pk_table': 'match', 'pk_column': 'Round'}], 'tableinfo': {'AirCraft.match': [{'column': 'Location', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': \"比赛的地点（例如：Mina' Zayid, Abu Dhabi）\", 'examples': [\"Mina' Zayid , Abu Dhabi\", 'Swan River , Perth', 'Flamengo Beach , Rio de Janeiro', 'Windsor , Ontario', 'New York City']}, {'column': 'Winning_Aircraft', 'type': 'INTEGER', 'primary_key': False, 'comment': '获胜飞机的唯一标识符（外键，引用 aircraft 表的 Aircraft_ID）', 'examples': ['1', '2', '3', '4', '5']}], 'AirCraft.aircraft': [{'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total rotor disc area of all participating aircraft in the MiraZayd, Abu Dhabi competition, and determine the average rotor disc area.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(a.Total_Disk_Area) AS Total_Disk_Area, AVG(a.Total_Disk_Area) AS Avg_Disk_Area FROM `match` m JOIN aircraft a ON m.Winning_Aircraft = a.Aircraft_ID WHERE m.Location = 'MiraZayd, Abu Dhabi';",
        "db_id": "AirCraft"
    },
    {
        "id": 17,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"London Heathrow Airport\", \"International_Passengers\", \"Total_Passengers\"],\n  \"relations\": [\"international_passengers_ratio (International_Passengers / Total_Passengers > 0.9)\"],\n  \"intent\": \"evaluate_passenger_ratio_threshold\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [90],\n  \"units\": {\n    \"passenger_count\": \"unitless (absolute numbers)\",\n    \"percentage_threshold\": \"90% (0.9 ratio)\"\n  },\n  \"required_tables\": [\"airport\"],\n  \"required_fields\": [\n    \"airport.Airport_Name\", \n    \"airport.International_Passengers\", \n    \"airport.Total_Passengers\"\n  ]\n}\n\n**Key Observations:**\n1. The second part of the query (\"explain possible reasons\") cannot be addressed with the given database schema since no fields provide contextual explanations or metadata for passenger distribution patterns.\n2. The calculation requires filtering the `airport` table for the row where `Airport_Name = 'London Heathrow Airport'` and verifying if `International_Passengers / Total_Passengers > 0.9`.\n3. The schema lacks fields like \"Hub_Status\" or \"Geographic_Factors\" that could theoretically explain the ratio, so external knowledge would be required for the explanation.\nA common sense reasoning question is as follows:\nDetermine whether the international passenger volume at London Heathrow Airport exceeds 90% of the total passenger volume, and explain the possible reasons for this.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Airport_Name, (International_Passengers / Total_Passengers) * 100 AS International_Percentage, CASE WHEN (International_Passengers / Total_Passengers) * 100 > 90 THEN 'Yes' ELSE 'No' END AS Exceeds_90_Percent FROM airport WHERE Airport_Name = 'London Heathrow';",
        "db_id": "AirCraft"
    },
    {
        "id": 18,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Robinson R-22 helicopter', 'maximum gross weight', 'total disk area', 'labeled maximum rotor disk load'], 'relations': ['aircraft_to_weight (R-22 → Max_Gross_Weight)', 'aircraft_to_disk_area (R-22 → Total_Disk_Area)', 'aircraft_to_max_disk_load (R-22 → Max_Disk_Loading)', 'lift_density (Weight * Gravity / Total_Disk_Area)', 'comparison (Lift_Density > Max_Disk_Loading)'], 'intent': 'calculate_lift_density_and_verify_against_max_disk_loading', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [9.8], 'units': {'gravity': 'm/s² (meters per second squared)', 'mass': 'kg (implied by Max_Gross_Weight in database)', 'force': 'N (Newtons, calculated as Weight = Mass * Gravity)', 'area': 'm² (square meters from Total_Disk_Area)', 'lift_density': 'N/m² (Pascals, calculated as Force / Area)', 'max_disk_loading': 'N/m² (implied by Max_Disk_Loading unit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Aircraft', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '飞机的名称或型号（例如：Robinson R-22）', 'examples': ['Robinson R-22', 'Bell 206B3 JetRanger', 'CH-47D Chinook', 'Mil Mi-26', 'CH-53E Super Stallion']}, {'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}, {'column': 'Max_Disk_Loading', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大旋翼盘载荷（例如：2.6 lb/ft² (14 kg/m²)）', 'examples': ['14.0', '18.0', '43.0', '71.0', '72.0']}]}}\nA physical knowledge question is as follows:\nWhat is the average lift density generated by the rotor disk of a Robinson R-22 helicopter at maximum gross weight? Assuming the gravitational acceleration is 9.8 m/s², and verify whether it exceeds its labeled maximum rotor disk load.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Aircraft, (Max_Gross_Weight/Total_Disk_Area) AS Calculated_Loading, Max_Disk_Loading, CASE WHEN (Max_Gross_Weight/Total_Disk_Area) > Max_Disk_Loading THEN 'Exceeded' ELSE 'Within Limit' END FROM aircraft WHERE Aircraft = 'RobinsonR-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 19,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['London Heathrow Airport', 'cargo throughput', 'associated aircraft', 'average'], 'relations': ['airport_to_aircraft (via airport_aircraft table)', 'freight_tonnes_to_kg (unit conversion)', 'total_cargo_to_aircraft_count'], 'intent': 'calculate_average_cargo_throughput_per_aircraft', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'cargo_throughput': 'tonnes (from Freight_Tonnes column)', 'conversion': '1 tonne = 1000 kg', 'final_unit': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'airport_aircraft', 'fk_column': 'Airport_ID', 'ref_table': 'airport', 'ref_column': 'Airport_ID'}, {'fk_table': 'airport_aircraft', 'fk_column': 'Aircraft_ID', 'ref_table': 'aircraft', 'ref_column': 'Aircraft_ID'}], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}, {'pk_table': 'airport', 'pk_column': 'Airport_ID'}, {'pk_table': 'airport_aircraft', 'pk_column': 'Airport_ID'}, {'pk_table': 'airport_aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Airport_Name', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '机场的名称（例如：London Heathrow）', 'examples': ['London Heathrow', 'London Gatwick', 'London Stansted', 'Manchester', 'London Luton']}, {'column': 'Freight_Tonnes', 'type': 'FLOAT', 'primary_key': False, 'comment': '货运量（以公吨为单位，例如：1397054）', 'examples': ['1397050.0', '107702.0', '197738.0', '141781.0', '40518.0']}], 'AirCraft.airport_aircraft': [{'column': 'Airport_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '机场的唯一标识符（外键，引用 airport 表的 Airport_ID）', 'examples': ['1', '2', '9', '6']}, {'column': 'Aircraft_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '飞机的唯一标识符（外键，引用 aircraft 表的 Aircraft_ID）', 'examples': ['1', '2', '3', '5']}], 'AirCraft.aircraft': [{'column': 'Aircraft_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '飞机的唯一标识符（主键）', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCalculate the average cargo throughput per associated aircraft at London Heathrow Airport, accurate to the nearest kilogram.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (SUM(a.Freight_Tonnes*1000)/SUM(a.Aircraft_Movements))/COUNT(DISTINCT aa.Aircraft_ID) FROM airport a JOIN airport_aircraft aa ON a.Airport_ID=aa.Airport_ID WHERE Airport_Name='LondonHeathrow';",
        "db_id": "AirCraft"
    },
    {
        "id": 20,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Total_Passengers', 'International_Passengers', 'Domestic_Passengers', 'Transit_Passengers'], 'relations': ['passenger_volume_equality (Total_Passengers = International_Passengers + Domestic_Passengers + Transit_Passengers)'], 'intent': 'verify_equality_of_passenger_volumes', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Total_Passengers', 'International_Passengers', 'Domestic_Passengers', 'Transit_Passengers'], 'units': {'passenger_count': 'unitless (count of passengers)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Total_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '机场的总乘客量（例如：67054745）', 'examples': ['67054700.0', '34205900.0', '22360400.0', '21219200.0', '10180700.0']}, {'column': 'International_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '国际乘客量（例如：61344438）', 'examples': ['61344400.0', '30431100.0', '19996900.0', '18119200.0', '8853220.0']}, {'column': 'Domestic_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '国内乘客量（例如：5562516）', 'examples': ['5562520.0', '3730960.0', '2343430.0', '2943720.0', '1320680.0']}, {'column': 'Transit_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '中转乘客量（例如：147791）', 'examples': ['147791.0', '43873.0', '19989.0', '156246.0', '6832.0']}]}}\nA common sense reasoning question is as follows:\nVerify whether the total passenger volume at the airport equals the sum of international, domestic, and transit passengers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Total_Passengers, (International_Passengers+Domestic_Passengers+Transit_Passengers) AS Sum_Passengers, CASE WHEN Total_Passengers = International_Passengers+Domestic_Passengers+Transit_Passengers THEN 'Match' ELSE 'Mismatch' END FROM airport;",
        "db_id": "AirCraft"
    },
    {
        "id": 21,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['aircraft', 'Max_Gross_Weight 600-ton', 'Total_Disk_Area 0.01 m²', 'atmospheric pressure'], 'relations': ['weight_to_area_ratio (Max_Gross_Weight / Total_Disk_Area)', 'pressure_equivalence (disk_loading / atmospheric_pressure)'], 'intent': 'calculate_equivalent_rotor_disk_loading', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [600, 0.01], 'units': {'mass': 'ton (metric ton = 1000 kg)', 'area': 'm²', 'pressure': 'Pa (Pascal = N/m²)', 'conversion': {'gravity': '9.81 m/s² (standard gravity)', 'standard_atmosphere': '101325 Pa'}}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'aircraft', 'pk_column': 'Aircraft_ID'}], 'tableinfo': {'AirCraft.aircraft': [{'column': 'Max_Gross_Weight', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的最大总重量（例如：1,370 lb (635 kg)）', 'examples': ['635.0', '1451.0', '22680.0', '56000.0', '33300.0']}, {'column': 'Total_Disk_Area', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机的总旋翼盘面积（例如：497 ft² (46.2 m²)）', 'examples': ['46.2', '81.1', '526.0', '789.0', '460.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the Max_Gross_Weight of a certain aircraft reaches the 600-ton class of a geosynchronous orbit launch vehicle, and its Total_Disk_Area is only 0.01 m², what is the equivalent rotor disk loading in terms of atmospheric pressure?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (600000*9.8)/0.01/101325 AS Atmospheric_Pressure_Multiples FROM DUAL;",
        "db_id": "AirCraft"
    },
    {
        "id": 22,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"helicopter rotor\", \"rotor radius 5m\", \"rotation speed 300 RPM\", \"material density 2.7 g/cm³\"],\n  \"relations\": [\"rotor_to_kinetic_energy (helicopter rotor → rotational kinetic energy)\", \"radius_to_rotational_parameters (5m → moment of inertia calculation)\", \"RPM_to_angular_velocity (300 RPM → ω conversion)\"],\n  \"intent\": \"calculate_rotational_kinetic_energy\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [5, 300, 2.7],\n  \"units\": {\n    \"radius\": \"meters\",\n    \"rotation_speed\": \"RPM (converted to rad/s)\",\n    \"density\": \"g/cm³ (converted to kg/m³)\",\n    \"energy\": \"Joules (calculated)\"\n  },\n  \"required_tables\": [\"aircraft\"],\n  \"required_fields\": [\n    \"aircraft.Total_Disk_Area\",\n    \"aircraft.Max_Disk_Loading\"\n  ]\n}\n\nNote: The database lacks direct parameters required for this calculation (material density, rotor mass, blade geometry). The mapped fields represent minimal available aircraft-related data that might indirectly relate to rotor properties but cannot fully satisfy the physics requirements. This highlights a limitation in using the provided database schema for the requested calculation.\nA physical knowledge question is as follows:\nCalculate the rotational kinetic energy of a helicopter rotor under maximum load, assuming a rotor radius of 5m, rotation speed of 300 RPM, and material density of 2.7 g/cm³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5*(0.3*Max_Gross_Weight)*POWER(5,2)*POWER((2*PI()*300/60),2) AS Rotational_Energy FROM aircraft WHERE Aircraft='RobinsonR-22';",
        "db_id": "AirCraft"
    },
    {
        "id": 23,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pilot age', 'race-winning rate', '23-year-old pilot', '2023 season'], 'relations': ['age_to_winning_rate (Age → Winning_Rate)', 'confidence_interval_for_probability (23-year-old → 2023_season_data)'], 'intent': 'develop_mathematical_model_and_calculate_confidence_interval', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [23], 'units': {'age': 'years', 'winning_rate': 'probability (0-1 scale)', 'confidence_interval': '95% confidence level (assumed)'}, 'foreign_keys': [{'fk_table': 'match', 'fk_column': 'Winning_Pilot', 'ref_table': 'pilot', 'ref_column': 'Winning_Pilot'}, {'fk_table': 'match', 'fk_column': 'Winning_Aircraft', 'ref_table': 'aircraft', 'ref_column': 'Winning_Aircraft'}], 'primary_keys': [{'pk_table': 'match', 'pk_column': 'Round'}, {'pk_table': 'pilot', 'pk_column': 'Pilot_ID'}], 'tableinfo': {'AirCraft.pilot': [{'column': 'Age', 'type': 'INTEGER', 'primary_key': False, 'comment': '飞行员的年龄（例如：23）', 'examples': ['23', '20', '25', '31', '37']}, {'column': 'Pilot_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '飞行员的唯一标识符（主键）', 'examples': ['1', '2', '3', '4', '5']}], 'AirCraft.match': [{'column': 'Winning_Pilot', 'type': 'INTEGER', 'primary_key': False, 'comment': '获胜飞行员的唯一标识符（外键，引用 pilot 表的 Pilot_Id）', 'examples': ['1', '2', '4', '6', '9']}, {'column': 'Date', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '比赛的日期（例如：2023-03-26）', 'examples': ['March 26–27', 'April 17–18', 'May 8–9', 'June 5–6', 'June 19–20']}]}}\nA mathematical logic question is as follows:\nDevelop a mathematical model for the relationship between a pilot's age and their race-winning rate, and calculate the confidence interval for the winning probability of a 23-year-old pilot in the 2023 season.\nyour response just have a SQL without anything.\n",
        "solution": "WITH cte AS (SELECT COUNT(*) AS total, SUM(CASE WHEN p.Age=23 THEN 1 ELSE 0 END) AS wins FROM `match` m JOIN pilot p ON m.Winning_Pilot = p.Pilot_ID WHERE YEAR(m.Date) = 2023) SELECT ROUND(wins*1.0/total,3) AS p_value, ROUND(1.96 * SQRT((wins*1.0/total) * (1 - wins*1.0/total) / total), 3) AS margin FROM cte;",
        "db_id": "AirCraft"
    },
    {
        "id": 24,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Transfer Passenger Volume', 'Aircraft Takeoffs and Landings', 'Airport Ground Handling Capacity Limit'], 'relations': ['airport_transit_passengers_to_aircraft_movements (Transit_Passengers/Aircraft_Movements ratio)'], 'intent': 'capacity_limit_analysis', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'passenger_ratio': 'unitless (passengers per movement)', 'capacity_limit': 'unitless (predefined threshold ratio)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'Transit_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '中转乘客量（例如：147791）', 'examples': ['147791.0', '43873.0', '19989.0', '156246.0', '6832.0']}, {'column': 'Aircraft_Movements', 'type': 'FLOAT', 'primary_key': False, 'comment': '飞机起降次数（例如：478693）', 'examples': ['478693.0', '263653.0', '193282.0', '204610.0', '117859.0']}]}}\nA common sense reasoning question is as follows:\nAnalyze whether the ratio of transfer passenger volume to aircraft takeoffs and landings exceeds the airport's ground handling capacity limit.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Transit_Passengers/(Aircraft_Movements/365) AS Daily_Transit_Per_Movement FROM airport;",
        "db_id": "AirCraft"
    },
    {
        "id": 25,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['international passenger traffic 10¹⁵ passengers', 'space per passenger 0.5m²', \"Earth's total surface area (5.1×10¹⁴ m²)\"], 'relations': ['passenger_to_space (10¹⁵ × 0.5m² = 5×10¹⁴ m²)', 'terminal_to_earth_surface_ratio (5×10¹⁴ m² / 5.1×10¹⁴ m² ≈ 0.98)'], 'intent': 'calculate_ratio_of_terminal_to_earth_surface', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000000000.0, 0.5, 510000000000000.0], 'units': {'passenger_count': 'unitless', 'space_per_passenger': 'm² (square meters)', 'earth_surface_area': 'm² (square meters)', 'conversion': \"1 km² = 1e6 m²; Earth's surface area ≈ 510.1 million km² = 5.1×10¹⁴ m²\"}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'airport', 'pk_column': 'Airport_ID'}], 'tableinfo': {'AirCraft.airport': [{'column': 'International_Passengers', 'type': 'FLOAT', 'primary_key': False, 'comment': '国际乘客量（例如：61344438）', 'examples': ['61344400.0', '30431100.0', '19996900.0', '18119200.0', '8853220.0']}]}}\nA hypothetical reasoning question is as follows:\nIf an airport's international passenger traffic reaches 10¹⁵ passengers, with each passenger occupying 0.5m² of space, how many times the Earth's surface area would the terminal building need to be?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1E15*0.5)/(5.1E14) AS Earth_Surface_Multiples FROM DUAL;",
        "db_id": "AirCraft"
    },
    {
        "id": 26,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tsunami event', 'impact radius 200 km', 'tsunami wave propagation speed 200 m/s'], 'relations': ['event_to_radius (tsunami_event → RadiusKm)', 'distance_over_speed (time = 200,000m / 200m/s)'], 'intent': 'calculate_travel_time_for_tsunami_wave', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 200], 'units': {'distance': 'km (converted to meters: 200,000m)', 'speed': 'm/s', 'time': 'seconds (implied by calculation)', 'conversion': '1 km = 1000 meters'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the warning event table where the event type is a tsunami with an impact radius of 200 kilometers, based on the physical characteristics of tsunami wave propagation, calculate the time required for the tsunami wave to travel from the epicenter to the edge of the impact radius. Assume the tsunami wave propagation speed is 200 meters per second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (RadiusKm * 1000) / 200 AS PropagationTimeSeconds FROM WarningEvent WHERE EventType = '海啸' AND RadiusKm = 200;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 27,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SeverityLevel threshold 8', 'average severity 5.5', 'standard deviation 2.87', 'total records 1000', 'confidence level 99%'], 'relations': ['threshold_to_mean (Δ = 8 - 5.5 = 2.5)', 'z_score (Z = (8 - 5.5)/2.87 ≈ 0.871)', 'percentage_above_threshold (calculated from Z-score)', 'confidence_interval (p ± Z*sqrt(p*(1-p)/n))'], 'intent': 'calculate_percentage_and_confidence_interval', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5.5, 2.87, 8, 1000, 99], 'units': {'SeverityLevel': 'unitless (1-10 scale)', 'percentage': '% (calculated proportion * 100)', 'confidence_interval': '± margin of error (Z=2.576 for 99%)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}]}}\nA mathematical logic question is as follows:\nThe alert event table contains 1,000 records, with each record's severity level (SeverityLevel) ranging from 1 to 10. It is known that the overall average severity level is 5.5, and the overall standard deviation is 2.87. Assuming the severity data follows a normal distribution, calculate the percentage of events where the severity level exceeds 8 relative to the total number of events, and further compute the 99% confidence interval for these events.\nyour response just have a SQL without anything.\n",
        "solution": "WITH FilteredData AS (SELECT SeverityLevel FROM WarningEvent WHERE SeverityLevel > 8) SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WarningEvent)) AS PercentageAboveThreshold, AVG(SeverityLevel) - (2.576 * (STDDEV(SeverityLevel) / SQRT(COUNT(SeverityLevel)))) AS LowerBound, AVG(SeverityLevel) + (2.576 * (STDDEV(SeverityLevel) / SQRT(COUNT(SeverityLevel)))) AS UpperBound FROM FilteredData;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 28,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['flood event', 'affected population count 10,000 people', 'severity level 8'], 'relations': ['event_type_to_response (flood → emergency_measures)', 'severity_to_action (level_8 → high_severity_protocol)'], 'intent': 'determine_applicable_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [10000, 8], 'units': {'population': 'people', 'severity': 'level (1-10 scale, inferred from database schema)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EventDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall caused severe flooding in the Yangtze River Basin.', 'A 7.0 magnitude earthquake struck Sichuan Province, causing widespread damage.', 'A wildfire broke out in California, destroying thousands of acres of forest.', 'A tornado touched down in Oklahoma, causing significant damage to homes and infrastructure.', 'A powerful tsunami hit the Pacific Coast of Japan following an undersea earthquake.']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning events table with the event type being flood, affected population count of 10,000 people, and severity level of 8. Based on common knowledge, what emergency response measures might be applicable for such an event? Please reason in conjunction with flood disaster emergency management.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '洪水' AND SeverityLevel = 8;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 29,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['warning event with fire type', 'impact radius 1000 km', 'affected population 100 million', 'estimated loss 1 trillion USD', '24 hours duration', '1 millisecond recording interval'], 'relations': ['event_to_rule_conditions (impact_radius > 100km OR population > 1M OR damage > 10B USD)', 'time_interval_to_trigger_count (ms_interval = 1ms → 86,400,000 triggers in 24h)'], 'intent': 'calculate_warning_trigger_count_for_extreme_event', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100000000, 1000000000000, 24, 1], 'units': {'distance': 'km', 'population': 'people', 'monetary_value': 'USD', 'time_interval': 'milliseconds', 'duration': 'hours', 'conversion': '24 hours = 86,400,000 milliseconds'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}, {'column': 'EventId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the warning event table with the event type as fire, an impact radius of 1,000 kilometers, an affected population of 100 million people, and an estimated loss of 1 trillion USD, which are extreme outliers (the normal range is an impact radius of 0–100 kilometers, an affected population of 0–1 million people, and an estimated loss of 0–10 billion USD). If the warning system records data every millisecond and the event data remains at these extreme values for 24 hours, how many times will the system trigger a warning? Assume the warning rule is an impact radius > 100 kilometers or an affected population > 1 million people or an estimated loss > 10 billion USD.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningEvent WHERE (RadiusKm > 100 OR PopulationAffected > 1000000 OR EstimatedDamageUSD > 10000000000) AND EventTime BETWEEN '2023-01-01 00:00:00' AND '2023-01-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 30,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['volcanic eruption event', 'impact radius 50 kilometers', 'ash dispersal speed 10 meters per second'], 'relations': ['event_to_radius (volcanic eruption → impact radius 50 km)', 'speed_to_time (10 m/s → time calculation)'], 'intent': 'calculate_time_for_ash_spread', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50, 10], 'units': {'radius': 'kilometers (km)', 'speed': 'meters per second (m/s)', 'conversion': '1 km = 1000 meters (to calculate time in seconds)', 'time': 'seconds (calculated result)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the alert event table with the event type as a volcanic eruption and an impact radius of 50 kilometers, based on the physical characteristics of volcanic ash dispersion, calculate the time required for the volcanic ash to spread from the crater to the edge of the impact radius. Assume the ash dispersal speed is 10 meters per second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (RadiusKm * 1000) / 10 AS DiffusionTimeSeconds FROM WarningEvent WHERE EventType = '火山喷发' AND RadiusKm = 50;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 31,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningEvent', 'EstimatedDamageUSD', '$20,000,000.00', 'log-normal distribution'], 'relations': ['event_to_damage (WarningEvent → EstimatedDamageUSD)', 'threshold_comparison (EstimatedDamageUSD > $20,000,000.00)'], 'intent': 'calculate_percentage_of_events_exceeding_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000000, 10500000, 16500000], 'units': {'EstimatedDamageUSD': 'USD (United States Dollar)', 'threshold': '$20,000,000.00', 'mean': '$10,500,000.00', 'std_dev': '$16,500,000.00'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}]}}\nA mathematical logic question is as follows:\nThere are 7 records in the early warning event table, with estimated losses (EstimatedDamageUSD) of $5,000,000.00, $10,000,000.00, $2,000,000.00, $1,500,000.00, $50,000,000.00, $1,000,000.00, and $3,000,000.00 for each record. The overall average of the estimated losses is known to be $10,500,000.00, with an overall standard deviation of $16,500,000.00. Assuming the estimated loss data follows a log-normal distribution, please calculate the percentage of events where the estimated loss exceeds $20,000,000.00 relative to the total number of events.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(CASE WHEN EstimatedDamageUSD > 20000000.00 THEN 1 END) * 100.0 / COUNT(*)) AS PercentageAboveThreshold FROM WarningEvent;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 32,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tornado event', 'severity level 6', 'impact radius 30 kilometers'], 'relations': ['event_to_severity (tornado → level 6)', 'event_to_radius (tornado → 30 km)'], 'intent': 'determine_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [6, 30], 'units': {'severity': 'level (scale-based, no unit)', 'radius': 'kilometers (km)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the warning event table with an event type of tornado, severity level of 6, and an impact radius of 30 kilometers. Based on common knowledge, what emergency response measures might this event involve? Please reason based on emergency management principles for tornado disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '龙卷风' AND SeverityLevel = 6;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 33,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tsunami event', 'impact radius 1000 km', 'severity level 10', 'estimated losses 100,000,000,000.00 USD', '24 hours', '1 millisecond logging interval'], 'relations': ['event_to_threshold (impact_radius > 200 km)', 'event_to_threshold (severity_level > 9)', 'event_to_threshold (estimated_losses > 50,000,000.00 USD)', 'time_duration_to_logging_interval (24 hours / 1 millisecond)'], 'intent': 'calculate_warning_trigger_frequency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 10, 100000000000, 24, 1], 'units': {'time': 'hours → milliseconds (1 hour = 3,600,000 ms)', 'calculation': 'total_ms = 24 * 3,600,000 = 86,400,000 ms'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}]}}\nA hypothetical reasoning question is as follows:\nAssume there is a record in the warning event table where the event type is a tsunami, with an impact radius of 1000 kilometers, a severity level of 10, and estimated losses of 100,000,000,000.00 USD. This is an extreme outlier (the normal range is an impact radius of 0-200 kilometers, severity levels 1-9, and estimated losses of 0-50,000,000.00 USD). If the warning system logs data every millisecond, and the event data remains at these extreme values for 24 hours, how many times will the system trigger warnings? Assume the warning rule is triggered when the impact radius > 200 kilometers, or the severity level > 9, or the estimated losses > 50,000,000.00 USD.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningEvent WHERE (RadiusKm > 200 OR SeverityLevel > 9 OR EstimatedDamageUSD > 50000000) AND EventTime BETWEEN '2023-01-01 00:00:00' AND '2023-01-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 34,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earthquake event', 'influence radius 100 kilometers', 'focal depth 10 kilometers', 'seismic wave speed 5 kilometers per second'], 'relations': ['event_to_radius (earthquake event → 100 km)', 'event_to_depth (earthquake event → 10 km)', 'speed_value (5 km/s)'], 'intent': 'calculate_time_for_seismic_wave_propagation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 10, 5], 'units': {'distance': 'kilometers (km)', 'speed': 'kilometers per second (km/s)', 'time': 'seconds (implied by calculation)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'DepthKm'}]}}\nA physical knowledge question is as follows:\nIf there is a record in the alert event table with the event type as earthquake, an influence radius of 100 kilometers, and a focal depth of 10 kilometers, please calculate the time required for the seismic wave to propagate from the epicenter to the edge of the influence radius based on the seismic wave speed (assuming it is 5 kilometers per second).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RadiusKm / 5 AS PropagationTimeSeconds FROM WarningEvent WHERE EventType = '地震' AND RadiusKm = 100;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 35,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningEvent table', 'EstimatedDamageUSD', '$8,000,000.00 threshold', 'normal distribution'], 'relations': ['table_to_field (WarningEvent → EstimatedDamageUSD)', 'damage_threshold_comparison (EstimatedDamageUSD > $8,000,000.00)', 'statistical_distribution (normal distribution parameters)'], 'intent': 'calculate_percentage_above_threshold_using_normal_distribution', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8000000, 5500000, 2872281.32], 'units': {'currency': 'USD (US Dollar)', 'threshold': '$8,000,000.00', 'mean': '$5,500,000.00 (average estimated damage)', 'std_dev': '$2,872,281.32 (standard deviation)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}]}}\nA mathematical logic question is as follows:\nThere are 10 records in the early warning event table, with estimated damages (EstimatedDamageUSD) of $1,000,000.00, $2,000,000.00, $3,000,000.00, $4,000,000.00, $5,000,000.00, $6,000,000.00, $7,000,000.00, $8,000,000.00, $9,000,000.00, and $10,000,000.00 respectively. The overall average estimated damage is $5,500,000.00, and the overall standard deviation is $2,872,281.32. Assuming the estimated damage data follows a normal distribution, please calculate the percentage of events with estimated damages exceeding $8,000,000.00 out of the total number of events.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(CASE WHEN EstimatedDamageUSD > 8000000.00 THEN 1 END) * 100.0 / COUNT(*)) AS PercentageAboveThreshold FROM WarningEvent;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 36,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['flood event (WarningEvent table)', 'severity level 8', 'impact radius 50 kilometers'], 'relations': ['event_to_severity_level (flood → severity level 8)', 'event_to_radius (flood → impact radius 50 km)', 'severity_to_response_threshold (severity level 8 → flood emergency protocols)'], 'intent': 'determine_emergency_response_measures_for_flood', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [8, 50], 'units': {'severity': 'severity_level (scale 1-10)', 'radius': 'kilometers (km)', 'damage': 'USD (US Dollars) (implied from EstimatedDamageUSD field)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}], 'AlarmSystem.WarningRule': [{'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning event table where the event type is flood, the severity level is 8, and the impact radius is 50 kilometers. Based on common sense, what emergency response measures might this event entail? Please reason in combination with flood disaster emergency management.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '洪水' AND SeverityLevel = 8;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 37,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningEvent record', 'nuclear leakage', 'impact radius 5,000 km', 'severity level 10', 'estimated losses $1T', '24-hour duration', '1 millisecond interval'], 'relations': ['event_to_rule_threshold (impact radius 5,000 km > 100 km)', 'event_to_rule_threshold (severity level 10 > 9)', 'event_to_rule_threshold (estimated losses $1T > $100M)', 'duration_to_frequency (24 hours / 1 millisecond interval)'], 'intent': 'calculate_warning_trigger_frequency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 10, 1000000000000, 24, 1], 'units': {'time': 'hours → milliseconds (24 hours = 86,400,000 milliseconds)', 'threshold_comparison': 'radius (km), severity (level), financial (USD)', 'trigger_rate': '1 trigger per millisecond'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}], 'AlarmSystem.WarningRule': [{'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the early warning event table with the event type as nuclear leakage, an impact radius of 5,000 kilometers, a severity level of 10, and estimated losses of $1,000,000,000,000.00, which is an extreme outlier (normal range: impact radius 0-100 kilometers, severity level 1-9, estimated losses $0-100,000,000.00). If the early warning system records data every millisecond and the event data remains at these extreme values for 24 hours, how many times will the system trigger an early warning? Assume the early warning rule is triggered if the impact radius > 100 kilometers, or severity level > 9, or estimated losses > $100,000,000.00.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningEvent WHERE (RadiusKm > 100 OR SeverityLevel > 9 OR EstimatedDamageUSD > 100000000) AND EventTime BETWEEN '2023-01-01 00:00:00' AND '2023-01-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 38,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fire event', 'impact radius 2 kilometers', 'flame spread speed 0.1 km/min'], 'relations': ['radius_to_spread_speed (2 km / 0.1 km/min = 20 minutes)'], 'intent': 'calculate_flame_spread_time', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 0.1], 'units': {'distance': 'kilometers (km)', 'speed': 'kilometers per minute (km/min)', 'time': 'minutes (calculated via t = d/s)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the early warning event table where the event type is fire, the impact radius is 2 kilometers, and the flame spread speed is 0.1 kilometers per minute, please calculate the time required for the flame to spread from the ignition point to the edge of the impact radius.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RadiusKm / 0.1 AS SpreadTimeMinutes FROM WarningEvent WHERE EventType = '火灾' AND RadiusKm = 2;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 39,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningEvent table', 'PopulationAffected values [100, 200, 300, 400, 500]'], 'relations': ['record_count (5 records)', 'average_calculation (sum/count)'], 'intent': 'calculate_average_affected_population', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 200, 300, 400, 500], 'units': {'population': 'people', 'calculation': 'arithmetic mean = sum(100+200+300+400+500)/5'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}]}}\nA mathematical logic question is as follows:\nThe alert event table contains 5 records, with affected population numbers (PopulationAffected) of 100, 200, 300, 400, and 500 people respectively. Please calculate the average affected population for these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(PopulationAffected) AS AveragePopulationAffected FROM WarningEvent;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 40,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['typhoon', 'severity level 5', 'impact radius 50 kilometers'], 'relations': ['event_to_severity_level (typhoon → severity level 5)', 'event_to_impact_radius (typhoon → 50 kilometers)'], 'intent': 'determine_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5, 50], 'units': {'severity': 'level (scale 1-5, where 5 is highest severity)', 'radius': 'kilometers (km)', 'conversion': 'impact radius directly used for evacuation zone planning'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning event table with the event type as typhoon, severity level of 5, and an impact radius of 50 kilometers. Based on common knowledge, what emergency response measures might be taken for such an event? Please reason by combining emergency management strategies for typhoon disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '台风' AND SeverityLevel = 5;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 41,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earthquake event', 'impact radius 1000 km', 'severity level 10', 'estimated loss $10,000,000,000', '24 hours', 'data recording interval 1 second'], 'relations': ['event_to_rules (earthquake → WarningRule criteria)', 'threshold_comparison (impact_radius > 100 km, severity_level > 9, estimated_loss > $1,000,000)', 'duration_to_frequency (24 hours × 1 record/sec)'], 'intent': 'calculate_warning_trigger_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 10, 10000000000, 24, 1], 'units': {'impact_radius': 'km', 'severity_level': 'unitless (numeric scale)', 'estimated_loss': 'USD', 'duration': 'hours', 'recording_interval': 'seconds', 'conversion': '1 hour = 3600 seconds'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}, {'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the early warning event table with the event type as earthquake, an impact radius of 1,000 kilometers, a severity level of 10, and an estimated loss of $10,000,000,000.00, which are extreme outliers (the normal range is an impact radius of 0-100 kilometers, severity level 1-9, and an estimated loss of $0-1,000,000.00). If the early warning system records data once per second and the event data remains at these extreme values for 24 hours, how many times will the system trigger an early warning? Assume the warning rules are: impact radius > 100 kilometers, or severity level > 9, or estimated loss > $1,000,000.00.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningEvent WHERE (RadiusKm > 100 OR SeverityLevel > 9 OR EstimatedDamageUSD > 1000000) AND EventTime BETWEEN '2023-01-01 00:00:00' AND '2023-01-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 42,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningEvent', 'tsunami', 'affected radius 200 kilometers', 'tsunami wave propagation speed 200 meters per second'], 'relations': ['event_type_to_radius (tsunami → 200 km)', 'radius_to_propagation_time (200 km / 200 m/s)'], 'intent': 'calculate_tsunami_propagation_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 200], 'units': {'distance': 'km (kilometers) → meters (conversion: 200 km = 200,000 meters)', 'speed': 'm/s (meters per second)', 'time': 'seconds (calculated as 200,000 m / 200 m/s = 1000 s)', 'conversion_formula': 'time = distance / speed'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the early warning event table where the event type is tsunami, the affected radius is 200 kilometers, and the tsunami wave propagation speed is 200 meters per second, please calculate the time required for the tsunami wave to propagate from the source to the edge of the affected radius.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (RadiusKm * 1000) / 200 AS PropagationTimeSeconds FROM WarningEvent WHERE EventType = '海啸' AND RadiusKm = 200;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 43,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningEvent records', 'EstimatedDamageUSD values', 'normal distribution'], 'relations': ['damage_distribution (mean=5500000, std_dev=2872281.32)', 'range_condition (3000000 ≤ damage ≤ 7000000)'], 'intent': 'calculate_probability_normal_distribution', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3000000, 7000000, 5500000, 2872281.32], 'units': {'monetary': 'USD (United States Dollar)', 'statistical': 'mean (μ=5500000 USD), standard deviation (σ=2872281.32 USD)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}]}}\nA mathematical logic question is as follows:\nThere are 10 records in the early warning events table, with estimated damages (EstimatedDamageUSD) of $1,000,000.00, $2,000,000.00, $3,000,000.00, $4,000,000.00, $5,000,000.00, $6,000,000.00, $7,000,000.00, $8,000,000.00, $9,000,000.00, and $10,000,000.00 respectively. The overall average of the estimated damages is $5,500,000.00, and the overall standard deviation is $2,872,281.32. Assuming the estimated damage data follows a normal distribution, calculate the percentage of events where the estimated damage falls between $3,000,000.00 and $7,000,000.00 out of the total number of events.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(CASE WHEN EstimatedDamageUSD BETWEEN 3000000.00 AND 7000000.00 THEN 1 END) * 100.0 / COUNT(*)) AS PercentageWithinRange FROM WarningEvent;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 44,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earthquake', 'severity level 7', 'impact radius 50 kilometers'], 'relations': ['event_type_to_severity (earthquake → severity level 7)', 'event_to_radius (earthquake → 50 kilometers)'], 'intent': 'identify_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [7, 50], 'units': {'severity': 'level (Richter scale or equivalent)', 'radius': 'kilometers (km)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning event table with the event type as earthquake, severity level 7, and an impact radius of 50 kilometers. Based on common knowledge, what potential emergency response measures might be taken for such an event? Please reason in conjunction with emergency management for earthquake disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '地震' AND SeverityLevel = 7;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 45,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['volcanic eruption', 'impact radius 1000 km', 'severity level 10', 'estimated loss 100000000000.00 USD', 'duration 24 hours', 'alert frequency once per second'], 'relations': ['event_to_alert_rules (volcanic eruption → impact radius > 100 km)', 'event_to_alert_rules (volcanic eruption → severity level > 9)', 'event_to_alert_rules (volcanic eruption → estimated loss > 1000000.00 USD)', 'duration_to_alerts (24 hours × 3600 seconds/hour = 86400 alerts)'], 'intent': 'calculate_alert_trigger_frequency_under_extreme_values', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 10, 100000000000.0, 24], 'units': {'time': 'hours to seconds conversion (1 hour = 3600 seconds)', 'alert_frequency': '1 Hz (once per second)', 'threshold_units': 'km, dimensionless (severity), USD'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}]}}\nA hypothetical reasoning question is as follows:\nAssume there is a record in the alert event table with an event type of volcanic eruption, an impact radius of 1,000 kilometers, a severity level of 10, and an estimated loss of 100,000,000,000.00 USD, which is an extreme outlier (normal ranges are impact radius 0-100 kilometers, severity level 1-9, estimated loss 0-1,000,000.00 USD). If the alert system records data once per second and the event data remains at these extreme values for 24 hours, how many times will the system trigger alerts? The alert rules are defined as: impact radius > 100 kilometers or severity level > 9 or estimated loss > 1,000,000.00 USD.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningEvent WHERE (RadiusKm > 100 OR SeverityLevel > 9 OR EstimatedDamageUSD > 1000000) AND EventTime BETWEEN '2023-01-01 00:00:00' AND '2023-01-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 46,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['volcanic eruption event', 'impact radius 500 kilometers', 'ash dispersion speed 20 meters per second', 'decay coefficient 0.01 per second'], 'relations': ['event_to_radius (volcanic eruption → 500 km)', 'speed_decay_relation (20 m/s → 0.01/s exponential decay)'], 'intent': 'calculate_dispersion_time_with_decay', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500, 20, 0.01], 'units': {'distance': 'kilometers (converted to meters: 500,000 m)', 'speed': 'meters per second (m/s)', 'decay_rate': 'per second (1/s)', 'time': 'seconds (calculated from exponential decay integral)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the early warning events table where the event type is a volcanic eruption, with an impact radius of 500 kilometers, an ash dispersion speed of 20 meters per second, and considering the effect of atmospheric resistance, the dispersion speed decays exponentially over time with a decay coefficient of 0.01 per second. Please calculate the time required for the volcanic ash to disperse to the edge of the impact radius, taking into account the effect of decay on the dispersion time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (20 / 0.01) * (1 - EXP(-0.01 * (500 * 1000 / 20))) AS DiffusionTimeSeconds FROM WarningEvent WHERE EventType = '火山喷发' AND RadiusKm = 500;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 47,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningEvent table', 'EstimatedDamageUSD', 'log mean (μ_ln) = 15', 'log standard deviation (σ_ln) = 2', 'threshold damage USD 1,000,000,000.00', 'total events 1000'], 'relations': ['event_damage_distribution (EstimatedDamageUSD → log-normal parameters μ_ln/σ_ln)', 'threshold_comparison (EstimatedDamageUSD > 1e9 USD)', 'statistical_aggregation (percentage_of_events, sum_of_damage)'], 'intent': 'calculate_percentage_and_total_damage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15, 2, 1000000000.0, 1000], 'units': {'damage': 'USD (United States Dollar)', 'threshold': '1,000,000,000.00 USD', 'distribution_parameters': 'μ_ln (unitless), σ_ln (unitless)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}, {'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nThere are 1,000 records in the early warning event table, and the estimated damage (EstimatedDamageUSD) for each record follows a log-normal distribution. The known log mean (μ_ln) is 15, and the log standard deviation (σ_ln) is 2. Please calculate the percentage of events where the estimated damage exceeds $1,000,000,000.00 out of the total number of events, and further calculate the total estimated damage for these events.\nyour response just have a SQL without anything.\n",
        "solution": "WITH FilteredEvents AS (SELECT EstimatedDamageUSD FROM WarningEvent WHERE EstimatedDamageUSD > 1000000000.00) SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WarningEvent)) AS PercentageAboveThreshold, SUM(EstimatedDamageUSD) AS TotalDamageAboveThreshold FROM FilteredEvents;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 48,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['nuclear leak', 'severity level 10', 'impact radius 100 kilometers', 'WarningEvent table'], 'relations': ['event_type_to_table (nuclear leak → WarningEvent.EventType)', 'severity_to_impact (severity level 10 → high-risk classification)', 'radius_to_evacuation (impact radius 100 km → evacuation zone definition)'], 'intent': 'analyze_emergency_response_and_environmental_impact', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [10, 100], 'units': {'severity': 'level (discrete scale 1-10)', 'radius': 'kilometers (km)', 'population': 'people (implied by PopulationAffected field)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'EventDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall caused severe flooding in the Yangtze River Basin.', 'A 7.0 magnitude earthquake struck Sichuan Province, causing widespread damage.', 'A wildfire broke out in California, destroying thousands of acres of forest.', 'A tornado touched down in Oklahoma, causing significant damage to homes and infrastructure.', 'A powerful tsunami hit the Pacific Coast of Japan following an undersea earthquake.']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning event table with an event type of nuclear leak, a severity level of 10, and an impact radius of 100 kilometers. Based on common knowledge, what emergency response measures might be taken for such an event? Please provide reasoning based on the emergency management of nuclear leakage disasters and analyze the long-term environmental impact on the affected areas.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '核泄漏' AND SeverityLevel = 10;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 49,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tsunami event', 'impact radius 100,000 km', 'severity level 10', 'estimated losses $10 trillion', '365 days'], 'relations': ['event_to_rule_threshold (radius > 200 km)', 'event_to_rule_threshold (severity >9)', 'event_to_rule_threshold (losses > $100M)', 'time_duration_to_trigger_count (1 trigger/ms for 365 days)'], 'intent': 'calculate_warning_triggers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 10, 10000000000000, 200, 9, 100000000, 365], 'units': {'radius': 'kilometers (km)', 'severity': 'level (1-9 scale)', 'losses': 'USD (dollars)', 'time': 'days to milliseconds conversion'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}, {'column': 'EventTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the early warning event table with the event type being a tsunami, an impact radius of 100,000 kilometers, a severity level of 10, and estimated losses of $10,000,000,000,000.00, which is an extreme outlier (normal ranges are impact radius 0-200 kilometers, severity level 1-9, and estimated losses $0-100,000,000.00). If the early warning system records data every millisecond and the event data remains at these extreme values for 365 days, how many times will the system trigger an early warning? The warning rule is defined as impact radius > 200 kilometers or severity level > 9 or estimated losses > $100,000,000.00.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningEvent WHERE (RadiusKm > 200 OR SeverityLevel > 9 OR EstimatedDamageUSD > 100000000) AND EventTime BETWEEN '2023-01-01 00:00:00' AND '2024-01-01 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 50,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['flood event', 'threshold value 500 millimeters', 'rainfall increase rate 10 millimeters per hour'], 'relations': ['event_to_threshold (flood → threshold value)', 'threshold_to_time_calculation (500 mm ÷ 10 mm/h = 50 hours)'], 'intent': 'calculate_time_to_reach_alert_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 10], 'units': {'threshold': 'millimeters (mm)', 'rate': 'millimeters per hour (mm/h)', 'time': 'hours (calculated via ΔT = threshold/rate)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the alert rule table where the event type is flood, the threshold value is 500 millimeters (rainfall), and the rainfall increase rate is 10 millimeters per hour, please calculate the time required to reach the alert threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ThresholdValue / 10 AS TimeToThresholdHours FROM WarningRule WHERE EventType = '洪水' AND ThresholdValue = 500;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 51,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningRule table', 'ThresholdValue', 'mean 5,050 units', 'standard deviation 2,872.28 units', 'threshold value 8,000 units'], 'relations': ['ThresholdValue_to_mean (ThresholdValue → μ=5,050)', 'ThresholdValue_to_std_dev (ThresholdValue → σ=2,872.28)', 'ThresholdValue_distribution (ThresholdValue follows normal distribution)'], 'intent': 'calculate_percentage_rules_above_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8000, 5050, 2872.28, 100], 'units': {'threshold_value': 'units (ThresholdUnit column in WarningRule table)', 'mean': 'units (implied from ThresholdValue distribution)', 'std_dev': 'units (implied from ThresholdValue distribution)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA mathematical logic question is as follows:\nThere are 100 records in the alert rule table, each with threshold values (ThresholdValue) of 100, 200, 300, ..., 10,000 units, respectively. The overall average threshold value is known to be 5,050 units, with an overall standard deviation of 2,872.28 units. Assuming the threshold values follow a normal distribution, calculate the percentage of rules where the threshold value exceeds 8,000 units out of the total number of rules.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(CASE WHEN ThresholdValue > 8000 THEN 1 END) * 100.0 / COUNT(*)) AS PercentageAboveThreshold FROM WarningRule;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 52,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fire event type', '1000 degrees Celsius threshold', 'evacuation action type', 'WarningRule table'], 'relations': ['event_type_to_threshold (fire → 1000°C)', 'threshold_to_action (1000°C → evacuation)', 'rule_to_action (WarningRule.fire_rule → evacuation)'], 'intent': 'determine_emergency_response_measures', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [1000], 'units': {'temperature': '°C (Celsius)', 'action_type': 'evacuation (non-numeric unit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when water level exceeds 10 meters.', 'Triggered when earthquake magnitude is 6.0 or higher.', 'Triggered when wildfire area exceeds 1000 acres.', 'Triggered when wind speed exceeds 200 km/h.', 'Triggered when tsunami wave height exceeds 5 meters.']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning rule table with an event type of fire, a threshold of 1000 degrees Celsius, and an action type of evacuation. Based on common knowledge, what emergency response measures might this rule include? Please reason in conjunction with emergency management for fire disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '火灾' AND ThresholdValue = 1000 AND ActionType = '疏散';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 53,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['nuclear leakage event', 'radiation dose threshold 100,000 millisieverts', 'alert threshold 100 millisieverts', '365 days duration', '1 second data recording interval'], 'relations': ['threshold_comparison (100,000 > 100 millisieverts)', 'time_duration_to_alert_count (365 days → 31,536,000 seconds)'], 'intent': 'calculate_total_alerts_triggered_over_time_period', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 100, 365, 1], 'units': {'radiation_dose': 'millisieverts (mSv)', 'time': 'seconds/day conversion', 'conversion': '1 year = 365 days × 86400 seconds/day = 31,536,000 seconds'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}, {'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the alert rule table with the event type \"nuclear leakage,\" a threshold of 100,000 millisieverts (radiation dose), which is an extreme outlier (normal range is 0-100 millisieverts). If the alert system records data once per second and the event data remains at these extreme values for 365 days, how many alerts will the system trigger? Assume the alert rule is a radiation dose > 100 millisieverts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningTriggerRecord WHERE RuleId = (SELECT Id FROM WarningRule WHERE EventType = '核泄漏' AND ThresholdValue > 100 AND ThresholdUnit = '毫西弗') AND TriggerTime BETWEEN '2023-01-01 00:00:00' AND '2024-01-01 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 54,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earthquake event', 'Richter magnitude 5.0', 'seismic wave speed 5 km/s', 'distance 100 km'], 'relations': ['threshold_to_magnitude (5.0 Richter → earthquake energy)', 'distance_over_speed (100 km / 5 km/s = 20 seconds)'], 'intent': 'calculate_seismic_wave_travel_time_and_analyze_magnitude_energy', 'reasoning_type': 'physical knowledge reasoning AND mathematical logic reasoning', 'numerical_values': [5.0, 5, 100], 'units': {'magnitude': 'Richter scale', 'speed': 'km/s', 'distance': 'km', 'time': 'seconds (calculated as 100/5)', 'energy': 'joules (implied by physical relationship: energy ∝ 10^(1.5*Magnitude))'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the early warning rule table with the event type as earthquake, a threshold value of 5.0 (Richter magnitude), and an earthquake wave propagation speed of 5 km/s, please calculate the time required for the seismic waves to travel from the hypocenter to a monitoring station 100 km away, and analyze the relationship between magnitude and seismic wave energy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100 / 5 AS PropagationTimeSeconds, POWER(10, 1.5 * ThresholdValue + 4.8) AS EarthquakeEnergy FROM WarningRule WHERE EventType = '地震' AND ThresholdValue = 5.0;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 55,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningRule table', 'ThresholdValue', 'log-normal distribution', '800.0 units'], 'relations': ['ThresholdValue_to_distribution (ThresholdValue → log-normal distribution parameters)', 'ThresholdValue_to_count (ThresholdValue > 800 → count percentage)', 'ThresholdValue_to_sum (ThresholdValue > 800 → total sum)'], 'intent': 'calculate_percentage_and_sum_of_threshold_values_exceeding_800_units', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [800.0, 500.5, 288.67, 1000], 'units': {'threshold': 'units (ThresholdUnit column)', 'percentage': '% (calculated ratio)', 'sum': 'units (cumulative ThresholdValue)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA mathematical logic question is as follows:\nThere are 1,000 records in the alert rule table, with the threshold value (ThresholdValue) of each record being 1.0, 2.0, 3.0, ..., 1000.0 units, respectively. The overall average threshold value is known to be 500.5 units, and the overall standard deviation is 288.67 units. Assuming the threshold values follow a log-normal distribution, calculate the percentage of rules with threshold values exceeding 800.0 units out of the total number of rules, and further compute the total sum of threshold values for these rules.\nyour response just have a SQL without anything.\n",
        "solution": "WITH FilteredRules AS (SELECT ThresholdValue FROM WarningRule WHERE ThresholdValue > 800.0) SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WarningRule)) AS PercentageAboveThreshold, SUM(ThresholdValue) AS TotalThresholdAbove FROM FilteredRules;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 56,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tsunami warning rule', 'wave height threshold 10 meters', 'evacuation action'], 'relations': ['rule_to_event_type (tsunami)', 'threshold_to_impact (wave height → coastal flooding)', 'action_to_response (evacuation → emergency procedure)'], 'intent': 'determine_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [10], 'units': {'wave_height': 'meters (specified in ThresholdUnit)', 'impact': 'coastal flooding severity (implied by wave height)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the warning rule table with the event type being tsunami, the threshold set at 10 meters (wave height), and the action type as evacuation. Based on common knowledge, what emergency response measures might such a rule include? Please reason by combining emergency management for tsunami disasters and analyze the impact of wave height on coastal areas.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '海啸' AND ThresholdValue = 10 AND ActionType = '疏散';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 57,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['volcanic eruption', 'volcanic ash dispersion range > 100 kilometers', '1 millisecond data recording interval', '365 days duration'], 'relations': ['event_to_rule (volcanic eruption → WarningRule)', 'threshold_condition (dispersion range > 100 km)', 'time_interval_to_duration (1 millisecond * 365 days)'], 'intent': 'calculate_warning_trigger_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 365, 1, 24, 60, 60, 1000], 'units': {'threshold_distance': 'kilometers (km)', 'time_interval': 'milliseconds', 'duration': 'days', 'conversion': '1 day = 86400 seconds = 86,400,000 milliseconds'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}, {'column': 'EventId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'RuleId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the warning rule table with the event type being volcanic eruption and a threshold of 1000 kilometers (volcanic ash dispersion range), which is an extreme outlier (the normal range is 0-100 kilometers). If the warning system records data every millisecond and the event data remains at these extreme values for 365 days, how many times will the system trigger a warning? The warning rule is defined as a volcanic ash dispersion range > 100 kilometers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningTriggerRecord WHERE RuleId = (SELECT Id FROM WarningRule WHERE EventType = '火山喷发' AND ThresholdValue > 100 AND ThresholdUnit = '公里') AND TriggerTime BETWEEN '2023-01-01 00:00:00' AND '2024-01-01 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 58,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['flood event type', 'threshold value of 500 mm', 'alert rule table'], 'relations': ['event_type_to_rule (flood → alert rule)', 'threshold_value_to_unit (500 mm → rainfall measurement)'], 'intent': 'calculate_required_rainfall', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [500], 'units': {'rainfall': 'millimeters (mm)', 'threshold_unit': 'millimeters (as specified in WarningRule.ThresholdUnit)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the alert rule table with the event type as flood and a threshold value of 500 millimeters (rainfall), please calculate the required rainfall to reach the alert threshold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ThresholdValue AS RequiredRainfall FROM WarningRule WHERE EventType = '洪水' AND ThresholdValue = 500;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 59,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningRule table', 'ThresholdValue column'], 'relations': ['table_to_values (WarningRule → ThresholdValue)'], 'intent': 'calculate_average_threshold_value', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 'units': {'threshold': \"specified in ThresholdUnit column (default unit value is 'units')\", 'average': 'same unit as ThresholdUnit (calculated value)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA mathematical logic question is as follows:\nThere are 10 records in the alert rule table, with threshold values (ThresholdValue) of 100, 200, 300, ..., 1000 units respectively. Please calculate the average threshold value of these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(ThresholdValue) AS AverageThresholdValue FROM WarningRule;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 60,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fire', 'threshold of 100 degrees Celsius', 'notification', 'WarningRule table'], 'relations': ['rule_to_event_type (fire → WarningRule.EventType)', 'threshold_to_temperature (100°C → WarningRule.ThresholdValue)', 'action_to_notification (notification → WarningRule.ActionType)'], 'intent': 'identify_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [100], 'units': {'temperature': '°C (Celsius)'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when water level exceeds 10 meters.', 'Triggered when earthquake magnitude is 6.0 or higher.', 'Triggered when wildfire area exceeds 1000 acres.', 'Triggered when wind speed exceeds 200 km/h.', 'Triggered when tsunami wave height exceeds 5 meters.']}], 'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Flood warning: Water level has exceeded 10 meters. Please evacuate immediately.', 'Earthquake alert: A 6.5 magnitude earthquake has been detected. Evacuation orders issued.', 'Wildfire alert: A wildfire has spread over 1200 acres. Stay indoors and avoid affected areas.', 'Tornado warning: Wind speeds have exceeded 220 km/h. Take shelter immediately.', 'Tsunami alert: Wave height has reached 6 meters. Evacuate coastal areas immediately.']}, {'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}]}}\nA common sense reasoning question is as follows:\nThe warning rules table contains a record with an event type of fire, a threshold of 100 degrees Celsius, and an action type of notification. Based on common knowledge, what emergency response measures might this rule include? Please analyze in conjunction with emergency management for fire disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionType FROM WarningRule WHERE EventType = '火灾' AND ThresholdValue = 100 AND ActionType = '通知';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 61,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earthquake', 'threshold 10.0 Richter', '24 hours', 'warning rule magnitude > 9.0', 'early warning system'], 'relations': ['event_type_to_threshold (earthquake → 9.0 Richter)', 'time_period_to_sampling_rate (24 hours → 1 Hz)', 'trigger_condition (magnitude > 9.0)'], 'intent': 'calculate_total_warning_alerts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [9.0, 10.0, 24, 1], 'units': {'magnitude': 'Richter scale (unitless)', 'time': 'hours → seconds (3600 sec/hour)', 'sampling_rate': '1 Hz (1 sample/sec)', 'threshold_comparison': 'logical (boolean evaluation)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}, {'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}, {'column': 'EventId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the warning rule table with the event type as earthquake, a threshold of 10.0 (Richter scale), which is an extreme outlier (normal range is 0-9.0). If the early warning system records data once per second and the event data remains at these extreme values throughout 24 hours, how many warning alerts will the system trigger? Assume the warning rule is magnitude > 9.0.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningTriggerRecord WHERE RuleId = (SELECT Id FROM WarningRule WHERE EventType = '地震' AND ThresholdValue > 9.0 AND ThresholdUnit = '里氏震级') AND TriggerTime BETWEEN '2023-01-01 00:00:00' AND '2023-01-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 62,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['trigger value 1000 millimeters', 'rainfall rate 50 millimeters per hour'], 'relations': ['rate_to_time (time = trigger_value / rainfall_rate)'], 'intent': 'calculate_time_to_reach_rainfall_trigger', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 50], 'units': {'rainfall_value': 'millimeters (mm)', 'rate': 'millimeters per hour (mm/h)', 'time': 'hours (calculated as 1000mm / 50mm/h = 20h)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the alert trigger log table with a trigger value of 1000 millimeters (rainfall), and the rainfall is increasing at a rate of 50 millimeters per hour, please calculate the required rainfall time to reach the trigger value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT TriggerValue / 50 AS TimeToTriggerHours FROM WarningTriggerRecord WHERE TriggerValue = 1000;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 63,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningTriggerRecord table', 'TriggerValue', '80,000 units', 'normal distribution', 'average trigger value 50,050 units', 'standard deviation 28,867.51 units'], 'relations': ['TriggerValue_distribution (normal distribution)', 'TriggerValue_threshold (80,000 units)', 'statistical_parameters (mean=50,050, std=28,867.51)'], 'intent': 'calculate_percentage_of_records_exceeding_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80000, 50050, 28867.51], 'units': {'TriggerValue': 'units', 'threshold': 'units'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}]}}\nA mathematical logic question is as follows:\nThe warning trigger record table contains 1,000 entries, with each entry's trigger value (TriggerValue) being 100, 200, 300, ..., 100,000 units, respectively. Given that the overall average trigger value is 50,050 units with a standard deviation of 28,867.51 units, and assuming the trigger values follow a normal distribution, please calculate the percentage of records where the trigger value exceeds 80,000 units out of the total number of records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(CASE WHEN TriggerValue > 80000 THEN 1 END) * 100.0 / COUNT(*)) AS PercentageAboveThreshold FROM WarningTriggerRecord;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 64,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['trigger value 100°C', 'action type evacuation', 'high-temperature disaster'], 'relations': ['trigger_value_to_action (100°C → evacuation)', 'temperature_to_disaster_type (100°C → extreme heat emergency)'], 'intent': 'determine_emergency_response_measures_for_high_temperature', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [100], 'units': {'temperature': '°C (Celsius)', 'threshold_comparisons': '100°C exceeds typical safety thresholds (e.g., industrial safety standards)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionTaken', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Notified local authorities and issued flood warnings.', 'Evacuation orders issued for affected areas.', 'Firefighters deployed to contain the wildfire.', 'Tornado alert issued and residents advised to take shelter.', 'Coastal areas evacuated and tsunami warnings issued.']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'RuleDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Triggered when water level exceeds 10 meters.', 'Triggered when earthquake magnitude is 6.0 or higher.', 'Triggered when wildfire area exceeds 1000 acres.', 'Triggered when wind speed exceeds 200 km/h.', 'Triggered when tsunami wave height exceeds 5 meters.']}], 'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'Location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Yangtze River Basin', 'Sichuan Province', 'California, USA', 'Oklahoma, USA', 'Pacific Coast, Japan']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning trigger log with a trigger value of 100 degrees Celsius (temperature) and an action type of evacuation. Based on common knowledge, what emergency response measures might be triggered by this? Please reason in conjunction with emergency management for high-temperature disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionTaken FROM WarningTriggerRecord WHERE TriggerValue = 100 AND TriggerUnit = '摄氏度' AND ActionTaken = '疏散';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 65,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['radiation alert trigger value 1,000,000 millisieverts', 'alert threshold 100 millisieverts', 'duration 365 days'], 'relations': ['trigger_value_exceeds_threshold (1,000,000 > 100 millisieverts)', 'time_to_alert_count (365 days → 31,536,000 seconds)'], 'intent': 'calculate_alerts_tripped_over_time_period', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 100, 365], 'units': {'radiation_dose': 'millisieverts (mSv)', 'time': 'seconds (365 days × 86400 seconds/day = 31,536,000 alerts)', 'conversion': '1 day = 86400 seconds'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the alert trigger log with a trigger value of 1,000,000 millisieverts (radiation dose), which is an extreme outlier (normal range is 0-100 millisieverts). If the alert system records data once per second and these extreme values persist for 365 days, how many alerts will the system trigger? The alert rule is defined as radiation dose > 100 millisieverts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningTriggerRecord WHERE TriggerValue > 100 AND TriggerUnit = '毫西弗' AND TriggerTime BETWEEN '2023-01-01 00:00:00' AND '2024-01-01 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 66,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['record in WarningTriggerRecord', 'trigger value 5000 millimeters', 'exponential growth coefficient 0.1 per hour'], 'relations': ['trigger_record_to_rule (WarningTriggerRecord.RuleId → WarningRule.Id)', 'exponential_growth_model (V(t) = V0 * e^(kt))'], 'intent': 'calculate_time_to_reach_trigger_value_and_analyze_rainfall_trend', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 0.1], 'units': {'rainfall': 'millimeters (mm)', 'growth_rate': 'per hour (1/hour)', 'time': 'hours (implied by calculation)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'RuleId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the early warning trigger log table with a trigger value of 5000 millimeters (rainfall), and the increase rate of rainfall follows an exponential growth over time with a growth coefficient of 0.1 per hour, please calculate the time required to reach the trigger value and analyze the trend of rainfall change over time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT LN(TriggerValue / 0.0001) / 0.1 AS TimeToTriggerHours FROM WarningTriggerRecord WHERE TriggerValue = 5000;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 67,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningTriggerRecord table', 'lognormal distribution (μ_ln=10, σ_ln=2)', 'trigger value threshold 100,000 units'], 'relations': ['distribution_to_threshold (lognormal parameters define probability of exceeding 100,000)', 'record_count (10,000 records in table)'], 'intent': 'calculate_percentage_and_sum_of_trigger_values_above_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 2, 100000, 10000], 'units': {'trigger_value': 'units (from WarningTriggerRecord.TriggerUnit)', 'distribution_parameters': 'logarithmic scale (unitless)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA mathematical logic question is as follows:\nThe warning trigger log table contains 10,000 records, and the trigger value (TriggerValue) of each record follows a lognormal distribution. It is known that the logarithmic mean (μ_ln) is 10 and the logarithmic standard deviation (σ_ln) is 2. Please calculate the percentage of records with trigger values exceeding 100,000 units out of the total number of records, and further compute the sum of the trigger values for these records.\nyour response just have a SQL without anything.\n",
        "solution": "WITH FilteredRecords AS (SELECT TriggerValue FROM WarningTriggerRecord WHERE TriggerValue > 100000) SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WarningTriggerRecord)) AS PercentageAboveThreshold, SUM(TriggerValue) AS TotalTriggerValueAbove FROM FilteredRecords;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 68,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['trigger value 1000°C', 'action type evacuation', 'extreme heat disaster'], 'relations': ['temperature_to_action_threshold (1000°C → evacuation trigger)', 'environmental_impact (high temperature → infrastructure damage)', 'health_impact (extreme heat → heatstroke risk)'], 'intent': 'infer_emergency_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1000], 'units': {'temperature': '°C (Celsius)', 'threshold_comparison': '1000°C exceeds standard safety limits'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionTaken', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Notified local authorities and issued flood warnings.', 'Evacuation orders issued for affected areas.', 'Firefighters deployed to contain the wildfire.', 'Tornado alert issued and residents advised to take shelter.', 'Coastal areas evacuated and tsunami warnings issued.']}], 'AlarmSystem.WarningRule': [{'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}], 'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'Location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Yangtze River Basin', 'Sichuan Province', 'California, USA', 'Oklahoma, USA', 'Pacific Coast, Japan']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}], 'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', '公众', '企业', '政府']}, {'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning trigger log with a trigger value of 1000°C (temperature) and an action type of evacuation. Based on common sense, what emergency response measures might be triggered? Please infer by combining emergency management for extreme heat disasters and analyze the impacts of high temperatures on the environment and human health.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionTaken FROM WarningTriggerRecord WHERE TriggerValue = 1000 AND TriggerUnit = '摄氏度' AND ActionTaken = '疏散';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 69,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['warning trigger log table', 'trigger value 1000°C', 'action type evacuation', 'extreme heat disaster', 'high temperature impacts'], 'relations': ['trigger_value_to_action (1000°C → evacuation)', 'temperature_to_health_effects (high temperature → heatstroke/dehydration)', 'temperature_to_environmental_effects (extreme heat → infrastructure damage/wildfires)'], 'intent': 'determine_emergency_response_measures_for_extreme_heat', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [1000], 'units': {'trigger_value': '°C (Celsius)', 'threshold_comparison': 'ActionType=evacuation (from WarningRule.ActionType)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionTaken', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Notified local authorities and issued flood warnings.', 'Evacuation orders issued for affected areas.', 'Firefighters deployed to contain the wildfire.', 'Tornado alert issued and residents advised to take shelter.', 'Coastal areas evacuated and tsunami warnings issued.']}], 'AlarmSystem.WarningRule': [{'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}], 'AlarmSystem.WarningEvent': [{'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EventDescription', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Heavy rainfall caused severe flooding in the Yangtze River Basin.', 'A 7.0 magnitude earthquake struck Sichuan Province, causing widespread damage.', 'A wildfire broke out in California, destroying thousands of acres of forest.', 'A tornado touched down in Oklahoma, causing significant damage to homes and infrastructure.', 'A powerful tsunami hit the Pacific Coast of Japan following an undersea earthquake.']}, {'column': 'Location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Yangtze River Basin', 'Sichuan Province', 'California, USA', 'Oklahoma, USA', 'Pacific Coast, Japan']}]}}\nA hypothetical reasoning question is as follows:\nIn the warning trigger log table, there is a record with a trigger value of 1000°C (temperature) and an action type of evacuation. Based on common knowledge, what possible emergency response measures could this trigger involve? Please reason by combining emergency management for extreme heat disasters and analyze the impacts of high temperatures on the environment and human health.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionTaken FROM WarningTriggerRecord WHERE TriggerValue = 1000 AND TriggerUnit = '摄氏度' AND ActionTaken = '疏散';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 70,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['trigger value 100 millimeters', 'rainfall increase rate 10 millimeters per hour'], 'relations': ['rainfall_time_calculation (time = trigger_value / increase_rate)'], 'intent': 'calculate_rainfall_time_to_trigger', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 10], 'units': {'trigger_value': 'millimeters', 'increase_rate': 'millimeters per hour', 'time': 'hours (calculated as 100mm / 10mm/h)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the alert trigger log table with a trigger value of 100 millimeters (rainfall) and a rainfall increase rate of 10 millimeters per hour, please calculate the required rainfall time to reach the trigger value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT TriggerValue / 10 AS RequiredTime FROM WarningTriggerRecord WHERE TriggerValue = 100 AND TriggerUnit = '毫米';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 71,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningTriggerRecord table', 'TriggerValue column'], 'relations': ['record_to_value (WarningTriggerRecord.Id → TriggerValue)'], 'intent': 'calculate_average_trigger_value', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 'units': {'value_unit': 'unit (from WarningTriggerRecord.TriggerUnit)', 'calculation': 'average = sum(values) / count(records)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA mathematical logic question is as follows:\nThere are 10 records in the warning trigger log table, with trigger values (TriggerValue) of 100, 200, 300, ..., 1000 units respectively. Please calculate the average trigger value for these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(TriggerValue) AS AverageTriggerValue FROM WarningTriggerRecord WHERE TriggerValue IN (100, 200, 300, 400, 500, 600, 700, 800, 900, 1000);",
        "db_id": "AlarmSystem"
    },
    {
        "id": 72,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['high-temperature warning trigger (50°C)', 'action type notification'], 'relations': ['trigger_to_rule (WarningTriggerRecord → WarningRule threshold criteria)', 'action_to_response (notification → emergency response protocol)'], 'intent': 'retrieve_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [50], 'units': {'temperature': '°C (Celsius)', 'threshold': '50°C (extreme heat warning)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}], 'AlarmSystem.WarningRule': [{'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}, {'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning trigger log with a trigger value of 50 degrees Celsius (temperature) and the action type as notification. Based on common knowledge, what emergency response measures might this trigger include? Please reason based on emergency management of high-temperature disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ActionTaken FROM WarningTriggerRecord WHERE TriggerValue = 50 AND TriggerUnit = '摄氏度' AND ActionTaken = '通知';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 73,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['radiation dose 1000 millisieverts', 'radiation dose 100 millisieverts', '24 hours', 'once per second'], 'relations': ['threshold_comparison (1000 mSv > 100 mSv)', 'time_duration_to_records (24 hours → 86400 records)', 'alarm_rule_to_trigger (WarningRule.ThresholdValue → WarningTriggerRecord.TriggerValue)'], 'intent': 'calculate_total_alarms_triggers_over_time', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100, 24, 1], 'units': {'radiation_dose': 'millisieverts (mSv)', 'time': 'hours and seconds (1 hour = 3600 seconds)', 'frequency': 'per second', 'conversion': '24 hours × 3600 seconds/hour = 86400 data points'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}, {'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'TriggerUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'EventId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the alarm trigger log with a trigger value of 1000 millisieverts (radiation dose), which is an extreme outlier (normal range is 0-100 millisieverts). If the alarm system records data once per second and the event data remains at these extreme values for 24 hours, how many alarms will the system trigger? Assume the alarm rule is radiation dose > 100 millisieverts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS WarningCount FROM WarningTriggerRecord WHERE TriggerValue > 100 AND TriggerUnit = '毫西弗' AND TriggerTime BETWEEN '2023-10-01 00:00:00' AND '2023-10-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 74,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['broadcast signal', 'propagation speed 3×10^8 m/s', 'distance 100 kilometers', 'notification method broadcast'], 'relations': ['notification_method_to_propagation_speed (broadcast → speed_of_light)', 'distance_to_time (propagation_time = 100 km / speed_of_light)'], 'intent': 'calculate_propagation_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [300000000, 100], 'units': {'distance': 'meters (converted from 100 kilometers)', 'speed': 'meters/second', 'time': 'seconds', 'conversion': '1 km = 1000 meters'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the warning notification table with the notification method as broadcast, the propagation speed of the broadcast signal is the speed of light (approximately 3×10^8 meters/second), and the receiver is 100 kilometers away from the notification source, please calculate the time required for the broadcast signal to propagate from the notification source to the receiver.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100 * 1000) / POW(3, 8) AS PropagationTime FROM WarningNotificationRecord WHERE NotificationMethod = '广播';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 75,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningNotificationRecord table', 'RecipientCount field', 'mean 50,500', 'standard deviation 28,722.81', 'threshold 80,000'], 'relations': ['table_to_field (WarningNotificationRecord → RecipientCount)', 'normal_distribution_parameters (mean=50,500, σ=28,722.81)', 'threshold_comparison (RecipientCount > 80,000)'], 'intent': 'calculate_percentage_of_notification_records_above_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50500, 28722.81, 80000], 'units': {'recipient_count': 'people', 'standard_deviation': 'people', 'threshold': 'people'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '15000', '1000000']}]}}\nA mathematical logic question is as follows:\nThe warning notification record table contains 1,000 entries, with the number of recipients (RecipientCount) for each record being 100, 200, 300, ..., up to 100,000 people. It is known that the overall average number of recipients is 50,500 people, and the overall standard deviation is 28,722.81 people. Assuming the number of recipients follows a normal distribution, calculate the percentage of notification records where the number of recipients exceeds 80,000 people out of the total number of notification records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WarningNotificationRecord)) AS Percentage FROM WarningNotificationRecord WHERE RecipientCount > 80000;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 76,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SMS notification', 'recipient type: public'], 'relations': [\"NotificationMethod_to_record (WarningNotificationRecord.NotificationMethod = 'SMS')\", \"RecipientType_to_record (WarningNotificationRecord.RecipientType = 'public')\"], 'intent': 'identify_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'ThresholdUnit': \"unit from WarningRule.ThresholdUnit (e.g., 'mm/h' for rainfall)\", 'TriggerUnit': \"unit from WarningTriggerRecord.TriggerUnit (e.g., 'm/s' for wind speed)\"}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', '公众', '企业', '政府']}, {'column': 'NotificationContent', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Flood warning: Water level has exceeded 10 meters. Please evacuate immediately.', 'Earthquake alert: A 6.5 magnitude earthquake has been detected. Evacuation orders issued.', 'Wildfire alert: A wildfire has spread over 1200 acres. Stay indoors and avoid affected areas.', 'Tornado warning: Wind speeds have exceeded 220 km/h. Take shelter immediately.', 'Tsunami alert: Wave height has reached 6 meters. Evacuate coastal areas immediately.']}], 'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'Location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Yangtze River Basin', 'Sichuan Province', 'California, USA', 'Oklahoma, USA', 'Pacific Coast, Japan']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}], 'AlarmSystem.WarningRule': [{'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}, {'column': 'ActionTaken', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Notified local authorities and issued flood warnings.', 'Evacuation orders issued for affected areas.', 'Firefighters deployed to contain the wildfire.', 'Tornado alert issued and residents advised to take shelter.', 'Coastal areas evacuated and tsunami warnings issued.']}]}}\nA common sense reasoning question is as follows:\nIn the early warning notification records table, there is a record where the notification method is SMS and the recipient type is the public. Based on common sense, what emergency response measures might this type of notification include? Please reason by combining emergency management for SMS notifications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT NotificationContent FROM WarningNotificationRecord WHERE NotificationMethod = '短信' AND RecipientType = '公众';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 77,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['recipient count 1,000,000,000', 'normal range 0-1,000,000', '365 days', '1 second recording frequency', 'notification rule: recipient count > 1,000,000'], 'relations': ['recipient_count_exceeds_threshold (1B > 1M)', 'time_interval_to_seconds (365 days → 31,536,000 seconds)', 'frequency_to_total_triggers (1 record/second × 31,536,000 seconds)'], 'intent': 'calculate_notification_trigger_count_for_extreme_value', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000, 1000000, 365, 1], 'units': {'recipient_count': 'unitless integer', 'time': 'days → seconds (365 days = 31,536,000 seconds)', 'frequency': 'records per second'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '15000', '1000000']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the alert notification log with a recipient count of 1,000,000,000, which is an extreme outlier (normal range is 0-1,000,000). If the alert system records data once per second and maintains these extreme values continuously for 365 days, how many times would the system trigger notifications? The notification rule is: recipient count > 1,000,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS NotificationCount FROM WarningNotificationRecord WHERE RecipientCount > 1000000 AND NotificationTime BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 78,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['broadcast signal propagation', 'speed of light 3×10^8 m/s', 'distance 1000 kilometers', 'attenuation coefficient 0.001/km'], 'relations': ['propagation_time (distance / speed)', 'exponential_attenuation (e^(-attenuation_coefficient * distance))'], 'intent': 'calculate_propagation_time_and_signal_attenuation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [300000000, 1000, 0.001], 'units': {'speed': 'meters per second (m/s)', 'distance': 'kilometers (converted to meters)', 'attenuation': 'unitless coefficient (per kilometer)', 'time': 'seconds (s)', 'signal_strength_ratio': 'unitless decibels (dB) equivalent'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the alert notification table with a notification method as broadcast, the propagation speed of the broadcast signal is the speed of light (approximately 3×10^8 meters per second), and the receiver is 1000 kilometers away from the notification source. Considering the atmospheric attenuation of signal propagation with an attenuation coefficient of 0.001 per kilometer, calculate the time required for the broadcast signal to propagate from the notification source to the receiver and analyze the attenuation of signal strength.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1000 * 1000) / POW(3, 8) AS PropagationTime, EXP(-0.001 * 1000) AS SignalAttenuation FROM WarningNotificationRecord WHERE NotificationMethod = '广播';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 79,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningNotificationRecord table', 'RecipientCount field', 'log-normal distribution parameters (μ_ln=10, σ_ln=2)', 'threshold value 1,000,000'], 'relations': ['table_to_field (WarningNotificationRecord → RecipientCount)', 'distribution_to_parameter (log-normal → μ_ln, σ_ln)', 'threshold_comparison (RecipientCount > 1,000,000)'], 'intent': 'calculate_percentage_and_sum_of_recipients', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 2, 1000000], 'units': {'log_parameters': 'unitless (μ_ln, σ_ln)', 'recipient_count': 'people', 'percentage': '% (relative to 10,000 records)'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '15000', '1000000']}]}}\nA mathematical logic question is as follows:\nIn the warning notification record table, there are 10,000 records. The number of recipients (RecipientCount) for each record follows a log-normal distribution, with a known log mean (μ_ln) of 10 and a log standard deviation (σ_ln) of 2. Please calculate the percentage of notification records where the number of recipients exceeds 1,000,000 people out of the total number of notification records. Additionally, calculate the total sum of recipients for these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WarningNotificationRecord)) AS Percentage, SUM(RecipientCount) AS TotalRecipients FROM WarningNotificationRecord WHERE RecipientCount > 1000000;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 80,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['broadcast notification', 'public recipient', 'early warning notification log', 'large-scale disasters'], 'relations': ['notification_method_to_recipient_type (broadcast→public)', 'notification_record_to_event (WarningNotificationRecord.EventId→WarningEvent.Id)', 'event_to_severity (WarningEvent.SeverityLevel→emergency_response_intensity)'], 'intent': 'infer_emergency_response_measures_for_broadcast_notifications', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'severity': 'SeverityLevel (WarningEvent table)', 'time': 'EventTime/NotificationTime (datetime)', 'population': 'PopulationAffected (WarningEvent table)'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', '公众', '企业', '政府']}], 'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'Location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Yangtze River Basin', 'Sichuan Province', 'California, USA', 'Oklahoma, USA', 'Pacific Coast, Japan']}, {'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}, {'column': 'EventTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning notification log where the notification method is broadcast, and the recipient type is the public. Based on common knowledge, what emergency response measures might this type of notification include? Please infer by combining emergency management with broadcast notifications and analyze the role of broadcast notifications in large-scale disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT NotificationContent FROM WarningNotificationRecord WHERE NotificationMethod = '广播' AND RecipientType = '公众';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 81,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['recipient count 10,000,000,000', 'normal threshold 1,000,000', 'time interval 1 millisecond', 'duration 365 days'], 'relations': ['recipient_count_above_threshold (10,000,000,000 > 1,000,000)', 'millisecond_frequency (1 notification per millisecond)', 'total_duration (365 days → milliseconds)'], 'intent': 'calculate_total_notifications_triggered', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000000, 1000000, 365], 'units': {'count': 'people (absolute value)', 'time': 'days → milliseconds (conversion: 1 day = 86,400,000 milliseconds)', 'frequency': '1 notification per millisecond'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '15000', '1000000']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the alert notification log table where the number of recipients is 10,000,000,000 people, which is an extreme outlier (normal range is 0-1,000,000 people). If the alert system records data every millisecond and these extreme values persist in the event data for 365 days, how many notifications would the system trigger? Assume the notification rule is triggered when the number of recipients > 1,000,000 people.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS NotificationCount FROM WarningNotificationRecord WHERE RecipientCount > 1000000 AND NotificationTime BETWEEN '2023-01-01 00:00:00.000' AND '2023-12-31 23:59:59.999';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 82,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SMS signal', 'notification method SMS', 'distance 10 km', 'speed of light 3×10^8 m/s'], 'relations': ['notification_method_to_speed (SMS → speed_of_light)', 'distance_to_time (distance / speed → time)'], 'intent': 'calculate_signal_propagation_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 300000000], 'units': {'distance': 'km (kilometers) → converted to meters (10 km = 10,000 m)', 'speed': 'm/s (meters per second)', 'time': 'seconds (s)', 'conversion': '1 km = 1000 m'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the early warning notification log table with the notification method as SMS, where the SMS signal propagates at the speed of light (approximately 3×10^8 meters per second), and the recipient is 10 kilometers away from the notification source, please calculate the time required for the SMS signal to travel from the notification source to the recipient.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (10 * 1000) / POW(3, 8) AS PropagationTime FROM WarningNotificationRecord WHERE NotificationMethod = '短信';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 83,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['WarningNotificationRecord', 'RecipientCount'], 'relations': ['record_to_recipient_count (WarningNotificationRecord → RecipientCount)'], 'intent': 'calculate_average_recipient_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], 'units': {'recipient_count': 'people'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '15000', '1000000']}]}}\nA mathematical logic question is as follows:\nThere are 10 records in the early warning notification log, with the number of recipients (RecipientCount) for each record being 100, 200, 300, ..., 1000 people respectively. Please calculate the average number of recipients for these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(RecipientCount) AS AverageRecipientCount FROM WarningNotificationRecord WHERE RecipientCount IN (100, 200, 300, 400, 500, 600, 700, 800, 900, 1000);",
        "db_id": "AlarmSystem"
    },
    {
        "id": 84,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['email', 'enterprise', 'emergency response measures', 'notification content'], 'relations': ['WarningNotificationRecord.NotificationMethod → email', 'WarningNotificationRecord.RecipientType → enterprise', 'WarningNotificationRecord.EventId → WarningEvent.Id', 'WarningNotificationRecord.TriggerId → WarningTriggerRecord.Id', 'WarningTriggerRecord.RuleId → WarningRule.Id', 'emergency_notification → escalation_procedure', 'enterprise_notification → business_continuity_impact'], 'intent': 'infer_emergency_response_measures_from_email_notification', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'threshold': 'ThresholdUnit (from WarningRule)', 'severity': 'SeverityLevel (from WarningEvent/WarningRule)', 'response_time': 'implied by enterprise SLAs (common knowledge)'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', '公众', '企业', '政府']}], 'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EventTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 14:30:00', '2023-09-25 08:15:00', '2023-08-15 12:45:00', '2023-07-10 16:20:00', '2023-06-05 09:00:00']}, {'column': 'Location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Yangtze River Basin', 'Sichuan Province', 'California, USA', 'Oklahoma, USA', 'Pacific Coast, Japan']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'ActionTaken', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Notified local authorities and issued flood warnings.', 'Evacuation orders issued for affected areas.', 'Firefighters deployed to contain the wildfire.', 'Tornado alert issued and residents advised to take shelter.', 'Coastal areas evacuated and tsunami warnings issued.']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning notification log where the notification method is email and the recipient type is an enterprise. Based on common knowledge, what emergency response measures might such a notification include? Please make inferences in conjunction with the emergency management of email notifications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT NotificationContent FROM WarningNotificationRecord WHERE NotificationMethod = '邮件' AND RecipientType = '企业';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 85,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"record with 1,000,000 recipients\", \"normal recipient range 0-100,000\", \"24 hours\", \"once per second data recording\"],\n  \"relations\": [\"recipient_count_exceeds_threshold (1,000,000 > 100,000)\", \"duration_conversion (24 hours = 86,400 seconds)\"],\n  \"intent\": \"calculate_notification_trigger_frequency\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [1000000, 100000, 24],\n  \"units\": {\n    \"recipient_count\": \"recipients\",\n    \"time\": \"hours (24 hours → 86,400 seconds)\"]\n  },\n  \"required_tables\": [\"WarningEvent\", \"WarningNotificationRecord\"],\n  \"required_fields\": [\n    \"WarningEvent.EventType\", \n    \"WarningEvent.EventTime\",\n    \"WarningEvent.Location\",\n    \"WarningEvent.SeverityLevel\",\n    \"WarningEvent.Latitude\",\n    \"WarningEvent.Longitude\",\n    \"WarningNotificationRecord.RecipientCount\",\n    \"WarningNotificationRecord.NotificationMethod\"\n  ]\n}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the warning notification log with 1,000,000 recipients, which is an extreme outlier (normal range being 0-100,000 recipients). If the warning system records data once per second and these extreme values persist for 24 hours, how many times will the system trigger notifications? Assume the notification rule is triggered when the recipient count exceeds 100,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS NotificationCount FROM WarningNotificationRecord WHERE RecipientCount > 100000 AND NotificationTime BETWEEN '2023-10-01 00:00:00' AND '2023-10-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 86,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['broadcast notification', '3 × 10^8 meters/second propagation speed', '500 kilometers distance', '0.0005 attenuation coefficient per kilometer'], 'relations': ['notification_method_to_speed (broadcast → speed_of_light)', 'distance_to_time (500km → propagation_time)', 'attenuation_coefficient_to_signal_loss (0.0005/km → exponential_decay)'], 'intent': 'calculate_signal_propagation_time_and_analyze_attenuation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [300000000.0, 500, 0.0005], 'units': {'speed': 'meters/second', 'distance': 'kilometers (converted to meters for calculation)', 'attenuation': 'per kilometer (exponential decay factor)', 'time': 'seconds (calculated from distance/speed)', 'signal_strength': 'dimensionless factor (e^(-attenuation_coefficient * distance_km))'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}], 'AlarmSystem.WarningEvent': [{'column': 'Location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Yangtze River Basin', 'Sichuan Province', 'California, USA', 'Oklahoma, USA', 'Pacific Coast, Japan']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the warning notification log where the notification method is broadcast, the propagation speed of the broadcast signal is the speed of light (approximately 3 × 10^8 meters per second), and the receiver is 500 kilometers away from the notification source, while also considering the signal attenuation caused by the atmosphere with an attenuation coefficient of 0.0005 per kilometer. Please calculate the time required for the broadcast signal to propagate from the notification source to the receiver and analyze the attenuation of the signal strength.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (500 * 1000) / POW(3, 8) AS PropagationTime, EXP(-0.0005 * 500) AS SignalAttenuation FROM WarningNotificationRecord WHERE NotificationMethod = '广播';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 87,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['RecipientCount', 'mean (500,500)', 'standard deviation (288,675.1)', 'threshold (800,000)'], 'relations': ['RecipientCount_distribution (normal distribution)', 'threshold_relation (800,000 > mean)'], 'intent': 'calculate_percentage_of_records_exceeding_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500500, 288675.1, 800000], 'units': {'RecipientCount': 'unitless (count of recipients)', 'threshold': 'unitless (count of recipients)'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '15000', '1000000']}]}}\nA mathematical logic question is as follows:\nThere are 1,000 records in the early warning notification log. The number of recipients (RecipientCount) for each record is 1,000, 2,000, 3,000, ..., 1,000,000. Given that the overall mean of recipient counts is 500,500 and the standard deviation is 288,675.1. Assuming that the recipient counts follow a normal distribution, calculate the percentage of notification records with recipient counts exceeding 800,000 out of the total number of notification records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM WarningNotificationRecord)) AS Percentage FROM WarningNotificationRecord WHERE RecipientCount > 800000;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 88,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SMS notification', 'government recipient type', 'emergency response measures'], 'relations': ['notification_method_to_recipient_type (SMS → government)', 'emergency_management_consideration (SMS notification → emergency protocols)'], 'intent': 'identify_emergency_response_measures', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'temperature': '', 'energy': '', 'conversion': ''}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'NotificationMethod', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['SMS', 'Email', 'Broadcast', '广播', '邮件']}, {'column': 'RecipientType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Public', 'Government', '公众', '企业', '政府']}, {'column': 'EventId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}], 'AlarmSystem.WarningEvent': [{'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the early warning notification log where the notification method is SMS and the recipient type is government. Based on common knowledge, what emergency response measures might this type of notification include? Please reason by considering the emergency management aspects of SMS notifications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT NotificationContent FROM WarningNotificationRecord WHERE NotificationMethod = '短信' AND RecipientType = '政府';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 89,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['recipient_count 100000000', 'threshold_value 1000000', 'duration 365 days', 'data_frequency 1 second per record'], 'relations': ['recipient_count_exceeds_threshold (100000000 > 1000000)', 'time_interval_to_record_count (365 days × 86400 seconds/day = 31536000 records)'], 'intent': 'calculate_total_notification_triggers_under_outlier_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000, 1000000, 365], 'units': {'recipient_count': 'people (unitless)', 'threshold': 'people (unitless)', 'time': 'days → seconds (365 days = 31536000 seconds)', 'frequency': '1 record per second'}, 'foreign_keys': [{'fk_table': 'WarningNotificationRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningNotificationRecord', 'fk_column': 'TriggerId', 'ref_table': 'WarningTriggerRecord', 'ref_column': 'TriggerId'}], 'primary_keys': [{'pk_table': 'WarningNotificationRecord', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningNotificationRecord': [{'column': 'RecipientCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500', '20000', '15000', '1000000']}, {'column': 'NotificationTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:05:00', '2023-09-25 08:35:00', '2023-08-15 13:05:00', '2023-07-10 16:35:00', '2023-06-05 09:35:00']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the alert notification log with a recipient count of 100,000,000, which is an extreme outlier (normal range is 0-1,000,000 people). If the alert system records data once per second and these extreme values persist for 365 days, how many times will the system trigger notifications? The notification rule is set for recipient counts > 1,000,000 people.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS NotificationCount FROM WarningNotificationRecord WHERE RecipientCount > 1000000 AND NotificationTime BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 90,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['flood', 'average severity 7', 'flood wave propagation speed 5 meters/second', '100 kilometers distance'], 'relations': ['propagation_speed_to_time (speed=5m/s, distance=100km → time=20,000s)', 'event_to_severity (flood → average_severity=7)'], 'intent': 'calculate_propagation_time', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [7, 5, 100], 'units': {'distance': 'kilometers (converted to 100,000 meters)', 'speed': 'meters/second', 'time': 'seconds (calculated as distance/speed)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the historical data analysis table with the event type as flood, the average severity as 7, and the flood wave propagation speed as 5 meters/second, please calculate the time required for the flood wave to propagate from the event location to a monitoring station 100 kilometers away.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100 * 1000) / 5 AS PropagationTime FROM HistoricalDataAnalysis WHERE EventType = '洪水' AND AverageSeverity = 7;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 91,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis table', 'AverageSeverity field', 'normal distribution', 'mean 5.5', 'standard deviation 2.872', 'threshold 8.0'], 'relations': ['table_to_field (HistoricalDataAnalysis → AverageSeverity)', 'statistical_distribution (AverageSeverity → normal distribution)', 'z_score_calculation ((8.0 - 5.5)/2.872)'], 'intent': 'calculate_percentage_of_records_above_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5.5, 2.872, 8.0], 'units': {'severity': 'unitless scale (1.0-10.0)', 'standard_deviation': '2.872 (implied by problem statement)', 'threshold': '8.0 (unitless severity scale)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}]}}\nA mathematical logic question is as follows:\nThe historical data analysis table contains 1,000 records, each with an average severity (AverageSeverity) of 1.0, 2.0, 3.0, ..., 10.0 respectively. It is known that the overall mean of the average severity is 5.5, and the overall standard deviation is 2.872. Assuming the average severity follows a normal distribution, calculate the percentage of records whose average severity exceeds 8.0 relative to the total number of records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM HistoricalDataAnalysis)) AS Percentage FROM HistoricalDataAnalysis WHERE AverageSeverity > 8.0;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 92,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earthquake', 'average severity 6', 'false alarm rate 5%', 'HistoricalDataAnalysis table', 'WarningRule table'], 'relations': ['EventType_to_events (earthquake → WarningEvent.EventType)', 'Severity_to_rules (severity level 6 → WarningRule.ThresholdValue)', 'False_alarm_to_triggers (5% false alarm rate → WarningTriggerRecord.IsFalseAlarm)'], 'intent': 'determine_emergency_response_measures_for_earthquake', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [6, 5], 'units': {'severity': 'Richter scale (implied by earthquake severity standard)', 'false_alarm_rate': '% (percentage)', 'threshold_value': 'unit from WarningRule.ThresholdUnit (e.g., magnitude)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}, {'column': 'FalseAlarmRate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.0', '0.1', '2.0', '3.0']}], 'AlarmSystem.WarningEvent': [{'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}, {'column': 'EstimatedDamageUSD', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['5000000.0', '10000000.0', '2000000.0', '1500000.0', '50000000.0']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}, {'column': 'IsActive', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['1']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'ActionTaken', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Notified local authorities and issued flood warnings.', 'Evacuation orders issued for affected areas.', 'Firefighters deployed to contain the wildfire.', 'Tornado alert issued and residents advised to take shelter.', 'Coastal areas evacuated and tsunami warnings issued.']}, {'column': 'IsFalseAlarm', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['0']}]}}\nA common sense reasoning question is as follows:\nIn the historical data analysis table, there is a record with an event type of earthquake, an average severity of 6, and a false alarm rate of 5%. Based on common knowledge, what emergency response measures might be taken for such an event? Please reason by combining emergency management for earthquake disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AnalysisResult FROM HistoricalDataAnalysis WHERE EventType = '地震' AND AverageSeverity = 6 AND FalseAlarmRate = 5;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 93,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis record', 'total event count 1,000,000,000', 'normal range 0-10,000', '365 days', '1 second', 'warning rule (total event count > 10,000)'], 'relations': ['record_to_threshold (event count → warning rule)', 'time_duration (365 days → seconds)', 'trigger_condition (event count > 10,000)'], 'intent': 'calculate_total_triggers_over_time', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000, 10000, 365, 1], 'units': {'time': 'days and seconds', 'conversion': '1 day = 86,400 seconds', 'threshold_unit': 'events', 'trigger_rate': '1 trigger per second'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'TotalEvents', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['128', '28', '3', '12']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}]}}\nA hypothetical reasoning question is as follows:\nAssume there is a record in the historical data analysis table with a total event count of 1,000,000,000, which is an extreme outlier (the normal range is 0-10,000). If the warning system records data once per second and the event data consistently remains at these extreme values for 365 days, how many times will the system trigger an analysis? The analysis rule is set to trigger when the total event count > 10,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS AnalysisCount FROM HistoricalDataAnalysis WHERE TotalEvents > 10000 AND AnalysisTime BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 94,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tsunami event', 'maximum severity 10', 'propagation speed 200 meters/second', 'attenuation coefficient 0.01 per kilometer', 'distance 1000 kilometers'], 'relations': ['event_to_severity (tsunami → MaxSeverity=10)', 'speed_to_distance (200 m/s → 1000 km)', 'attenuation_to_distance (0.01/km → 1000 km)'], 'intent': 'calculate_tsunami_propagation_time_and_energy_attenuation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 0.01, 1000], 'units': {'speed': 'meters/second', 'attenuation_coefficient': 'per kilometer', 'distance': 'kilometers', 'time': 'seconds (calculated from distance/speed)', 'energy_attenuation': 'exponential decay factor (e^(-attenuation_coefficient * distance))'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'MaxSeverity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['10', '9', '8']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ThresholdUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['meters', 'magnitude', 'acres', 'km/h', 'mm']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the historical data analysis table where the event type is a tsunami, the maximum severity is 10, the propagation speed of the tsunami wave is 200 meters/second, and considering the energy attenuation of the tsunami wave with an attenuation coefficient of 0.01 per kilometer, please calculate the time required for the tsunami wave to propagate from the epicenter to a monitoring station 1000 kilometers away and analyze the energy attenuation of the tsunami wave.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1000 * 1000) / 200 AS PropagationTime, EXP(-0.01 * 1000) AS EnergyAttenuation FROM HistoricalDataAnalysis WHERE EventType = '海啸' AND MaxSeverity = 10;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 95,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis table', 'AverageSeverity column', 'lognormal distribution parameters μ_ln=1.5 and σ_ln=0.5', 'threshold value 8.0', 'total records 10,000'], 'relations': ['table_to_column (HistoricalDataAnalysis → AverageSeverity)', 'distribution_to_column (lognormal parameters → AverageSeverity)', 'threshold_comparison (AverageSeverity > 8.0)'], 'intent': 'calculate_percentage_and_total_sum_of_average_severity_above_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.5, 0.5, 8.0, 10000], 'units': {'severity': 'unit unspecified in question', 'threshold': '8.0 (same unit as AverageSeverity)', 'distribution_parameters': 'log mean (μ_ln) and log standard deviation (σ_ln) in natural log scale'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}]}}\nA mathematical logic question is as follows:\nThe historical data analysis table contains 10,000 records. The average severity (AverageSeverity) of each record follows a lognormal distribution, with a known log mean (μ_ln) of 1.5 and a log standard deviation (σ_ln) of 0.5. Please calculate the percentage of records with an average severity exceeding 8.0 out of the total number of records, and further compute the total sum of average severity for these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM HistoricalDataAnalysis)) AS Percentage, SUM(AverageSeverity) AS TotalAverageSeverity FROM HistoricalDataAnalysis WHERE AverageSeverity > 8.0;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 96,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['nuclear leakage event', 'maximum severity level 10', 'false alarm rate 0.1%'], 'relations': ['event_type_to_severity (nuclear leakage → severity level 10)', 'severity_to_response_protocol (severity level 10 → emergency protocols)', 'false_alarm_rate_to_reliability (0.1% → high reliability)'], 'intent': 'retrieve_emergency_response_measures_and_analyze_long-term_impacts', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [10, 0.1], 'units': {'severity': 'level 1-10 scale', 'false_alarm_rate': '% (percentage)', 'environmental_impact': 'radioactive contamination (Bq/m³, Gy)', 'health_impact': 'cancer risk (per 100,000 people), radiation sickness (Sv)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'MaxSeverity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['10', '9', '8']}, {'column': 'FalseAlarmRate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.0', '0.1', '2.0', '3.0']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the historical data analysis table with an event type of nuclear leakage, a maximum severity level of 10, and a false alarm rate of 0.1%. Based on common knowledge, what emergency response measures might be taken for such an event? Please reason in the context of emergency management for nuclear leakage disasters and analyze the long-term impacts of nuclear leakage on the environment and human health.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AnalysisResult FROM HistoricalDataAnalysis WHERE EventType = '核泄漏' AND MaxSeverity = 10 AND FalseAlarmRate = 0.1;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 97,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis record with TotalEvents 10,000,000,000', 'WarningRule threshold 10,000', 'Logging interval 1 millisecond', 'Duration 365 days'], 'relations': ['total_event_count_threshold_comparison (10,000,000,000 > 10,000)', 'time_interval_to_total_milliseconds (1 millisecond logging × 365 days)'], 'intent': 'calculate_triggered_analysis_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000000, 10000, 1, 60, 60, 24, 365], 'units': {'event_count': 'unitless (count)', 'threshold': 'unitless (count)', 'time_interval': 'millisecond', 'duration': 'day', 'conversion': '1 day = 86,400,000 milliseconds (1000×60×60×24)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'TotalEvents', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['128', '28', '3', '12']}, {'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}, {'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'IsActive', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['1']}]}}\nA hypothetical reasoning question is as follows:\nSuppose there is a record in the historical data analysis table with a total event count of 10,000,000,000, which is an extreme outlier (the normal range is 0-10,000). If the warning system logs data every millisecond and the event data remains at these extreme values for 365 days, how many analyses will the system trigger? Assume the analysis rule is a total event count > 10,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS AnalysisCount FROM HistoricalDataAnalysis WHERE TotalEvents > 10000 AND AnalysisTime BETWEEN '2023-01-01 00:00:00.000' AND '2023-12-31 23:59:59.999';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 98,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['volcanic eruption event', 'distance 500 kilometers', 'diffusion speed 10 m/s', 'decay coefficient 0.005/s', 'max severity level 9'], 'relations': ['event_to_severity (volcanic eruption → max severity=9)', 'distance_to_speed_time (500 km / 10 m/s → time calculation)', 'decay_to_attenuation (concentration = e^(-λt))', 'event_to_parameters (volcanic eruption → ash diffusion model)'], 'intent': 'calculate_time_and_attenuation_of_volcanic_ash_spread', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [9, 10, 0.005, 500], 'units': {'distance': 'kilometers (converted to meters: 500,000 m)', 'speed': 'meters per second (m/s)', 'decay_coefficient': 'per second (1/s)', 'time': 'seconds (s)', 'conversion': '500 km = 500,000 meters'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'MaxSeverity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['10', '9', '8']}], 'AlarmSystem.WarningEvent': [{'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the historical data analysis table with an event type of \"volcanic eruption,\" a maximum severity level of 9, a volcanic ash diffusion speed of 10 meters per second, and considering the effect of atmospheric resistance on the ash diffusion with a decay coefficient of 0.005 per second, calculate the time required for the volcanic ash to spread from the crater to a distance of 500 kilometers and analyze the attenuation of the volcanic ash concentration.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (500 * 1000) / 10 AS DiffusionTime, EXP(-0.005 * ((500 * 1000) / 10)) AS ConcentrationAttenuation FROM HistoricalDataAnalysis WHERE EventType = '火山喷发' AND MaxSeverity = 9;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 99,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis table', 'MaxSeverity', 'mean 5.5', 'standard deviation 2.872', 'threshold 8.0'], 'relations': ['MaxSeverity_distribution (mean=5.5, std=2.872)', 'z_score_calculation (z=(8.0-5.5)/2.872)', 'percentage_computation (1 - CDF(z))'], 'intent': 'calculate_percentage_of_records_above_severity_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5.5, 2.872, 8.0], 'units': {'severity': 'unitless (MaxSeverity scale from 1.0 to 10.0)', 'standard_deviation': 'unitless', 'percentage': '%'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'MaxSeverity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['10', '9', '8']}]}}\nA mathematical logic question is as follows:\nThe historical data analysis table contains 1,000 records, with the maximum severity (MaxSeverity) of each record being 1.0, 2.0, 3.0, ..., 10.0. It is known that the overall average of the maximum severity is 5.5, and the overall standard deviation is 2.872. Assuming the maximum severity follows a normal distribution, calculate the percentage of records where the maximum severity exceeds 8.0 relative to the total number of records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM HistoricalDataAnalysis)) AS Percentage FROM HistoricalDataAnalysis WHERE MaxSeverity > 8.0;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 100,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tornado event', 'maximum severity of 8', 'false alarm rate of 2%', 'HistoricalDataAnalysis table'], 'relations': ['tornado_event_to_severity (tornado → max_severity=8)', 'historical_data_to_event (HistoricalDataAnalysis → tornado_event)', 'false_alarm_rate_to_response_effectiveness (2% → emergency_measures_efficiency)', 'foreign_key_relationships (tables linked via EventId, RuleId, TriggerId)'], 'intent': 'determine_emergency_response_measures_for_tornado', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [8, 2], 'units': {'severity': 'unitless (severity scale, likely Fujita or Enhanced Fujita scale)', 'false_alarm_rate': '% (percentage of false alarms)', 'threshold_conversion': 'SeverityLevel=8 → extreme tornado intensity'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningEvent', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'MaxSeverity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['10', '9', '8']}, {'column': 'FalseAlarmRate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.0', '0.1', '2.0', '3.0']}], 'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'PopulationAffected', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['100000', '500000', '20000', '15000', '1000000']}], 'AlarmSystem.WarningRule': [{'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'IsFalseAlarm', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['0']}]}}\nA common sense reasoning question is as follows:\nIn the historical data analysis table, there is a record with the event type as tornado, a maximum severity of 8, and a false alarm rate of 2%. Based on common knowledge, what emergency response measures might be applicable for such an event? Please reason in conjunction with the emergency management of tornado disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AnalysisResult FROM HistoricalDataAnalysis WHERE EventType = '龙卷风' AND MaxSeverity = 8 AND FalseAlarmRate = 2;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 101,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['historical data analysis record with TotalEvents=1,000,000', 'alert system sampling rate (1Hz)', '365-day duration', 'threshold value 10,000'], 'relations': ['trigger_condition (TotalEvents > WarningRule.ThresholdValue)', 'temporal_persistence (365 days × 24 hours/day × 3600 seconds/hour)', 'system_frequency (1 sample/second)'], 'intent': 'calculate_cumulative_alert_triggers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 10000, 365, 1], 'units': {'time': 'seconds (31,536,000 seconds in 365 days)', 'frequency': 'Hz (1 sample/second)', 'threshold': 'events (dimensionless)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'TotalEvents', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['128', '28', '3', '12']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'TriggerTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 15:00:00', '2023-09-25 08:30:00', '2023-08-15 13:00:00', '2023-07-10 16:30:00', '2023-06-05 09:30:00']}, {'column': 'TriggerValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.5', '6.5', '1200.0', '220.0', '6.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the historical data analysis table with a total event count of 1,000,000, which is an extreme outlier (normal range is 0-10,000). If the alert system records data once per second and the event data consistently remains at these extreme values for 365 days, how many times will the system trigger the analysis? The analysis rule is triggered when the total event count > 10,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS AnalysisCount FROM HistoricalDataAnalysis WHERE TotalEvents > 10000 AND AnalysisTime BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 102,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['flood event record', 'flood wave propagation speed 2 m/s', 'monitoring station distance 50 km'], 'relations': ['event_to_speed (flood → 2 m/s)', 'distance_to_station (event location → 50 km)'], 'intent': 'calculate_time_for_flood_wave_to_travel', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2, 50], 'units': {'speed': 'm/s (meters per second)', 'distance': 'km (kilometers)', 'conversion_speed': '2 m/s → 0.002 km/s', 'conversion_time': '50 km / 0.002 km/s = 25000 seconds'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}, {'column': 'FloodWavePropagationSpeed'}, {'column': 'DistanceToMonitoringStation'}]}}\nA physical knowledge question is as follows:\nIf there is a record in the historical data analysis table with the event type being flood, an average severity of 5, and a flood wave propagation speed of 2 meters per second, calculate the time required for the flood wave to travel from the event location to a monitoring station 50 kilometers away.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (50 * 1000) / 2 AS PropagationTime FROM HistoricalDataAnalysis WHERE EventType = '洪水' AND AverageSeverity = 5;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 103,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis records', 'AverageSeverity values 1.0 to 10.0'], 'relations': ['record_to_severity (HistoricalDataAnalysis → AverageSeverity)'], 'intent': 'calculate_average_severity_of_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0], 'units': {'severity': 'unitless numerical value (as per column definition)', 'calculation': 'average = sum(values)/count'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}]}}\nA mathematical logic question is as follows:\nThere are 10 records in the historical data analysis table, with each record's average severity (AverageSeverity) being 1.0, 2.0, 3.0, ..., 10.0 respectively. Please calculate the average severity of these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(AverageSeverity) AS AverageSeverity FROM HistoricalDataAnalysis WHERE AverageSeverity IN (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0);",
        "db_id": "AlarmSystem"
    },
    {
        "id": 104,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fire', 'average severity level 4', 'false alarm rate 3%'], 'relations': ['event_type_to_severity (fire → severity_level_4)', 'false_alarm_rate_to_response_confidence (3% false alarm → high confidence requirement)'], 'intent': 'identify_applicable_emergency_measures_for_fire_event', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [4, 3], 'units': {'severity': 'level (1-5 scale, as per typical fire classification systems)', 'false_alarm_rate': '% (statistical probability)'}, 'foreign_keys': [{'fk_table': 'WarningTriggerRecord', 'fk_column': 'EventId', 'ref_table': 'WarningEvent', 'ref_column': 'EventId'}, {'fk_table': 'WarningTriggerRecord', 'fk_column': 'RuleId', 'ref_table': 'WarningRule', 'ref_column': 'RuleId'}], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}, {'pk_table': 'WarningTriggerRecord', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}, {'column': 'FalseAlarmRate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.0', '0.1', '2.0', '3.0']}], 'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'SeverityLevel', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['8', '9', '7', '6', '10']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}], 'AlarmSystem.WarningTriggerRecord': [{'column': 'IsFalseAlarm', 'type': 'TINYINT', 'primary_key': False, 'comment': '', 'examples': ['0']}]}}\nA common sense reasoning question is as follows:\nIn the historical data analysis table, there is a record with an event type of fire, an average severity level of 4, and a false alarm rate of 3%. Based on common knowledge, what emergency response measures might be applicable for such an event? Please reason by combining emergency management for fire disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AnalysisResult FROM HistoricalDataAnalysis WHERE EventType = '火灾' AND AverageSeverity = 4 AND FalseAlarmRate = 3;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 105,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis record with TotalEvents=100,000', 'WarningRule with ThresholdValue=10,000', '24-hour period'], 'relations': ['TotalEvents (100,000) > ThresholdValue (10,000)', '24-hour period → 86,400 seconds'], 'intent': 'calculate_number_of_analysis_triggers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 10000, 24], 'units': {'time': 'hours to seconds (24 hours = 86,400 seconds)', 'event_count': 'unitless (count of events)', 'trigger_interval': '1 second'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'TotalEvents', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['128', '28', '3', '12']}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the historical data analysis table with a total event count of 100,000, which is an extreme outlier (the normal range is 0-10,000). If the alert system records data every second and the event data remains at these extreme values for 24 hours, how many times will the system trigger an analysis? Assume the analysis rule is that the total event count > 10,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS AnalysisCount FROM HistoricalDataAnalysis WHERE TotalEvents > 10000 AND AnalysisTime BETWEEN '2023-10-01 00:00:00' AND '2023-10-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 106,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['earthquake event', 'impact radius 20 km', 'seismic wave propagation speed 5 km/s'], 'relations': ['radius_to_time (time = radius / speed)'], 'intent': 'calculate_propagation_time_from_source_to_impact_edge', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 5], 'units': {'distance': 'km (kilometers)', 'speed': 'km/s (kilometers per second)', 'time': 'seconds (calculated as km ÷ km/s)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'WarningEvent', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.WarningEvent': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'RadiusKm', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '100.0', '75.0', '30.0', '200.0']}]}}\nA physical knowledge question is as follows:\nIf there is a record in the historical data analysis table with an event type of earthquake, an impact radius of 20 kilometers, and a seismic wave propagation speed of 5 kilometers per second, please calculate the time required for the seismic waves to propagate from the source to the edge of the impact radius.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RadiusKm / 5 AS PropagationTime FROM WarningEvent WHERE EventType = '地震';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 107,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis records', 'AverageSeverity values (1.0, 2.0, 3.0, 4.0, 5.0)'], 'relations': ['record_to_severity (multiple records → AverageSeverity values)', 'aggregation (values → average calculation)'], 'intent': 'calculate_average_severity_of_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.0, 2.0, 3.0, 4.0, 5.0], 'units': {'severity': 'unitless (numerical scale from database schema)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}]}}\nA mathematical logic question is as follows:\nThere are 5 records in the historical data analysis table, with an average severity (AverageSeverity) of 1.0, 2.0, 3.0, 4.0, and 5.0 for each record respectively. Please calculate the average severity of these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(AverageSeverity) AS AverageSeverity FROM HistoricalDataAnalysis WHERE AverageSeverity IN (1.0, 2.0, 3.0, 4.0, 5.0);",
        "db_id": "AlarmSystem"
    },
    {
        "id": 108,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fire', 'average severity level 3', 'false alarm rate 1%'], 'relations': ['event_type_to_severity_level (fire → severity level 3)', 'event_type_to_false_alarm_rate (fire → false alarm rate 1%)', 'severity_level_to_emergency_measures (severity level 3 → potential response actions)'], 'intent': 'determine_emergency_response_measures_for_fire_disaster', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [3, 1], 'units': {'severity_level': 'unitless (scale 1-5)', 'false_alarm_rate': '% (percentage)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['地震', '洪水', '海啸', '核泄漏', '火山喷发']}, {'column': 'AverageSeverity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['6.0', '7.0', '5.0', '4.0']}, {'column': 'FalseAlarmRate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['5.0', '0.1', '2.0', '3.0']}], 'AlarmSystem.WarningRule': [{'column': 'EventType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Flood', 'Earthquake', 'Wildfire', 'Tornado', 'Tsunami']}, {'column': 'ActionType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Notify Authorities', 'Evacuate Area', 'Deploy Firefighters', 'Issue Tornado Alert', 'Evacuate Coastal Areas']}]}}\nA common sense reasoning question is as follows:\nThere is a record in the historical data analysis table with an event type of fire, an average severity level of 3, and a false alarm rate of 1%. Based on common sense, what possible emergency response measures might be taken for such an event? Please reason accordingly in the context of emergency management for fire disasters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AnalysisResult FROM HistoricalDataAnalysis WHERE EventType = '火灾' AND AverageSeverity = 3 AND FalseAlarmRate = 1;",
        "db_id": "AlarmSystem"
    },
    {
        "id": 109,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['HistoricalDataAnalysis record with TotalEvents=20,000', '24-hour time period', 'alert system logging every second', 'threshold value of 10,000 events'], 'relations': ['HistoricalDataAnalysis.TotalEvents → WarningRule.ThresholdValue (comparison for triggering)', '24_hours → 86400_seconds (temporal conversion)', 'event_count_condition (TotalEvents > ThresholdValue = TRUE)'], 'intent': 'calculate_number_of_alert_triggers_over_time', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000, 10000, 24, 1], 'units': {'event_count': 'unitless integer', 'time_period': 'hours → seconds (24 hours = 86400 seconds)', 'frequency': '1 second', 'trigger_count': 'unitless integer'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'HistoricalDataAnalysis', 'pk_column': 'Id'}, {'pk_table': 'WarningRule', 'pk_column': 'Id'}], 'tableinfo': {'AlarmSystem.HistoricalDataAnalysis': [{'column': 'TotalEvents', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['128', '28', '3', '12']}, {'column': 'AnalysisTime', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': []}], 'AlarmSystem.WarningRule': [{'column': 'ThresholdValue', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '6.0', '1000.0', '200.0', '5.0']}, {'column': 'ConditionOperator', 'type': 'VARCHAR(10)', 'primary_key': False, 'comment': '', 'examples': ['>', '>=']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a record in the historical data analysis table with a total event count of 20,000, which is an extreme outlier (normal range is 0-10,000). If the alert system records data every second and the event data remains at these extreme values for 24 hours, how many times would the system trigger the analysis? The analysis rule is set as total event count > 10,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS AnalysisCount FROM HistoricalDataAnalysis WHERE TotalEvents > 10000 AND AnalysisTime BETWEEN '2023-10-01 00:00:00' AND '2023-10-02 00:00:00';",
        "db_id": "AlarmSystem"
    },
    {
        "id": 110,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge', 'Moulin de Bruges', 'vibration frequency 0.2 Hz', 'length 2737 meters', 'material steel', 'blade length 14 meters', 'rotation speed 20 RPM', 'wind speed 20 m/s', 'wind speed 8 m/s'], 'relations': ['bridge_to_properties (Golden Gate Bridge → vibration_frequency)', 'mill_to_blade_properties (Moulin de Bruges → blade_length)', 'rotation_to_velocity (rotation_speed → linear_velocity)'], 'intent': 'calculate_bridge_amplitude_and_mill_tip_velocity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.2, 2737, 20, 14, 20, 8], 'units': {'frequency': 'Hz', 'length': 'meters', 'wind_speed': 'm/s', 'rotation_speed': 'RPM', 'amplitude': 'meters (implied)', 'linear_velocity': 'm/s (calculated)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}, {'column': 'Length_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的长度（米）', 'examples': ['2737.0', '1834.0', '2460.0', '244.0', '3911.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA physical knowledge question is as follows:\nIt is known that the Golden Gate Bridge has a vibration frequency of 0.2 Hz, a length of 2737 meters, and is made of steel. The Moulin de Bruges has a blade length of 14 meters and a rotation speed of 20 revolutions per minute. Please calculate the maximum amplitude of the Golden Gate Bridge at a wind speed of 20 meters per second, as well as the linear velocity of the blade tip of the Moulin de Bruges at a wind speed of 8 meters per second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (20 / (2 * 3.14159 * (SELECT Vibration_Frequency FROM bridge WHERE Name = 'Golden Gate Bridge'))) * ((SELECT Length_Meters FROM bridge WHERE Name = 'Golden Gate Bridge') / 1000) AS Golden_Gate_Max_Amplitude, 2 * 3.14159 * (SELECT Blade_Length FROM mill WHERE Name = 'Moulin de Bruges') * ((SELECT Rotation_Speed FROM mill WHERE Name = 'Moulin de Bruges') / 60) AS Moulin_Tip_Speed;",
        "db_id": "architect"
    },
    {
        "id": 111,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA mathematical logic question is as follows:\nIt is known that the length of the Brooklyn Bridge is 1834 meters, with a maximum load-bearing capacity of 2,000,000 kilograms; the power output of Moulin de Fexhe is 7.5 kilowatts at a wind speed of 6 meters per second. Please calculate the average load-bearing weight per meter length of the Brooklyn Bridge, and the energy conversion efficiency of Moulin de Fexhe at a wind speed of 6 meters per second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Load_Capacity / Length_Meters) AS Avg_Load_Per_Meter, (Power_Output / (0.5 * 1.225 * (3.14159 * POW(Blade_Length, 2)) * POW(Wind_Speed, 3))) * 100 AS Energy_Efficiency FROM bridge, mill WHERE bridge.Name = 'Brooklyn Bridge' AND mill.Name = 'Moulin de Fexhe';",
        "db_id": "architect"
    },
    {
        "id": 112,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Millau Viaduct', 'Moulin de Momalle'], 'relations': ['structure_to_cost', 'structure_to_maintenance_cost', 'structure_to_service_life'], 'intent': 'calculate_total_costs', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [400000000, 2000000, 100, 80000, 3000, 50], 'units': {'cost': 'USD (United States Dollars)', 'maintenance': 'USD/year', 'service_life': 'years'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的建造成本（美元）', 'examples': ['35000000.0', '15000000.0', '400000000.0', '1200000.0', '5000000000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}], 'architect.mill': [{'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的建造成本（美元）', 'examples': ['50000.0', '70000.0', '60000.0', '80000.0', '55000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}]}}\nA common sense reasoning question is as follows:\nIt is known that the construction cost of the Millau Viaduct is $400,000,000, the annual maintenance cost is $2,000,000, and the designed service life is 100 years; the construction cost of the Moulin de Momalle is $80,000, the annual maintenance cost is $3,000, and the designed service life is 50 years. Please calculate the total costs of the Millau Viaduct and the Moulin de Momalle respectively.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Cost_Usd + (Maintenance_Cost * 100) AS Total_Cost_Millau_Viaduct, (SELECT Cost_Usd + (Maintenance_Cost * 50) FROM mill WHERE Name = 'Moulin de Momalle') AS Total_Cost_Moulin_de_Momalle FROM bridge WHERE Name = 'Millau Viaduct';",
        "db_id": "architect"
    },
    {
        "id": 113,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge', 'Moulin de Bruges', 'vibration frequency 100 Hz', 'length 100,000 meters', 'steel material', 'blade length 1,000 meters', 'rotation speed 1,000 revolutions per minute', 'wind speed 1,000 meters/second'], 'relations': ['bridge_to_vibration_frequency (Golden Gate Bridge → 100 Hz)', 'mill_to_blade_rotation (Moulin de Bruges → 1,000 meters blade length, 1,000 RPM)'], 'intent': 'calculate_bridge_amplitude_and_mill_blade_velocity', 'reasoning_type': ['physical knowledge reasoning (bridge amplitude via vibration dynamics)', 'mathematical logic reasoning (linear velocity from rotational speed)'], 'numerical_values': [100, 100000, 1000, 1000, 1000], 'units': {'vibration_frequency': 'Hz (1/second)', 'length': 'meters', 'rotation_speed': 'RPM (revolutions per minute)', 'wind_speed': 'meters/second', 'linear_velocity': 'meters/second (calculated)', 'amplitude': 'meters (theoretical)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Golden Gate Bridge has a vibration frequency of 100 Hz, a length of 100,000 meters, and is made of steel; the blade length of the Moulin de Bruges is 1,000 meters with a rotation speed of 1,000 revolutions per minute. Please calculate the maximum amplitude of the Golden Gate Bridge at a wind speed of 1,000 meters/second, and the linear velocity at the blade tip of the Moulin de Bruges at the same wind speed of 1,000 meters/second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1000 / (2 * 3.14159 * 100)) * (100000 / 1000) AS Golden_Gate_Max_Amplitude, 2 * 3.14159 * 1000 * (1000 / 60) AS Moulin_Tip_Speed;",
        "db_id": "architect"
    },
    {
        "id": 114,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Millau Viaduct', 'Moulin de Bruges', 'wind load', 'kinetic energy'], 'relations': ['Millau_Viaduct→span_length', 'Millau_Viaduct→height_meters', 'Millau_Viaduct→material', 'Moulin_de_Bruges→blade_length', 'Moulin_de_Bruges→rotation_speed', 'wind_load→wind_speed', 'wind_load→air_density', 'kinetic_energy→rotational_formula'], 'intent': 'calculate_wind_load_and_kinetic_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [342, 343, 10, 1.225, 14, 20], 'units': {'span_length': 'meters', 'height': 'meters', 'wind_speed': 'm/s', 'air_density': 'kg/m³', 'blade_length': 'meters', 'rotation_speed': 'RPM', 'conversion': 'RPM to rad/s (20 RPM = 2.094 rad/s)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的高度（米）', 'examples': ['227.0', '84.0', '343.0', '65.0', '282.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA physical knowledge question is as follows:\nIt is known that the Millau Viaduct has a span of 342 meters, a height of 343 meters, and is made of concrete. The Moulin de Bruges has a blade length of 14 meters and rotates at a speed of 20 revolutions per minute. Please calculate the wind load on the Millau Viaduct at a wind speed of 10 meters per second (assuming an air density of 1.225 kg/m³), as well as the kinetic energy of the Moulin de Bruges blades during rotation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * POW(10, 2) * Span_Length * Height_Meters AS Wind_Load, 0.5 * (14 * 50) * POW(2 * 3.14159 * 14 * (20 / 60), 2) AS Blade_Kinetic_Energy FROM bridge WHERE Name = 'Millau Viaduct';",
        "db_id": "architect"
    },
    {
        "id": 115,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge', 'Moulin de Momalle'], 'relations': ['maintenance_ratio (Golden Gate Bridge → 2.86%)', 'maintenance_ratio (Moulin de Momalle → 3.75%)', 'comparison (Moulin de Momalle has higher burden)'], 'intent': 'calculate_maintenance_ratio_and_compare_structures', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [35000000, 1000000, 80000, 3000], 'units': {'cost': 'USD (United States Dollars)', 'ratio': 'unitless (percentage calculation)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的名称', 'examples': ['Golden Gate Bridge', 'Brooklyn Bridge', 'Millau Viaduct', 'Tower Bridge', 'Akashi Kaikyō Bridge']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的建造成本（美元）', 'examples': ['35000000.0', '15000000.0', '400000000.0', '1200000.0', '5000000000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}], 'architect.mill': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的名称', 'examples': ['Le Vieux Molen', 'Moulin Bertrand', 'Moulin de Fexhe', 'Moulin de Momalle', 'Moulin du Château']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的建造成本（美元）', 'examples': ['50000.0', '70000.0', '60000.0', '80000.0', '55000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}]}}\nA mathematical logic question is as follows:\nIt is known that the construction cost of the Golden Gate Bridge is $35,000,000, with an annual maintenance cost of $1,000,000; the construction cost of the Moulin de Momalle is $80,000, with an annual maintenance cost of $3,000. Please calculate the ratio of the maintenance cost to the construction cost for both the Golden Gate Bridge and the Moulin de Momalle, and compare their maintenance burden.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_Cost / Cost_Usd AS Maintenance_Ratio FROM bridge WHERE Name = 'Golden Gate Bridge' UNION ALL SELECT Maintenance_Cost / Cost_Usd AS Maintenance_Ratio FROM mill WHERE Name = 'Moulin de Momalle';",
        "db_id": "architect"
    },
    {
        "id": 116,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Charles Bridge (1402, stone, $100,000)', 'Moulin de Fexhe (1843, wood, $2,200)'], 'relations': ['construction_year_comparison (1402 vs 1843)', 'material_comparison (stone vs wood)', 'maintenance_cost_difference ($100,000 vs $2,200)'], 'intent': 'evaluate_reasonableness_of_maintenance_cost_difference', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [1402, 1843, 100000, 2200], 'units': {'year': 'AD (Gregorian calendar)', 'cost': 'USD (annual maintenance)', 'material': 'stone vs wood durability implications'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Construction_Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '桥梁的建造年份', 'examples': ['1937', '1883', '2004', '1894', '1998']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}], 'architect.mill': [{'column': 'Built_Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '磨坊的建造年份', 'examples': ['1840', '1890', '1843', '1850', '1856']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的主要建造材料（例如：木材、石头）', 'examples': ['wood', 'stone']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}]}}\nA common sense reasoning question is as follows:\nThe known construction year of Charles Bridge is 1402, with stone as its material and an annual maintenance cost of $100,000; the construction year of Moulin de Fexhe is 1843, with wood as its material and an annual maintenance cost of $2,200. Please analyze whether the difference in maintenance costs between these two structures is reasonable based on their construction years and materials, and explain the reasons.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Construction_Year, Material, Maintenance_Cost, CASE WHEN Material = 'stone' THEN '石头结构通常更耐用，但维护成本较高' WHEN Material = 'wood' THEN '木材结构维护成本较低，但耐久性较差' END AS Maintenance_Analysis FROM bridge WHERE Name = 'Charles Bridge' UNION ALL SELECT Name, Built_Year, Material, Maintenance_Cost, CASE WHEN Material = 'stone' THEN '石头结构通常更耐用，但维护成本较高' WHEN Material = 'wood' THEN '木材结构维护成本较低，但耐久性较差' END AS Maintenance_Analysis FROM mill WHERE Name = 'Moulin de Fexhe';",
        "db_id": "architect"
    },
    {
        "id": 117,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Akashi Kaikyō Bridge', 'Moulin de Bruges', 'steel material', 'span 100000 meters', 'height 10000 meters', 'wind speed 1000 m/s', 'blade length 1000 meters', 'rotational speed 10000 RPM'], 'relations': ['bridge_span (bridge → 100000 m)', 'bridge_height (bridge → 10000 m)', 'bridge_material (bridge → steel)', 'wind_speed (applied_to → bridge)', 'mill_blade_length (mill → 1000 m)', 'mill_rotational_speed (mill → 10000 RPM)'], 'intent': 'calculate_wind_load_and_kinetic_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 10000, 1000, 1000, 10000], 'units': {'length': 'meters', 'height': 'meters', 'wind_speed': 'meters per second (m/s)', 'rotational_speed': 'revolutions per minute (RPM)', 'conversion': ['RPM to rad/s (for angular velocity calculation)', 'm/s² for wind load acceleration']}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的高度（米）', 'examples': ['227.0', '84.0', '343.0', '65.0', '282.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Akashi Kaikyō Bridge has a span of 100,000 meters, a height of 10,000 meters, and is made of steel; the Moulin de Bruges has blade lengths of 1,000 meters and a rotational speed of 10,000 revolutions per minute. Please calculate the wind load on the Akashi Kaikyō Bridge at a wind speed of 1,000 meters per second, as well as the kinetic energy of the Moulin de Bruges blades during rotation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * POW(1000, 2) * 100000 * 10000 AS Wind_Load, 0.5 * (1000 * 50) * POW(2 * 3.14159 * 1000 * (10000 / 60), 2) AS Blade_Kinetic_Energy;",
        "db_id": "architect"
    },
    {
        "id": 118,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Tower Bridge (bascule arch shape, 65m height, 0.25 Hz frequency)', 'Moulin de Bruges (14m blade length, 20 rpm rotation speed)'], 'relations': ['bridge_to_vibration_energy (Tower Bridge → wind-induced vibration energy)', 'mill_to_aerodynamic_drag (Moulin de Bruges → aerodynamic drag calculation)', 'structure_to_parameters (Tower Bridge: height, frequency; Moulin de Bruges: blade length, rotation speed)'], 'intent': 'calculate_wind-induced_vibration_energy_and_aerodynamic_drag', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [65, 0.25, 15, 500000, 14, 20, 1.225], 'units': {'height': 'meters', 'frequency': 'Hz', 'wind_speed': 'm/s', 'mass': 'kg', 'blade_length': 'meters', 'rotation_speed': 'rpm', 'air_density': 'kg/m³'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的名称', 'examples': ['Golden Gate Bridge', 'Brooklyn Bridge', 'Millau Viaduct', 'Tower Bridge', 'Akashi Kaikyō Bridge']}, {'column': 'Arch_Shape', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的拱形形状（例如：抛物线、圆形、悬链线）', 'examples': ['suspension', 'cable-stayed', 'bascule', 'arch', 'cantilever']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的高度（米）', 'examples': ['227.0', '84.0', '343.0', '65.0', '282.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的名称', 'examples': ['Le Vieux Molen', 'Moulin Bertrand', 'Moulin de Fexhe', 'Moulin de Momalle', 'Moulin du Château']}, {'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA physical knowledge question is as follows:\nGiven that Tower Bridge has a bascule arch shape, a height of 65 meters, and a vibration frequency of 0.25 Hz; Moulin de Bruges has blade lengths of 14 meters and a rotation speed of 20 rpm. Please calculate the wind-induced vibration energy of Tower Bridge at a wind speed of 15 m/s (assuming the bridge mass is 500,000 kg), and the aerodynamic drag on Moulin de Bruges blades during rotation (assuming an air density of 1.225 kg/m³).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 500000 * POW(15 / (2 * 3.14159 * 0.25), 2) AS Wind_Induced_Vibration_Energy, 0.5 * 1.225 * POW(2 * 3.14159 * 14 * (20 / 60), 2) * (14 * 2) AS Aerodynamic_Drag FROM bridge WHERE Name = 'Tower Bridge';",
        "db_id": "architect"
    },
    {
        "id": 119,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge', 'Moulin de Bruges'], 'relations': ['bridge_to_parameters (Golden Gate Bridge → Span_Length, Height_Meters, Vibration_Frequency, Material, Mass)', 'mill_to_parameters (Moulin de Bruges → Blade_Length, Rotation_Speed, Power_Output, Material)'], 'intent': 'calculate_wind_induced_vibration_energy_and_aerodynamic_drag', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 100000, 1000, 1000000000, 100000, 10000, 100000, 1000000000, 100000, 1.225], 'units': {'length': 'meters', 'frequency': 'Hz', 'mass': 'kg', 'wind speed': 'm/s', 'blade length': 'meters', 'rotation speed': 'RPM', 'power output': 'kilowatts', 'air density': 'kg/m³', 'energy': 'joules (implied by formula)', 'drag': 'newtons (implied by formula)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的高度（米）', 'examples': ['227.0', '84.0', '343.0', '65.0', '282.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}, {'column': 'Load_Capacity', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的最大承载重量（千克）', 'examples': ['4000000.0', '2000000.0', '5000000.0', '1000000.0', '10000000.0']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的建造成本（美元）', 'examples': ['35000000.0', '15000000.0', '400000000.0', '1200000.0', '5000000000.0']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}, {'column': 'Power_Output', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的功率输出（千瓦），用于计算能量效率', 'examples': ['5.0', '7.0', '6.0', '8.0', '5.5']}, {'column': 'Wind_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊设计时的平均风速（米/秒）', 'examples': ['8.0', '7.0', '7.5', '8.5', '7.2']}, {'column': 'Efficiency', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的能量转换效率（百分比）', 'examples': ['0.6', '0.65', '0.62', '0.7', '0.63']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Golden Gate Bridge has a span of 1,000,000 meters, a height of 100,000 meters, is made of steel, and has a vibration frequency of 1000 Hz; the Moulin de Bruges has a blade length of 10,000 meters, a rotation speed of 100,000 revolutions per minute, and a power output of 1,000,000,000 kilowatts. Please calculate the wind-induced vibration energy of the Golden Gate Bridge at a wind speed of 100,000 meters per second (assuming the bridge's mass is 1,000,000,000 kilograms), as well as the aerodynamic drag on the Moulin de Bruges blades during rotation (assuming the air density is 1.225 kg/m³).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1000000000 * POW(100000 / (2 * 3.14159 * 1000), 2) AS Wind_Induced_Vibration_Energy, 0.5 * 1.225 * POW(2 * 3.14159 * 10000 * (100000 / 60), 2) * (10000 * 2) AS Aerodynamic_Drag;",
        "db_id": "architect"
    },
    {
        "id": 120,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Millau Viaduct', 'Moulin de Bruges', 'concrete', 'wind speed 10 m/s', 'bridge mass 5,000,000 kg', 'air density 1.225 kg/m³'], 'relations': ['structure_to_span (Millau Viaduct → 342 meters)', 'structure_to_height (Millau Viaduct → 343 meters)', 'structure_to_material (Millau Viaduct → concrete)', 'mill_to_blade_length (Moulin de Bruges → 14 meters)', 'mill_to_rotation_speed (Moulin de Bruges → 20 RPM)', 'environmental_condition (wind speed 10 m/s)', 'physical_property (bridge mass 5,000,000 kg)', 'physical_property (air density 1.225 kg/m³)'], 'intent': 'calculate_wind-induced_vibration_frequency_and_aerodynamic_lift_force', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [342, 343, 14, 20, 10, 5000000, 1.225], 'units': {'length': 'meters', 'speed': 'meters/second', 'rotation': 'revolutions per minute (RPM)', 'mass': 'kilograms (kg)', 'density': 'kg/m³', 'frequency': 'Hertz (Hz) (implied by formula)', 'force': 'Newtons (N) (implied by formula)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的高度（米）', 'examples': ['227.0', '84.0', '343.0', '65.0', '282.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA physical knowledge question is as follows:\nIt is known that the Millau Viaduct has a span of 342 meters, a height of 343 meters, and is made of concrete; the Moulin de Bruges has blades with a length of 14 meters and a rotation speed of 20 revolutions per minute. Please calculate the wind-induced vibration frequency of the Millau Viaduct at a wind speed of 10 meters/second (assuming the bridge's mass is 5,000,000 kilograms), as well as the aerodynamic lift force of the Moulin de Bruges blades during rotation (assuming an air density of 1.225 kg/m³).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 10 / (2 * 3.14159 * 343) AS Wind_Induced_Vibration_Frequency, 0.5 * 1.225 * POW(2 * 3.14159 * 14 * (20 / 60), 2) * (14 * 2) AS Aerodynamic_Lift FROM bridge WHERE Name = 'Millau Viaduct';",
        "db_id": "architect"
    },
    {
        "id": 121,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Forth Bridge', 'Moulin de Pousset'], 'relations': ['bridge_to_load_capacity (Forth Bridge → Load_Capacity)', 'bridge_to_dimensions (Forth Bridge → Length_Meters, Width)', 'mill_to_power_output (Moulin de Pousset → Power_Output, Wind_Speed, Blade_Length)'], 'intent': 'calculate_load_bearing_per_square_meter_and_wind_energy_utilization_rate', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2467, 4000000, 20, 7.8, 6.5, 1.225], 'units': {'length': 'meters', 'load_capacity': 'kilograms', 'width': 'meters (assumed)', 'power_output': 'kilowatts', 'wind_speed': 'meters per second', 'air_density': 'kg/m³ (assumed)', 'load_per_area': 'kg/m² (calculated)', 'efficiency': 'percentage (calculated)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Load_Capacity', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的最大承载重量（千克）', 'examples': ['4000000.0', '2000000.0', '5000000.0', '1000000.0', '10000000.0']}, {'column': 'Length_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的长度（米）', 'examples': ['2737.0', '1834.0', '2460.0', '244.0', '3911.0']}], 'architect.mill': [{'column': 'Power_Output', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的功率输出（千瓦），用于计算能量效率', 'examples': ['5.0', '7.0', '6.0', '8.0', '5.5']}, {'column': 'Wind_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊设计时的平均风速（米/秒）', 'examples': ['8.0', '7.0', '7.5', '8.5', '7.2']}, {'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}]}}\nA mathematical logic question is as follows:\nThe Forth Bridge has a length of 2467 meters and a maximum load capacity of 4,000,000 kilograms; the Moulin de Pousset has a power output of 7.8 kilowatts at a wind speed of 6.5 meters per second. Please calculate the load-bearing weight per square meter of the Forth Bridge (assuming the bridge is 20 meters wide), and the wind energy utilization rate of the Moulin de Pousset at a wind speed of 6.5 m/s (assuming an air density of 1.225 kg/m³).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Load_Capacity / (Length_Meters * 20) AS Load_Per_Square_Meter, Power_Output / (0.5 * 1.225 * POW(6.5, 3) * (3.14159 * POW(Blade_Length, 2))) AS Wind_Energy_Utilization FROM bridge, mill WHERE bridge.Name = 'Forth Bridge' AND mill.Name = 'Moulin de Pousset';",
        "db_id": "architect"
    },
    {
        "id": 122,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Charles Bridge', 'height 13 meters', 'vibration frequency 0.4 Hertz', 'Moulin de Bruges', 'blade length 14 meters', 'rotational speed 20 revolutions per minute'], 'relations': ['bridge_to_height (Charles Bridge → Height_Meters=13)', 'mill_to_blade (Moulin de Bruges → Blade_Length=14)', 'mill_to_rotation (Moulin de Bruges → Rotation_Speed=20)'], 'intent': 'calculate_natural_frequency_of_bridge_and_linear_velocity_of_mill_blade', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [13, 14, 20], 'units': {'height': 'meters', 'blade_length': 'meters', 'rotational_speed': 'revolutions per minute (RPM)', 'frequency': 'Hertz', 'linear_velocity': 'meters per second (m/s)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的高度（米）', 'examples': ['227.0', '84.0', '343.0', '65.0', '282.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA physical knowledge question is as follows:\nThe known length of Charles Bridge is 516 meters, its height is 13 meters, and its vibration frequency is 0.4 Hertz; the blade length of Moulin de Bruges is 14 meters, and its rotational speed is 20 revolutions per minute. Please calculate the natural frequency of the bridge based on its height and wind speed, and compute the linear velocity of the mill blade tips.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (10 / (2 * 3.14159 * Height_Meters)) AS Natural_Frequency, (SELECT 2 * 3.14159 * Blade_Length * (Rotation_Speed / 60) FROM mill WHERE Name = 'Moulin de Bruges') AS Tip_Speed FROM bridge WHERE Name = 'Charles Bridge';",
        "db_id": "architect"
    },
    {
        "id": 123,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Akashi Kaikyō Bridge', 'Moulin de Momalle'], 'relations': ['structure_to_construction_cost', 'structure_to_annual_maintenance_cost', 'annual_maintenance_to_total_maintenance (design_life_multiplier)'], 'intent': 'calculate_percentage_total_maintenance_to_construction_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000000, 5000000, 100, 80000, 3000, 50], 'units': {'cost': 'USD', 'design_life': 'years', 'maintenance_multiplier': 'total_maintenance_cost = annual_maintenance * design_life', 'percentage': '(total_maintenance_cost / construction_cost) * 100'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的名称', 'examples': ['Golden Gate Bridge', 'Brooklyn Bridge', 'Millau Viaduct', 'Tower Bridge', 'Akashi Kaikyō Bridge']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的建造成本（美元）', 'examples': ['35000000.0', '15000000.0', '400000000.0', '1200000.0', '5000000000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}], 'architect.mill': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的名称', 'examples': ['Le Vieux Molen', 'Moulin Bertrand', 'Moulin de Fexhe', 'Moulin de Momalle', 'Moulin du Château']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的建造成本（美元）', 'examples': ['50000.0', '70000.0', '60000.0', '80000.0', '55000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}]}}\nA mathematical logic question is as follows:\nThe construction cost of the Akashi Kaikyō Bridge is $5,000,000,000, with a design life of 100 years and an annual maintenance cost of $5,000,000; the construction cost of the Moulin de Momalle is $80,000, with a design life of 50 years and an annual maintenance cost of $3,000. Please calculate the percentage of the total maintenance cost relative to the construction cost for both.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Maintenance_Cost * 100) / Cost_Usd * 100 AS Maintenance_Cost_Percentage FROM bridge WHERE Name = 'Akashi Kaikyō Bridge' UNION ALL SELECT (Maintenance_Cost * 50) / Cost_Usd * 100 AS Maintenance_Cost_Percentage FROM mill WHERE Name = 'Moulin de Momalle';",
        "db_id": "architect"
    },
    {
        "id": 124,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Rialto Bridge', 'Moulin de Pousset', 'stone material', 'built in 1591', 'built in 1819', '$50,000 annual maintenance', '$2,400 annual maintenance'], 'relations': ['structure_to_maintenance_cost (Rialto Bridge → $50,000)', 'structure_to_maintenance_cost (Moulin de Pousset → $2,400)', 'material_similarity (stone = stone)', 'age_difference (ΔY=228 years)'], 'intent': 'analyze_causes_of_maintenance_cost_disparity', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [50000, 2400], 'units': {'cost': 'USD (annual)', 'year_difference': 'years (implied by construction dates)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Construction_Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '桥梁的建造年份', 'examples': ['1937', '1883', '2004', '1894', '1998']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}, {'column': 'Location', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的位置（例如：城市、国家）', 'examples': ['San Francisco, USA', 'New York City, USA', 'Millau, France', 'London, UK', 'Kobe, Japan']}, {'column': 'Load_Capacity', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的最大承载重量（千克）', 'examples': ['4000000.0', '2000000.0', '5000000.0', '1000000.0', '10000000.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Built_Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '磨坊的建造年份', 'examples': ['1840', '1890', '1843', '1850', '1856']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的主要建造材料（例如：木材、石头）', 'examples': ['wood', 'stone']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}, {'column': 'Location', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的位置（例如：城市、国家）', 'examples': ['Coswarem', 'Donceel', 'Fexhe-le-haut-Clocher', 'Momalle', 'Othée']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}, {'column': 'Power_Output', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的功率输出（千瓦），用于计算能量效率', 'examples': ['5.0', '7.0', '6.0', '8.0', '5.5']}]}}\nA common sense reasoning question is as follows:\nGiven that the annual maintenance cost of Rialto Bridge (stone, built in 1591) is $50,000 and that of Moulin de Pousset (stone, built in 1819) is $2,400, why is there a significant difference in maintenance costs if neither has structural damage?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Construction_Year, Material, Maintenance_Cost, CASE WHEN Name = 'Rialto Bridge' THEN '高维护成本可能由于高使用强度、环境腐蚀或文物保护需求较高' WHEN Name = 'Moulin de Pousset' THEN '低维护成本可能由于使用强度较低或环境腐蚀影响较小' END AS Maintenance_Cost_Analysis FROM bridge WHERE Name = 'Rialto Bridge' UNION ALL SELECT Name, Built_Year, Material, Maintenance_Cost, CASE WHEN Name = 'Moulin de Pousset' THEN '低维护成本可能由于使用强度较低或环境腐蚀影响较小' END AS Maintenance_Cost_Analysis FROM mill WHERE Name = 'Moulin de Pousset';",
        "db_id": "architect"
    },
    {
        "id": 125,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge', 'vortex-induced vibration energy', 'Moulin de Bruges', 'material ultimate stress', 'wind speed 100,000 m/s', 'mass 1e12 kg', 'blade density 8,000 kg/m³'], 'relations': ['bridge_to_vibration_energy (Golden Gate Bridge → vortex-induced vibration energy)', 'mill_to_stress (Moulin de Bruges → material ultimate stress)', 'wind_speed_to_vibration (wind speed → vibration frequency)', 'blade_rotation_to_stress (blade rotation speed → centrifugal force)'], 'intent': 'calculate_vortex_induced_vibration_energy_and_material_stress', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 100000, 1000, 100000, 1000000000000.0, 10000, 100000, 8000], 'units': {'length': 'meters', 'height': 'meters', 'frequency': 'Hz', 'wind_speed': 'm/s', 'mass': 'kg', 'blade_rotation': 'rpm', 'density': 'kg/m³'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Bridge_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '桥梁的唯一标识符（主键）', 'examples': ['1', '6', '2', '10', '3']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}, {'column': 'Load_Capacity', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的最大承载重量（千克）', 'examples': ['4000000.0', '2000000.0', '5000000.0', '1000000.0', '10000000.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的主要建造材料（例如：木材、石头）', 'examples': ['wood', 'stone']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Golden Gate Bridge's span extends to 1,000,000 meters with a height of 100,000 meters and a vibration frequency of 1,000 Hz; the Moulin de Bruges' blade length increases to 10,000 meters with a rotation speed of 100,000 rpm. Calculate the vortex-induced vibration energy of the bridge at a wind speed of 100,000 m/s (assuming a mass of 1e12 kg) and the material's ultimate stress caused by the centrifugal force of the blades (assuming a blade density of 8,000 kg/m³).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1e12 * POW(100000 / 1000, 2) AS Vortex_Induced_Vibration_Energy, 8000 * POW(2 * 3.14159 * 100000 / 60, 2) * POW(10000, 2) / 2 AS Centrifugal_Stress;",
        "db_id": "architect"
    },
    {
        "id": 126,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Brooklyn Bridge', 'vibration frequency 0.3 Hz', 'span 486 meters', 'wind speed 12 m/s', 'Moulin de Fexhe', 'blade length 11 meters', 'rotational speed 28 rpm'], 'relations': ['bridge_to_specs (Brooklyn Bridge → bridge table data)', 'mill_to_specs (Moulin de Fexhe → mill table data)', 'aeroelastic_resonance (wind speed ↔ vibration frequency)', 'rotational_dynamics (blade length ↔ rotational speed)'], 'intent': 'calculate_resonant_harmonic_number_and_critical_frequency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [486, 0.3, 12, 11, 28], 'units': {'span': 'meters', 'vibration_frequency': 'Hz', 'wind_speed': 'm/s', 'blade_length': 'meters', 'rotational_speed': 'rpm', 'critical_frequency_conversion': 'rotational_speed(rpm) → frequency(Hz) = rpm/60'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA physical knowledge question is as follows:\nIt is known that the arch shape of the Brooklyn Bridge is suspension, with a span of 486 meters and a vibration frequency of 0.3 Hz; the Moulin de Fexhe has a blade length of 11 meters and a rotational speed of 28 rpm. Please calculate the resonant harmonic number of the Brooklyn Bridge at a wind speed of 12 m/s, as well as the critical frequency of sound wave interference generated by the rotation of the mill blades.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (12 * Span_Length) / (Vibration_Frequency * 1000) AS Harmonic_Number, (Blade_Length * Rotation_Speed) / 60 AS Critical_Frequency FROM bridge, mill WHERE bridge.Name = 'Brooklyn Bridge' AND mill.Name = 'Moulin de Fexhe';",
        "db_id": "architect"
    },
    {
        "id": 127,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge', 'Moulin de Pousset'], 'relations': ['structure_to_maintenance_cost (Golden Gate Bridge → $35 million construction cost, 2% annual growth)', 'structure_to_maintenance_cost (Moulin de Pousset → $65,000 construction cost, 5% annual growth)'], 'intent': 'calculate_cumulative_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [35000000, 65000, 2, 5, 50], 'units': {'cost': 'USD', 'growth_rate': 'percent (% per annum)', 'time': 'years'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}], 'architect.mill': [{'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}]}}\nA mathematical logic question is as follows:\nGiven that the Golden Gate Bridge had a construction cost of $35 million and an annual maintenance cost growth rate of 2%; the Moulin de Pousset had a construction cost of $65,000 and an annual maintenance cost growth rate of 5%. Please calculate the total cumulative maintenance cost for both after 50 years.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_Cost * (POW(1 + 0.02, 50) - 1) / 0.02 AS Total_Maintenance_Cost_Golden_Gate, (SELECT Maintenance_Cost * (POW(1 + 0.05, 50) - 1) / 0.05 FROM mill WHERE Name = 'Moulin de Pousset') AS Total_Maintenance_Cost_Moulin FROM bridge WHERE Name = 'Golden Gate Bridge';",
        "db_id": "architect"
    },
    {
        "id": 128,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Sydney Harbour Bridge', \"Moulin d'Amsterdam\", 'steel', 'wooden', '150 years', '80 years'], 'relations': ['Sydney_Harbour_Bridge.Material → steel', \"Moulin_d'Amsterdam.Material → wooden\", 'Sydney_Harbour_Bridge.Maintenance_Cost → $800,000', \"Moulin_d'Amsterdam.Maintenance_Cost → $2,050\", 'Material_to_Lifespan (steel → 150 years, wooden → 80 years)', 'Maintenance_Cost_Comparison (steel vs wooden)'], 'intent': 'analyze_maintenance_cost_discrepancy_by_material', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [800000, 2050, 150, 80], 'units': {'currency': 'USD', 'lifespan': 'years'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的名称', 'examples': ['Golden Gate Bridge', 'Brooklyn Bridge', 'Millau Viaduct', 'Tower Bridge', 'Akashi Kaikyō Bridge']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}, {'column': 'Load_Capacity', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的最大承载重量（千克）', 'examples': ['4000000.0', '2000000.0', '5000000.0', '1000000.0', '10000000.0']}, {'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的高度（米）', 'examples': ['227.0', '84.0', '343.0', '65.0', '282.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的名称', 'examples': ['Le Vieux Molen', 'Moulin Bertrand', 'Moulin de Fexhe', 'Moulin de Momalle', 'Moulin du Château']}, {'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的主要建造材料（例如：木材、石头）', 'examples': ['wood', 'stone']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}, {'column': 'Height_Meters', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的高度（米）', 'examples': ['15.0', '20.0', '18.0', '22.0', '17.0']}, {'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Power_Output', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的功率输出（千瓦），用于计算能量效率', 'examples': ['5.0', '7.0', '6.0', '8.0', '5.5']}]}}\nA common sense reasoning question is as follows:\nSydney Harbour Bridge (steel, built in 1932) has an annual maintenance cost of $800,000, while Moulin d'Amsterdam (wooden, built in 1805) costs $2,050 to maintain. Steel bridges typically have a lifespan of 150 years compared to wooden structures which last only 80 years, so why is the maintenance cost higher for steel bridges?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Construction_Year, Material, Maintenance_Cost, CASE WHEN Material = 'Steel' THEN 'High maintenance costs may be due to anti-corrosion treatment, load monitoring, and higher structural complexity' WHEN Material = 'Wood' THEN 'Low maintenance costs may be due to lower per-maintenance costs but higher maintenance frequency' END AS Maintenance_Cost_Analysis FROM bridge WHERE Name = 'Sydney Harbour Bridge' UNION ALL SELECT Name, Built_Year, Material, Maintenance_Cost, CASE WHEN Material = 'Wood' THEN 'Low maintenance costs may be due to lower per-maintenance costs but higher maintenance frequency' END AS Maintenance_Cost_Analysis FROM mill WHERE Name = 'Moulin d''Amsterdam';",
        "db_id": "architect"
    },
    {
        "id": 129,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\n    \"Millau Viaduct (span 1e9 meters)\", \n    \"vibration frequency 1e6 Hz\", \n    \"solar wind speed 1e7 meters/second\", \n    \"Moulin de Bruges (blade length 1e8 meters)\", \n    \"rotation speed 1e12 revolutions per minute\", \n    \"speed of light (3e8 meters/second)\"\n  ],\n  \"relations\": [\n    \"structure_span_to_wavelength (span_length → wavelength)\",\n    \"solar_wind_speed_to_vibration_wavelength (solar_wind_speed → wavelength)\",\n    \"blade_length_to_rotational_velocity (blade_length → tip_speed)\"\n  ],\n  \"intent\": \"calculate_quantized_vibration_modes_and_relativistic_correction_factor\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [\n    1e9,  // Bridge span (meters)\n    1e6,  // Vibration frequency (Hz)\n    1e7,  // Solar wind speed (m/s)\n    1e8,  // Blade length (meters)\n    1e12, // Rotation speed (RPM)\n    3e8   // Speed of light (m/s)\n  ],\n  \"units\": {\n    \"length\": \"meters (m)\",\n    \"frequency\": \"Hertz (Hz)\",\n    \"rotational_speed\": \"revolutions per minute (RPM)\",\n    \"velocity\": \"meters per second (m/s)\",\n    \"relativistic_factor\": \"dimensionless (gamma)\"\n  },\n  \"required_tables\": [\n    \"bridge\",\n    \"mill\"\n  ],\n  \"required_fields\": [\n    // For vibration mode calculation\n    \"bridge.Span_Length\", \n    \"bridge.Vibration_Frequency\",\n    \n    // For blade tip speed calculation\n    \"mill.Blade_Length\",\n    \"mill.Rotation_Speed\"\n  ]\n}\nA hypothetical reasoning question is as follows:\nAssuming the span of Millau Viaduct increases to 1e9 meters (approximately 2.6 times the Earth-Moon distance), with a vibration frequency of 1e6 Hz; and the blade length of Moulin de Bruges is 1e8 meters, rotating at 1e12 revolutions per minute. Please calculate: ① The number of quantized vibration modes of the bridge under a solar wind speed of 1e7 meters/second; ② Whether the tip speed of the blade exceeds the speed of light and the relativistic correction factor.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1e9 * 1e6) / (6.62607015e-34 * 1e34) AS Quantum_Vibration_Modes, CASE WHEN 2 * 3.14159 * 1e8 * (1e12 / 60) >= 299792458 THEN '超光速，无法计算修正系数' ELSE '未超光速，需相对论修正' END AS Relativity_Check, CASE WHEN 2 * 3.14159 * 1e8 * (1e12 / 60) < 299792458 THEN 1 / SQRT(1 - POW((2 * 3.14159 * 1e8 * (1e12 / 60)) / 299792458, 2)) ELSE 'N/A' END AS Relativity_Correction_Factor;",
        "db_id": "architect"
    },
    {
        "id": 130,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Tower Bridge', 'Moulin de Bruges', 'vortex shedding frequency', 'infrasound wavelength'], 'relations': ['Tower_Bridge_to_span_length (244 meters)', 'Tower_Bridge_to_vibration_frequency (0.25 Hz)', 'Mill_to_blade_length (14 meters)', 'Mill_to_rotational_speed (20 RPM)'], 'intent': 'calculate_vortex_shedding_frequency_and_infrasound_wavelength', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [244, 0.25, 14, 20], 'units': {'length': 'meters', 'frequency': 'Hz (Hertz)', 'rotational_speed': 'RPM (revolutions per minute)', 'conversion': 'RPM to Hz (divide by 60), speed_of_sound = 343 m/s'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}, {'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}]}}\nA physical knowledge question is as follows:\nGiven that the Tower Bridge is a bascule arch with a span of 244 meters and a vibration frequency of 0.25 Hz; the Moulin de Bruges has blade lengths of 14 meters and a rotational speed of 20 revolutions per minute. Please calculate the vortex shedding frequency of the Tower Bridge at the critical wind speed for resonance, as well as the wavelength of the infrasound generated by the rotation of the mill's blades.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (0.2 * Vibration_Frequency) / Span_Length AS Vortex_Shedding_Frequency, 343 / (Rotation_Speed / 60) AS Infrasound_Wavelength FROM bridge, mill WHERE bridge.Name = 'Tower Bridge' AND mill.Name = 'Moulin de Bruges';",
        "db_id": "architect"
    },
    {
        "id": 131,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Akashi Kaikyō Bridge', \"Moulin d'Amsterdam\", 'construction cost $5 billion', 'construction cost $52,000', 'annual maintenance increase 5%', 'annual maintenance increase 8%', '25th year'], 'relations': ['bridge_to_cost (Akashi Kaikyō Bridge → $5 billion)', \"mill_to_cost (Moulin d'Amsterdam → $52,000)\", 'maintenance_growth_rate (bridge → 5%/year)', 'maintenance_growth_rate (mill → 8%/year)', 'yearly_compound_growth (25th year = 24 years of compounding)'], 'intent': 'calculate_maintenance_cost_percentage_to_construction_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000000, 52000, 5, 8, 25], 'units': {'cost': 'USD (dollars)', 'maintenance_rate': '% (percentage)', 'time': 'years', 'calculation': 'maintenance_cost_year_25 = initial_maintenance_cost × (1 + rate)^24; percentage = (maintenance_cost_year_25 / construction_cost) × 100'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的建造成本（美元）', 'examples': ['35000000.0', '15000000.0', '400000000.0', '1200000.0', '5000000000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}], 'architect.mill': [{'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的建造成本（美元）', 'examples': ['50000.0', '70000.0', '60000.0', '80000.0', '55000.0']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}]}}\nA mathematical logic question is as follows:\nIt is known that the Akashi Kaikyō Bridge has a construction cost of $5 billion, with annual maintenance costs increasing by 5%; the Moulin d'Amsterdam has a construction cost of $52,000, with annual maintenance costs increasing by 8%. Please calculate the percentage of maintenance costs to the original construction cost for both in the 25th year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Maintenance_Cost * POW(1 + 0.05, 25)) / Cost_Usd * 100 AS Maintenance_Cost_Percentage_Akashi, (SELECT Maintenance_Cost * POW(1 + 0.08, 25) / Cost_Usd * 100 FROM mill WHERE Name = 'Moulin d''Amsterdam') AS Maintenance_Cost_Percentage_Amsterdam FROM bridge WHERE Name = 'Akashi Kaikyō Bridge';",
        "db_id": "architect"
    },
    {
        "id": 132,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Ponte Vecchio (stone, built 1345)', 'Forth Bridge (steel, built 1890)'], 'relations': ['material_comparision (stone_vs_steel)', 'maintenance_cost_difference (ΔCost = $680,000)', 'tensile_strength_property (stone_low_vs_steel_high)'], 'intent': 'explain_material_maintenance_cost_discrepancy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [20000, 700000, 1345, 1890], 'units': {'currency': 'USD', 'time': 'construction_year', 'conversion': 'ΔCost = $700,000 - $20,000 = $680,000'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}, {'column': 'Construction_Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '桥梁的建造年份', 'examples': ['1937', '1883', '2004', '1894', '1998']}, {'column': 'Load_Capacity', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的最大承载重量（千克）', 'examples': ['4000000.0', '2000000.0', '5000000.0', '1000000.0', '10000000.0']}]}}\nA common sense reasoning question is as follows:\nPonte Vecchio (stone, built in 1345) and Forth Bridge (steel, built in 1890) have annual maintenance costs of $20,000 and $700,000, respectively. Please explain why the maintenance cost of stone is significantly lower than that of steel, despite stone having lower tensile strength.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, Construction_Year, Material, Maintenance_Cost, CASE WHEN Material = 'Stone' THEN '石材维护成本低，因其失效模式渐进且无需复杂防腐蚀处理' WHEN Material = 'Steel' THEN '钢材维护成本高，因需持续监测疲劳裂纹和腐蚀防护' END AS Maintenance_Cost_Analysis FROM bridge WHERE Name = 'Ponte Vecchio' UNION ALL SELECT Name, Construction_Year, Material, Maintenance_Cost, CASE WHEN Material = 'Steel' THEN '钢材维护成本高，因需持续监测疲劳裂纹和腐蚀防护' END AS Maintenance_Cost_Analysis FROM bridge WHERE Name = 'Forth Bridge';",
        "db_id": "architect"
    },
    {
        "id": 133,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge (degenerate matter density 1e17 kg/m³, span 1e25 meters)', 'Moulin de Bruges (blade rotation speed 1e40 RPM)'], 'relations': ['bridge_material_to_density (degenerate_matter → 1e17 kg/m³)', 'bridge_span_length (1e25 meters)', 'mill_blade_rotation_speed (1e40 RPM)'], 'intent': 'calculate_tidal_resonance_frequency_and_spacetime_curvature_change_rate', 'reasoning_type': 'ideal_hypothesis_reasoning', 'numerical_values': [1e+17, 1e+25, 1e+40], 'units': {'density': 'kg/m³ (degenerate matter)', 'length': 'meters (span)', 'rotation_speed': 'revolutions per minute (RPM)', 'frequency': 'Hz (derived from tidal resonance)', 'spacetime_curvature_rate': 'm⁻¹s⁻¹ (derived from general relativity)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Material', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的主要建造材料（例如：混凝土、钢、木材）', 'examples': ['steel', 'stone', 'concrete']}, {'column': 'Span_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的跨度长度（米），用于计算桥梁的力学性能', 'examples': ['1280.0', '486.0', '342.0', '61.0', '1991.0']}, {'column': 'Vibration_Frequency', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的振动频率（赫兹），用于分析桥梁的动力学特性', 'examples': ['0.2', '0.3', '0.15', '0.25', '0.1']}], 'architect.mill': [{'column': 'Rotation_Speed', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的旋转速度（每分钟转数）', 'examples': ['30.0', '25.0', '28.0', '22.0', '26.0']}, {'column': 'Blade_Length', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊叶片的长度（米），用于计算风能利用率', 'examples': ['10.0', '12.0', '11.0', '13.0', '10.5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the material of the Golden Gate Bridge changes to degenerate matter (density 1e17 kg/m³), with a span of 1e25 meters; and the blades of Moulin de Bruges rotate at a speed of 1e40 revolutions per minute. Please calculate:  \n① The tidal resonance frequency of the bridge in the gravitational field of the Milky Way's spiral arm;  \n② The rate of spacetime curvature change induced by the blade rotation.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (6.67430e-11 * 1e41 * 1e17) / POW(1e25, 3) AS Tidal_Resonance_Frequency, POW(1e40 * 14 / 60, 2) / POW(299792458, 4) AS Spacetime_Curvature_Rate;",
        "db_id": "architect"
    },
    {
        "id": 134,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Golden Gate Bridge', \"Moulin d'Amsterdam\", 'maintenance costs', 'construction costs', '2% growth rate', '5% growth rate', '10 times multiplier', '50th year'], 'relations': ['structure_to_maintenance_cost (Golden_Gate_Bridge → bridge.Maintenance_Cost)', \"structure_to_construction_cost (Moulin_d'Amsterdam → mill.Cost_Usd)\", 'exponential_growth_rate (2% → bridge.Maintenance_Cost)', 'exponential_growth_rate (5% → mill.Maintenance_Cost)'], 'intent': 'calculate_exponential_growth_periods_and_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 5, 10, 50], 'units': {'growth_rate': '% (annual percentage rate)', 'time': 'years', 'cost_multiplier': 'dimensionless (x10)', 'currency': 'USD (from Cost_Usd and Maintenance_Cost fields)'}, 'foreign_keys': [{'fk_table': 'bridge', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}, {'fk_table': 'mill', 'fk_column': 'Architect_ID', 'ref_table': 'architect', 'ref_column': 'Architect_ID'}], 'primary_keys': [{'pk_table': 'bridge', 'pk_column': 'Bridge_ID'}, {'pk_table': 'mill', 'pk_column': 'Mill_ID'}], 'tableinfo': {'architect.bridge': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '桥梁的名称', 'examples': ['Golden Gate Bridge', 'Brooklyn Bridge', 'Millau Viaduct', 'Tower Bridge', 'Akashi Kaikyō Bridge']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的年度维护成本（美元）', 'examples': ['1000000.0', '500000.0', '2000000.0', '300000.0', '5000000.0']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '桥梁的建造成本（美元）', 'examples': ['35000000.0', '15000000.0', '400000000.0', '1200000.0', '5000000000.0']}], 'architect.mill': [{'column': 'Name', 'type': 'VARCHAR(100) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '磨坊的名称', 'examples': ['Le Vieux Molen', 'Moulin Bertrand', 'Moulin de Fexhe', 'Moulin de Momalle', 'Moulin du Château']}, {'column': 'Maintenance_Cost', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的年度维护成本（美元）', 'examples': ['2000.0', '2500.0', '2200.0', '3000.0', '2100.0']}, {'column': 'Cost_Usd', 'type': 'FLOAT', 'primary_key': False, 'comment': '磨坊的建造成本（美元）', 'examples': ['50000.0', '70000.0', '60000.0', '80000.0', '55000.0']}]}}\nA mathematical logic question is as follows:\nTranslation task:  \n\nGiven the Golden Gate Bridge has an annual maintenance cost growth rate of 2%, and the Moulin d'Amsterdam has an annual maintenance cost growth rate of 5%. Please calculate:  \n1. The number of years required for the maintenance costs of both structures to reach 10 times their construction costs.  \n2. The ratio of the maintenance cost to the initial maintenance cost at the 50th year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (LN(10 * b.Cost_Usd / b.Maintenance_Cost) / LN(1.02)) AS Years_To_10x_GoldenGate, POW(1.02, 50) AS Multiplier_50y_GoldenGate, (LN(10 * m.Cost_Usd / m.Maintenance_Cost) / LN(1.05)) AS Years_To_10x_Amsterdam, POW(1.05, 50) AS Multiplier_50y_Amsterdam FROM bridge b, mill m WHERE b.Name = 'Golden Gate Bridge' AND m.Name = 'Moulin d''Amsterdam';",
        "db_id": "architect"
    },
    {
        "id": 135,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['carbon fiber frame material', 'road bike type', 'maximum speed'], 'relations': ['bicycle_to_performance (Bicycle.BicycleID → BicyclePerformance.BicycleID)', 'material_to_bike (Bicycle.FrameMaterial = carbon fiber)', 'type_to_bike (Bicycle.Type = road bike)'], 'intent': 'calculate_air_resistance_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['BicyclePerformance.TopSpeed'], 'units': {'speed': 'm/s (converted from database unit)', 'drag_coefficient': 'CdA (unitless × m², implied by AerodynamicDrag field)', 'power': 'W (watts)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}, {'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}]}}\nA physical knowledge question is as follows:\nCalculate the air resistance power of a carbon fiber road bike when traveling at maximum speed on a flat road surface.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * p.AerodynamicDrag * 1.225 * 0.5 * POWER((p.TopSpeed * 1000 / 3600), 3) AS AirResistancePower FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID WHERE b.FrameMaterial = '碳纤维' AND b.Type = '公路车';",
        "db_id": "bike"
    },
    {
        "id": 136,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'rider_power_output', 'motor_efficiency', 'riding_style'], 'relations': ['bicycle_to_rider_power (BicycleID → RiderPowerOutput)', 'bicycle_to_motor_efficiency (BicycleID → MotorEfficiency)', 'riding_style_to_power (RidingStyle → RiderPowerOutput)'], 'intent': 'calculate_total_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'power_output': 'watts (W)', 'motor_efficiency': '% (efficiency ratio)', 'energy_consumption': 'watt-hours (Wh) or kilowatt-hours (kWh)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}], 'bike.BicycleThermodynamics': [{'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of a bicycle under different riding styles, including rider power output and motor efficiency (if applicable).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT r.RidingStyle, (r.RiderPowerOutput + (t.MotorEfficiency / 100 * t.BatteryCapacity)) * 2 AS TotalEnergyConsumption FROM BicycleRider r JOIN BicycleThermodynamics t ON r.BicycleID = t.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 137,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"bicycle's maximum load capacity\", \"rider's weight\"], 'relations': ['load_vs_weight_comparison (RiderWeight → MaxLoad)'], 'intent': 'determine_necessity_of_tire_pressure_adjustment', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': ['Bicycle.MaxLoad', 'BicycleRider.RiderWeight'], 'units': {'weight': 'kg (kilograms)', 'load_capacity': 'kg (kilograms)', 'tire_pressure': 'psi (pounds per square inch) or kPa (kilopascals)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA common sense reasoning question is as follows:\nBased on the bicycle's maximum load capacity and the rider's weight, determine whether tire pressure adjustments are needed to ensure safe riding.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, CASE WHEN (b.Weight + r.RiderWeight + b.MaxLoad) / (0.01 * 2) > b.TirePressure THEN '需要调整' ELSE '无需调整' END AS TirePressureAdjustment FROM Bicycle b JOIN BicycleRider r ON b.BicycleID = r.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 138,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'load', 'speed'], 'relations': ['bicycle_to_max_load (Bicycle.MaxLoad)', 'bicycle_to_top_speed (Bicycle.TopSpeed)', 'braking_distance_to_bicycle (BicyclePerformance.BrakingDistance)'], 'intent': 'calculate_braking_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 5], 'units': {'load': 'kg (or specified unit in Bicycle.MaxLoad)', 'speed': 'km/h (or specified unit in Bicycle.TopSpeed)', 'braking_distance': 'meters (or specified unit in BicyclePerformance.BrakingDistance)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}, {'column': 'TopSpeed'}], 'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the braking distance of a bicycle under extreme conditions (such as when the load is 10 times the maximum load and the speed is 5 times the maximum speed).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, POWER((p.TopSpeed * 5 * 1000 / 3600), 2) / (2 * 0.7 * 9.81) AS BrakingDistance FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 139,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mountain bike', '10% gradient hill', '75 kg rider', '15 kg bicycle'], 'relations': ['rider_to_bike (75 kg rider + 15 kg bicycle → total mass 90 kg)', 'gradient_to_angle (10% gradient → incline angle)', 'mass_to_power (total mass + gradient → power requirement)'], 'intent': 'calculate_power_requirement_for_climbing', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 75, 15], 'units': {'gradient': '% (percentage slope)', 'mass': 'kg (rider + bicycle)', 'power': 'watts (calculated via gravitational force and efficiency)', 'conversion': '10% gradient ≈ sin⁻¹(0.10), g = 9.81 m/s²'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicyclePerformance': [{'column': 'ClimbingEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '爬坡效率 (%)', 'examples': ['90.0', '85.0', '88.0', '92.0', '84.0']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the power requirement for a mountain bike climbing a hill with a 10% gradient, given a rider weight of 75 kg and a bicycle weight of 15 kg.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, (75 + 15) * 9.81 * (p.TopSpeed * 1000 / 3600) * 0.10 AS ClimbingPower FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID WHERE b.Type = '山地车';",
        "db_id": "bike"
    },
    {
        "id": 140,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['carbon fiber road bike', 'drag coefficient 0.9', 'projected area 0.5 m²', 'maximum speed'], 'relations': ['bike_to_drag_coefficient (carbon fiber road bike → drag coefficient 0.9)', 'bike_to_projected_area (carbon fiber road bike → projected area 0.5 m²)', 'air_resistance_formula (drag coefficient × projected area × velocity³)'], 'intent': 'calculate_air_resistance_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.9, 0.5], 'units': {'drag_coefficient': 'unitless', 'projected_area': 'm² (square meters)', 'velocity': \"m/s (meters per second, derived from bicycle's maximum speed)\", 'air_density': 'kg/m³ (standard assumption: 1.225 kg/m³)', 'power': 'W (watts, calculated via formula)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the air resistance power of a carbon fiber road bike traveling at its maximum speed on a flat surface, given the drag coefficient is 0.9 and the projected area is 0.5 square meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, 0.5 * 0.9 * 1.225 * 0.5 * POWER((p.TopSpeed * 1000 / 3600), 3) AS AirResistancePower FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID WHERE b.FrameMaterial = '碳纤维' AND b.Type = '公路车';",
        "db_id": "bike"
    },
    {
        "id": 141,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 500 Wh', 'motor efficiency 85%', 'rider power output 100 W', 'ambient temperatures'], 'relations': ['battery_to_motor_efficiency (500 Wh → 85%)', 'power_consumption (100 W output + motor losses)', 'thermal_impact (ambient temperature → battery temperature correlation)'], 'intent': 'calculate_battery_life_under_thermal_variations', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 85, 100], 'units': {'energy': 'Wh (watt-hours)', 'power': 'W (watts)', 'efficiency': '% (percentage)', 'temperature': '°C (Celsius) implied by context'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCalculate the battery life of an electric bicycle under different ambient temperatures, given a battery capacity of 500 watt-hours, motor efficiency of 85%, and rider power output of 100 watts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t.AmbientTemperature, 500 / (100 + (250 / 0.85)) AS BatteryLife FROM BicycleThermodynamics t WHERE t.BatteryCapacity = 500;",
        "db_id": "bike"
    },
    {
        "id": 142,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle weight 12 kg', \"rider's weight 80 kg\", 'maximum load capacity 30 kg', 'tire contact area 0.01 m²'], 'relations': ['bicycle_weight_to_rider_weight (combined total weight = 92 kg)', 'total_weight_to_max_load (92 kg > 30 kg overload)', 'tire_pressure_calculation (pressure = (rider_weight + bicycle_weight) / contact_area)'], 'intent': 'determine_tire_pressure_adjustment_necessity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12, 80, 30, 0.01], 'units': {'weight': 'kg (kilograms)', 'contact_area': 'm² (square meters)', 'pressure': 'kg/m² (implied physical unit, requiring conversion to standard units like Pascals for practical use)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA common sense reasoning question is as follows:\nBased on the maximum load capacity of the bicycle and the rider's weight, determine whether tire pressure adjustment is needed to ensure safe riding. The known conditions are: bicycle weight is 12 kg, rider's weight is 80 kg, load capacity is 30 kg, and tire contact area is 0.01 square meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, CASE WHEN (12 + 80 + 30) / (0.01 * 2) > b.TirePressure THEN '需要调整' ELSE '无需调整' END AS TirePressureAdjustment FROM Bicycle b JOIN BicycleRider r ON b.BicycleID = r.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 143,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'extreme load 20×MaxLoad', 'extreme speed 10×TopSpeed', 'friction coefficient 0.7', 'gravitational acceleration 9.81 m/s²'], 'relations': ['speed_multiplier (10×TopSpeed)', 'load_multiplier (20×MaxLoad)', 'physics_formula (braking_distance = v²/(2×μ×g))'], 'intent': 'calculate_braking_distance_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [20, 10, 0.7, 9.81], 'units': {'speed': 'm/s (implied from TopSpeed field)', 'force': 'N (Newtons, implied by load and gravitational acceleration)', 'distance': 'meters (m)', 'gravitational_acceleration': 'm/s²', 'friction_coefficient': 'unitless'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}, {'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the braking distance of a bicycle under extreme conditions (such as a load reaching 20 times the maximum load and speed reaching 10 times the top speed), given a friction coefficient of 0.7 and gravitational acceleration of 9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, POWER((p.TopSpeed * 10 * 1000 / 3600), 2) / (2 * 0.7 * 9.81) AS BrakingDistance FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 144,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['carbon fiber road bicycle', 'air resistance coefficient 0.9', 'projected area 0.5 square meters', 'maximum speed'], 'relations': ['bicycle_to_top_speed (TopSpeed from BicyclePerformance)', 'coefficient_to_power (C_d = 0.9 → drag calculation)', 'area_to_power (A = 0.5 m² → drag calculation)'], 'intent': 'calculate_air_resistance_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.9, 0.5], 'units': {'air_resistance_coefficient': 'unitless', 'projected_area': 'square meters (m²)', 'velocity': 'meters per second (m/s)', 'power': 'watts (W)', 'air_density': '1.225 kg/m³ (standard value, not from database)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the air resistance power of a carbon fiber road bicycle traveling at maximum speed on a flat surface, given that the air resistance coefficient is 0.9 and the projected area is 0.5 square meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, 0.5 * 0.9 * 1.225 * 0.5 * POWER((p.TopSpeed * 1000 / 3600), 3) AS AirResistancePower FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID WHERE b.FrameMaterial = '碳纤维' AND b.Type = '公路车';",
        "db_id": "bike"
    },
    {
        "id": 145,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'battery capacity 500 watt-hours', 'motor efficiency 85%', \"rider's power output 100 watts\", 'ambient temperature'], 'relations': ['bicycle_to_thermodynamics (BicycleID → BatteryCapacity, MotorEfficiency)', 'power_consumption (MotorEfficiency × RiderPowerOutput)', 'temperature_impact (AmbientTemperature → BatteryTemperature)'], 'intent': 'calculate_battery_range_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500, 85, 100], 'units': {'energy': 'watt-hours (Wh)', 'power': 'watts (W)', 'efficiency': 'percentage (%)', 'time': 'hours (h) (calculated by Energy/Power)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCalculate the battery range time of an electric bicycle under different ambient temperatures, given the battery capacity is 500 watt-hours, the motor efficiency is 85%, and the rider's power output is 100 watts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT t.AmbientTemperature, 500 / (100 + (250 / 0.85)) AS BatteryLife FROM BicycleThermodynamics t WHERE t.BatteryCapacity = 500;",
        "db_id": "bike"
    },
    {
        "id": 146,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle_weight_12kg', 'rider_weight_80kg', 'load_30kg', 'tire_contact_area_0_01m2', 'max_load_capacity'], 'relations': ['total_weight(bike_weight + rider_weight + load)', 'pressure_force_relationship(total_weight → force → pressure)', 'max_load_vs_actual_load(max_load_capacity >= total_weight)'], 'intent': 'determine_tire_pressure_adjustment_necessity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12, 80, 30, 0.01], 'units': {'weight': 'kg (converted to Newtons via 9.81 m/s²)', 'pressure': 'Pa (Pascal) = N/m²', 'contact_area': 'm²', 'conversion': '1 kg = 9.81 N'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA common sense reasoning question is as follows:\nBased on the bike's maximum load capacity and the rider's weight, determine whether the tire pressure needs to be adjusted to ensure safe riding. Given that the bike weighs 12 kg, the rider weighs 80 kg, the load is 30 kg, and the tire contact area is 0.01 square meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, CASE WHEN (12 + 80 + 30) / (0.01 * 2) > b.TirePressure THEN '需要调整' ELSE '无需调整' END AS TirePressureAdjustment FROM Bicycle b JOIN BicycleRider r ON b.BicycleID = r.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 147,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'load 20 times maximum capacity', 'speed 10 times maximum speed', 'friction coefficient 0.7', 'gravity acceleration 9.81 m/s²'], 'relations': ['bicycle_to_max_load (Bicycle.MaxLoad)', 'bicycle_to_top_speed (BicyclePerformance.TopSpeed)', 'braking_distance_formula (v²/(2*μ*g))'], 'intent': 'calculate_braking_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [20, 10, 0.7, 9.81], 'units': {'velocity': 'm/s (converted from BicyclePerformance.TopSpeed if necessary)', 'friction_coefficient': 'unitless', 'gravity': 'm/s²', 'load': 'kg (from Bicycle.Weight and MaxLoad)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculating the braking distance of a bicycle under extreme conditions (for example, carrying a load 20 times its maximum capacity and reaching a speed 10 times its maximum speed), given a friction coefficient of 0.7 and gravity acceleration of 9.81 m/s.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, POWER((p.TopSpeed * 10 * 1000 / 3600), 2) / (2 * 0.7 * 9.81) AS BrakingDistance FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 148,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'maximum speed', 'maximum load', 'total mass'], 'relations': ['bicycle_to_performance (BicycleID → BicyclePerformance)', 'bicycle_to_weight (BicycleID → Bicycle.Weight)', 'bicycle_to_maxload (BicycleID → Bicycle.MaxLoad)', 'mass_calculation (total_mass = Bicycle.Weight + Bicycle.MaxLoad)', 'kinetic_energy_formula (KE = 0.5 × mass × velocity²)'], 'intent': 'calculate_kinetic_energy_of_electric_bicycle', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['Bicycle.MaxLoad', 'Bicycle.Weight', 'BicyclePerformance.TopSpeed'], 'units': {'velocity': 'm/s (calculated from BicyclePerformance.TopSpeed converted if necessary)', 'mass': 'kg (Bicycle.Weight + Bicycle.MaxLoad)', 'kinetic_energy': 'joules (J) using SI units', 'conversion': 'TopSpeed from km/h to m/s (multiply by 0.27778) if applicable'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of an electric bicycle when traveling at its maximum speed under maximum load.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, 0.5 * (b.Weight + b.MaxLoad) * POWER((p.TopSpeed * 1000 / 3600), 2) AS KineticEnergy FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID WHERE b.Type = '电动车';",
        "db_id": "bike"
    },
    {
        "id": 149,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"bicycle's power transmission efficiency\", \"rider's power output\"], 'relations': ['product_of_efficiency_and_power (actual_power_delivered_to_wheels)'], 'intent': 'calculate_actual_power_delivered_to_wheels', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power_transmission_efficiency': 'dimensionless (decimal/fraction) or % (percentage)', 'rider_power_output': 'watts (W)', 'actual_power_delivered': 'watts (W)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCalculate the product of a bicycle's power transmission efficiency and the rider's power output to determine the actual power delivered to the wheels.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 AS ActualPower FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 150,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tire pressure', 'tire width'], 'relations': ['BicycleID linking Bicycle.TirePressure and BicycleComponents.TireWidth', 'contact_area = f(tire_pressure, tire_width)'], 'intent': 'calculate_contact_area_between_bicycle_tire_and_ground', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0, 0], 'units': {'tire_pressure': 'psi or kPa (not explicitly stated in schema)', 'tire_width': 'mm or inches (not explicitly stated in schema)', 'contact_area': 'in² or cm² (implied by calculation)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA common sense reasoning question is as follows:\nCalculate the contact area between the bicycle tire and the ground based on the tire pressure and tire width.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) AS ContactArea FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 151,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle with wheel diameter 100 inches', 'rider with weight 500 kg'], 'relations': ['wheel_size_to_bicycle (100 inches → Bicycle.WheelSize)', 'rider_weight_to_bicycle (500 kg → BicycleRider.RiderWeight)', 'bicycle_to_dynamics (Bicycle.BicycleID → BicycleDynamics.BicycleID)', 'bicycle_to_performance (Bicycle.BicycleID → BicyclePerformance.BicycleID)'], 'intent': 'calculate_center_of_gravity_and_stability', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 500], 'units': {'wheel_diameter': 'inches', 'rider_weight': 'kg (kilograms)', 'center_of_gravity_height': 'mm (implied by database schema)', 'stability': 'unitless (CorneringStability metric)'}, 'foreign_keys': [{'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'WheelSize', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮径 (英寸)', 'examples': ['28.0', '29.0', '26.0', '20.5', '27.5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicycleDynamics': [{'column': 'CenterOfGravityHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重心高度 (厘米)', 'examples': ['60.0', '65.0', '62.0', '58.0', '67.0']}], 'bike.BicyclePerformance': [{'column': 'CorneringStability', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '转弯稳定性 (评分)', 'examples': ['9.5', '8.5', '9.0', '9.7', '8.2']}]}}\nA hypothetical reasoning question is as follows:\nIf the wheel diameter of a bicycle increases to 100 inches, and the rider's weight reaches 500 kilograms, calculate the center of gravity height and stability of the bicycle under these conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) AS NewCenterOfGravityHeight FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE Bicycle.WheelSize = 100;",
        "db_id": "bike"
    },
    {
        "id": 152,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'maximum speed', 'maximum load capacity', 'kinetic energy'], 'relations': ['bicycle_to_weight (Bicycle.Weight)', 'bicycle_to_max_load (Bicycle.MaxLoad)', 'bicycle_to_top_speed (BicyclePerformance.TopSpeed)', 'kinetic_energy_formula (KE = 0.5 * mass * velocity²)'], 'intent': 'calculate_kinetic_energy_and_rank_bicycles', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['Bicycle.Weight', 'Bicycle.MaxLoad', 'BicyclePerformance.TopSpeed'], 'units': {'mass': 'kg (Bicycle.Weight + Bicycle.MaxLoad)', 'velocity': 'm/s (converted from BicyclePerformance.TopSpeed if needed)', 'kinetic_energy': 'Joules (J)', 'conversion': 'velocity conversion (e.g., km/h → m/s if required)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '制造商', 'examples': ['Giant', 'Trek', 'Specialized', 'Cannondale', 'Santa Cruz']}, {'column': 'Model', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '自行车型号', 'examples': ['TCR Advanced', 'Fuel EX', 'Sirrus X', 'SuperSix EVO', 'Hightower']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each electric bicycle when traveling at maximum speed with maximum load capacity, and list the top 5 bicycles with the highest kinetic energy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) AS KineticEnergy FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE Bicycle.Type = '电动车' ORDER BY KineticEnergy DESC LIMIT 5;",
        "db_id": "bike"
    },
    {
        "id": 153,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'power transmission efficiency', 'rider power output', 'actual power delivered to wheels'], 'relations': ['bicycle_to_performance (BicycleID → PowerTransferEfficiency)', 'bicycle_to_rider (BicycleID → RiderPowerOutput)', 'power_product (PowerTransferEfficiency × RiderPowerOutput)'], 'intent': 'calculate_actual_power_delivered_to_wheels_and_rank_bicycles', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power_transmission_efficiency': 'dimensionless ratio or percentage (implied by column name)', 'rider_power_output': 'watts or similar (implied by column name)', 'actual_power_delivered': 'watts (product of the two values)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '制造商', 'examples': ['Giant', 'Trek', 'Specialized', 'Cannondale', 'Santa Cruz']}, {'column': 'Model', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '自行车型号', 'examples': ['TCR Advanced', 'Fuel EX', 'Sirrus X', 'SuperSix EVO', 'Hightower']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCompute the product of power transmission efficiency and rider power output for each bicycle to determine the actual power delivered to the wheels, and list the top 10 bicycles with the highest power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 AS ActualPower FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID ORDER BY ActualPower DESC LIMIT 10;",
        "db_id": "bike"
    },
    {
        "id": 154,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Bicycle', 'TirePressure', 'TireWidth', 'ContactArea'], 'relations': ['BicycleID_to_TirePressure (Bicycle.BicycleID → Bicycle.TirePressure)', 'BicycleID_to_TireWidth (Bicycle.BicycleID → BicycleComponents.TireWidth)', 'TirePressure_TireWidth_to_ContactArea (TirePressure × TireWidth → ContactArea)'], 'intent': 'calculate_and_rank_contact_area', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'tire_pressure': 'psi or kPa (assumed from Bicycle.TirePressure column)', 'tire_width': 'mm or inches (assumed from BicycleComponents.TireWidth column)', 'contact_area': 'mm²/cm² (derived from TireWidth × effective contact length, inferred via pressure-based load distribution)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA common sense reasoning question is as follows:\nBased on the tire pressure and tire width of each bicycle, calculate the contact area between the tire and the ground, and list the top 5 bicycles with the smallest contact area.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) AS ContactArea FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID ORDER BY ContactArea ASC LIMIT 5;",
        "db_id": "bike"
    },
    {
        "id": 155,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'wheel diameter 100 inches', 'rider weight 500 kilograms', 'center of gravity height'], 'relations': ['bicycle_to_dynamics (BicycleID → BicycleDynamics)', 'bicycle_to_rider (BicycleID → BicycleRider)', 'parameter_override (WheelSize=100 inches, RiderWeight=500 kg)', 'center_of_gravity_calculation (COG depends on wheel size and rider weight)'], 'intent': 'calculate_and_rank_center_of_gravity_height', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 500], 'units': {'wheel_diameter': 'inches', 'rider_weight': 'kilograms', 'center_of_gravity_height': 'meters (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'WheelSize', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮径 (英寸)', 'examples': ['28.0', '29.0', '26.0', '20.5', '27.5']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicycleDynamics': [{'column': 'CenterOfGravityHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重心高度 (厘米)', 'examples': ['60.0', '65.0', '62.0', '58.0', '67.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the wheel diameter of all bicycles is increased to 100 inches and the rider's weight reaches 500 kilograms, calculate the center of gravity height for each bicycle and list the top 3 bicycles with the highest center of gravity height.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) AS NewCenterOfGravityHeight FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE Bicycle.WheelSize = 100 ORDER BY NewCenterOfGravityHeight DESC LIMIT 3;",
        "db_id": "bike"
    },
    {
        "id": 156,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'mountain bike', 'kinetic energy'], 'relations': ['bicycle_type_filter (electric bicycle/mountain bike)', 'kinetic_energy_formula (KE = ½mv²)', 'mass_calculation (mass = bicycle_weight + max_load)', 'velocity_property (top_speed)'], 'intent': 'calculate_kinetic_energy_and_compare_bicycle_types', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'mass': 'kg (assumed from Weight and MaxLoad columns)', 'velocity': 'm/s (assumed from TopSpeed column, requiring potential unit conversion if stored in km/h or mph)', 'energy': 'joules (J)', 'conversion': '1 km/h = 0.27778 m/s (if needed for unit consistency)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each electric bicycle when traveling at maximum speed under maximum load, and identify the electric bicycles with kinetic energy higher than all mountain bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) AS KineticEnergy FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE Bicycle.Type = '电动车' AND 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) > ALL (SELECT 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE Bicycle.Type = '山地车');",
        "db_id": "bike"
    },
    {
        "id": 157,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"bicycle\", \"rider\", \"drivetrain efficiency\", \"rider's power output\", \"actual power delivered to wheels\", \"hybrid bicycle\", \"road bike\"],\n  \"relations\": [\n    \"bicycle_to_performance (Bicycle.BicycleID → BicyclePerformance.BicycleID)\",\n    \"bicycle_to_rider (Bicycle.BicycleID → BicycleRider.BicycleID)\",\n    \"power_calculation (PowerTransferEfficiency * RiderPowerOutput = ActualPower)\",\n    \"bike_type_comparison (Hybrid vs Road bike performance)\"\n  ],\n  \"intent\": \"calculate_actual_power_and_compare_bike_types\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [\"PowerTransferEfficiency\", \"RiderPowerOutput\"],\n  \"units\": {\n    \"efficiency\": \"% (percentage)\",\n    \"power_output\": \"W (watts)\",\n    \"actual_power\": \"W (watts) (derived from efficiency * power_output)\"\n  },\n  \"required_tables\": [\"Bicycle\", \"BicyclePerformance\", \"BicycleRider\"],\n  \"required_fields\": [\n    \"Bicycle.BicycleID\",\n    \"Bicycle.Type\",\n    \"BicyclePerformance.PowerTransferEfficiency\",\n    \"BicycleRider.RiderPowerOutput\"\n  ]\n}\n```\nA mathematical logic question is as follows:\nCalculate the product of each bicycle's drivetrain efficiency and the rider's power output to determine the actual power delivered to the wheels, and identify hybrid bicycles with actual power higher than that of all road bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 AS ActualPower FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE Bicycle.Type = '混合车' AND BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 > ALL (SELECT BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE Bicycle.Type = '公路车');",
        "db_id": "bike"
    },
    {
        "id": 158,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tire pressure', 'tire width', 'contact area', 'electric bikes', 'BMX bikes'], 'relations': ['tire_pressure_to_contact_area (TirePressure → ContactArea)', 'tire_width_to_contact_area (TireWidth → ContactArea)', 'contact_area_comparison (ElectricBikes.ContactArea < All BMX.ContactArea)'], 'intent': 'calculate_contact_area_and_compare_electric_to_bmx', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'tire_pressure': 'psi or kPa (implicit in database)', 'tire_width': 'mm or inches (implicit in database)', 'contact_area': 'square units (derived from pressure and width)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA common sense reasoning question is as follows:\nBased on the tire pressure and tire width of each bicycle, calculate the contact area between the tire and the ground, and identify electric bikes with a contact area smaller than all BMX bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) AS ContactArea FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '电动车' AND BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) < ALL (SELECT BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = 'BMX');",
        "db_id": "bike"
    },
    {
        "id": 159,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle wheel diameter 100 inches', 'rider weight 500 kg', 'full-suspension bicycles', 'hardtail bicycles', 'center of gravity height'], 'relations': ['wheel_size_to_center_of_gravity (100 inches → CenterOfGravityHeight)', 'rider_weight_to_center_of_gravity (500 kg → CenterOfGravityHeight)', 'suspension_type_comparison (full-suspension vs hardtail)', 'height_comparision (full-suspension_center_of_gravity > hardtail_center_of_gravity)'], 'intent': 'calculate_and_compare_center_of_gravity_heights', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 500], 'units': {'wheel_diameter': 'inches', 'rider_weight': 'kg', 'center_of_gravity_height': 'mm (inferred from BicycleDynamics table)'}, 'foreign_keys': [{'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'WheelSize', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮径 (英寸)', 'examples': ['28.0', '29.0', '26.0', '20.5', '27.5']}, {'column': 'SuspensionType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '避震类型 (None, Front, Full)', 'examples': ['None', 'Full', 'Front', '无避震', '前避震']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicycleDynamics': [{'column': 'CenterOfGravityHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重心高度 (厘米)', 'examples': ['60.0', '65.0', '62.0', '58.0', '67.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the wheel diameter of all bicycles increases to 100 inches, and the rider's weight reaches 500 kilograms, calculate the center of gravity height for each bicycle and identify the full-suspension bicycles with a center of gravity height higher than all hardtail bicycles.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) AS NewCenterOfGravityHeight FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE Bicycle.SuspensionType = '全避震' AND BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) > ALL (SELECT BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE Bicycle.SuspensionType = '无避震');",
        "db_id": "bike"
    },
    {
        "id": 160,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'mountain bike', 'carbon fiber frame', 'maximum load', 'kinetic energy', 'maximum speed'], 'relations': ['bicycle_to_type (BicycleID → electric/mountain)', 'bike_to_frame_material (BicycleID → carbon fiber)', 'performance_to_top_speed (BicycleID → TopSpeed)', 'bicycle_to_weight (BicycleID → Weight)', 'bicycle_to_maxload (BicycleID → MaxLoad)', 'kinetic_energy_formula (KE = 0.5 * (Weight + MaxLoad) * TopSpeed^2)'], 'intent': 'calculate_kinetic_energy_for_electric_bicycles_and_compare_with_carbon_fiber_mountain_bikes', 'reasoning_type': 'physical knowledge reasoning and mathematical logic reasoning', 'numerical_values': [], 'units': {'mass': 'kg (from Weight and MaxLoad in Bicycle table)', 'velocity': 'conversion from TopSpeed units to m/s (assuming km/h → divide by 3.6)', 'energy': 'joules (J) calculated via KE formula', 'carbon_fiber_filter': \"FrameMaterial = 'carbon fiber'\"}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each electric bicycle when traveling at maximum speed under maximum load, and identify the electric bicycles with kinetic energy higher than all mountain bikes using a carbon fiber frame.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) AS KineticEnergy FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '电动车' AND 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) > ALL (SELECT 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '山地车' AND BicycleComponents.FrameMaterial = '碳纤维');",
        "db_id": "bike"
    },
    {
        "id": 161,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['hybrid bicycles', 'road bikes with aluminum alloy rims', 'power transmission efficiency', \"rider's power output\", 'actual power delivered to wheels'], 'relations': ['bicycle_type_filter (hybrid vs road)', 'rim_material_filter (aluminum alloy)', 'power_calculation (efficiency * rider_power = actual_power)', 'actual_power_comparison (hybrid_actual > MAX(road_actual))'], 'intent': 'calculate_actual_power_and_compare_bicycle_types', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.0], 'units': {'power_transmission_efficiency': 'unitless (ratio)', 'rider_power_output': 'Watts (W)', 'actual_power': 'Watts (W)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicycleComponents': [{'column': 'RimMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '轮圈材料 (Aluminum, Carbon Fiber)', 'examples': ['Carbon Fiber', 'Aluminum', '铝合金', '碳纤维', '钢']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCalculate the product of each bicycle's power transmission efficiency and the rider's power output to determine the actual power delivered to the wheels. Then, identify the hybrid bicycles whose actual power is higher than all road bikes using aluminum alloy rims.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 AS ActualPower FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '混合车' AND BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 > ALL (SELECT BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '公路车' AND BicycleComponents.RimMaterial = '铝合金');",
        "db_id": "bike"
    },
    {
        "id": 162,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bike', 'BMX bike', 'tire pressure', 'tire width', 'contact area', 'steel chain'], 'relations': ['bicycle_to_components (BicycleID → BicycleComponents)', 'contact_area_formula (tire_pressure × tire_width → contact_area)', 'type_comparison (electric_bikes.contact_area < all bmx_bikes_with_steel_chains.contact_area)'], 'intent': 'calculate_contact_area_and_compare_between_bike_types', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'tire_pressure': 'psi or kPa (implied by TirePressure field)', 'tire_width': 'mm or inches (implied by TireWidth field)', 'contact_area': 'square units (derived from pressure/width calculation)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}, {'column': 'ChainMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '链条材料 (Steel, Nickel-Plated)', 'examples': ['Nickel-Plated', 'Steel', '钢', '镀镍钢', '钛合金']}]}}\nA common sense reasoning question is as follows:\nBased on the tire pressure and tire width of each bicycle, calculate the contact area between the tire and the ground, and identify the electric bikes with a contact area smaller than all BMX bikes with steel chains.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) AS ContactArea FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '电动车' AND BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) < ALL (SELECT BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = 'BMX' AND BicycleComponents.ChainMaterial = '钢');",
        "db_id": "bike"
    },
    {
        "id": 163,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'wheel diameter 100 inches', 'rider weight 500 kg', 'titanium alloy handlebars', 'center of gravity height', 'full-suspension bicycles', 'rigid bicycles'], 'relations': ['bicycle_to_suspension_type', 'bicycle_to_handlebar_material', 'bicycle_to_center_of_gravity_height', 'rider_weight_to_bicycle', 'wheel_diameter_to_bicycle', 'comparison: full_suspension_cog > rigid_with_titanium_cog'], 'intent': 'calculate_center_of_gravity_height_and_compare', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 500], 'units': {'wheel_diameter': 'inches', 'weight': 'kg', 'center_of_gravity_height': 'units (implied by BicycleDynamics.CenterOfGravityHeight field)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'SuspensionType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '避震类型 (None, Front, Full)', 'examples': ['None', 'Full', 'Front', '无避震', '前避震']}, {'column': 'WheelSize (modified to 100 inches)'}], 'bike.BicycleRider': [{'column': 'RiderWeight (modified to 500 kg)'}], 'bike.BicycleComponents': [{'column': 'HandlebarMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车把材料 (Aluminum, Carbon Fiber, Steel)', 'examples': ['Carbon Fiber', 'Aluminum', '铝合金', '钛合金', '钢']}], 'bike.BicycleDynamics': [{'column': 'CenterOfGravityHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重心高度 (厘米)', 'examples': ['60.0', '65.0', '62.0', '58.0', '67.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the wheel diameter of all bicycles increases to 100 inches, and the rider's weight reaches 500 kg, calculate the center of gravity height for each bicycle, and identify the full-suspension bicycles with a center of gravity height higher than that of all rigid bicycles equipped with titanium alloy handlebars.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) AS NewCenterOfGravityHeight FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.SuspensionType = '全避震' AND BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) > ALL (SELECT BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.SuspensionType = '无避震' AND BicycleComponents.HandlebarMaterial = '钛合金');",
        "db_id": "bike"
    },
    {
        "id": 164,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'mountain bike with carbon fiber frame', 'kinetic energy', 'maximum speed', 'maximum load'], 'relations': ['bike_type_classification (electric vs mountain)', 'frame_material_carbon (carbon fiber frame requirement)', 'kinetic_energy_calculation (KE = 0.5 * (weight + load) * speed²)', 'comparative_analysis (electric bike KE > all carbon mountain bike KE)'], 'intent': 'compare_kinetic_energy_between_bike_types', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'mass': 'kg (assumed for Bicycle.Weight and MaxLoad)', 'velocity': 'm/s (conversion from km/h if needed)', 'kinetic_energy': 'joules (kg·m²/s²)', 'velocity_conversion': '1 km/h = 0.2778 m/s', 'ke_formula': 'KE = 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * (BicyclePerformance.TopSpeed_in_m/s)²'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each electric bicycle when traveling at maximum speed under maximum load, and identify the electric bicycles with kinetic energy higher than all mountain bikes using carbon fiber frames.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) AS KineticEnergy FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '电动车' AND 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) > ALL (SELECT 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '山地车' AND BicycleComponents.FrameMaterial = '碳纤维');",
        "db_id": "bike"
    },
    {
        "id": 165,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle drivetrain efficiency', 'rider power output', 'actual power delivered to wheels', 'hybrid bicycles', 'road bikes with aluminum rims'], 'relations': ['bicycle_to_performance (BicycleID → BicyclePerformance)', 'bicycle_to_rider (BicycleID → BicycleRider)', 'bicycle_to_components (BicycleID → BicycleComponents)', 'efficiency_power_product (PowerTransferEfficiency × RiderPowerOutput → ActualPower)', 'type_comparison (Hybrid > AluminumRimRoad)'], 'intent': 'calculate_power_and_compare_bike_types', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power_transfer_efficiency': '% (implied by database schema)', 'rider_power_output': 'Watts', 'actual_power': 'Watts (calculated as Efficiency * PowerOutput)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicycleComponents': [{'column': 'RimMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '轮圈材料 (Aluminum, Carbon Fiber)', 'examples': ['Carbon Fiber', 'Aluminum', '铝合金', '碳纤维', '钢']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCalculate the product of each bicycle's drivetrain efficiency and rider power output to determine the actual power delivered to the wheels, and identify hybrid bicycles where the actual power exceeds that of all road bikes using aluminum rims.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 AS ActualPower FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '混合车' AND BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 > ALL (SELECT BicycleRider.RiderPowerOutput * BicyclePerformance.PowerTransferEfficiency / 100 FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '公路车' AND BicycleComponents.RimMaterial = '铝合金');",
        "db_id": "bike"
    },
    {
        "id": 166,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tire pressure', 'tire width', 'contact area', 'electric bikes', 'BMX bikes with steel chains'], 'relations': ['tire_pressure_to_contact_area (TirePressure → ContactArea calculation)', 'tire_width_to_contact_area (TireWidth → ContactArea calculation)', 'contact_area_comparison (ElectricBikes.ContactArea < BMXBikes.ContactArea)'], 'intent': 'calculate_contact_area_and_compare_between_electric_and_bmx_bikes', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'tire_pressure': 'psi or kPa (as stored in Bicycle.TirePressure)', 'tire_width': 'mm or inches (as stored in BicycleComponents.TireWidth)', 'contact_area': 'square units (derived from TirePressure * TireWidth / Load, though Load is not explicitly provided)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的自行车ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}, {'column': 'ChainMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '链条材料 (Steel, Nickel-Plated)', 'examples': ['Nickel-Plated', 'Steel', '钢', '镀镍钢', '钛合金']}]}}\nA common sense reasoning question is as follows:\nBased on the tire pressure and tire width of each bicycle, calculate the contact area between the tire and the ground, and identify the electric bikes with a contact area smaller than all BMX bikes equipped with steel chains.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) AS ContactArea FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '电动车' AND BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) < ALL (SELECT BicycleComponents.TireWidth * (BicycleComponents.TireWidth * 2) FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = 'BMX' AND BicycleComponents.ChainMaterial = '钢');",
        "db_id": "bike"
    },
    {
        "id": 167,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'wheel diameter 100 inches', \"rider's weight 500 kilograms\", 'center of gravity height', 'full-suspension bicycles', 'rigid bicycles', 'titanium alloy handlebars'], 'relations': ['bicycle_to_dynamics (BicycleID → BicycleDynamics)', 'bicycle_to_rider (BicycleID → BicycleRider)', 'bicycle_to_components (BicycleID → BicycleComponents)', 'suspension_type_comparison (full-suspension vs rigid)', 'handlebar_material (titanium alloy)'], 'intent': 'calculate_center_of_gravity_comparison', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 500], 'units': {'wheel_diameter': 'inches', 'rider_weight': 'kilograms', 'center_of_gravity_height': 'meters (assumed unit from database schema)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'WheelSize', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮径 (英寸)', 'examples': ['28.0', '29.0', '26.0', '20.5', '27.5']}, {'column': 'SuspensionType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '避震类型 (None, Front, Full)', 'examples': ['None', 'Full', 'Front', '无避震', '前避震']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicycleComponents': [{'column': 'HandlebarMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车把材料 (Aluminum, Carbon Fiber, Steel)', 'examples': ['Carbon Fiber', 'Aluminum', '铝合金', '钛合金', '钢']}], 'bike.BicycleDynamics': [{'column': 'CenterOfGravityHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重心高度 (厘米)', 'examples': ['60.0', '65.0', '62.0', '58.0', '67.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the wheel diameter of all bicycles is increased to 100 inches and the rider's weight reaches 500 kilograms, calculate the center of gravity height for each bicycle, and identify the full-suspension bicycles whose center of gravity height is higher than all rigid bicycles using titanium alloy handlebars.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) AS NewCenterOfGravityHeight FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.SuspensionType = '全避震' AND BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) > ALL (SELECT BicycleDynamics.CenterOfGravityHeight + (500 * BicycleRider.RiderHeight) / (Bicycle.Weight + 500) FROM Bicycle JOIN BicycleDynamics ON Bicycle.BicycleID = BicycleDynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.SuspensionType = '无避震' AND BicycleComponents.HandlebarMaterial = '钛合金');",
        "db_id": "bike"
    },
    {
        "id": 168,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['e-bike', 'carbon fiber-framed mountain bike', 'maximum speed', 'heat level'], 'relations': ['bike_to_thermodynamics (BicycleID → MotorTemperature)', 'max_speed_condition (BicyclePerformance.TopSpeed)', \"material_filter (Bicycle.FrameMaterial = 'carbon fiber')\", \"type_filter (Bicycle.Type = 'mountain')\"], 'intent': 'calculate_motor_heat_and_compare', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius, from MotorTemperature)', 'speed': 'km/h or mph (implied by TopSpeed column)', 'heat': 'Watts (implied by HeatDissipationRate)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}], 'bike.BicycleThermodynamics': [{'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'MotorTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机温度 (°C)', 'examples': ['60.0', '65.0', '0.0', '55.0', '50.0']}]}}\nA physical knowledge question is as follows:\nCalculate the heat generated by the motor when each e-bike is traveling at its maximum speed, and identify the e-bikes with heat levels higher than all carbon fiber-framed mountain bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleRider.RiderPowerOutput * (1 - BicycleThermodynamics.MotorEfficiency / 100) AS HeatGenerated FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '电动车' AND BicycleRider.RiderPowerOutput * (1 - BicycleThermodynamics.MotorEfficiency / 100) > ALL (SELECT BicycleRider.RiderPowerOutput * (1 - BicycleThermodynamics.MotorEfficiency / 100) FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '山地车' AND BicycleComponents.FrameMaterial = '碳纤维');",
        "db_id": "bike"
    },
    {
        "id": 169,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity', 'motor efficiency', 'actual available energy', 'hybrid bicycles', 'road bikes', 'aluminum alloy rims'], 'relations': ['battery_capacity_to_motor_efficiency (BatteryCapacity * MotorEfficiency = ActualAvailableEnergy)', 'hybrid_vs_road_bike_comparision (HybridBicycles.ActualAvailableEnergy > RoadBikes.ActualAvailableEnergy)', \"rim_material_filter (RimMaterial = 'Aluminum Alloy')\"], 'intent': 'identify_superior_hybrid_bicycles', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_capacity': 'Wh (Watt-hours, implied by context)', 'motor_efficiency': '% (percentage, implied by context)', 'actual_available_energy': 'Wh (Watt-hours, derived from product)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}], 'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'bike.BicycleComponents': [{'column': 'RimMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '轮圈材料 (Aluminum, Carbon Fiber)', 'examples': ['Carbon Fiber', 'Aluminum', '铝合金', '碳纤维', '钢']}]}}\nA mathematical logic question is as follows:\nCalculate the product of battery capacity and motor efficiency for each bicycle to determine the actual available energy, and identify hybrid bicycles whose actual available energy exceeds that of all road bikes using aluminum alloy rims.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleThermodynamics.BatteryCapacity * BicycleThermodynamics.MotorEfficiency / 100 AS UsableEnergy FROM Bicycle JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '混合车' AND BicycleThermodynamics.BatteryCapacity * BicycleThermodynamics.MotorEfficiency / 100 > ALL (SELECT BicycleThermodynamics.BatteryCapacity * BicycleThermodynamics.MotorEfficiency / 100 FROM Bicycle JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '公路车' AND BicycleComponents.RimMaterial = '铝合金');",
        "db_id": "bike"
    },
    {
        "id": 170,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', \"motor's operating temperature\", 'BMX bike', 'steel chain', 'heat dissipation rate', 'ambient temperature', 'electric vehicle'], 'relations': ['bicycle_to_components (BicycleID → ChainMaterial)', 'bicycle_to_thermodynamics (BicycleID → HeatDissipationRate, AmbientTemperature, MotorTemperature)', 'temperature_comparison (electric_vehicle.MotorTemperature < all BMX_steel_chain_bikes.MotorTemperature)'], 'intent': 'calculate_and_compare_motor_temperature', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'temperature': '°C (implied by database schema)', 'heat_dissipation_rate': 'W/m² (implied by physical context)', 'ambient_temperature': '°C (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicycleComponents': [{'column': 'ChainMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '链条材料 (Steel, Nickel-Plated)', 'examples': ['Nickel-Plated', 'Steel', '钢', '镀镍钢', '钛合金']}], 'bike.BicycleThermodynamics': [{'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}, {'column': 'MotorTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机温度 (°C)', 'examples': ['60.0', '65.0', '0.0', '55.0', '50.0']}]}}\nA common sense reasoning question is as follows:\nBased on the heat dissipation rate of each bicycle and the ambient temperature, calculate the motor's operating temperature, and identify the electric vehicles with operating temperatures lower than all BMX bikes that use steel chains.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleThermodynamics.AmbientTemperature + (BicycleThermodynamics.HeatDissipationRate / BicycleThermodynamics.MotorEfficiency) AS MotorTemperature FROM Bicycle JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = '电动车' AND BicycleThermodynamics.AmbientTemperature + (BicycleThermodynamics.HeatDissipationRate / BicycleThermodynamics.MotorEfficiency) < ALL (SELECT BicycleThermodynamics.AmbientTemperature + (BicycleThermodynamics.HeatDissipationRate / BicycleThermodynamics.MotorEfficiency) FROM Bicycle JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.Type = 'BMX' AND BicycleComponents.ChainMaterial = '钢');",
        "db_id": "bike"
    },
    {
        "id": 171,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 1000 watt-hours', 'ambient temperature 50°C', 'full-suspension bicycles', 'hardtail bicycles', 'titanium alloy handlebars'], 'relations': ['BicycleID_to_Thermodynamics (Bicycle.BicycleID → BicycleThermodynamics.BicycleID)', 'BicycleID_to_Components (Bicycle.BicycleID → BicycleComponents.BicycleID)', 'SuspensionType_classification (Bicycle.SuspensionType: full-suspension/hardtail)', 'HandlebarMaterial_filter (BicycleComponents.HandlebarMaterial = titanium alloy)'], 'intent': 'calculate_battery_temperature_and_compare_suspension_types', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 50], 'units': {'battery_capacity': 'watt-hours (Wh)', 'temperature': '°C (Celsius)', 'heat_dissipation': 'implied by BicycleThermodynamics.HeatDissipationRate (W/°C)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'BatteryTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池温度 (°C)', 'examples': ['40.0', '45.0', '0.0', '50.0', '55.0']}], 'bike.Bicycle': [{'column': 'SuspensionType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '避震类型 (None, Front, Full)', 'examples': ['None', 'Full', 'Front', '无避震', '前避震']}], 'bike.BicycleComponents': [{'column': 'HandlebarMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车把材料 (Aluminum, Carbon Fiber, Steel)', 'examples': ['Carbon Fiber', 'Aluminum', '铝合金', '钛合金', '钢']}]}}\nA hypothetical reasoning question is as follows:\nIf the battery capacity of all bicycles is increased to 1000 watt-hours and the ambient temperature reaches 50°C, calculate the battery temperature for each bicycle, and identify the full-suspension bicycles with battery temperatures higher than all hardtail bicycles that use titanium alloy handlebars.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, BicycleThermodynamics.AmbientTemperature + (1000 / BicycleThermodynamics.HeatDissipationRate) AS BatteryTemperature FROM Bicycle JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.SuspensionType = '全避震' AND BicycleThermodynamics.AmbientTemperature + (1000 / BicycleThermodynamics.HeatDissipationRate) > ALL (SELECT BicycleThermodynamics.AmbientTemperature + (1000 / BicycleThermodynamics.HeatDissipationRate) FROM Bicycle JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Bicycle.SuspensionType = '无避震' AND BicycleComponents.HandlebarMaterial = '钛合金');",
        "db_id": "bike"
    },
    {
        "id": 172,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['motor efficiency 85%', 'battery capacity 500 watt-hours', 'heat dissipation rate 200 watts', 'ambient temperature 10°C', 'ambient temperature 40°C', 'electric bicycle'], 'relations': ['efficiency_to_heat_generation (motor efficiency → heat dissipation)', 'temperature_dependency (ambient temperature → motor temperature)', 'power_capacity (battery capacity → energy available for motor operation)'], 'intent': 'calculate_motor_temperature_change', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [85, 500, 200, 10, 40], 'units': {'efficiency': '% (percentage)', 'battery_capacity': 'watt-hours (Wh)', 'heat_dissipation': 'watts (W)', 'temperature': '°C (Celsius)', 'conversion': 'ΔT = (Heat Generated) / Heat Dissipation Rate (steady-state thermal equilibrium)'}, 'foreign_keys': [{'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}, {'column': 'MotorTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机温度 (°C)', 'examples': ['60.0', '65.0', '0.0', '55.0', '50.0']}]}}\nA physical knowledge question is as follows:\nCalculate the change in motor temperature of an electric bicycle under different ambient temperatures, with a motor efficiency of 85%, a battery capacity of 500 watt-hours, a heat dissipation rate of 200 watts, and the ambient temperature varying from 10°C to 40°C. How does the motor temperature change?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AmbientTemperature, MotorTemperature FROM BicycleThermodynamics WHERE MotorEfficiency = 85 AND BatteryCapacity = 500 AND HeatDissipationRate = 200 AND AmbientTemperature BETWEEN 10 AND 40;",
        "db_id": "bike"
    },
    {
        "id": 173,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rider weight 70 kg', 'rider height 175 cm', 'rider age 30 years', 'leisure riding style', 'competitive riding style', 'off-road riding style', 'road bike type', 'mountain bike type', 'hybrid bike type'], 'relations': ['rider_to_bicycle (RiderID → BicycleID)', 'riding_style_to_power (riding style → rider power output)', 'bicycle_type_to_performance (bicycle type → performance metrics)'], 'intent': 'calculate_average_power_output', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [70, 175, 30], 'units': {'weight': 'kg (kilograms)', 'height': 'cm (centimeters)', 'age': 'years', 'power_output': 'watts (W)', 'conversion': 'rider biometrics → biomechanical power calculation'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}, {'column': 'RiderHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手身高 (厘米)', 'examples': ['180.0', '170.0', '185.0', '165.0', '190.0']}, {'column': 'RiderAge', 'type': 'INTEGER', 'primary_key': False, 'comment': '骑手年龄', 'examples': ['30', '28', '35', '27', '32']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}, {'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}], 'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}]}}\nA mathematical logic question is as follows:\nCalculate the average power output for different types of bicycles under various riding styles, given a rider weight of 70 kg, height of 175 cm, age of 30 years, riding styles including leisure, competitive, and off-road, and bicycle types including road bikes, mountain bikes, and hybrid bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, RidingStyle, AVG(RiderPowerOutput) AS AvgPowerOutput FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE RiderWeight = 70 AND RiderHeight = 175 AND RiderAge = 30 AND RidingStyle IN ('休闲', '竞技', '越野') AND Type IN ('公路车', '山地车', '混合车') GROUP BY Type, RidingStyle;",
        "db_id": "bike"
    },
    {
        "id": 174,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle weight 12 kg', 'tire pressure 60 PSI', 'tire width 28 mm'], 'relations': ['bicycle_to_components (Bicycle → BicycleComponents)', 'dynamic_resistance (rolling_resistance = f(weight, pressure, width, road_surface))'], 'intent': 'calculate_rolling_resistance_coefficient', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12, 60, 28], 'units': {'weight': 'kg (kilograms)', 'pressure': 'PSI (pounds per square inch)', 'width': 'mm (millimeters)', 'resistance': 'dimensionless coefficient (Crr)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}], 'bike.BicyclePerformance': [{'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}]}}\nA common sense reasoning question is as follows:\nBased on the bicycle's weight, tire pressure, and tire width, calculate the rolling resistance coefficient under different road conditions, with a tire pressure of 60 PSI, tire width of 28 mm, and bicycle weight of 12 kg.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, TirePressure, TireWidth, (Weight * 9.81) / (TirePressure * TireWidth) AS RollingResistanceCoefficient FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE TirePressure = 60 AND TireWidth = 28 AND Weight = 12;",
        "db_id": "bike"
    },
    {
        "id": 175,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\n    \"electric bicycle\",\n    \"battery capacity 1000 watt-hours\",\n    \"motor efficiency 90%\",\n    \"heat dissipation rate 500 watts\",\n    \"ambient temperature 50°C\",\n    \"motor temperature 100°C\",\n    \"rider power output 500 watts\"\n  ],\n  \"relations\": [\n    \"battery_to_endurance (battery capacity → endurance calculation)\",\n    \"efficiency_to_power_loss (motor efficiency → energy conversion rate)\",\n    \"temperature_to_thermal_stress (ambient/motor temperature → thermal impact)\",\n    \"rider_power_to_total_consumption (rider output → combined power requirement)\"\n  ],\n  \"intent\": \"calculate_battery_endurance_under_extreme_conditions\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [1000, 90, 500, 50, 100, 500],\n  \"units\": {\n    \"battery_capacity\": \"watt-hours (Wh)\",\n    \"motor_efficiency\": \"% (percentage)\",\n    \"heat_dissipation\": \"watts (W)\",\n    \"temperature\": \"°C (Celsius)\",\n    \"rider_power\": \"watts (W)\",\n    \"endurance\": \"hours (implied by Wh/W calculation)\"\n  },\n  \"required_tables\": [\"BicycleThermodynamics\", \"BicycleRider\"],\n  \"required_fields\": [\n    \"BicycleThermodynamics.BatteryCapacity\",\n    \"BicycleThermodynamics.MotorEfficiency\",\n    \"BicycleThermodynamics.HeatDissipationRate\",\n    \"BicycleThermodynamics.AmbientTemperature\",\n    \"BicycleThermodynamics.MotorTemperature\",\n    \"BicycleRider.RiderPowerOutput\"\n  ]\n}\n```\nA hypothetical reasoning question is as follows:\nCalculate the battery endurance of an electric bicycle under extreme conditions, with a battery capacity of 1000 watt-hours, motor efficiency of 90%, heat dissipation rate of 500 watts, ambient temperature of 50°C, motor temperature of 100°C, and rider power output of 500 watts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BatteryCapacity, MotorEfficiency, HeatDissipationRate, AmbientTemperature, MotorTemperature, RiderPowerOutput, BatteryCapacity / ((RiderPowerOutput / (MotorEfficiency / 100)) + (HeatDissipationRate * (MotorTemperature - AmbientTemperature))) AS BatteryLife FROM BicycleThermodynamics JOIN BicycleRider ON BicycleThermodynamics.BicycleID = BicycleRider.BicycleID WHERE BatteryCapacity = 1000 AND MotorEfficiency = 90 AND HeatDissipationRate = 500 AND AmbientTemperature = 50 AND MotorTemperature = 100 AND RiderPowerOutput = 500;",
        "db_id": "bike"
    },
    {
        "id": 176,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle motor', 'battery capacity 600 watt-hours', 'motor efficiency 88%', 'heat dissipation rate 250 watts', 'ambient temperature range 15°C to 35°C'], 'relations': ['motor_efficiency_to_performance', 'battery_capacity_to_motor_operation', 'heat_dissipation_rate_to_ambient_temperature', 'ambient_temperature_range_to_motor_efficiency'], 'intent': 'calculate_heat_dissipation_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [88, 600, 250, 15, 35], 'units': {'motor_efficiency': '% (percentage)', 'battery_capacity': 'Wh (watt-hours)', 'heat_dissipation_rate': 'W (watts)', 'temperature': '°C (Celsius)', 'conversion': 'ΔT = 20°C (temperature range differential)'}, 'foreign_keys': [{'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}]}}\nA physical knowledge question is as follows:\nCalculate the heat dissipation efficiency of electric bicycle motors at different ambient temperatures, with a motor efficiency of 88%, battery capacity of 600 watt-hours, a heat dissipation rate of 250 watts, and ambient temperature ranging from 15°C to 35°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AmbientTemperature, (HeatDissipationRate / (BatteryCapacity * (1 - MotorEfficiency / 100))) * 100 AS HeatDissipationEfficiency FROM BicycleThermodynamics WHERE MotorEfficiency = 88 AND BatteryCapacity = 600 AND HeatDissipationRate = 250 AND AmbientTemperature BETWEEN 15 AND 35;",
        "db_id": "bike"
    },
    {
        "id": 177,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rider weight 75 kg', 'rider height 180 cm', 'rider age 35 years', 'leisure riding style', 'competitive riding style', 'off-road riding style', 'road bike', 'mountain bike', 'hybrid bike'], 'relations': ['rider_to_bicycle (weight/height/age → RidingStyle, BicycleID)', 'bicycle_type_to_performance (Type → RollingResistance, AerodynamicDrag, PowerTransferEfficiency)', 'riding_style_to_energy (leisure/competitive/off-road → energy consumption calculation parameters)'], 'intent': 'calculate_energy_consumption_for_bicycles_by_riding_style', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [75, 180, 35], 'units': {'weight': 'kg (kilograms)', 'height': 'cm (centimeters)', 'age': 'years', 'energy_consumption': 'kJ (kilojoules) or kWh (kilowatt-hours) (implied by physical calculations)', 'rolling_resistance': 'N (Newtons)', 'aerodynamic_drag': 'CdA (drag coefficient × frontal area)', 'power_output': 'W (watts)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}, {'column': 'RiderHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手身高 (厘米)', 'examples': ['180.0', '170.0', '185.0', '165.0', '190.0']}, {'column': 'RiderAge', 'type': 'INTEGER', 'primary_key': False, 'comment': '骑手年龄', 'examples': ['30', '28', '35', '27', '32']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}, {'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}], 'bike.BicyclePerformance': [{'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}, {'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the energy consumption for different bicycle types under various riding styles, with the rider weighing 75 kg, height of 180 cm, age of 35 years. The riding styles include leisure, competitive, and off-road, and the bicycle types include road bikes, mountain bikes, and hybrid bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, RidingStyle, AVG((10 * RiderWeight + 6.25 * RiderHeight - 5 * RiderAge + 5) * CASE RidingStyle WHEN '休闲' THEN 1.2 WHEN '竞技' THEN 1.5 WHEN '越野' THEN 1.8 END) AS EnergyConsumption FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE RiderWeight = 75 AND RiderHeight = 180 AND RiderAge = 35 AND RidingStyle IN ('休闲', '竞技', '越野') AND Type IN ('公路车', '山地车', '混合车') GROUP BY Type, RidingStyle;",
        "db_id": "bike"
    },
    {
        "id": 178,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle weight 15 kg', 'tire pressure 65 PSI', 'tire width 30 mm'], 'relations': ['bicycle_weight_to_rolling_resistance', 'tire_pressure_to_rolling_resistance', 'tire_width_to_rolling_resistance'], 'intent': 'calculate_rolling_resistance_coefficient', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [15, 65, 30], 'units': {'weight': 'kg (kilograms)', 'tire_pressure': 'PSI (pounds per square inch)', 'tire_width': 'mm (millimeters)', 'rolling_resistance_coefficient': 'dimensionless (Crr)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA common sense reasoning question is as follows:\nCalculate the rolling resistance coefficient under different road conditions based on the bicycle's weight, tire pressure, and tire width. The tire pressure is 65 PSI, the tire width is 30 millimeters, and the bicycle weight is 15 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, TirePressure, TireWidth, (Weight * 9.81) / (TirePressure * TireWidth) AS RollingResistanceCoefficient FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE TirePressure = 65 AND TireWidth = 30 AND Weight = 15;",
        "db_id": "bike"
    },
    {
        "id": 179,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 3000 watt-hours', 'motor efficiency 98%', 'heat dissipation rate 1500 watts', 'ambient temperature 70°C', 'motor temperature 200°C', 'rider power output 1500 watts'], 'relations': ['battery_capacity_to_endurance (3000 Wh → battery endurance calculation)', 'efficiency_to_energy_loss (98% → energy loss factor)', 'heat_dissipation_to_thermal_impact (1500 W → thermal stress on battery)', 'temperature_gradient (ΔT=130°C → ambient-to-motor differential)', 'rider_power_to_total_draw (1500 W → combined power demand)'], 'intent': 'calculate_battery_endurance_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3000, 98, 1500, 70, 200, 1500], 'units': {'energy': 'Wh (watt-hours)', 'power': 'W (watts)', 'temperature': '°C (Celsius)', 'efficiency': '% (percentage)', 'conversion': 'ΔT = 130°C (thermal differential between motor and ambient)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}, {'column': 'MotorTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机温度 (°C)', 'examples': ['60.0', '65.0', '0.0', '55.0', '50.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the battery endurance of an electric bicycle under extreme conditions, with a battery capacity of 3000 watt-hours, motor efficiency of 98%, heat dissipation rate of 1500 watts, ambient temperature of 70°C, motor temperature of 200°C, and rider power output of 1500 watts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BatteryCapacity, MotorEfficiency, HeatDissipationRate, AmbientTemperature, MotorTemperature, RiderPowerOutput, BatteryCapacity / ((RiderPowerOutput / (MotorEfficiency / 100)) + (HeatDissipationRate * (MotorTemperature - AmbientTemperature))) AS BatteryLife FROM BicycleThermodynamics JOIN BicycleRider ON BicycleThermodynamics.BicycleID = BicycleRider.BicycleID WHERE BatteryCapacity = 3000 AND MotorEfficiency = 98 AND HeatDissipationRate = 1500 AND AmbientTemperature = 70 AND MotorTemperature = 200 AND RiderPowerOutput = 1500;",
        "db_id": "bike"
    },
    {
        "id": 180,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['air resistance coefficient', 'rolling resistance coefficient', 'power transmission efficiency 95%', 'rider power output 300 watts', 'tire pressure 60 PSI', 'tire width 28 mm'], 'relations': ['resistance_coefficients_to_speed (air/rolling resistance → max speed variation)', 'power_input_to_speed (300W rider power + 95% efficiency → speed calculation)', 'tire_geometry (28 mm width + 60 PSI pressure → rolling resistance relationship)'], 'intent': 'calculate_speed_variation_with_resistance_coefficients', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [95, 300, 60, 28], 'units': {'power_efficiency': '% (percent)', 'rider_power': 'W (watts)', 'tire_pressure': 'PSI (pounds per square inch)', 'tire_width': 'mm (millimeters)', 'speed': 'm/s or km/h (dependent on database formula)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}], 'bike.BicyclePerformance': [{'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}, {'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA physical knowledge question is as follows:\nCalculate the variation in the maximum speed of a bicycle under different air resistance coefficients and rolling resistance coefficients, with a power transmission efficiency of 95%, rider power output of 300 watts, tire pressure of 60 PSI, and tire width of 28 mm.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AerodynamicDrag, RollingResistance, (300 * PowerTransferEfficiency / 100) / (AerodynamicDrag + RollingResistance) AS TopSpeed FROM BicyclePerformance bp JOIN Bicycle b ON bp.BicycleID = b.BicycleID JOIN BicycleComponents bc ON b.BicycleID = bc.BicycleID WHERE bc.TireWidth = 28 AND b.TirePressure = 60;",
        "db_id": "bike"
    },
    {
        "id": 181,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rider weight 70 kg', 'rider height 175 cm', 'rider age 30 years', 'riding styles: leisure, competitive, off-road', 'bicycle types: road bikes, mountain bikes, hybrid bikes'], 'relations': ['rider_to_bicycle (via BicycleRider table)', 'bicycle_type_to_climbing_efficiency (via BicyclePerformance table)', 'riding_style_to_bicycle_type (cross-comparison)'], 'intent': 'calculate_climbing_efficiency_for_bicycle_types', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [70, 175, 30], 'units': {'weight': 'kg (kilograms)', 'height': 'cm (centimeters)', 'age': 'years', 'climbing_efficiency': 'unit implied by database schema (likely percentage or N/W)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}, {'column': 'RiderHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手身高 (厘米)', 'examples': ['180.0', '170.0', '185.0', '165.0', '190.0']}, {'column': 'RiderAge', 'type': 'INTEGER', 'primary_key': False, 'comment': '骑手年龄', 'examples': ['30', '28', '35', '27', '32']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}, {'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的自行车ID', 'examples': ['1', '2', '3', '4', '5']}], 'bike.BicyclePerformance': [{'column': 'ClimbingEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '爬坡效率 (%)', 'examples': ['90.0', '85.0', '88.0', '92.0', '84.0']}]}}\nA mathematical logic question is as follows:\nCalculate the climbing efficiency of different bicycle types under various riding styles, with the rider's weight at 70 kg, height at 175 cm, age at 30 years. Riding styles include leisure, competitive, and off-road, while bicycle types comprise road bikes, mountain bikes, and hybrid bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, RidingStyle, AVG((RiderPowerOutput / (RiderWeight * 9.81 * 0.1)) * 100) AS ClimbingEfficiency FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE RiderWeight = 70 AND RiderHeight = 175 AND RiderAge = 30 AND RidingStyle IN ('休闲', '竞技', '越野') AND Type IN ('公路车', '山地车', '混合车') GROUP BY Type, RidingStyle;",
        "db_id": "bike"
    },
    {
        "id": 182,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bike weight 12 kg', 'tire pressure 60 PSI', 'tire width 28 mm', 'braking distance'], 'relations': ['bike_to_components (BicycleID → BicycleComponents.BicycleID)', 'bike_to_performance (BicycleID → BicyclePerformance.BicycleID)', 'parameter_to_braking (weight, tire pressure, tire width → braking distance)'], 'intent': 'calculate_braking_distance_under_road_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12, 60, 28], 'units': {'weight': 'kg (kilograms)', 'tire_pressure': 'PSI (pounds per square inch)', 'tire_width': 'mm (millimeters)', 'braking_distance': 'm (meters, implied by database schema)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}], 'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA common sense reasoning question is as follows:\nBased on the bike's weight, tire pressure, and tire width, calculate the braking distance under different road conditions, where the tire pressure is 60 PSI, the tire width is 28 mm, and the bike weight is 12 kg.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, TirePressure, TireWidth, (Weight * 9.81) / (TirePressure * TireWidth) AS BrakingDistance FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE TirePressure = 60 AND TireWidth = 28 AND Weight = 12;",
        "db_id": "bike"
    },
    {
        "id": 183,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle weight 20 kg', 'tire pressure 70 PSI', 'tire width 32 mm', 'maximum load 100-500 kg', 'braking distance'], 'relations': ['bicycle_to_performance (BicycleID → BicyclePerformance.BrakingDistance)', 'load_range_analysis (max_load from 100kg to 500kg)', 'component_specification (tire_pressure × tire_width → braking friction)'], 'intent': 'analyze_braking_distance_under_varying_loads', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [20, 70, 32, 100, 500], 'units': {'mass': 'kg (kilograms)', 'pressure': 'PSI (pounds per square inch)', 'width': 'mm (millimeters)', 'braking_distance': 'meters (implied by bicycle_performance schema)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': {'bike.bicycle': [{'column': 'max_load'}, {'column': 'weight'}, {'column': 'tire_pressure'}], 'bike.bicycle_components': [{'column': 'tire_width'}], 'bike.bicycle_performance': [{'column': 'braking_distance'}]}}\nA hypothetical reasoning question is as follows:\nCalculate the impact of a bicycle's maximum load on braking distance under extreme load conditions, with the bicycle weight at 20 kilograms, tire pressure at 70 PSI, tire width at 32 millimeters, and the maximum load varying from 100 to 500 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MaxLoad, ((Weight + MaxLoad) * 9.81) / (TirePressure * TireWidth) AS BrakingDistance FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE Weight = 20 AND TirePressure = 70 AND TireWidth = 32 AND MaxLoad BETWEEN 100 AND 500;",
        "db_id": "bike"
    },
    {
        "id": 184,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['motor efficiency 88%', 'battery capacity 600 watt-hours', 'cooling rate 250 watts', 'ambient temperatures 15°C-35°C'], 'relations': ['motor_efficiency_to_cooling (88% → heat dissipation relationship)', 'temperature_range_to_efficiency (15-35°C → variable thermal gradient)', 'battery_capacity_to_cooling (600Wh → energy availability)'], 'intent': 'calculate_motor_cooling_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [88, 600, 250, 15, 35], 'units': {'efficiency': '% (percentage)', 'energy': 'Wh (watt-hours)', 'power': 'W (watts)', 'temperature': '°C (Celsius)', 'conversion': 'Temperature differential range ΔT=20°C (35-15)'}, 'foreign_keys': [{'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}]}}\nA physical knowledge question is as follows:\nCalculate the motor cooling efficiency of an electric bicycle under different ambient temperatures, with a motor efficiency of 88%, a battery capacity of 600 watt-hours, a cooling rate of 250 watts, and ambient temperatures ranging from 15°C to 35°C.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AmbientTemperature, (HeatDissipationRate / (BatteryCapacity * (1 - MotorEfficiency / 100))) * 100 AS HeatDissipationEfficiency FROM BicycleThermodynamics WHERE MotorEfficiency = 88 AND BatteryCapacity = 600 AND HeatDissipationRate = 250 AND AmbientTemperature BETWEEN 15 AND 35;",
        "db_id": "bike"
    },
    {
        "id": 185,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rider weight 75 kg', 'rider height 180 cm', 'rider age 35 years', 'riding styles: leisure, competitive, off-road', 'bicycle types: road bikes, mountain bikes, hybrid bikes'], 'relations': ['rider_to_bicycle (BicycleRider.BicycleID → Bicycle.BicycleID)', 'bicycle_type_to_components (Bicycle.Type → BicycleComponents.*)', 'riding_style_to_performance (BicycleRider.RidingStyle → BicyclePerformance.*)', 'thermodynamics_impact (BicycleThermodynamics.MotorEfficiency → EnergyConsumption)'], 'intent': 'calculate_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [75, 180, 35], 'units': {'weight': 'kg (kilograms)', 'height': 'cm (centimeters)', 'age': 'years', 'energy_consumption': 'calories (for human energy) / kWh (if motor involved)', 'aerodynamic_drag': 'CdA (drag coefficient × frontal area)', 'rolling_resistance': 'Crr (coefficient of rolling resistance)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}, {'column': 'SuspensionType'}], 'bike.BicyclePerformance': [{'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}, {'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}, {'column': 'RiderHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手身高 (厘米)', 'examples': ['180.0', '170.0', '185.0', '165.0', '190.0']}, {'column': 'RiderAge', 'type': 'INTEGER', 'primary_key': False, 'comment': '骑手年龄', 'examples': ['30', '28', '35', '27', '32']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}], 'bike.BicycleThermodynamics': [{'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}]}}\nA mathematical logic question is as follows:\nCalculate the energy consumption for different types of bicycles under various riding styles, with the rider weighing 75 kg, height of 180 cm, age of 35 years. The riding styles include leisure, competitive, and off-road, while the bicycle types consist of road bikes, mountain bikes, and hybrid bikes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, RidingStyle, AVG((10 * RiderWeight + 6.25 * RiderHeight - 5 * RiderAge + 5) * CASE RidingStyle WHEN '休闲' THEN 1.2 WHEN '竞技' THEN 1.5 WHEN '越野' THEN 1.8 END) AS EnergyConsumption FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID WHERE RiderWeight = 75 AND RiderHeight = 180 AND RiderAge = 35 AND RidingStyle IN ('休闲', '竞技', '越野') AND Type IN ('公路车', '山地车', '混合车') GROUP BY Type, RidingStyle;",
        "db_id": "bike"
    },
    {
        "id": 186,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle weight 15 kg', 'tire pressure 65 PSI', 'tire width 30 mm', 'rolling resistance coefficient'], 'relations': ['bicycle_weight_to_rolling_resistance (direct factor)', 'tire_pressure_to_rolling_resistance (inverse relationship)', 'tire_width_to_rolling_resistance (inverse relationship)', 'road_condition_to_rolling_resistance (contextual factor)'], 'intent': 'calculate_rolling_resistance_coefficient', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [15, 65, 30], 'units': {'weight': 'kg (kilograms)', 'tire_pressure': 'PSI (pounds per square inch)', 'tire_width': 'mm (millimeters)', 'rolling_resistance': 'unitless coefficient (Crr)', 'conversion': 'PSI to kPa, mm to meters for standardized calculation'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA common sense reasoning question is as follows:\nCalculate the rolling resistance coefficient under different road conditions based on the bicycle's weight, tire pressure, and tire width, with the tire pressure at 65 PSI, tire width at 30 millimeters, and bicycle weight at 15 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, TirePressure, TireWidth, (Weight * 9.81) / (TirePressure * TireWidth) AS RollingResistanceCoefficient FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID WHERE TirePressure = 65 AND TireWidth = 30 AND Weight = 15;",
        "db_id": "bike"
    },
    {
        "id": 187,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 3000 watt-hours', 'motor efficiency 98%', 'heat dissipation rate 1500 watts', 'ambient temperature 70°C', 'motor temperature 200°C', 'rider power output 1500 watts'], 'relations': ['battery_capacity_to_endurance', 'motor_efficiency_to_power_loss', 'heat_dissipation_to_thermal_management', 'temperature_gradient (ΔT=130°C)', 'rider_power_to_battery_drain'], 'intent': 'calculate_battery_endurance_under_extreme_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3000, 98, 1500, 70, 200, 1500], 'units': {'battery_capacity': 'watt-hours (Wh)', 'motor_efficiency': '%', 'heat_dissipation_rate': 'watts (W)', 'temperatures': '°C (Celsius)', 'rider_power_output': 'watts (W)', 'conversion': 'ΔT = 130°C (motor-to-ambient temperature differential)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}, {'column': 'MotorTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机温度 (°C)', 'examples': ['60.0', '65.0', '0.0', '55.0', '50.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the battery endurance of an electric bicycle under extreme conditions, with a battery capacity of 3000 watt-hours, motor efficiency of 98%, heat dissipation rate of 1500 watts, ambient temperature of 70°C, motor temperature of 200°C, and rider power output of 1500 watts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BatteryCapacity, MotorEfficiency, HeatDissipationRate, AmbientTemperature, MotorTemperature, RiderPowerOutput, BatteryCapacity / ((RiderPowerOutput / (MotorEfficiency / 100)) + (HeatDissipationRate * (MotorTemperature - AmbientTemperature))) AS BatteryLife FROM BicycleThermodynamics JOIN BicycleRider ON BicycleThermodynamics.BicycleID = BicycleRider.BicycleID WHERE BatteryCapacity = 3000 AND MotorEfficiency = 98 AND HeatDissipationRate = 1500 AND AmbientTemperature = 70 AND MotorTemperature = 200 AND RiderPowerOutput = 1500;",
        "db_id": "bike"
    },
    {
        "id": 188,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"rider's power output\", 'maximum speed', 'air resistance coefficient 0.5', 'rolling resistance coefficient 0.01', 'power transmission efficiency 95%', 'riding styles'], 'relations': ['rider_power_to_bike_performance (power output → top speed)', 'aerodynamic_drag_coefficient (0.5)', 'rolling_resistance_coefficient (0.01)', 'power_efficiency_factor (95%)', 'riding_style_impact (riding style → performance parameters)'], 'intent': 'calculate_power_output_impact_on_speed', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.5, 0.01, 95], 'units': {'aerodynamic_drag': 'unitless coefficient', 'rolling_resistance': 'unitless coefficient', 'power_efficiency': 'percentage (%)', 'power_output': 'watts (W)', 'speed': 'meters per second (m/s) or kilometers per hour (km/h)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}, {'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}, {'column': 'RiderHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手身高 (厘米)', 'examples': ['180.0', '170.0', '185.0', '165.0', '190.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}, {'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}, {'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the impact of a rider's power output on the maximum speed of a bicycle under different riding styles, with an air resistance coefficient of 0.5, rolling resistance coefficient of 0.01, and power transmission efficiency of 95%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RidingStyle, RiderPowerOutput, (RiderPowerOutput * PowerTransferEfficiency / 100) / (AerodynamicDrag + RollingResistance) AS TopSpeed FROM BicyclePerformance JOIN BicycleRider ON BicyclePerformance.BicycleID = BicycleRider.BicycleID WHERE AerodynamicDrag = 0.5 AND RollingResistance = 0.01 AND PowerTransferEfficiency = 95;",
        "db_id": "bike"
    },
    {
        "id": 189,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['age groups (20-30, 31-40, 41-50)', 'riding styles (leisure, competitive, off-road)'], 'relations': ['age_group_to_cadence', 'riding_style_to_cadence', 'grouping_criteria (age_and_style)'], 'intent': 'calculate_average_cadence_by_group', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'cadence': 'RPM (revolutions per minute)', 'age': 'years'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicycleRider': [{'column': 'RiderAge', 'type': 'INTEGER', 'primary_key': False, 'comment': '骑手年龄', 'examples': ['30', '28', '35', '27', '32']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}, {'column': 'RiderCadence', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手踏频 (RPM)', 'examples': ['90.0', '85.0', '80.0', '88.0', '84.0']}]}}\nA mathematical logic question is as follows:\nCalculate the average cadence for riders of different age groups with various riding styles, where the riding styles include leisure, competitive, and off-road, and the age groups are categorized as 20-30 years old, 31-40 years old, and 41-50 years old.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN RiderAge BETWEEN 20 AND 30 THEN '20-30' WHEN RiderAge BETWEEN 31 AND 40 THEN '31-40' WHEN RiderAge BETWEEN 41 AND 50 THEN '41-50' END AS RiderAgeGroup, RidingStyle, AVG(RiderCadence) AS AvgCadence FROM BicycleRider WHERE RidingStyle IN ('休闲', '竞技', '越野') GROUP BY RiderAgeGroup, RidingStyle;",
        "db_id": "bike"
    },
    {
        "id": 190,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"rider's weight\", \"rider's height\", 'cycling styles (leisure, racing, off-road)', 'cycling duration (1 hour)'], 'relations': ['rider_weight_to_energy_consumption', 'rider_height_to_energy_consumption', 'cycling_style_to_power_output', 'duration_to_energy_accumulation'], 'intent': 'calculate_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1], 'units': {'weight': 'kg or lbs (dependent on database schema)', 'height': 'cm or inches (dependent on database schema)', 'duration': 'hours', 'energy': 'kcal or kJ (dependent on calculation method)'}, 'foreign_keys': [{'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}, {'column': 'RiderHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手身高 (厘米)', 'examples': ['180.0', '170.0', '185.0', '165.0', '190.0']}, {'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}, {'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}, {'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}, {'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}], 'bike.BicycleDynamics': [{'column': 'Wheelbase', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '轴距 (厘米)', 'examples': ['100.0', '110.0', '105.0', '98.0', '115.0']}], 'bike.Bicycle': [{'column': 'GearCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '变速档位数', 'examples': ['22', '12', '18', '7', '4']}]}}\nA common sense reasoning question is as follows:\nCalculate the energy consumption under different cycling styles based on the rider's weight and height. The cycling styles include leisure, racing, and off-road, with a cycling duration of 1 hour.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RidingStyle, (10 * RiderWeight + 6.25 * RiderHeight - 5 * RiderAge + 5) * CASE RidingStyle WHEN '休闲' THEN 1.2 WHEN '竞技' THEN 1.5 WHEN '越野' THEN 1.8 END * 1 AS EnergyConsumption FROM BicycleRider WHERE RidingStyle IN ('休闲', '竞技', '越野');",
        "db_id": "bike"
    },
    {
        "id": 191,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\n    \"battery endurance\",\n    \"rider's power output (1000-5000 watts)\",\n    \"battery capacity 5000 watt-hours\",\n    \"motor efficiency 99%\",\n    \"cooling rate 2000 watts\",\n    \"ambient temperature 80°C\",\n    \"motor temperature 250°C\"\n  ],\n  \"relations\": [\n    \"power_output_to_battery_drain (rider power → energy consumption rate)\",\n    \"thermal_efficiency_impact (ambient/motor temp → heat dissipation)\",\n    \"battery_capacity_to_endurance (capacity → operational time calculation)\",\n    \"motor_efficiency_to_energy_loss (99% efficiency → 1% energy loss)\"\n  ],\n  \"intent\": \"calculate_battery_endurance_with_variable_power_output\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [5000, 99, 2000, 80, 250, 1000, 5000],\n  \"units\": {\n    \"energy\": \"watt-hours (BatteryCapacity)\",\n    \"power\": \"watts (RiderPowerOutput, CoolingRate)\",\n    \"temperature\": \"°C (AmbientTemperature, MotorTemperature)\",\n    \"efficiency\": \"% (MotorEfficiency)\"\n  },\n  \"required_tables\": [\n    \"BicycleThermodynamics\",\n    \"BicycleRider\",\n    \"BicyclePerformance\"\n  ],\n  \"required_fields\": [\n    \"BicycleThermodynamics.BatteryCapacity\",\n    \"BicycleThermodynamics.MotorEfficiency\",\n    \"BicycleThermodynamics.HeatDissipationRate\",\n    \"BicycleThermodynamics.AmbientTemperature\",\n    \"BicycleThermodynamics.MotorTemperature\",\n    \"BicycleRider.RiderPowerOutput\",\n    \"BicyclePerformance.PowerTransferEfficiency\"\n  ]\n}\n```\nA hypothetical reasoning question is as follows:\nCalculate the impact of the rider's power output on the battery endurance of an electric bicycle under extreme conditions, with a battery capacity of 5000 watt-hours, motor efficiency of 99%, a cooling rate of 2000 watts, ambient temperature at 80°C, motor temperature at 250°C, and the rider's power output varying from 1000 watts to 5000 watts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RiderPowerOutput, BatteryCapacity / ((RiderPowerOutput / MotorEfficiency) + (HeatDissipationRate * (MotorTemperature - AmbientTemperature))) AS BatteryLife FROM BicycleThermodynamics JOIN BicycleRider ON BicycleThermodynamics.BicycleID = BicycleRider.BicycleID WHERE BatteryCapacity = 5000 AND MotorEfficiency = 99 AND HeatDissipationRate = 2000 AND AmbientTemperature = 80 AND MotorTemperature = 250 AND RiderPowerOutput BETWEEN 1000 AND 5000;",
        "db_id": "bike"
    },
    {
        "id": 192,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA physical knowledge question is as follows:\nCalculate the minimum power a rider must output when climbing a hill on a mountain bike, with a gradient of 10%, a total weight of the bike and rider of 100 kg, a rolling resistance coefficient of 0.005, an air resistance coefficient of 0.3, a wind speed of 5 meters per second, and a climbing efficiency of 80%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((100 * 9.81 * SIN(ATAN(0.1))) + (100 * 9.81 * 0.005 * COS(ATAN(0.1))) + (0.5 * 1.225 * 0.3 * 0.5 * POWER((5 + (TopSpeed * 0.277778)), 2))) * (TopSpeed * 0.277778) / 0.8 AS MinPower FROM BicyclePerformance WHERE BicycleID IN (SELECT BicycleID FROM Bicycle WHERE Type = '山地车')",
        "db_id": "bike"
    },
    {
        "id": 193,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['power transmission efficiency', 'air resistance coefficient', 'bicycle', 'price below 10,000 yuan'], 'relations': ['bicycle_to_performance (BicycleID → BicyclePerformance)', 'ratio_calculation (PowerTransferEfficiency / AerodynamicDrag)'], 'intent': 'calculate_efficiency_ratio_and_rank_bicycles', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000], 'units': {'price': 'yuan', 'ratio': 'unitless (efficiency ratio)', 'power_transmission_efficiency': 'unitless (efficiency metric)', 'air_resistance_coefficient': 'Cd (drag coefficient)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格 (元)', 'examples': ['15000.0', '12000.0', '8000.0', '18000.0', '25000.0']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}, {'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}, {'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的自行车ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of power transmission efficiency to air resistance coefficient for each bicycle and identify the top 3 bicycles with the highest ratio, with the requirement that these bicycles are priced below 10,000 yuan.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BicycleID, (PowerTransferEfficiency / AerodynamicDrag) AS EfficiencyRatio FROM BicyclePerformance WHERE BicycleID IN (SELECT BicycleID FROM Bicycle WHERE Price < 10000) ORDER BY EfficiencyRatio DESC LIMIT 3",
        "db_id": "bike"
    },
    {
        "id": 194,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['road bicycles', 'carbon fiber frames', 'average weight', 'average price'], 'relations': ['type_filter (road bicycles)', 'material_filter (carbon fiber frames)', 'weight_comparison (bicycle_weight < average_weight)', 'price_comparison (bicycle_price < average_price)', 'statistical_analysis (calculate average weight and price)'], 'intent': 'analyze_bicycles_with_carbon_fiber_frames', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'weight': \"kg (implied by column name 'Weight')\", 'price': \"USD (implied by column name 'Price')\"}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格 (元)', 'examples': ['15000.0', '12000.0', '8000.0', '18000.0', '25000.0']}]}}\nA common sense reasoning question is as follows:\nQuery all road bicycles that use carbon fiber frames, calculate their average weight and average price, and identify bicycles with both weight below the average and price below the average.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BicycleID FROM Bicycle WHERE FrameMaterial = '碳纤维' AND Type = '公路车' AND Weight < (SELECT AVG(Weight) FROM Bicycle WHERE FrameMaterial = '碳纤维' AND Type = '公路车') AND Price < (SELECT AVG(Price) FROM Bicycle WHERE FrameMaterial = '碳纤维' AND Type = '公路车')",
        "db_id": "bike"
    },
    {
        "id": 195,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wheel diameter 50 inches', 'tire pressure 10 PSI', 'asphalt rolling resistance coefficient 0.004', 'gravel rolling resistance coefficient 0.02', 'mud rolling resistance coefficient 0.05'], 'relations': ['diameter_to_rolling_resistance (50 inches → resistance change)', 'pressure_to_rolling_resistance (10 PSI → resistance change)', 'surface_to_coefficient_mapping (asphalt → 0.004, gravel → 0.02, mud → 0.05)'], 'intent': 'calculate_percentage_change_in_rolling_resistance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50, 10, 0.004, 0.02, 0.05], 'units': {'diameter': 'inches (converted to meters for calculation)', 'pressure': 'PSI (converted to Pascals for calculation)', 'resistance_coefficients': 'unitless (dimensionless coefficients)', 'conversion': 'ΔResistance% = ((R2 - R1)/R1)*100'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'WheelSize', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮径 (英寸)', 'examples': ['28.0', '29.0', '26.0', '20.5', '27.5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicyclePerformance': [{'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}]}}\nA hypothetical reasoning question is as follows:\nIf the wheel diameter of a bicycle increases to 50 inches while the tire pressure decreases to 10 PSI, calculate the percentage change in rolling resistance on different road surfaces (such as asphalt, gravel, and mud), with rolling resistance coefficients of 0.004, 0.02, and 0.05 respectively.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT '柏油路' AS Surface, ((0.004 - RollingResistance) / RollingResistance) * 100 AS ResistanceChangePercent FROM BicyclePerformance UNION SELECT '砂石路' AS Surface, ((0.02 - RollingResistance) / RollingResistance) * 100 AS ResistanceChangePercent FROM BicyclePerformance UNION SELECT '泥地' AS Surface, ((0.05 - RollingResistance) / RollingResistance) * 100 AS ResistanceChangePercent FROM BicyclePerformance",
        "db_id": "bike"
    },
    {
        "id": 196,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle weight', 'rider weight', 'tire pressure', 'tire contact area'], 'relations': ['total_weight = bicycle_weight + rider_weight', 'pressure_relation (P = F/A)'], 'intent': 'calculate_tire_pressure_impact_based_on_total_weight', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['bicycle_weight_value', 'rider_weight_value'], 'units': {'weight': 'kg (Bicycle.Weight, BicycleRider.RiderWeight)', 'force': 'N (calculated via F = (bicycle_weight + rider_weight)*9.81)', 'pressure': 'Pa (Pascal) derived from Bicycle.TirePressure', 'area': 'm² (constant implied by problem statement)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA physical knowledge question is as follows:\nCalculate the impact of the total weight of a bicycle (including the rider and the bicycle itself) on tire pressure, with the tire contact area remaining unchanged.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, (b.Weight + r.RiderWeight) / (b.TirePressure * 0.07030695796) AS Tire_Pressure_Impact FROM Bicycle b JOIN BicycleRider r ON b.BicycleID = r.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 197,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['power transmission efficiency', \"rider's power output\", 'theoretical maximum speed'], 'relations': ['bicycle_to_performance (BicycleID → BicyclePerformance.PowerTransferEfficiency)', 'rider_to_power_output (BicycleID → BicycleRider.RiderPowerOutput)', 'efficiency_and_power_to_speed (PowerTransferEfficiency × RiderPowerOutput → TheoreticalMaxSpeed)'], 'intent': 'calculate_theoretical_max_speed', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'power_transmission_efficiency': '% (efficiency percentage)', 'rider_power_output': 'watts (W)', 'theoretical_max_speed': 'km/h (calculated via power-to-speed conversion formula)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nFind the relationship between the power transmission efficiency of all bicycles and the rider's power output, and calculate the theoretical maximum speed for each bicycle.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, (r.RiderPowerOutput * p.PowerTransferEfficiency) / (p.AerodynamicDrag * p.RollingResistance) AS TopSpeed_Theoretical FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID JOIN BicycleRider r ON b.BicycleID = r.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 198,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle type', \"rider's cycling style\"], 'relations': ['riding_style_to_bike_type (e.g., aggressive → road bike, off-road → mountain bike)'], 'intent': 'recommend_bicycle_type_based_on_rider_style', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'SuspensionType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '避震类型 (None, Front, Full)', 'examples': ['None', 'Full', 'Front', '无避震', '前避震']}], 'bike.BicycleRider': [{'column': 'RidingStyle', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '骑行风格 (Casual, Competitive, Off-Road)', 'examples': ['Competitive', 'Off-Road', 'Casual', '极限骑行', '极限表演']}], 'bike.BicyclePerformance': [{'column': 'ClimbingEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '爬坡效率 (%)', 'examples': ['90.0', '85.0', '88.0', '92.0', '84.0']}, {'column': 'CorneringStability', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '转弯稳定性 (评分)', 'examples': ['9.5', '8.5', '9.0', '9.7', '8.2']}]}}\nA common sense reasoning question is as follows:\nBased on the type of bicycle and the rider's cycling style, recommend the most suitable bicycle type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.Type, r.RidingStyle, COUNT(*) AS Match_Count FROM Bicycle b JOIN BicycleRider r ON b.BicycleID = r.BicycleID GROUP BY b.Type, r.RidingStyle ORDER BY Match_Count DESC;",
        "db_id": "bike"
    },
    {
        "id": 199,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tire pressure 1000 PSI', 'bicycle braking distance'], 'relations': ['tire_pressure_to_braking_distance (pressure → braking performance)'], 'intent': 'calculate_braking_distance_impact', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000], 'units': {'pressure': 'PSI (Pounds per Square Inch)', 'braking_distance': 'meters (implied by database schema)', 'conversion': '1000 PSI is the target pressure value; braking distance calculation depends on friction coefficient models'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}, {'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA hypothetical reasoning question is as follows:\nIf the tire pressure of a bicycle is increased to 1000 PSI, calculate its impact on braking distance, with all other conditions remaining unchanged.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, p.BrakingDistance * (b.TirePressure / 1000) AS Braking_Distance_New FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 200,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'center of gravity height', 'turning stability'], 'relations': ['bicycle_to_dynamics (bicycle → bicycle dynamics data)', 'inverse_proportionality (center of gravity height ∝ 1/turning stability)'], 'intent': 'calculate_impact_of_center_of_gravity_on_stability', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'center_of_gravity_height': 'meters (assumed unit for height)', 'turning_stability': 'unitless stability index (implied by context)', 'relationship': 'inverse proportionality formula: Stability ∝ 1/Height'}, 'foreign_keys': [{'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.BicycleDynamics': [{'column': 'CenterOfGravityHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重心高度 (厘米)', 'examples': ['60.0', '65.0', '62.0', '58.0', '67.0']}], 'bike.BicyclePerformance': [{'column': 'CorneringStability', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '转弯稳定性 (评分)', 'examples': ['9.5', '8.5', '9.0', '9.7', '8.2']}]}}\nA physical knowledge question is as follows:\nCalculate the impact of the center of gravity height of each bicycle on turning stability; during a turn, the center of gravity height is inversely proportional to turning stability.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, 1 / d.CenterOfGravityHeight AS Cornering_Stability_Impact FROM Bicycle b JOIN BicycleDynamics d ON b.BicycleID = d.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 201,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Bicycle', 'PowerTransferEfficiency', 'RiderPowerOutput'], 'relations': ['BicycleID_junction (Bicycle → BicyclePerformance & BicycleRider)', 'power_product_calculation (PowerTransferEfficiency × RiderPowerOutput)'], 'intent': 'calculate_and_compare_power_product', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['PowerTransferEfficiency (decimal)', 'RiderPowerOutput (watts)'], 'units': {'power_transfer_efficiency': '% or decimal (unitless)', 'rider_power_output': 'W (watts)', 'product_unit': 'W (watts, if efficiency is decimal) | %·W (if efficiency is percentage)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicyclePerformance': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的自行车ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的自行车ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCalculate the product of the power transmission efficiency of each bicycle and the rider's power output, and identify the bicycle with the highest product.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, r.RiderPowerOutput * p.PowerTransferEfficiency AS Power_Output_Effective FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID JOIN BicycleRider r ON b.BicycleID = r.BicycleID ORDER BY Power_Output_Effective DESC LIMIT 1;",
        "db_id": "bike"
    },
    {
        "id": 202,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle_type', 'rider_weight', 'bicycle_max_load_capacity'], 'relations': ['bicycle_type_to_max_load (Type → MaxLoad)', 'rider_weight_to_bicycle_load (RiderWeight < MaxLoad)'], 'intent': 'recommend_bicycle_type_based_on_load_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['rider_weight_input', 'bicycle.MaxLoad'], 'units': {'weight': 'kg (assumed unit for RiderWeight and MaxLoad)', 'capacity_comparison': 'MaxLoad > RiderWeight'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}, {'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的自行车ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA common sense reasoning question is as follows:\nBased on the type of bicycle and the rider's weight, recommend the most suitable bicycle type, ensuring the bicycle's maximum load capacity exceeds the rider's weight.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.Type, r.RiderName FROM Bicycle b JOIN BicycleRider r ON b.BicycleID = r.BicycleID WHERE b.MaxLoad > r.RiderWeight;",
        "db_id": "bike"
    },
    {
        "id": 203,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tire pressure (1000 PSI)', 'braking distance', 'bicycle with largest change'], 'relations': ['tire_pressure_to_braking_distance (PSI → stopping distance)', 'comparative_analysis (max Δbraking_distance)'], 'intent': 'calculate_impact_of_tire_pressure_on_braking_distance_and_identify_extreme_case', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000], 'units': {'pressure': 'PSI (pounds per square inch)', 'distance': 'meters (implied by database schema)', 'conversion': 'PSI to pressure distribution on tire contact patch'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA hypothetical reasoning question is as follows:\nIf the tire pressure of a bicycle is increased to 1000 PSI, calculate its impact on the braking distance, assuming all other conditions remain unchanged, and identify the bicycle with the largest change in braking distance.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, p.BrakingDistance * (b.TirePressure / 1000) AS Braking_Distance_New FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 204,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'air density 1.225 kg/m³', 'frontal area 0.5 m²', 'air drag coefficient 0.9'], 'relations': ['aerodynamic_drag_formula (F = 0.5 * ρ * v² * Cd * A)', 'bicycle_to_performance (BicycleID → TopSpeed)'], 'intent': 'calculate_air_resistance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1.225, 0.5, 0.9], 'units': {'air_density': 'kg/m³', 'frontal_area': 'm²', 'drag_coefficient': 'unitless', 'velocity': 'm/s (implied by BicyclePerformance.TopSpeed)', 'air_resistance': 'N (Newtons)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the air resistance of an electric bicycle traveling at maximum speed on a flat road, with an air density of 1.225 kg/m³, a total frontal area of the bicycle and rider of 0.5 m², and an air drag coefficient of 0.9.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * POWER(TopSpeed * 0.277778, 2) * 0.9 * 0.5 AS AirResistance FROM BicyclePerformance JOIN Bicycle ON BicyclePerformance.BicycleID = Bicycle.BicycleID WHERE Bicycle.Type = '电动车';",
        "db_id": "bike"
    },
    {
        "id": 205,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"rider's power output 250 watts\", \"bicycle's power transmission efficiency 85%\"], 'relations': ['power_output_to_efficiency (250W → 85%)', 'actual_power_delivery (250W * 85% = 212.5W)'], 'intent': 'calculate_actual_power_delivered_to_wheel', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [250, 85], 'units': {'power': 'watts (W)', 'efficiency': 'percentage (%)', 'calculation': '212.5W = 250W × 0.85'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the power transmission efficiency of a bicycle, given that the rider's power output is 250 watts, and the bicycle's power transmission efficiency is 85%. Find the actual power delivered to the wheel.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 250 * (PowerTransferEfficiency / 100) AS ActualPower FROM BicyclePerformance WHERE BicycleID = (SELECT BicycleID FROM BicycleRider WHERE RiderPowerOutput = 250);",
        "db_id": "bike"
    },
    {
        "id": 206,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle weight', 'rider weight', 'mountain load limit 120 kg'], 'relations': ['bicycle_weight + rider_weight = total_load', 'total_load <= mountain_load_limit'], 'intent': 'assess suitability for mountain riding based on load capacity', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [120], 'units': {'weight': 'kg (kilograms)', 'load_limit': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA common sense reasoning question is as follows:\nBased on the weight of the bicycle and the rider's weight, determine whether this bicycle is suitable for mountain riding, with the maximum load limit in mountainous areas being 120 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, CASE WHEN (Bicycle.Weight + BicycleRider.RiderWeight) <= 120 THEN '适合' ELSE '不适合' END AS Suitability FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 207,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'speed 100 km/h', 'brake system efficiency 200%', 'coefficient of friction 2.0', 'gravitational acceleration 9.8 m/s²'], 'relations': ['speed_to_braking_distance (v → BrakingDistance)', 'friction_to_braking_distance (μ → BrakingDistance)', 'efficiency_to_braking_distance (efficiency → BrakingDistance)', 'gravitational_acceleration_to_braking_distance (g → BrakingDistance)'], 'intent': 'calculate_braking_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 200, 2.0, 9.8], 'units': {'speed': 'km/h (converted to m/s for calculation)', 'brake_efficiency': '% (200% = 2.0 factor)', 'friction': 'unitless coefficient', 'gravitational_acceleration': 'm/s²', 'braking_distance': 'meters (calculated result)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}], 'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the braking distance of a bicycle, with the bicycle's speed being 100 kilometers per hour, the brake system efficiency at 200%, the coefficient of friction between the tires and the ground at 2.0, and the gravitational acceleration at 9.8 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT POWER(100 * 0.277778, 2) / (2 * 2.0 * 9.8 * 2) AS BrakingDistance FROM BicyclePerformance WHERE BicycleID = (SELECT BicycleID FROM Bicycle WHERE Type = '公路车');",
        "db_id": "bike"
    },
    {
        "id": 208,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'rider', 'maximum speed', 'flat road'], 'relations': ['bicycle_to_weight (Bicycle.Weight)', 'rider_to_weight (BicycleRider.RiderWeight)', 'bicycle_to_speed (BicyclePerformance.TopSpeed)', 'mass_calculation (total_mass = bicycle_weight + rider_weight)', 'velocity_conversion (km/h → m/s)'], 'intent': 'calculate_kinetic_energy', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 70, 45], 'units': {'mass': 'kg', 'speed': 'km/h → m/s (conversion factor: 1 km/h = 0.2778 m/s)', 'energy': 'Joules (J = kg·m²/s²)', 'conversion': '45 km/h = 12.5 m/s'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of an electric bicycle when traveling at its maximum speed on a flat road, given that the bicycle weighs 20 kilograms, the rider weighs 70 kilograms, and the maximum speed is 45 kilometers per hour.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * (Bicycle.Weight + BicycleRider.RiderWeight) * POWER(BicyclePerformance.TopSpeed * 0.277778, 2) AS KineticEnergy FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE Bicycle.Type = '电动车';",
        "db_id": "bike"
    },
    {
        "id": 209,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'purchase price 5000 yuan', 'service life 5 years', 'annual riding distance 2000 km', 'cost per kilometer 0.5 yuan'], 'relations': ['bicycle_to_purchase_price (bicycle → Price)', 'total_cost (5000 + 0.5*(2000*5))', 'total_distance (2000*5)'], 'intent': 'calculate_cost_effectiveness_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 5, 2000, 0.5], 'units': {'currency': 'yuan', 'time': 'years', 'distance': 'kilometers', 'cost_per_distance': 'yuan/kilometer', 'total_cost': 'yuan (calculated as 5000 + 0.5*2000*5)', 'total_distance': 'kilometers (calculated as 2000*5)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格 (元)', 'examples': ['15000.0', '12000.0', '8000.0', '18000.0', '25000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total cost-effectiveness ratio of a bicycle, given the purchase price is 5000 yuan, the service life is 5 years, the annual riding distance is 2000 kilometers, and the cost per kilometer ridden is 0.5 yuan.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Bicycle.Price + (2000 * 0.5 * 5)) / (2000 * 5) AS CostBenefitRatio FROM Bicycle WHERE BicycleID = (SELECT BicycleID FROM BicycleRider WHERE RiderPowerOutput = 250);",
        "db_id": "bike"
    },
    {
        "id": 210,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"bicycle's maximum load capacity\", \"rider's weight\", '100 kilograms'], 'relations': ['bicycle_to_rider (Bicycle.MaxLoad ↔ BicycleRider.RiderWeight)', 'load_limit_comparison (MaxLoad ≥ RiderWeight AND MaxLoad ≥ 100kg)'], 'intent': 'evaluate_suitability_for_long_distance_riding', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'weight': 'kg (kilograms)', 'load_limit': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA common sense reasoning question is as follows:\nBased on the bicycle's maximum load capacity and the rider's weight, determine whether this bicycle is suitable for long-distance riding. The maximum load limit for long-distance riding is 100 kilograms.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, CASE WHEN (Bicycle.Weight + BicycleRider.RiderWeight) <= 100 THEN '适合' ELSE '不适合' END AS Suitability FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 211,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'speed 200 km/h', 'brake system efficiency 300%', 'tire-to-ground friction coefficient 3.0', 'gravitational acceleration 9.8 m/s²'], 'relations': ['parameters_to_braking_distance (speed, efficiency, friction, gravity → braking distance)', 'physical_law_dependency (kinematic_equation)'], 'intent': 'calculate_braking_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 300, 3.0, 9.8], 'units': {'speed': 'km/h (converted to m/s for calculation)', 'brake_efficiency': '% (normalized to 3.0 in calculation)', 'friction_coefficient': 'dimensionless', 'gravitational_acceleration': 'm/s²', 'conversion': '1 km/h = 0.2778 m/s'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the braking distance of a bicycle with a speed of 200 km/h, brake system efficiency of 300%, a tire-to-ground friction coefficient of 3.0, and gravitational acceleration of 9.8 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT POWER(200 * 0.277778, 2) / (2 * 3.0 * 9.8 * 3) AS BrakingDistance FROM BicyclePerformance WHERE BicycleID = (SELECT BicycleID FROM Bicycle WHERE Type = '公路车');",
        "db_id": "bike"
    },
    {
        "id": 212,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'maximum speed', 'maximum load'], 'relations': ['bicycle_to_weight (Bicycle.Weight)', 'bicycle_to_speed (BicyclePerformance.TopSpeed)', 'rider_to_weight (BicycleRider.RiderWeight)'], 'intent': 'calculate_kinetic_energy', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'mass': 'kg (Bicycle.Weight + BicycleRider.RiderWeight)', 'velocity': 'm/s (converted from BicyclePerformance.TopSpeed if necessary)', 'energy': 'joules (J)', 'conversion': 'KE = 0.5 * (Bicycle.Weight + BicycleRider.RiderWeight) * (TopSpeed)^2'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of an electric bicycle traveling at maximum speed under maximum load.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, 0.5 * (Bicycle.Weight + Bicycle.MaxLoad) * POWER((BicyclePerformance.TopSpeed * 1000 / 3600), 2) AS KineticEnergy FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE Bicycle.Type = '电动车';",
        "db_id": "bike"
    },
    {
        "id": 213,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle type', 'power transmission efficiency'], 'relations': ['bicycle_type_to_performance (Type → PowerTransferEfficiency)'], 'intent': 'calculate_average_efficiency_by_type_and_identify_highest', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'efficiency': 'unitless (percentage implied by column name)', 'aggregation': 'average (AVG) and maximum (MAX) functions'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the average power transmission efficiency for each type of bicycle and identify the type with the highest efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, AVG(PowerTransferEfficiency) AS AvgEfficiency FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID GROUP BY Type ORDER BY AvgEfficiency DESC LIMIT 1;",
        "db_id": "bike"
    },
    {
        "id": 214,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['carbon fiber frame material', 'bicycles', 'manufacturers'], 'relations': [\"bicycle_to_frame_material (FrameMaterial='carbon fiber')\", 'bicycle_to_manufacturer (Manufacturer grouping)', 'price_comparison (average Price differences across manufacturers)'], 'intent': 'find_carbon_fiber_bicycles_calculate_average_price_compare_manufacturer_differences', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'price': 'currency (e.g., USD)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Manufacturer', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '制造商', 'examples': ['Giant', 'Trek', 'Specialized', 'Cannondale', 'Santa Cruz']}, {'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格 (元)', 'examples': ['15000.0', '12000.0', '8000.0', '18000.0', '25000.0']}]}}\nA common sense reasoning question is as follows:\nFind all bicycles with a carbon fiber frame material, calculate their average price, and compare price differences among different manufacturers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer, AVG(Price) AS AvgPrice FROM Bicycle WHERE FrameMaterial = '碳纤维' GROUP BY Manufacturer;",
        "db_id": "bike"
    },
    {
        "id": 215,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['tire pressure 1000 PSI', 'contact area', 'tire width', 'bicycle weight', 'rider weight'], 'relations': ['pressure_to_contact_area (PSI → 1/area relationship)', 'weight_to_force (bicycle + rider weight → total force)', 'tire_width_to_area (width × length = contact area)'], 'intent': 'calculate_contact_area_decrease_with_pressure', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000], 'units': {'pressure': 'PSI (pounds per square inch)', 'weight': 'lbs (pounds-force)', 'contact_area': 'in² (square inches)', 'tire_width': 'inches (in)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the tire pressure of a bicycle is increased to 1000 PSI, calculate how much the contact area between the tire and the ground decreases, assuming the tire width remains unchanged.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, (BicycleComponents.TireWidth * 1000) / 1000 AS NewContactArea FROM Bicycle JOIN BicycleComponents ON Bicycle.BicycleID = BicycleComponents.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 216,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle tire', 'ground', 'tire pressure'], 'relations': ['tire_to_pressure (tire → tire pressure)', 'pressure_to_area (tire pressure → contact area)'], 'intent': 'calculate_contact_area', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'tire_pressure': 'psi (pounds per square inch) or kPa (kilopascals)', 'contact_area': 'cm² (square centimeters) or m² (square meters)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA physical knowledge question is as follows:\nCalculate the contact area between the bicycle tire and the ground at a specific tire pressure.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, (BicycleRider.RiderWeight + Bicycle.Weight) / Bicycle.TirePressure AS ContactArea FROM Bicycle JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 217,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Bicycle Type', 'Rolling Resistance'], 'relations': ['type_to_rolling_resistance (Bicycle.Type → BicyclePerformance.RollingResistance)'], 'intent': 'calculate_average_rolling_resistance_by_type_and_find_minimum', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'rolling_resistance': 'Unknown (stored in BicyclePerformance.RollingResistance column)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicyclePerformance': [{'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}]}}\nA mathematical logic question is as follows:\nCalculate the average rolling resistance coefficient for each type of bicycle and identify the bicycle type with the lowest rolling resistance.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, AVG(RollingResistance) AS AvgRollingResistance FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID GROUP BY Type ORDER BY AvgRollingResistance ASC LIMIT 1;",
        "db_id": "bike"
    },
    {
        "id": 218,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['disc brakes', 'bicycle', 'manufacturer', 'braking distance'], 'relations': ['bicycle_to_brake_type (Bicycle → BrakeType)', 'bicycle_to_performance (Bicycle → BicyclePerformance)', 'manufacturer_to_braking_performance (Manufacturer → BrakingDistance)'], 'intent': 'filter_bicycles_by_brake_type_calculate_average_braking_distance_and_compare_across_manufacturers', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['BrakingDistance values from BicyclePerformance table'], 'units': {'braking_distance': 'meters (implied by standard bicycle performance metrics)', 'average_calculation': 'arithmetic mean of braking distances'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '制造商', 'examples': ['Giant', 'Trek', 'Specialized', 'Cannondale', 'Santa Cruz']}, {'column': 'BrakeType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '刹车类型 (Rim, Disc, Coaster)', 'examples': ['Disc', 'Rim', 'Coaster', '碟刹', '脚刹']}], 'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA common sense reasoning question is as follows:\nFind all bicycles equipped with disc brakes, calculate their average braking distance, and compare the braking performance across different manufacturers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer, AVG(BrakingDistance) AS AvgBrakingDistance FROM Bicycle JOIN BicyclePerformance ON Bicycle.BicycleID = BicyclePerformance.BicycleID WHERE BrakeType = '碟刹' GROUP BY Manufacturer;",
        "db_id": "bike"
    },
    {
        "id": 219,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity increased to 100,000 watt-hours', 'motor efficiency', 'rider power output'], 'relations': ['battery_capacity_to_range (BatteryCapacity ∝ Range)', 'efficiency_factor (MotorEfficiency × RiderPowerOutput)'], 'intent': 'calculate_range_increase_with_battery_capacity_change', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000], 'units': {'battery_capacity': 'watt-hours (Wh)', 'motor_efficiency': 'unitless (decimal or %)', 'rider_power_output': 'watts (W)', 'range': 'distance unit (km/miles, implied by physical context)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the battery capacity of a bicycle is increased to 100,000 watt-hours, calculate how much the range will increase, with motor efficiency and rider power output remaining unchanged.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Bicycle.BicycleID, (100000 - BicycleThermodynamics.BatteryCapacity) * BicycleThermodynamics.MotorEfficiency / BicycleRider.RiderPowerOutput AS RangeIncrease FROM Bicycle JOIN BicycleThermodynamics ON Bicycle.BicycleID = BicycleThermodynamics.BicycleID JOIN BicycleRider ON Bicycle.BicycleID = BicycleRider.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 220,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle with carbon fiber frame', 'rider weight 75 kilograms', 'bicycle weight 10 kilograms', 'center of gravity height 50 centimeters'], 'relations': ['frame_material_to_bicycle (carbon fiber → Bicycle.FrameMaterial)', 'rider_to_bicycle (RiderID → BicycleID)', 'combined_center_of_gravity (bicycle + rider)'], 'intent': 'calculate_center_of_gravity_height_under_load', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [75, 10, 50], 'units': {'mass': 'kilograms (kg)', 'height': 'centimeters (cm)', 'conversion': 'cm_to_m: 50 cm = 0.5 m (for physics formula)'}, 'foreign_keys': [{'fk_table': 'BicycleDynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleDynamics', 'pk_column': 'DynamicsID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}, {'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicycleDynamics': [{'column': 'CenterOfGravityHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重心高度 (厘米)', 'examples': ['60.0', '65.0', '62.0', '58.0', '67.0']}]}}\nA physical knowledge question is as follows:\nCalculate the center of gravity height of a bicycle with a carbon fiber frame under maximum load, with a rider weight of 75 kilograms, a bicycle weight of 10 kilograms, and a center of gravity height of 50 centimeters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BicycleID, Manufacturer, Model, (75 * 50 + 10 * 50) / (75 + 10 + MaxLoad) AS CenterOfGravityHeight FROM Bicycle WHERE FrameMaterial = '碳纤维';",
        "db_id": "bike"
    },
    {
        "id": 221,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle', 'rider'], 'relations': ['bicycle_to_performance (BicycleID → PowerTransferEfficiency)', 'rider_to_power_output (RiderID → RiderPowerOutput)'], 'intent': 'calculate_ranked_product_of_power_efficiency_and_rider_output', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power_transfer_efficiency': '% efficiency (unitless ratio)', 'rider_power_output': 'Watts (W)', 'product_unit': 'Watt·% (derived unit)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.BicyclePerformance': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的自行车ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nFind the product of the power transmission efficiency of all bicycles and the rider's power output, and list the top 5 ranked from highest to lowest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, b.Manufacturer, b.Model, p.PowerTransferEfficiency * r.RiderPowerOutput AS ActualPowerOutput FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID JOIN BicycleRider r ON b.BicycleID = r.BicycleID ORDER BY ActualPowerOutput DESC LIMIT 5;",
        "db_id": "bike"
    },
    {
        "id": 222,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycles', 'tire pressure', 'recommended value 60 PSI'], 'relations': ['tire_pressure_comparison (bicycle.tire_pressure < 60 PSI)'], 'intent': 'retrieve_underpressured_bicycles', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60], 'units': {'tire_pressure': 'PSI (pounds per square inch)', 'threshold': '60 PSI (recommended minimum)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Manufacturer', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '制造商', 'examples': ['Giant', 'Trek', 'Specialized', 'Cannondale', 'Santa Cruz']}, {'column': 'Model', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '自行车型号', 'examples': ['TCR Advanced', 'Fuel EX', 'Sirrus X', 'SuperSix EVO', 'Hightower']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}]}}\nA common sense reasoning question is as follows:\nRetrieve all bicycles with tire pressure below the recommended value (60 PSI), and list their manufacturer, model, and tire pressure.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer, Model, TirePressure FROM Bicycle WHERE TirePressure < 60;",
        "db_id": "bike"
    },
    {
        "id": 223,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['bicycle with max speed 1000 km/h', 'rolling resistance coefficient 0.01', 'air resistance coefficient 0.5', 'rider weight 1000 kg', 'bicycle weight 1000 kg'], 'relations': ['total_mass = bicycle_weight + rider_weight (2000 kg)', 'braking_distance_dependency (speed, resistance coefficients, mass)'], 'intent': 'calculate_braking_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 0.01, 0.5, 1000, 1000], 'units': {'speed': 'km/h (converted to m/s for calculation)', 'resistance_coefficients': 'unitless', 'mass': 'kg (total mass 2000 kg)', 'braking_distance': 'meters (calculated via energy-work principle)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}], 'bike.BicyclePerformance': [{'column': 'RollingResistance', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '滚动阻力系数', 'examples': ['0.004', '0.006', '0.005', '0.007', '0.003']}, {'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}, {'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the braking distance of a bicycle with a maximum speed of 1000 km/h, a rolling resistance coefficient of 0.01, an air resistance coefficient of 0.5, a rider weight of 1000 kg, and a bicycle weight of 1000 kg.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BicycleID, Manufacturer, Model, (1000 * 1000) / (2 * (0.01 + 0.5) * 9.81) AS BrakingDistance FROM Bicycle;",
        "db_id": "bike"
    },
    {
        "id": 224,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"wheelbase\", \"rider weight\", \"bicycle turning stability\", \"theoretical minimum turning radius\"],\n  \"relations\": [\n    \"bicycle_to_dynamics (BicycleID → BicycleDynamics.Wheelbase)\",\n    \"bicycle_to_rider (BicycleID → BicycleRider.RiderWeight)\",\n    \"wheelbase_to_stability (Wheelbase affects CorneringStability)\",\n    \"rider_weight_to_stability (RiderWeight affects CorneringStability)\",\n    \"wheelbase_and_steering_angle_to_turning_radius (Wheelbase & SteeringAngle → TurningRadius)\"\n  ],\n  \"intent\": \"analyze_impact_of_wheelbase_and_rider_weight_on_stability_and_calculate_turning_radius\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [\n    \"BicycleDynamics.Wheelbase\",\n    \"BicycleRider.RiderWeight\",\n    \"BicycleDynamics.SteeringAngle\"\n  ],\n  \"units\": {\n    \"wheelbase\": \"mm (millimeters)\",\n    \"rider_weight\": \"kg (kilograms)\",\n    \"turning_radius\": \"m (meters)\",\n    \"formula\": \"Turning Radius = Wheelbase / tan(SteeringAngle)\"\n  },\n  \"required_tables\": [\"Bicycle\", \"BicycleDynamics\", \"BicycleRider\"],\n  \"required_fields\": [\n    \"Bicycle.BicycleID\",\n    \"BicycleDynamics.Wheelbase\",\n    \"BicycleDynamics.SteeringAngle\",\n    \"BicycleRider.RiderWeight\",\n    \"BicyclePerformance.CorneringStability\"\n  ]\n}\n```\nA physical knowledge question is as follows:\nAnalyze the impact of different combinations of wheelbase and rider weight on bicycle turning stability, and calculate the theoretical minimum turning radius for each bicycle.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.BicycleID, b.Manufacturer, b.Model, r.RiderWeight, d.Wheelbase, d.SteeringAngle, (d.Wheelbase / (2 * SIN(RADIANS(d.SteeringAngle)))) AS MinTurningRadius FROM BicycleDynamics d JOIN Bicycle b ON d.BicycleID = b.BicycleID JOIN BicycleRider r ON d.BicycleID = r.BicycleID;",
        "db_id": "bike"
    },
    {
        "id": 225,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', 'battery capacity', 'motor efficiency', 'rider power output', 'ambient temperature'], 'relations': ['bicycle_to_thermodynamics (BicycleID → BicycleThermodynamics)', 'bicycle_to_rider (BicycleID → BicycleRider)', 'battery_capacity_to_range (direct input parameter)', 'motor_efficiency_to_range (direct input parameter)', 'rider_power_output_to_range (direct input parameter)', 'ambient_temperature_grouping (grouping key)'], 'intent': 'calculate_theoretical_electric_bicycle_range', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'battery_capacity': 'Ah or Wh (depending on database schema)', 'motor_efficiency': '% efficiency', 'rider_power_output': 'Watts', 'ambient_temperature': '°C', 'range': 'km/miles (implied output unit)'}, 'foreign_keys': [{'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}], 'bike.BicycleRider': [{'column': 'RiderPowerOutput', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手功率输出 (瓦)', 'examples': ['300.0', '250.0', '200.0', '280.0', '260.0']}]}}\nA mathematical logic question is as follows:\nCalculate the theoretical range of each electric bicycle based on battery capacity, motor efficiency, and rider power output, and display the average values grouped by ambient temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT th.AmbientTemperature, AVG((th.BatteryCapacity * th.MotorEfficiency / 100) / (r.RiderPowerOutput / 1000) * 3.6) AS AvgRange FROM BicycleThermodynamics th JOIN Bicycle b ON th.BicycleID = b.BicycleID JOIN BicycleRider r ON th.BicycleID = r.BicycleID WHERE b.Type = '电动车' GROUP BY th.AmbientTemperature;",
        "db_id": "bike"
    },
    {
        "id": 226,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['full-suspension mountain bikes', 'aluminum rims', 'tire widths > 50mm', 'manufacturers'], 'relations': ['bike_to_components (Bicycle.BicycleID → BicycleComponents.BicycleID)', \"rim_material_filter (BicycleComponents.RimMaterial = 'aluminum')\", 'tire_width_filter (BicycleComponents.TireWidth > 50)', \"suspension_type_filter (Bicycle.SuspensionType = 'full-suspension')\", 'manufacturer_to_price_aggregation (Bicycle.Manufacturer → Bicycle.Price)'], 'intent': 'filter_bikes_by_specifications_and_calculate_average_price_per_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'tire_width': 'mm (millimeters)', 'price': 'USD (implied currency unit)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'BicycleID', 'type': 'INTEGER', 'primary_key': True, 'comment': '自行车唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '制造商', 'examples': ['Giant', 'Trek', 'Specialized', 'Cannondale', 'Santa Cruz']}, {'column': 'SuspensionType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '避震类型 (None, Front, Full)', 'examples': ['None', 'Full', 'Front', '无避震', '前避震']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格 (元)', 'examples': ['15000.0', '12000.0', '8000.0', '18000.0', '25000.0']}], 'bike.BicycleComponents': [{'column': 'RimMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '轮圈材料 (Aluminum, Carbon Fiber)', 'examples': ['Carbon Fiber', 'Aluminum', '铝合金', '碳纤维', '钢']}, {'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA common sense reasoning question is as follows:\nFind full-suspension mountain bikes that use aluminum rims and have tire widths exceeding 50mm, and calculate the average price for each manufacturer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.Manufacturer, AVG(b.Price) AS AvgPrice FROM Bicycle b JOIN BicycleComponents c ON b.BicycleID = c.BicycleID WHERE b.SuspensionType = '全避震' AND b.Type = '山地车' AND c.TireWidth > 50 AND c.RimMaterial = '铝合金' GROUP BY b.Manufacturer;",
        "db_id": "bike"
    },
    {
        "id": 227,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['motor', 'MotorEfficiency', '5000 watts', '200°C ambient temperature', 'required cooling rate'], 'relations': ['power_output_to_heat_generation (5000W → thermal losses)', 'efficiency_to_heat (MotorEfficiency → heat calculation)'], 'intent': 'calculate_required_cooling_rate', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 5000], 'units': {'temperature': '°C (Celsius)', 'power': 'W (Watts)', 'cooling_rate': 'W (Watts, equivalent to heat dissipation required)'}, 'foreign_keys': [{'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the required cooling rate of the motor to maintain normal operating temperature at an ambient temperature of 200°C, with the motor continuously outputting 5000 watts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT th.BicycleID, (5000 * (1 - th.MotorEfficiency/100) + (200 - 25) * 50) AS RequiredDissipation FROM BicycleThermodynamics th WHERE th.MotorTemperature < 100;",
        "db_id": "bike"
    },
    {
        "id": 228,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['drag coefficient', 'top speed', \"rider's weight\", 'aerodynamic drag power', 'bicycle models'], 'relations': ['bicycle_to_performance (Bicycle.BicycleID → BicyclePerformance.BicycleID)', 'bicycle_to_rider (Bicycle.BicycleID → BicycleRider.BicycleID)', 'drag_power_formula (drag coefficient, top speed, rider weight → aerodynamic drag power)'], 'intent': 'calculate_and_rank_aerodynamic_drag_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'drag_coefficient': 'unitless (implied by AerodynamicDrag field)', 'top_speed': 'km/h or m/s (implied by TopSpeed field)', 'rider_weight': 'kg (implied by RiderWeight field)', 'drag_power': 'watts (calculated result, not present in schema)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Model', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '自行车型号', 'examples': ['TCR Advanced', 'Fuel EX', 'Sirrus X', 'SuperSix EVO', 'Hightower']}], 'bike.BicyclePerformance': [{'column': 'AerodynamicDrag', 'type': 'DECIMAL(10, 3)', 'primary_key': False, 'comment': '空气阻力系数', 'examples': ['0.25', '0.3', '0.28', '0.24', '0.32']}, {'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA physical knowledge question is as follows:\nCalculate the aerodynamic drag power for each bicycle based on the drag coefficient, top speed, and rider's weight, and list the top 5 models with the highest aerodynamic drag power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, b.Manufacturer, b.Model, 0.5 * p.AerodynamicDrag * 1.225 * POW(p.TopSpeed/3.6, 3) * (c.TireWidth/1000 * b.HandlebarWidth/100) AS AirPower FROM Bicycle b JOIN BicyclePerformance p ON b.BicycleID = p.BicycleID JOIN BicycleComponents c ON b.BicycleID = c.BicycleID ORDER BY AirPower DESC LIMIT 5;",
        "db_id": "bike"
    },
    {
        "id": 229,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"electric bicycle\", \"battery capacity\", \"motor efficiency\", \"rider power output\", \"ambient temperature\"],\n  \"relations\": [\n    \"bicycle_to_thermodynamics (BicycleID → BicycleThermodynamics.BicycleID)\",\n    \"bicycle_to_rider (BicycleID → BicycleRider.BicycleID)\",\n    \"efficiency_factors (battery_capacity × motor_efficiency × rider_power_output)\"\n  ],\n  \"intent\": \"calculate_energy_recovery_efficiency\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"battery_capacity\": \"Wh (Watt-hours)\",\n    \"motor_efficiency\": \"% (percentage)\",\n    \"rider_power_output\": \"W (Watts)\",\n    \"ambient_temperature\": \"°C (Celsius)\",\n    \"energy_recovery_efficiency\": \"% (calculated as (motor_efficiency × battery_capacity) / rider_power_output × 100)\"\n  },\n  \"required_tables\": [\"BicycleThermodynamics\", \"BicycleRider\"],\n  \"required_fields\": [\n    \"BicycleThermodynamics.BatteryCapacity\",\n    \"BicycleThermodynamics.MotorEfficiency\",\n    \"BicycleThermodynamics.AmbientTemperature\",\n    \"BicycleRider.RiderPowerOutput\"\n  ]\n}\n```\nA mathematical logic question is as follows:\nCalculate the energy recovery efficiency of each electric bicycle, based on battery capacity, motor efficiency, and rider power output, and display the average values grouped by ambient temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT th.AmbientTemperature, AVG((th.BatteryCapacity * th.MotorEfficiency/100) / r.RiderPowerOutput) AS EnergyRecovery FROM BicycleThermodynamics th JOIN Bicycle b ON th.BicycleID = b.BicycleID JOIN BicycleRider r ON th.BicycleID = r.BicycleID WHERE b.Type = '电动车' GROUP BY th.AmbientTemperature;",
        "db_id": "bike"
    },
    {
        "id": 230,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['road bikes', 'carbon fiber frame', 'tire pressure above 80 PSI', 'average price', 'manufacturer'], 'relations': ['bike_to_manufacturer (Bicycle → Manufacturer)', 'frame_material_filter (carbon fiber)', 'tire_pressure_filter (TirePressure > 80 PSI)'], 'intent': 'filter_bikes_and_calculate_average_price', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80], 'units': {'tire_pressure': 'PSI (pounds per square inch)', 'price': 'currency units (e.g., USD)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}, {'column': 'FrameMaterial', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '车架材料 (Aluminum, Carbon Fiber, Steel, Titanium)', 'examples': ['Carbon Fiber', 'Aluminum', '碳纤维', '铝合金', '钛合金']}, {'column': 'TirePressure', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎压力 (PSI)', 'examples': ['100.0', '30.0', '80.0', '50.0', '60.0']}, {'column': 'Manufacturer', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '制造商', 'examples': ['Giant', 'Trek', 'Specialized', 'Cannondale', 'Santa Cruz']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格 (元)', 'examples': ['15000.0', '12000.0', '8000.0', '18000.0', '25000.0']}]}}\nA common sense reasoning question is as follows:\nFind all road bikes that use a carbon fiber frame and have tire pressure above the recommended value (80 PSI), and calculate the average price by manufacturer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer, AVG(Price) AS AvgPrice FROM Bicycle WHERE FrameMaterial = '碳纤维' AND Type = '公路车' AND TirePressure > 80 GROUP BY Manufacturer;",
        "db_id": "bike"
    },
    {
        "id": 231,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity decay percentage', 'ambient temperature -50°C', 'linear decay rate 0.5%/°C'], 'relations': ['temperature_to_capacity_decay (ΔT × 0.5% → % decay)'], 'intent': 'calculate_battery_capacity_decay_percentage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [-50, 0.5], 'units': {'temperature': '°C (Celsius)', 'decay_rate': '%/°C (percentage per degree Celsius)', 'decay_result': '% (percentage of original capacity)'}, 'foreign_keys': [{'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the percentage of battery capacity decay to its original value when the ambient temperature is -50°C, with the battery capacity decreasing linearly with temperature by 0.5% for every 1°C drop.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT BicycleID, (100 - (25 - (-50)) * 0.5) AS CapacityRemaining FROM BicycleThermodynamics WHERE BicycleID IN (SELECT BicycleID FROM Bicycle WHERE Type = '电动车');",
        "db_id": "bike"
    },
    {
        "id": 232,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['theoretical braking distance', 'actual braking distance', 'bicycle models', '10% difference threshold'], 'relations': ['bicycle_model_to_performance (Bicycle → BicyclePerformance)', 'performance_to_braking_distance (BicyclePerformance → BrakingDistance)', 'component_influence_on_theoretical (BicycleComponents → TheoreticalBrakingDistance)'], 'intent': 'calculate_percentage_difference_braking_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10], 'units': {'braking_distance': 'meters (implied by context)', 'percentage_difference': '% (calculated ratio)', 'conversion': 'Δ% = |(Theoretical - Actual)/Theoretical| * 100'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleRider', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleRider', 'pk_column': 'RiderID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Model', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '自行车型号', 'examples': ['TCR Advanced', 'Fuel EX', 'Sirrus X', 'SuperSix EVO', 'Hightower']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['7.5', '13.2', '11.0', '7.8', '14.5']}], 'bike.BicyclePerformance': [{'column': 'BrakingDistance', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '刹车距离 (米)', 'examples': ['5.0', '6.0', '5.5', '4.8', '6.2']}], 'bike.BicycleComponents': [{'column': 'BrakeType'}, {'column': 'TireType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '轮胎类型 (Clincher, Tubular, Tubeless)', 'examples': ['Tubeless', 'Clincher', '开口胎', '真空胎', '管胎']}, {'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}], 'bike.BicycleRider': [{'column': 'RiderWeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '骑手体重 (公斤)', 'examples': ['75.0', '65.0', '80.0', '60.0', '85.0']}]}}\nA physical knowledge question is as follows:\nCalculate the percentage difference between the theoretical braking distance and the actual measured value for each bicycle, and list the models with a difference exceeding 10%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, b.Manufacturer, b.Model, ABS((POW(p.TopSpeed/3.6, 2)/(2*(p.RollingResistance + p.AerodynamicDrag)*9.81) - p.BrakingDistance)/p.BrakingDistance)*100 AS Deviation, p.BrakingDistance AS ActualDistance, POW(p.TopSpeed/3.6, 2)/(2*(p.RollingResistance + p.AerodynamicDrag)*9.81) AS TheoreticalDistance FROM BicyclePerformance p JOIN Bicycle b ON p.BicycleID = b.BicycleID WHERE ABS((POW(p.TopSpeed/3.6, 2)/(2*(p.RollingResistance + p.AerodynamicDrag)*9.81) - p.BrakingDistance)/p.BrakingDistance) > 0.1",
        "db_id": "bike"
    },
    {
        "id": 233,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycles', 'battery capacity decay curve', 'ambient temperature (-20°C to 60°C)', 'driving range', '10°C temperature intervals'], 'relations': ['temperature_to_battery_capacity (AmbientTemperature → BatteryCapacity)', 'interval_grouping (temperature range → 10°C intervals)', 'driving_range_dependency (BatteryCapacity → driving range)'], 'intent': 'calculate_battery_capacity_decay_curve_with_temperature_grouping', 'reasoning_type': 'physical knowledge reasoning + mathematical logic reasoning', 'numerical_values': [-20, 60, 10], 'units': {'temperature': '°C (Celsius)', 'battery_capacity': 'kWh (implied by BatteryCapacity field)', 'interval': '10°C (temperature interval width)'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}, {'column': 'BatteryCapacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池容量 (瓦时)', 'examples': ['500.0', '450.0', '0.0', '600.0', '700.0']}, {'column': 'BatteryTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电池温度 (°C)', 'examples': ['40.0', '45.0', '0.0', '50.0', '55.0']}], 'bike.BicyclePerformance': [{'column': 'TopSpeed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最高速度 (公里/小时)', 'examples': ['50.0', '40.0', '35.0', '52.0', '38.0']}, {'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the battery capacity decay curve of electric bicycles in environments ranging from -20°C to 60°C, grouping and averaging the driving range in 10°C intervals for statistical analysis.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT FLOOR(th.AmbientTemperature/10)*10 AS TempRange, AVG(th.BatteryCapacity * (1 - 0.005*POW(ABS(th.AmbientTemperature-25), 1.2)) * th.MotorEfficiency/100 / (r.RiderPowerOutput/1000) * 3.6) AS AvgRange FROM BicycleThermodynamics th JOIN Bicycle b ON th.BicycleID = b.BicycleID JOIN BicycleRider r ON th.BicycleID = r.BicycleID WHERE b.Type = '电动车' GROUP BY TempRange ORDER BY TempRange",
        "db_id": "bike"
    },
    {
        "id": 234,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mountain bike models', 'full suspension', 'hardtail', 'tire width >50mm', 'tire width <40mm'], 'relations': ['suspension_type_to_tire_width (full_suspension→tire_width>50mm)', 'suspension_type_to_tire_width (hardtail→tire_width<40mm)', 'mismatch_condition (suspension_type≠tire_width_criteria)'], 'intent': 'identify_mismatch_between_suspension_and_tire', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [50, 40], 'units': {'tire_width': 'mm (millimeters)', 'thresholds': '50mm (wide tires), 40mm (narrow tires)'}, 'foreign_keys': [{'fk_table': 'BicycleComponents', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicycleComponents', 'pk_column': 'ComponentID'}], 'tableinfo': {'bike.Bicycle': [{'column': 'Model', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '自行车型号', 'examples': ['TCR Advanced', 'Fuel EX', 'Sirrus X', 'SuperSix EVO', 'Hightower']}, {'column': 'SuspensionType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '避震类型 (None, Front, Full)', 'examples': ['None', 'Full', 'Front', '无避震', '前避震']}, {'column': 'Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '自行车类型 (Road, Mountain, Hybrid, Electric, BMX)', 'examples': ['Road', 'Mountain', 'Hybrid', 'Electric', '公路车']}], 'bike.BicycleComponents': [{'column': 'TireWidth', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '轮胎宽度 (毫米)', 'examples': ['25.0', '27.5', '28.0', '29.0', '26.0']}]}}\nA common sense reasoning question is as follows:\nFind mountain bike models where the suspension type does not match the tire width (full suspension should have wide tires >50mm, hardtail should have narrow tires <40mm).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT b.BicycleID, b.Manufacturer, b.Model, b.SuspensionType, c.TireWidth FROM Bicycle b JOIN BicycleComponents c ON b.BicycleID = c.BicycleID WHERE b.Type = '山地车' AND ((b.SuspensionType = '全避震' AND c.TireWidth <= 50) OR (b.SuspensionType = '无避震' AND c.TireWidth >= 40))",
        "db_id": "bike"
    },
    {
        "id": 235,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric vehicle motor', '500 kg load', '1 hour', '60°C ambient temperature', 'no cooling system'], 'relations': ['load_to_energy_conversion (500 kg → work/heat generation)', 'time_factor (1 hour → cumulative heating effect)', 'ambient_to_motor_temperature (ΔT = motor_temp - 60°C)'], 'intent': 'calculate_theoretical_motor_temperature_rise', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500, 1, 60], 'units': {'mass': 'kg', 'time': 'hour', 'temperature': '°C'}, 'foreign_keys': [{'fk_table': 'BicyclePerformance', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}, {'fk_table': 'BicycleThermodynamics', 'fk_column': 'BicycleID', 'ref_table': 'Bicycle', 'ref_column': 'BicycleID'}], 'primary_keys': [{'pk_table': 'Bicycle', 'pk_column': 'BicycleID'}, {'pk_table': 'BicyclePerformance', 'pk_column': 'PerformanceID'}, {'pk_table': 'BicycleThermodynamics', 'pk_column': 'ThermodynamicsID'}], 'tableinfo': {'bike.BicycleThermodynamics': [{'column': 'AmbientTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '环境温度 (°C)', 'examples': ['25.0', '30.0', '20.0', '22.0', '21.0']}, {'column': 'MotorTemperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机温度 (°C)', 'examples': ['60.0', '65.0', '0.0', '55.0', '50.0']}, {'column': 'HeatDissipationRate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '散热率 (瓦)', 'examples': ['100.0', '95.0', '0.0', '50.0', '55.0']}, {'column': 'MotorEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '电机效率 (%)', 'examples': ['90.0', '85.0', '0.0', '80.0', '95.0']}], 'bike.BicyclePerformance': [{'column': 'PowerTransferEfficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动力传递效率 (%)', 'examples': ['95.0', '90.0', '92.0', '96.0', '88.0']}], 'bike.Bicycle': [{'column': 'MaxLoad', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '最大载重 (公斤)', 'examples': ['120.0', '130.0', '110.0', '135.0', '150.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the theoretical temperature rise of an electric vehicle motor when continuously operating at a load of 500 kg for 1 hour, with an ambient temperature of 60°C and no cooling system.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT th.BicycleID, (r.RiderPowerOutput/(th.MotorEfficiency/100) * 3600 * (1 - th.MotorEfficiency/100)) / (500 * 0.9) + 60 AS TheoreticalTemp FROM BicycleThermodynamics th JOIN Bicycle b ON th.BicycleID = b.BicycleID JOIN BicycleRider r ON th.BicycleID = r.BicycleID WHERE b.Type = '电动车' AND b.MaxLoad >= 500",
        "db_id": "bike"
    },
    {
        "id": 236,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine models', 'compression ratio', 'Otto cycle', 'thermal efficiency'], 'relations': ['engine_model_to_compression_ratio (Model → Compression_Ratio)', 'compression_ratio_to_thermal_efficiency (Otto_cycle_formula)'], 'intent': 'query_and_calculate_engine_thermal_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 12], 'units': {'compression_ratio': 'unitless (ratio)', 'thermal_efficiency': 'percentage (%)', 'formula_constant': 'γ (specific heat ratio) assumed as 1.4 for air'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA physical knowledge question is as follows:\nPlease query engine models with a compression ratio between 10:1 and 12:1, calculate their theoretical maximum thermal efficiency (based on the Otto cycle), and sort the results in ascending order by compression ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Compression_Ratio, (1 - (1/POW(Compression_Ratio, 0.4))) AS Thermal_Efficiency FROM engine WHERE Compression_Ratio BETWEEN 10 AND 12 AND Fuel_Type = 'Gasoline' ORDER BY Compression_Ratio ASC;",
        "db_id": "car_engine"
    },
    {
        "id": 237,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['inline 6-cylinder engines', 'Displacement field', 'single-cylinder displacement', 'calculation error'], 'relations': ['engine_to_configuration (inline engines)', 'cylinder_count (6 cylinders)', 'displacement_verification (calculated vs stored)', 'error_calculation (absolute difference)'], 'intent': 'calculate_single_cylinder_displacement_and_validate_total', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [6, 3.1416], 'units': {'bore_stroke': 'mm (millimeters)', 'displacement': 'cc (cubic centimeters) or L (liters)', 'conversion': '1 cc = 1 cm³; (π/4)*Bore²*Stroke*Cylinders → total displacement'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}, {'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}]}}\nA mathematical logic question is as follows:\nPlease calculate the single-cylinder displacement for all inline 6-cylinder engines, verify whether the total displacement equals the value in the Displacement field, and sort the top 5 by the absolute value of calculation error in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Displacement, (PI() * POW(Bore/20, 2) * Stroke/10)/1000 AS 单缸排量, ABS(Displacement - (PI() * POW(Bore/20, 2) * Stroke/10)/1000 * Cylinders) AS 误差 FROM engine WHERE Configuration = 'Inline' AND Cylinders = 6 ORDER BY 误差 DESC LIMIT 5;",
        "db_id": "car_engine"
    },
    {
        "id": 238,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Turbocharged', 'Cast Iron', 'Specific Power'], 'relations': ['engine_to_materials (Engine_ID)', 'engine_to_performance (Engine_ID)', \"filter_condition (Aspiration='Turbocharged')\", \"filter_condition (Block_Material='Cast Iron')\", 'sort_condition (Specific_Power DESC)'], 'intent': 'list_top_10_turbocharged_cast_iron_engines_by_specific_power', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [10], 'units': {'Specific_Power': 'kW per liter (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Aspiration', 'type': 'ENUM', 'primary_key': False, 'comment': '进气方式', 'examples': ['Turbocharged', 'Naturally Aspirated', 'Supercharged']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}], 'car_engine.engineperformance': [{'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}]}}\nA common sense reasoning question is as follows:\nPlease list the top 10 engines that are turbocharged (Aspiration='Turbocharged') and use cast iron cylinder blocks (Block_Material='Cast Iron'), sorted in descending order by specific power (Specific_Power).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, e.Aspiration, ep.Specific_Power FROM engine e JOIN enginematerials m ON e.Engine_ID = m.Engine_ID JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE e.Aspiration = 'Turbocharged' AND m.Block_Material = 'Cast Iron' ORDER BY ep.Specific_Power DESC LIMIT 10;",
        "db_id": "car_engine"
    },
    {
        "id": 239,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine models', 'redline speed 100000 RPM', 'speed of sound 343 m/s'], 'relations': ['model_to_stroke (engine.model → engine.stroke)', 'piston_speed_calculation (2 * Stroke * 100000 RPM / 60)', 'speed_of_sound_comparison (Piston_Speed > 343 m/s)'], 'intent': 'calculate_hypothetical_piston_speed_and_filter_models_exceeding_sound_speed', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 343, 2, 60], 'units': {'RPM': 'revolutions per minute', 'piston_speed': 'm/s (meters per second)', 'stroke': 'meters (assumed for unit consistency in formula)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the redline speed (Redline) for all engines is increased to 100,000 RPM, calculate the piston speed (Piston_Speed=2*Stroke*RPM/60) at this condition and list the models that exceed the speed of sound (343 m/s), sorted in descending order by piston speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Stroke, (2 * Stroke * 100000) / 60000 AS Piston_Speed FROM engine WHERE (2 * Stroke * 100000) / 60000 > 343 ORDER BY Piston_Speed DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 240,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine model', 'volume (length × width × height)', 'compression ratio'], 'relations': ['engine_to_dimensions (Model → Length/Width/Height)', 'dimension_to_compression (Engine_ID → Compression_Ratio)'], 'intent': 'retrieve top 3 engines by volume with compression ratios', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'length': 'unit not specified (implied by database schema)', 'volume': 'cubic unit derived from length × width × height', 'compression_ratio': 'unitless (ratio)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}], 'car_engine.enginedimensions': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}, {'column': 'Height', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '高度 (毫米)', 'examples': ['800.0', '750.0', '780.0', '820.0', '850.0']}]}}\nA physical knowledge question is as follows:\nRetrieve the top three engine models with the largest volume (length × width × height), sorted in descending order by volume, and provide their compression ratios.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (ed.Length * ed.Width * ed.Height) AS Volume, e.Compression_Ratio FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID ORDER BY Volume DESC LIMIT 3;",
        "db_id": "car_engine"
    },
    {
        "id": 241,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['V-type arrangement engines', 'cylinder dimensions (bore, stroke)', 'total surface area'], 'relations': ['engine_to_configuration (V-type filter)', 'engine_to_dimensions (bore/stroke mapping)'], 'intent': 'calculate_total_surface_area_for_cylinders', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'bore': 'unit-dependent (from database, e.g., mm/inch)', 'stroke': 'unit-dependent (from database, e.g., mm/inch)', 'surface_area': 'square unit of bore/stroke (e.g., mm²/inch²)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}], 'car_engine.enginedimensions': [{'column': 'Bore'}, {'column': 'Stroke'}]}}\nA mathematical logic question is as follows:\nCalculate the total surface area of cylinders for all V-type arrangement engines (assuming the cylinder is a cylinder, surface area = 2πr² + 2πrh), sort in ascending order by surface area and take the top five.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (2 * PI() * POWER(e.Bore/2000, 2) + 2 * PI() * (e.Bore/2000) * (e.Stroke/1000)) * e.Cylinders * 2 AS TotalSurfaceArea FROM engine e WHERE e.Configuration LIKE 'V%%' ORDER BY TotalSurfaceArea ASC LIMIT 5;",
        "db_id": "car_engine"
    },
    {
        "id": 242,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"engine models\", \"weight exceeding 150 kg\", \"length less than 600 mm\", \"power-to-weight ratio\"],\n  \"relations\": [\n    \"engine_to_dimensions (engine.Engine_ID → enginedimensions.Engine_ID)\",\n    \"engine_to_performance (engine.Engine_ID → engineperformance.Engine_ID)\"\n  ],\n  \"intent\": \"filter_engine_models_by_dimensions_and_sort_by_power_to_weight\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [150, 600],\n  \"units\": {\n    \"weight\": \"kg (kilograms)\",\n    \"length\": \"mm (millimeters)\"\n  },\n  \"required_tables\": [\"engine\", \"enginedimensions\", \"engineperformance\"],\n  \"required_fields\": [\n    \"engine.Model\",\n    \"enginedimensions.Weight\",\n    \"enginedimensions.Length\",\n    \"engineperformance.Power_To_Weight_Ratio\"\n  ]\n}\n```\nA common sense reasoning question is as follows:\nQuery the engine models with a weight exceeding 150 kilograms and a length less than 600 millimeters, sorted in descending order by the power-to-weight ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (e.Horsepower / e.Weight) AS PowerWeightRatio FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID WHERE e.Weight > 150 AND ed.Length < 600 ORDER BY PowerWeightRatio DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 243,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'enginedimensions', 'virtual_total_volume', 'cylinder_spacing', 'cylinders'], 'relations': ['engine_to_dimensions (engine.Engine_ID → enginedimensions.Engine_ID)', 'volume_formula (Length × Width × Height + Cylinder_Spacing × Cylinders)', 'top_two_selection (ORDER BY virtual_total_volume DESC LIMIT 2)'], 'intent': 'calculate_virtual_volume_with_modified_cylinder_spacing_and_rank_top_engines', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000], 'units': {'cylinder_spacing': 'mm (millimeters)', 'length_width_height': 'mm (millimeters)', 'volume': 'mm³ (cubic millimeters)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}, {'column': 'Height', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '高度 (毫米)', 'examples': ['800.0', '750.0', '780.0', '820.0', '850.0']}, {'column': 'Cylinder_Spacing', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '气缸间距 (毫米)', 'examples': ['100.0', '90.0', '95.0', '110.0', '92.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the cylinder spacing is expanded to 10,000 mm (far exceeding the actual value), calculate the virtual total volume (Length × Width × Height + Cylinder_Spacing × Cylinders) for all engines, and select the top two with the largest volumes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (ed.Length * ed.Width * ed.Height) + (10000 * e.Cylinders) AS VirtualVolume FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID ORDER BY VirtualVolume DESC LIMIT 2;",
        "db_id": "car_engine"
    },
    {
        "id": 244,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Engine', 'Manufacturer', 'Volume'], 'relations': ['engine_to_dimensions (engine.Engine_ID → enginedimensions.Engine_ID)', 'manufacturer_to_engines (Manufacturer → Engine)'], 'intent': 'calculate_engine_volume_group_by_manufacturer_and_identify_largest_average', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'volume': 'cubic decimeters (dm³)', 'calculation': 'Volume = Length × Width × Height (assuming dimensions are in decimeters)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}, {'column': 'Height', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '高度 (毫米)', 'examples': ['800.0', '750.0', '780.0', '820.0', '850.0']}]}}\nA physical knowledge question is as follows:\nCalculate the volume (in cubic decimeters) of each engine, group them by manufacturer, and identify the manufacturer with the largest average volume.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, AVG((ed.Length/100) * (ed.Width/100) * (ed.Height/100)) AS AvgVolume FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID GROUP BY e.Manufacturer ORDER BY AvgVolume DESC LIMIT 1;",
        "db_id": "car_engine"
    },
    {
        "id": 245,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['inline engines', 'theoretical length', 'actual length', 'number of cylinders'], 'relations': ['engine_configuration (inline)', 'cylinders_to_length (number_of_cylinders → theoretical_length)', 'engine_to_dimensions (Engine_ID → Length)'], 'intent': 'calculate_and_compare_engine_length_difference', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'length': 'millimeters (assuming from engineering context)', 'cylinder_spacing': 'millimeters (assuming from engineering context)', 'difference': 'millimeters (theoretical - actual length)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Cylinder_Spacing', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '气缸间距 (毫米)', 'examples': ['100.0', '90.0', '95.0', '110.0', '92.0']}]}}\nA mathematical logic question is as follows:\nCalculate the theoretical total length of inline engines, compare it with the actual Length, and output the 5 groups with the largest differences, grouped by the number of cylinders.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Cylinders, ABS(((e.Cylinders-1)*ed.Cylinder_Spacing + (e.Bore*e.Cylinders)) - ed.Length) AS DeltaL FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID WHERE e.Configuration = 'Inline' ORDER BY DeltaL DESC LIMIT 5;",
        "db_id": "car_engine"
    },
    {
        "id": 246,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'manufacturer', 'cast iron', 'aluminum alloy'], 'relations': ['engine_to_manufacturer', 'engine_to_dimensions', 'engine_to_material'], 'intent': 'identify_anomalies_and_count_by_manufacturer', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [7.3, 2.7], 'units': {'density': 'kg/dm³', 'weight': 'kg', 'volume': 'dm³ (calculated as length×width×height)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['200.0', '150.0', '180.0', '190.0', '250.0']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}, {'column': 'Height', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '高度 (毫米)', 'examples': ['800.0', '750.0', '780.0', '820.0', '850.0']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}]}}\nA common sense reasoning question is as follows:\nIdentify engines whose weight exceeds the theoretical maximum volume, and group and count the anomalies by manufacturer. Assume the density of cast iron is 7.3 kg/dm³ and aluminum alloy is 2.7 kg/dm³.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, COUNT(*) AS AnomalyCount FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID WHERE e.Weight > ((ed.Length/100)*(ed.Width/100)*(ed.Height/100))*7.3 GROUP BY e.Manufacturer;",
        "db_id": "car_engine"
    },
    {
        "id": 247,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Engine', 'Cylinder_Spacing', \"Earth's Diameter\", \"Earth's Circumference\"], 'relations': ['Engine_to_Cylinder_Spacing (Engine.Engine_ID → enginedimensions.Engine_ID)', \"Cylinder_Spacing_to_Earth_Diameter (Cylinder_Spacing = Earth's Diameter)\", \"Earth_Diameter_to_Circumference (Circumference = π × Earth's Diameter)\"], 'intent': 'calculate_number_of_circumferences', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3.14159], 'units': {\"Earth's Diameter\": 'kilometers (known constant)', 'Cylinder_Spacing': 'units from database (assumed consistent)', 'conversion': 'Circumference = π × Diameter'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Cylinder_Spacing', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '气缸间距 (毫米)', 'examples': ['100.0', '90.0', '95.0', '110.0', '92.0']}], 'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there exists an engine with cylinder spacing equal to the Earth's diameter, calculate the theoretical number of circumferences around the Earth's equator it could make, grouped by Engine_ID for output.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, ((10000-1)*12742000000 + e.Bore)/40075000000 AS Circles FROM engine e;",
        "db_id": "car_engine"
    },
    {
        "id": 248,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine maximum speed', 'angular velocity', 'material limit of crankshaft'], 'relations': ['engine_to_angular_velocity (Engine_ID → Angular_Velocity)', 'crankshaft_material_to_limit (Crankshaft_Material → Max_Angular_Velocity_Limit)'], 'intent': 'calculate_angular_velocity_and_filter_by_material_limit', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [800], 'units': {'angular_velocity': 'rad/s (calculated from RPM using ω = 2πRPM/60)', 'material_limit': 'rad/s (example value: 800 rad/s for forged steel crankshaft)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Redline', 'type': 'INTEGER', 'primary_key': False, 'comment': '红线转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}], 'car_engine.enginedynamics': [{'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}], 'car_engine.enginematerials': [{'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}]}}\nA physical knowledge question is as follows:\nCalculate the angular velocity of an engine at its maximum speed and filter out the engines whose angular velocity exceeds the material limit of the crankshaft.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, (2 * PI() * ed.Max_turn) / 60 AS Angular_Velocity, em.Crankshaft_Material FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID JOIN enginematerials em ON e.Engine_ID = em.Engine_ID WHERE ((2 * PI() * ed.Max_turn) / 60) > CASE WHEN em.Crankshaft_Material = 'Forged Steel' THEN 1000 WHEN em.Crankshaft_Material = 'Cast Iron' THEN 800 ELSE 500 END;",
        "db_id": "car_engine"
    },
    {
        "id": 249,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'specific power output threshold', 'theoretical thermal efficiency'], 'relations': ['engine_to_performance (engine.Engine_ID → engineperformance.Engine_ID)', 'specific_power_filter (Horsepower/Displacement ≥ 100 hp/L)', 'thermal_efficiency_calculation (engineperformance.Thermal_Efficiency)'], 'intent': 'calculate_theoretical_thermal_efficiency_with_filter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'specific_power': 'horsepower per liter (hp/L)', 'thermal_efficiency': 'dimensionless ratio or percentage (as stored in database)', 'horsepower': 'hp (imperial horsepower)', 'displacement': 'L (liters)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力', 'examples': ['320', '220', '310', '425', '650']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA mathematical logic question is as follows:\nCalculate the theoretical thermal efficiency of an engine at peak power speed, excluding models with a specific power output below 100 horsepower per liter.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, (ep.BMEP * 1e5 * e.Displacement * ed.Peak_Power * 0.00001667) / (ep.Fuel_Consumption * 34.2e6) * 100 AS Thermal_Efficiency FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE ep.Specific_Power >= 100;",
        "db_id": "car_engine"
    },
    {
        "id": 250,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'compression ratio > 14:1', 'regular gasoline'], 'relations': ['engine_to_compression_ratio (engine.Engine_ID → engine.Compression_Ratio)', 'engine_to_fuel_type (engine.Engine_ID → engine.Fuel_Type)', 'compression_ratio_threshold (Compression_Ratio > 14:1)', \"fuel_type_filter (Fuel_Type = 'regular gasoline')\"], 'intent': 'filter_engines_with_knocking_risk', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [14], 'units': {'compression_ratio': 'unitless (ratio)', 'fuel_type': 'category (regular gasoline)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}]}}\nA common sense reasoning question is as follows:\nFilter engines with a compression ratio exceeding 14:1 but using regular gasoline, as these engines may develop knocking issues.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Model, Compression_Ratio, Fuel_Type FROM engine WHERE Compression_Ratio > 14 AND Fuel_Type = 'Gasoline';",
        "db_id": "car_engine"
    },
    {
        "id": 251,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car engines', 'piston material aluminum alloy', 'piston material steel', 'material melting point 660°C', 'material melting point 1500°C'], 'relations': ['engine_to_piston_material (engine → enginematerials)', 'engine_to_piston_speed (engine → enginedynamics)'], 'intent': 'find_engines_with_piston_speed_exceeding_melting_point', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [660, 1500, 0.01], 'units': {'temperature': '°C (Celsius)', 'speed_of_light': 'm/s (converted from 1% of 299,792,458 m/s)', 'rotation_speed': 'RPM (required for piston speed calculation, though not directly provided in schema)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginedynamics': [{'column': 'Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '活塞速度 (米/秒)', 'examples': ['20.0', '22.0', '18.0', '21.0', '17.0']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginematerials': [{'column': 'Piston_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '活塞材料', 'examples': ['Forged Aluminum', 'Steel', 'Aluminum']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nFind engines where the piston speed exceeds the material's melting point when the assumed rotation speed reaches 1% of the speed of light (assuming piston material melting points: aluminum alloy 660°C / steel 1500°C).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, 2 * e.Stroke * (1800000000/60)/1000 AS Piston_Speed, em.Piston_Material FROM engine e JOIN enginematerials em ON e.Engine_ID = em.Engine_ID WHERE 2 * e.Stroke * (1800000000/60)/1000 > CASE WHEN em.Piston_Material = 'Aluminum' THEN 25 WHEN em.Piston_Material = 'Steel' THEN 30 ELSE 0 END;",
        "db_id": "car_engine"
    },
    {
        "id": 252,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cast iron', 'aluminum alloy', 'thermal conductivity', 'heat dissipation rate', 'engine block material', 'coating type'], 'relations': ['material_to_thermal_conductivity (cast iron & aluminum alloy → thermal conductivity)', 'material_to_heat_dissipation (material → heat dissipation rate)'], 'intent': 'compare_material_thermal_performance_and_calculate_average_dissipation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'thermal_conductivity': 'W/(m·K) (Watts per meter-Kelvin)', 'heat_dissipation_rate': 'kW (Kilowatts) or W (Watts) (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Coating_Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '涂层类型', 'examples': ['Thermal Barrier', 'Ceramic Coating', 'None']}], 'car_engine.enginethermodynamics': [{'column': 'Thermal_Conductivity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热导率 (瓦/米·K)', 'examples': ['150.0', '155.0', '152.0', '153.0', '148.0']}, {'column': 'Heat_Rejection_Rate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热排放率 (千瓦)', 'examples': ['50.0', '45.0', '48.0', '49.0', '52.0']}]}}\nA physical knowledge question is as follows:\nAssuming the engine block materials are cast iron and aluminum alloy, based on the difference in thermal conductivity, which type of engine material has a higher heat dissipation rate at high temperatures? Group and calculate the average heat dissipation rate by engine block material and coating type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Block_Material, m.Coating_Type, AVG(t.Heat_Rejection_Rate) AS Avg_Heat_Rejection_Rate FROM enginematerials m JOIN enginethermodynamics t ON m.Engine_ID = t.Engine_ID WHERE m.Block_Material IN ('Cast Iron', 'Aluminum') GROUP BY m.Block_Material, m.Coating_Type ORDER BY Avg_Heat_Rejection_Rate DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 253,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['forged steel crankshafts', 'titanium alloy connecting rods', 'cylinder block materials'], 'relations': ['engine_to_materials (Engine_ID → material specifications)', 'material_compatibility (forged steel + titanium alloy combination)'], 'intent': 'count_and_percentage_distribution', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'count': 'unitless integer', 'percentage': 'unitless (calculated as % of total filtered engines)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}, {'column': 'Connecting_Rod_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '连杆材料', 'examples': ['Steel', 'Titanium', 'Aluminum']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCount the number of different cylinder block materials in engines that use forged steel crankshafts and titanium alloy connecting rods, and calculate their percentage of the total. Group by cylinder block material and connecting rod material.\nyour response just have a SQL without anything.\n",
        "solution": "WITH Total AS ( SELECT COUNT(*) AS TotalCount FROM enginematerials WHERE Crankshaft_Material = 'Forged Steel' AND Connecting_Rod_Material = 'Titanium' ) SELECT m.Block_Material, m.Connecting_Rod_Material, COUNT(*) AS Count, ROUND((COUNT(*) * 100.0 / (SELECT TotalCount FROM Total)), 2) AS Percentage FROM enginematerials m WHERE m.Crankshaft_Material = 'Forged Steel' AND m.Connecting_Rod_Material = 'Titanium' GROUP BY m.Block_Material, m.Connecting_Rod_Material;",
        "db_id": "car_engine"
    },
    {
        "id": 254,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'cast iron cylinder block', 'aluminum alloy piston', 'compression ratio'], 'relations': ['engine_to_materials (engine.Engine_ID → enginematerials.Engine_ID)', 'engine_to_compression_ratio (engine.Engine_ID → engine.Compression_Ratio)'], 'intent': 'identify_and_group_engines_by_materials_and_compression_ratio', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'material_composition': 'cast iron (block) and aluminum alloy (piston)', 'compression_ratio': 'unitless ratio (e.g., 10:1)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Piston_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '活塞材料', 'examples': ['Forged Aluminum', 'Steel', 'Aluminum']}]}}\nA common sense reasoning question is as follows:\nIdentify which engines use both cast iron cylinder blocks and aluminum alloy pistons, and group and count the quantities by compression ratio ranges. Generally, cast iron cylinder blocks are known for their high temperature resistance but are heavy, while aluminum alloy pistons are used for weight reduction.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN e.Compression_Ratio < 10 THEN 'Low (<10)' WHEN e.Compression_Ratio BETWEEN 10 AND 12 THEN 'Medium (10-12)' WHEN e.Compression_Ratio > 12 THEN 'High (>12)' END AS Compression_Ratio_Range, COUNT(*) AS Engine_Count FROM engine e JOIN enginematerials m ON e.Engine_ID = m.Engine_ID WHERE m.Block_Material = 'Cast Iron' AND m.Piston_Material IN ('Aluminum', 'Forged Aluminum') GROUP BY Compression_Ratio_Range ORDER BY MIN(e.Compression_Ratio);",
        "db_id": "car_engine"
    },
    {
        "id": 255,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fictional ultra-heavy alloy density 10,000 kg/m³', 'piston volume 500 cm³', 'number of cylinders'], 'relations': ['cylinder_count_grouping', 'density_volume_to_weight (weight = cylinders × 0.0005 m³ × 10,000 kg/m³)'], 'intent': 'calculate_piston_weight_grouped_by_cylinders', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 500], 'units': {'density': 'kg/m³', 'volume': 'cm³ → m³ (conversion: 500 cm³ = 0.0005 m³)', 'weight': 'kg (calculated via mass = density × volume)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the piston material of all engines is changed to a fictional ultra-heavy alloy with a density of 10,000 kg/m³, calculate the theoretical total weight of the pistons grouped by the number of cylinders (assuming a constant piston volume of 500 cm³).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Cylinders, SUM(10000 * 0.0005 * Cylinders) AS Total_Piston_Weight FROM engine GROUP BY Cylinders ORDER BY Cylinders;",
        "db_id": "car_engine"
    },
    {
        "id": 256,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cylinder block material Cast Iron', 'cylinder head material Aluminum Alloy', 'thermal conductivity of cast iron 80 W/m·K', 'thermal conductivity of aluminum alloy 205 W/m·K', 'contact area 0.5 m²', 'temperature difference 200°C'], 'relations': ['material_to_thermal_conductivity (Cast Iron → 80 W/m·K)', 'material_to_thermal_conductivity (Aluminum Alloy → 205 W/m·K)', 'thermal_gradient (ΔT=200°C)'], 'intent': 'calculate_heat_flow_rate_through_contact_surface', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80, 205, 0.5, 200], 'units': {'thermal_conductivity': 'W/m·K', 'contact_area': 'm² (square meters)', 'temperature_difference': '°C (Celsius)', 'heat_flow_rate': 'W (watts)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Head_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸盖材料', 'examples': ['Aluminum', 'Cast Iron']}]}}\nA physical knowledge question is as follows:\nIn the engine materials table, assuming that the cylinder block material of an engine is cast iron (Cast Iron) and the cylinder head material is aluminum alloy (Aluminum), with the thermal conductivity of cast iron known to be 80 W/m·K and that of aluminum alloy being 205 W/m·K. If the contact area between the cylinder block and cylinder head during engine operation is 0.5 square meters, with a temperature difference of 200°C, calculate the heat flow rate through the contact surface (in watts).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (2*(80*205)/(80+205)) * 0.5 * 200 / 0.01 AS Heat_Flow FROM enginematerials WHERE Block_Material = 'Cast Iron' AND Head_Material = 'Aluminum';",
        "db_id": "car_engine"
    },
    {
        "id": 257,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['forged aluminum alloy', 'titanium alloy', 'piston volume 0.002 m³', 'connecting rod volume 0.001 m³', 'density 2.7 g/cm³', 'density 4.5 g/cm³', 'total mass requirement 5 kg'], 'relations': ['piston_material_density (forged aluminum alloy → 2.7 g/cm³)', 'connecting_rod_material_density (titanium alloy → 4.5 g/cm³)', 'volume_to_mass (density × volume)'], 'intent': 'calculate_total_mass_and_check_requirement', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.7, 4.5, 0.002, 0.001, 5], 'units': {'density': 'g/cm³ (gram per cubic centimeter)', 'volume': 'm³ (cubic meter)', 'mass': 'kg (kilogram)', 'conversion': '1 m³ = 1,000,000 cm³; 1 kg = 1000 g'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA mathematical logic question is as follows:\nThe piston of a certain engine is made of forged aluminum alloy (density 2.7 g/cm³), and the connecting rod is made of titanium alloy (density 4.5 g/cm³). If the piston volume is 0.002 cubic meters and the connecting rod volume is 0.001 cubic meters, calculate the total mass of both (in kilograms). Does this meet the requirement if the total mass must not exceed 5 kilograms?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (0.002*2700 + 0.001*4500) AS Total_Mass, CASE WHEN (0.002*2700 + 0.001*4500) <= 5 THEN '满足' ELSE '不满足' END AS 质量判定 FROM enginematerials WHERE Piston_Material = 'Forged Aluminum' AND Connecting_Rod_Material = 'Titanium';",
        "db_id": "car_engine"
    },
    {
        "id": 258,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['high-compression ratio engine', '12:1 compression ratio', 'aluminum alloy cylinder head', 'cast iron cylinder head'], 'relations': ['engine_to_compression_ratio (engine → 12:1)', 'material_to_component (aluminum alloy → cylinder head)', 'material_comparison (aluminum alloy vs. cast iron)'], 'intent': 'understand_material_selection_for_high_compression_engines', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12], 'units': {'compression_ratio': 'unitless (ratio)', 'material_properties': 'thermal conductivity (W/m·K), weight (kg), tensile strength (MPa)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}], 'car_engine.enginematerials': [{'column': 'Head_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸盖材料', 'examples': ['Aluminum', 'Cast Iron']}, {'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}], 'car_engine.enginethermodynamics': [{'column': 'Thermal_Conductivity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热导率 (瓦/米·K)', 'examples': ['150.0', '155.0', '152.0', '153.0', '148.0']}]}}\nA common sense reasoning question is as follows:\nWhy do high-compression ratio engines (such as those with a 12:1 compression ratio) typically require the use of aluminum alloy for cylinder heads instead of cast iron?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, e.Compression_Ratio, em.Head_Material, et.Thermal_Conductivity FROM engine e JOIN enginematerials em ON e.Engine_ID = em.Engine_ID JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID WHERE e.Compression_Ratio >= 12 AND em.Head_Material = 'Aluminum' AND et.Thermal_Conductivity > 150;",
        "db_id": "car_engine"
    },
    {
        "id": 259,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['crankshaft material with thermal expansion coefficient 1×10^-4 /°C', 'initial temperature 20°C', 'final temperature 1000°C', 'original crankshaft length 500 mm'], 'relations': ['thermal_expansion (ΔL = α * L0 * ΔT)', 'fit_maintained (expanded length vs. main bearing bore tolerance)'], 'intent': 'calculate_thermal_expansion_and_assess_main_bearing_fit', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.0001, 20, 1000, 500], 'units': {'thermal_expansion_coefficient': '/°C', 'temperature': '°C', 'length': 'millimeters', 'conversion': 'ΔT = 980°C (1000 - 20)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}], 'car_engine.enginedimensions': [{'column': 'Main_Bore_Diameter', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '主轴承孔径 (毫米)', 'examples': ['60.0', '55.0', '58.0', '62.0', '65.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the thermal expansion coefficient of a certain crankshaft material is set to 1×10^-4 /°C (far exceeding the 1.2×10^-5 /°C for real steel), and the engine operating temperature rises from 20°C to 1000°C. Assuming the original length of the crankshaft is 500 millimeters, calculate the expanded length. In this scenario, can the main bearing bore fit be maintained?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.Main_Bore_Diameter, 500*(1+0.0001*(1000-20)) AS 膨胀后长度, CASE WHEN 500*(1+0.0001*980) <= ed.Main_Bore_Diameter THEN '可配合' ELSE '不可配合' END AS 配合判定 FROM enginedimensions ed JOIN enginematerials em ON ed.Engine_ID = em.Engine_ID WHERE em.Crankshaft_Material = 'Forged Steel';",
        "db_id": "car_engine"
    },
    {
        "id": 260,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine model', 'angular velocity', 'maximum speed'], 'relations': ['engine_to_dynamics (Engine_ID → enginedynamics)', 'angular_velocity_calculation (Max_turn → Angular_Velocity)'], 'intent': 'retrieve_and_rank_angular_velocity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'angular_velocity': 'rad/s (assumed standard unit)', 'rpm': 'RPM (revolutions per minute)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginedynamics': [{'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}, {'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}]}}\nA physical knowledge question is as follows:\nCalculate the angular velocity of each engine at maximum speed, and identify the top three engine models with the highest angular velocity, sorted in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, ed.Angular_Velocity FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID ORDER BY ed.Angular_Velocity DESC LIMIT 3;",
        "db_id": "car_engine"
    },
    {
        "id": 261,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'piston speed', 'maximum RPM', 'mean piston speed'], 'relations': ['engine_to_dynamics (engine.Engine_ID → enginedynamics.Engine_ID)', 'piston_speed_to_mean_speed (Piston_Speed vs Mean_Piston_Speed comparison)', 'rpm_to_piston_speed (Max_turn → Piston_Speed relationship)'], 'intent': 'calculate_piston_speed_rank_engines_verify_data_consistency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'speed': 'm/s (assumed for Piston_Speed/Mean_Piston_Speed)', 'RPM': 'revolutions per minute (Max_turn)', 'stroke': 'mm (Engine.Stroke)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}], 'car_engine.enginedynamics': [{'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}, {'column': 'Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '活塞速度 (米/秒)', 'examples': ['20.0', '22.0', '18.0', '21.0', '17.0']}, {'column': 'Mean_Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均活塞速度 (米/秒)', 'examples': ['15.0', '16.0', '14.0', '15.5', '13.0']}]}}\nA mathematical logic question is as follows:\nCalculate the instantaneous speed of each engine piston at maximum RPM, identify the top 5 fastest engines, and sort them in ascending order. Verify data consistency between Piston_Speed and Mean_Piston_Speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (2 * e.Stroke/1000 * ed.Max_turn)/60 AS Calculated_Speed, ed.Mean_Piston_Speed FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID WHERE ABS(((2 * e.Stroke/1000 * ed.Max_turn)/60 - ed.Mean_Piston_Speed)/ed.Mean_Piston_Speed) <= 0.02 ORDER BY Calculated_Speed DESC LIMIT 5;",
        "db_id": "car_engine"
    },
    {
        "id": 262,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['diesel engine models', 'peak torque RPM', '2000 RPM'], 'relations': ['engine_to_dynamics (Engine_ID)', 'fuel_type_filter (Diesel)', 'peak_torque_condition (RPM < 2000)'], 'intent': 'find_diesel_engines_with_peak_torque_below_2000_rpm', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2000], 'units': {'rpm': 'RPM (revolutions per minute)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.enginedynamics': [{'column': 'Peak_Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '峰值扭矩转速 (RPM)', 'examples': ['4000', '5000', '3500', '4500', '3000']}]}}\nA common sense reasoning question is as follows:\nFind all diesel engine models with peak torque RPM below 2000, sorted alphabetically by Manufacturer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, e.Model, ed.Peak_Torque FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID WHERE e.Fuel_Type = 'Diesel' AND ed.Peak_Torque < 2000 ORDER BY e.Manufacturer ASC;",
        "db_id": "car_engine"
    },
    {
        "id": 263,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rotary engine', '100,000 RPM', '300 m/s tolerance limit', '250 m/s threshold'], 'relations': [\"rotary_engine_to_configuration (Configuration='rotary')\", 'RPM_to_piston_speed (via formula: Piston_Speed = 2 * Stroke * RPM / 60)', 'speed_comparison (calculated speed vs 300 m/s and 250 m/s)'], 'intent': 'calculate_piston_speed_and_compare_limits', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 300, 250], 'units': {'RPM': 'revolutions per minute (converted to Hz for calculation)', 'stroke': 'millimeters (converted to meters for calculation)', 'piston_speed': 'm/s (calculated via 2 * Stroke[m] * RPM / 60)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}], 'car_engine.enginedynamics': [{'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the existence of a rotary engine with a rotational speed of 100,000 RPM, calculate whether its piston speed exceeds the tolerance limit of aviation-grade aluminum alloy (assuming the limit is 300 m/s), and list all hypothetical model variants where the calculated results exceed 250 m/s.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (2 * e.Stroke/1000 * 100000)/60 AS Hypothetical_Speed FROM engine e WHERE e.Configuration = 'Rotary' AND (2 * e.Stroke/1000 * 100000)/60 > 250 ORDER BY Hypothetical_Speed DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 264,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine thermal efficiency', 'engine model', 'input fuel heating value'], 'relations': ['engine_to_performance (Engine_ID → Thermal_Efficiency)', 'efficiency_comparison (between engine models)'], 'intent': 'calculate_thermal_efficiency_ratio_and_rank_models', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'thermal_efficiency': '% (efficiency ratio)', 'fuel_heating_value': 'kJ/kg (implied by calculation context)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of the engine's effective work to the input fuel heating value at maximum thermal efficiency, and list the top 3 engine models with the highest thermal efficiency along with their respective thermal efficiency values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, ep.Thermal_Efficiency, (ep.Thermal_Efficiency / 100) AS Effective_Work_Ratio FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID ORDER BY ep.Thermal_Efficiency DESC LIMIT 3;",
        "db_id": "car_engine"
    },
    {
        "id": 265,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine models', 'Torque', 'Cylinders', 'Displacement', 'BMEP value'], 'relations': ['engine_model_to_torque (engine.Model → engine.Torque)', 'engine_model_to_cylinders (engine.Model → engine.Cylinders)', 'engine_model_to_displacement (engine.Model → engine.Displacement)', 'bmeq_formula_components (Torque × Cylinders → Displacement → BMEP)'], 'intent': 'calculate_and_filter_bmeq', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 15, 1000], 'units': {'torque': 'Nm (Newton-meters)', 'displacement': 'L (Liters, derived from cubic centimeters ÷ 1000)', 'bmeq': 'Bar (pressure unit)', 'conversion': 'BMEP = (2×π×Torque×Cylinders)/(Displacement×1000)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '扭矩 (牛米)', 'examples': ['427', '206', '350', '550', '650']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}]}}\nA mathematical logic question is as follows:\nCalculate the BMEP (Brake Mean Effective Pressure) for each engine and sort in descending order, where BMEP = (2×π×Torque×Cylinders) / (Displacement×1000). The output should include engine models and their BMEP values where BMEP exceeds 15 Bar.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (2 * PI() * e.Torque * e.Cylinders) / (e.Displacement * 1000) AS BMEP FROM engine e WHERE (2 * PI() * e.Torque * e.Cylinders) / (e.Displacement * 1000) > 15 ORDER BY BMEP DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 266,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine models', 'fuel consumption rate (Fuel_Consumption)', 'displacement (Displacement)', 'negative correlation', 'average fuel consumption by type'], 'relations': ['engine_model_to_displacement (Model → Displacement)', 'engine_model_to_fuel_consumption (Model → Fuel_Consumption)', 'displacement_vs_fuel_consumption (negative correlation: high displacement but low fuel consumption)', 'fuel_consumption_vs_type_average (Fuel_Consumption < AVG(Fuel_Consumption) for same type)'], 'intent': 'identify_engine_models_with_negative_correlation_between_fuel_consumption_and_displacement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['AVG(Fuel_Consumption) per type', 'Displacement values', 'Fuel_Consumption values'], 'units': {'displacement': 'in cubic centimeters (cc) or liters (L) from engine.Displacement', 'fuel_consumption': 'unit from engineperformance.Fuel_Consumption (e.g., L/100km or kg/kWh)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}], 'car_engine.engineperformance': [{'column': 'Fuel_Consumption', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃油消耗率 (升/100公里)', 'examples': ['8.0', '7.5', '6.8', '7.2', '6.0']}]}}\nA common sense reasoning question is as follows:\nFind engine models where the fuel consumption rate (Fuel_Consumption) and displacement (Displacement) show a negative correlation, sorted in ascending order of displacement. For example, anomalous data where the displacement is large but fuel consumption is lower than the average of the same type.\nyour response just have a SQL without anything.\n",
        "solution": "WITH displacement_avg AS (SELECT Displacement, AVG(Fuel_Consumption) AS avg_fuel FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID GROUP BY Displacement) SELECT e.Model, e.Displacement, ep.Fuel_Consumption FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID JOIN displacement_avg da ON e.Displacement = da.Displacement WHERE ep.Fuel_Consumption < da.avg_fuel ORDER BY e.Displacement ASC;",
        "db_id": "car_engine"
    },
    {
        "id": 267,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine models', 'Weight', 'Power_To_Weight_Ratio'], 'relations': ['engine_to_performance (Engine_ID → Power_To_Weight_Ratio)', 'weight_power_condition (Weight=0 AND Power_To_Weight_Ratio>500)'], 'intent': 'retrieve_engine_models_with_zero_weight_and_high_power_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0, 500], 'units': {'weight': 'kg (kilograms)', 'power_to_weight_ratio': 'hp/kg (horsepower per kilogram)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['200.0', '150.0', '180.0', '190.0', '250.0']}], 'car_engine.engineperformance': [{'column': 'Power_To_Weight_Ratio', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '功率重量比 (马力/公斤)', 'examples': ['1.42', '2.0', '250.0', '600.0', '1000.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an engine's power-to-weight ratio (Power_To_Weight_Ratio) reaches 1000 horsepower per kilogram (far exceeding practical physical limits), its weight must approach zero. Please list all engine models where the Weight field is 0 and Power_To_Weight_Ratio > 500, sorted in ascending order by weight.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, e.Weight, ep.Power_To_Weight_Ratio FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE e.Weight = 0 AND ep.Power_To_Weight_Ratio > 500 ORDER BY e.Weight ASC;",
        "db_id": "car_engine"
    },
    {
        "id": 268,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'average effective pressure (BMEP)', 'theoretical maximum 15 Bar', 'thermal efficiency', '30% threshold'], 'relations': ['engine_to_performance (Engine_ID → engineperformance)', 'BMEP_comparison (actual_BMEP > 15 Bar)', 'thermal_efficiency_filter (Thermal_Efficiency < 30%)'], 'intent': 'compare_BMEP_against_theoretical_max_and_filter_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15, 30], 'units': {'pressure': 'Bar (BMEP unit)', 'efficiency': '% (percentage for thermal efficiency)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engineperformance': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'BMEP', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均有效压力 (Bar)', 'examples': ['10.0', '12.0', '11.0', '12.5', '14.0']}, {'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA physical knowledge question is as follows:\nCalculate whether the average effective pressure (BMEP) of a certain engine is higher than the theoretical maximum (assumed to be 15 Bar), and identify engines in the `engineperformance` table where the BMEP exceeds this value and the thermal efficiency is below 30%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID FROM engineperformance WHERE BMEP > 15 AND Thermal_Efficiency < 30;",
        "db_id": "car_engine"
    },
    {
        "id": 269,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'engineperformance', 'Power_To_Weight_Ratio', 'Specific_Power', 'Displacement', \"Fuel_Type='Electric'\"], 'relations': ['engine_to_performance (engine.Engine_ID → engineperformance.Engine_ID)', 'composite_metric_formula ((Power_To_Weight_Ratio × 1000) / Specific_Power)', 'displacement_condition (composite_metric ≥ √Displacement)', \"fuel_type_condition (Fuel_Type ≠ 'Electric')\"], 'intent': 'calculate_composite_metric_with_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'power_to_weight_ratio': 'kW/kg (implied by database schema)', 'specific_power': 'kW/cm³ (implied by database schema)', 'displacement': 'cc (cubic centimeters)', 'composite_metric': 'unitless (ratio of ratios)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.engineperformance': [{'column': 'Power_To_Weight_Ratio', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '功率重量比 (马力/公斤)', 'examples': ['1.42', '2.0', '250.0', '600.0', '1000.0']}, {'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}, {'column': 'Power_To_Weight_Ratio × 1000 / engineperformance.Specific_Power AS Composite_Metric'}]}}\nA mathematical logic question is as follows:\nCalculate the composite metric of power-to-weight ratio and specific power: (Power_To_Weight_Ratio × 1000) / Specific_Power, where the value must be greater than or equal to the square root of displacement (Displacement), and exclude electric engines (Fuel_Type='Electric').\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE (ep.Power_To_Weight_Ratio * 1000) / ep.Specific_Power >= SQRT(e.Displacement) AND e.Fuel_Type != 'Electric';",
        "db_id": "car_engine"
    },
    {
        "id": 270,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline engines', 'fuel consumption rate', 'industry benchmark', 'thermal efficiency', 'displacement'], 'relations': ['engine_to_displacement (engine.Displacement)', 'benchmark_formula (6 + 0.5 × Displacement)', 'fuel_consumption_to_benchmark (Fuel_Consumption < benchmark)', 'thermal_efficiency_threshold (Thermal_Efficiency > 35%)'], 'intent': 'filter_engines_by_performance_criteria', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [35, 6, 0.5], 'units': {'displacement': 'liters (L)', 'fuel_consumption': 'units per distance (e.g., L/100km or g/kWh, as per database schema)', 'thermal_efficiency': 'percent (%)', 'benchmark_formula_units': 'fuel_consumption_units (6 + 0.5 × L)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}], 'car_engine.engineperformance': [{'column': 'Fuel_Consumption', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃油消耗率 (升/100公里)', 'examples': ['8.0', '7.5', '6.8', '7.2', '6.0']}, {'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA common sense reasoning question is as follows:\nFind gasoline engines with a fuel consumption rate lower than the industry benchmark value for engines of the same displacement (benchmark formula: 6 + 0.5 × Displacement) and a thermal efficiency higher than 35%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE e.Fuel_Type = 'Gasoline' AND ep.Fuel_Consumption < (6 + 0.5 * e.Displacement) AND ep.Thermal_Efficiency > 35;",
        "db_id": "car_engine"
    },
    {
        "id": 271,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'thermal efficiency', 'Carnot cycle limit (η > 1 - T_cold/T_hot)', 'specific torque 10^6 N·m/L', 'BMEP 1000 Bar', 'T_cold=300K', 'T_hot=2500K'], 'relations': ['engine_to_thermal_efficiency (engine → thermal efficiency)', 'carnot_limit_calculation (1 - 300K/2500K = 0.88)', 'specific_torque_requirement (10^6 N·m/L)', 'bmepp_threshold (1000 Bar)'], 'intent': 'verify_engine_design_compliance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [300, 2500, 1000000, 1000], 'units': {'temperature': 'K (Kelvin)', 'torque': 'N·m/L (Newton-meters per Liter)', 'pressure': 'Bar', 'efficiency': 'dimensionless (η)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engineperformance': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}, {'column': 'Specific_Torque', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比扭矩 (牛米/升)', 'examples': ['93.75', '190.0', '137.5', '135.0', '187.5']}, {'column': 'BMEP', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均有效压力 (Bar)', 'examples': ['10.0', '12.0', '11.0', '12.5', '14.0']}]}}\nA hypothetical reasoning question is as follows:\nAssume there exists an engine with a thermal efficiency exceeding the Carnot cycle limit (η > 1 - T_cold/T_hot, where T_cold=300K and T_hot=2500K), and a specific torque reaching 10^6 N·m/L, please verify whether these engines also simultaneously meet BMEP exceeding 1000 Bar.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID FROM engineperformance WHERE Thermal_Efficiency > 88 AND Specific_Torque >= 1000000 AND BMEP > 1000;",
        "db_id": "car_engine"
    },
    {
        "id": 272,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['average effective pressure (BMEP)', 'thermal efficiency', 'fuel type (Fuel_Type)'], 'relations': ['BMEP_to_thermal_efficiency_relationship', 'fuel_type_grouping'], 'intent': 'calculate_physical_relationship_between_BMEP_and_thermal_efficiency_by_fuel_type', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'BMEP': 'kPa (kilopascals) or bar (as per automotive engineering standards)', 'thermal_efficiency': '% (percentage)', 'fuel_type': 'categorical values (e.g., gasoline, diesel, ethanol)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.engineperformance': [{'column': 'BMEP', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均有效压力 (Bar)', 'examples': ['10.0', '12.0', '11.0', '12.5', '14.0']}, {'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA physical knowledge question is as follows:\nCalculate the physical relationship between the average effective pressure (BMEP) and thermal efficiency for different fuel types (Fuel_Type), grouped by fuel type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Fuel_Type, AVG((2 * PI() * e.Torque) / (e.Displacement * 100000)) AS Avg_BMEP, AVG(ep.Thermal_Efficiency) AS Avg_Thermal_Efficiency FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID GROUP BY e.Fuel_Type;",
        "db_id": "car_engine"
    },
    {
        "id": 273,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturer', 'Specific_Power', 'Specific_Torque'], 'relations': ['Manufacturer_to_engine (Manufacturer → Engine)', 'Specific_Power_to_engine (Specific_Power → Engine)', 'Specific_Torque_to_engine (Specific_Torque → Engine)', 'grouping_by_Manufacturer'], 'intent': 'calculate_weighted_geometric_mean_of_metrics_by_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'Specific_Power': 'kW/kg or hp/lb (implied by database schema)', 'Specific_Torque': 'Nm/kg or lb-ft/lb (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}], 'car_engine.engineperformance': [{'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}, {'column': 'Specific_Torque', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比扭矩 (牛米/升)', 'examples': ['93.75', '190.0', '137.5', '135.0', '187.5']}]}}\nA mathematical logic question is as follows:\nStatistics on the weighted geometric mean of engine specific power (Specific_Power) and specific torque (Specific_Torque) by manufacturer (Manufacturer), grouped and sorted by manufacturer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, EXP(SUM(e.Displacement * LN(ep.Specific_Power * ep.Specific_Torque)) / SUM(e.Displacement)) AS Weighted_Geometric_Mean FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE ep.Specific_Power > 0 AND ep.Specific_Torque > 0 GROUP BY e.Manufacturer ORDER BY Weighted_Geometric_Mean DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 274,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Cylinders', 'Fuel_Consumption', 'Thermal_Efficiency'], 'relations': ['cylinders_to_fuel_consumption (grouped analysis)', 'fuel_consumption_to_thermal_efficiency (averaged correlation)'], 'intent': 'analyze_relationship_between_cylinders_fuel_consumption_and_thermal_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_consumption': 'units implied from database (e.g., L/100km or MPG)', 'thermal_efficiency': '% (percentage)', 'cylinders': 'unitless count'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}], 'car_engine.engineperformance': [{'column': 'Fuel_Consumption', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃油消耗率 (升/100公里)', 'examples': ['8.0', '7.5', '6.8', '7.2', '6.0']}, {'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA common sense reasoning question is as follows:\nAnalyze the impact of the number of cylinders (Cylinders) on fuel consumption rate (Fuel_Consumption), and output the relationship between average fuel consumption rate and thermal efficiency grouped by the number of cylinders.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Cylinders, AVG(ep.Fuel_Consumption) AS Avg_Fuel_Consumption, AVG(ep.Thermal_Efficiency) AS Avg_Thermal_Efficiency FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID GROUP BY e.Cylinders ORDER BY e.Cylinders;",
        "db_id": "car_engine"
    },
    {
        "id": 275,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel consumption rate -5 liters/100 km', 'fuel consumption rate 1000 liters/100 km', 'Fuel_Type', 'Power_To_Weight_Ratio'], 'relations': ['engine_to_performance (Engine_ID → engineperformance)', 'fuel_consumption_outliers (Fuel_Consumption = -5 or 1000)'], 'intent': 'group_and_analyze_power_to_weight_ratio_distribution_by_fuel_type', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [-5, 1000], 'units': {'fuel_consumption': 'liters/100 km', 'power_to_weight_ratio': 'kW/kg (implied by field name)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.engineperformance': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Power_To_Weight_Ratio', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '功率重量比 (马力/公斤)', 'examples': ['1.42', '2.0', '250.0', '600.0', '1000.0']}, {'column': 'Fuel_Consumption', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃油消耗率 (升/100公里)', 'examples': ['8.0', '7.5', '6.8', '7.2', '6.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there are engines with a fuel consumption rate of -5 liters/100 km or 1000 liters/100 km, group statistics by fuel type (Fuel_Type) to analyze the distribution of the power-to-weight ratio (Power_To_Weight_Ratio) for these outliers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Fuel_Type, COUNT(*) AS Anomaly_Count, AVG(ep.Power_To_Weight_Ratio) AS Avg_Power_To_Weight_Ratio FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE ep.Fuel_Consumption < 0 OR ep.Fuel_Consumption > 500 GROUP BY e.Fuel_Type;",
        "db_id": "car_engine"
    },
    {
        "id": 276,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['thermal efficiency', 'fuel types', 'displacement', 'horsepower', 'engine'], 'relations': ['engine_to_fuel_type (engine → fuel_type)', 'engine_to_displacement (engine → displacement)', 'engine_to_horsepower (engine → horsepower)', 'engine_to_thermal_efficiency (engine → thermal_efficiency via engineperformance)'], 'intent': 'calculate_and_analyze_thermal_efficiency_relations', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['displacement (L)', 'horsepower (HP)', 'thermal_efficiency (%)'], 'units': {'displacement': 'L (liters)', 'horsepower': 'HP (horsepower)', 'thermal_efficiency': '% (percentage)', 'relationship': 'correlation between thermal efficiency vs displacement and horsepower'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}, {'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力', 'examples': ['320', '220', '310', '425', '650']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA physical knowledge question is as follows:\nCalculate the thermal efficiency of engines with different fuel types and analyze its relationship with displacement and horsepower, grouped by fuel type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Fuel_Type, AVG((e.Horsepower * 0.7457 * 1000) / (ep.Fuel_Consumption * CASE WHEN e.Fuel_Type = 'Gasoline' THEN 34.2 WHEN e.Fuel_Type = 'Diesel' THEN 38.6 ELSE 0 END * 100) * 100) AS Thermal_Efficiency, AVG(e.Displacement) AS Avg_Displacement, AVG(e.Horsepower) AS Avg_Horsepower FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE e.Fuel_Type IN ('Gasoline', 'Diesel') GROUP BY e.Fuel_Type;",
        "db_id": "car_engine"
    },
    {
        "id": 277,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Bore', 'Stroke', 'Cylinders', 'Displacement'], 'relations': ['bore_stroke_cylinders_to_theoretical_displacement (Bore, Stroke, Cylinders → π*(Bore/2)²*Stroke*Cylinders)', 'theoretical_vs_actual_displacement (Theoretical_Displacement - Actual_Displacement)', 'group_by_cylinders (Cylinders → Engine_Grouping)'], 'intent': 'calculate_theoretical_displacement_and_compare_with_actual', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Bore', 'Stroke', 'Cylinders', 'Displacement'], 'units': {'bore_stroke': 'mm (millimeters)', 'theoretical_displacement': 'cm³ (cubic centimeters) → liters (divided by 1000)', 'actual_displacement': 'liters (from Displacement column)', 'conversion': '1 cm³ = 1 mL; 1000 cm³ = 1 liter'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}]}}\nA mathematical logic question is as follows:\nCalculate the theoretical displacement based on Bore, Stroke, and Cylinders, compare the error with the actual displacement (Displacement), and group by the number of cylinders.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Cylinders, AVG(ABS(Displacement - (PI()/4 * POWER(Bore/10,2) * Stroke/10 * Cylinders / 1000)) / Displacement * 100) AS Error_Percentage FROM engine GROUP BY Cylinders;",
        "db_id": "car_engine"
    },
    {
        "id": 278,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cylinder configuration', 'engine length', 'engine width'], 'relations': ['engine_to_dimensions (Engine_ID → Dimension_ID)', 'configuration_to_dimensions (Configuration → Length/Width)'], 'intent': 'statistical_analysis_of_engine_dimensions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'length': 'mm (millimeters) (implied by database schema)', 'width': 'mm (millimeters) (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}]}}\nA common sense reasoning question is as follows:\nStatistic the average length and width of engines with different cylinder configurations (Configuration), analyze the impact of arrangement methods on dimensions, grouped by Configuration.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Configuration, AVG(d.Length) AS Avg_Length, AVG(d.Width) AS Avg_Width FROM engine e JOIN enginedimensions d ON e.Engine_ID = d.Engine_ID GROUP BY e.Configuration;",
        "db_id": "car_engine"
    },
    {
        "id": 279,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine redline speed 1,000,000 RPM', 'stroke 1000 mm', 'cylinder arrangement', 'piston speed in Mach'], 'relations': ['RPM_to_piston_speed (Redline → piston velocity calculation)', 'stroke_to_piston_speed (Stroke → piston velocity calculation)', 'configuration_grouping (cylinder arrangement → grouping criterion)'], 'intent': 'calculate_piston_speed_in_mach', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 1000], 'units': {'RPM': 'revolutions per minute (RPM)', 'stroke': 'millimeters (mm) → converted to meters', 'piston_speed': 'meters per second (m/s)', 'Mach': 'unitless ratio (Mach 1 = 343 m/s at 20°C)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Redline', 'type': 'INTEGER', 'primary_key': False, 'comment': '红线转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the engine's redline speed (Redline) is 1,000,000 RPM, and the stroke is 1000 mm, calculate the instantaneous piston speed (in Mach), grouped by cylinder arrangement.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Configuration, (2 * 1000 * 1000000 / 60 / 1000) / 343 AS Mach_Number FROM engine GROUP BY Configuration;",
        "db_id": "car_engine"
    },
    {
        "id": 280,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cast iron', 'thermal efficiency higher than 35%'], 'relations': ['material_to_engine (cast iron → Block_Material relationship)', 'efficiency_filter (Thermal_Efficiency > 35%)'], 'intent': 'find_engines_with_material_and_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [35], 'units': {'thermal_efficiency': '% (percentage)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}], 'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nPlease find all engines that use cast iron (Cast Iron) as the cylinder material but have a thermal efficiency (Thermal_Efficiency) higher than 35%, and return the difference set.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, m.Block_Material, p.Thermal_Efficiency FROM engine e JOIN enginematerials m ON e.Engine_ID = m.Engine_ID JOIN engineperformance p ON e.Engine_ID = p.Engine_ID WHERE m.Block_Material = 'Cast Iron' AND p.Thermal_Efficiency > 35;",
        "db_id": "car_engine"
    },
    {
        "id": 281,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['turbocharged engine', 'BMEP', 'peak torque speed', 'difference set'], 'relations': ['engine_to_BMEP (engine → engineperformance)', 'engine_to_peak_torque (engine → enginedynamics)', 'correlation_between_BMEP_and_peak_torque_speed', 'difference_set_computation'], 'intent': 'verify_correlation_and_compute_difference_set', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'BMEP': 'bar (or kPa, inferred from engineering context)', 'peak_torque_speed': 'RPM (revolutions per minute, inferred from engine dynamics)', 'correlation': 'Pearson correlation coefficient (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Aspiration', 'type': 'ENUM', 'primary_key': False, 'comment': '进气方式', 'examples': ['Turbocharged', 'Naturally Aspirated', 'Supercharged']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.engineperformance': [{'column': 'BMEP', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均有效压力 (Bar)', 'examples': ['10.0', '12.0', '11.0', '12.5', '14.0']}], 'car_engine.enginedynamics': [{'column': 'Peak_Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '峰值扭矩转速 (RPM)', 'examples': ['4000', '5000', '3500', '4500', '3000']}, {'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}]}}\nA mathematical logic question is as follows:\nPlease verify whether there is a positive correlation between the BMEP of a turbocharged (Turbocharged) engine and its peak torque (Peak_Torque) speed, and return the difference set.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, d.Peak_Torque, p.BMEP FROM engine e JOIN enginedynamics d ON e.Engine_ID = d.Engine_ID JOIN engineperformance p ON e.Engine_ID = p.Engine_ID WHERE e.Aspiration = 'Turbocharged' AND p.BMEP < (d.Peak_Torque / e.Displacement) * 0.12;",
        "db_id": "car_engine"
    },
    {
        "id": 282,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'length', 'piston speed'], 'relations': ['engine_to_dimensions (engine.Engine_ID → enginedimensions.Engine_ID)', 'engine_to_dynamics (engine.Engine_ID → enginedynamics.Engine_ID)', 'filter_condition (length > 1000mm ∧ piston_speed > 25m/s)'], 'intent': 'filter_engines_by_physical_and_dynamic_properties', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 25], 'units': {'length': 'millimeters (mm)', 'piston_speed': 'meters per second (m/s)', 'conversion': '1000mm = 1meter (for potential unit normalization)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}], 'car_engine.enginedynamics': [{'column': 'Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '活塞速度 (米/秒)', 'examples': ['20.0', '22.0', '18.0', '21.0', '17.0']}]}}\nA common sense reasoning question is as follows:\nPlease find engines with a length greater than 1000 millimeters and a piston speed (Piston_Speed) exceeding 25 meters per second, and return the difference set.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, ed.Length, d.Piston_Speed FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID JOIN enginedynamics d ON e.Engine_ID = d.Engine_ID WHERE ed.Length > 1000 AND d.Piston_Speed > 25;",
        "db_id": "car_engine"
    },
    {
        "id": 283,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric engines', 'engine displacement'], 'relations': [\"engine_type_to_displacement (Fuel_Type='Electric' → Displacement)\"], 'intent': 'verify_displacement_values_for_electric_engines', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [0], 'units': {'displacement': 'liters (from database schema convention)', 'comparison_value': '0 (unitless reference)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nPlease verify if the displacement of all electric (Electric) engines is 0, and return the difference set.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Model, Displacement FROM engine WHERE Fuel_Type = 'Electric' AND Displacement != 0;",
        "db_id": "car_engine"
    },
    {
        "id": 284,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Main_Bore_Diameter', 'Rod_Journal_Diameter', 'cross-sectional area of main bearing', 'cast iron material', 'tensile strength requirement'], 'relations': ['Main_Bore_Diameter_to_Area (diameter → calculate outer circle area)', 'Rod_Journal_Diameter_to_Area (diameter → calculate inner circle area)', 'Cross-sectional_Area (π*(Main_Bore_Diameter² - Rod_Journal_Diameter²)/4)', 'Material_Tensile_Strength (cast iron → tensile strength threshold)'], 'intent': 'calculate_cross-sectional_area_and_verify_tensile_strength', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'diameters': 'millimeters (assumed from engineering context)', 'area': 'square millimeters (mm²)', 'tensile_strength': 'MPa (megapascals, standard unit for material strength)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Main_Bore_Diameter', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '主轴承孔径 (毫米)', 'examples': ['60.0', '55.0', '58.0', '62.0', '65.0']}, {'column': 'Rod_Journal_Diameter', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '连杆轴颈直径 (毫米)', 'examples': ['50.0', '45.0', '48.0', '52.0', '55.0']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Head_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸盖材料', 'examples': ['Aluminum', 'Cast Iron']}]}}\nA physical knowledge question is as follows:\nBased on the Main_Bore_Diameter and Rod_Journal_Diameter in the enginedimensions table, how to calculate the cross-sectional area of the main bearing and verify whether it meets the tensile strength requirements of cast iron material?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.Engine_ID, PI() * (Main_Bore_Diameter/2) * (Main_Bore_Diameter/2) - PI() * (Rod_Journal_Diameter/2) * (Rod_Journal_Diameter/2) AS Bearing_Area, (1.5 * edyn.Angular_Velocity * edyn.Angular_Velocity * (ed.Weight/1000) * (Rod_Journal_Diameter/2000)) / (PI() * (Main_Bore_Diameter/2)*(Main_Bore_Diameter/2) - PI() * (Rod_Journal_Diameter/2)*(Rod_Journal_Diameter/2)) AS Stress FROM enginedimensions ed JOIN enginedynamics edyn USING(Engine_ID) JOIN enginematerials em USING(Engine_ID) WHERE em.Block_Material = 'Cast Iron' HAVING Stress > 200;",
        "db_id": "car_engine"
    },
    {
        "id": 285,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Bore=84mm', 'Stroke=90mm', 'Cylinder_Spacing=120mm', 'inline 6-cylinder engine', 'Length=800mm requirement', 'allowance=20mm per end'], 'relations': ['Cylinder_Spacing_to_total_length (120mm spacing → 5 intervals for 6 cylinders)', 'allowance_addition (20mm × 2 ends = 40mm)', 'calculated_length_vs_requirement (640mm vs 800mm)'], 'intent': 'verify_engine_length_requirement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [84, 90, 120, 6, 20, 800], 'units': {'length': 'mm (millimeters)', 'cylinder_count': 'unitless (6 cylinders)', 'allowance': '20mm per end (total 40mm)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Cylinder_Spacing', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '气缸间距 (毫米)', 'examples': ['100.0', '90.0', '95.0', '110.0', '92.0']}, {'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}]}}\nA mathematical logic question is as follows:\nGiven the Bore=84mm, Stroke=90mm, and Cylinder_Spacing=120mm in the enginedimensions table, calculate whether the total length of an inline 6-cylinder engine meets the requirement of Length=800mm? Take into account an allowance of 20mm on each end of the engine block.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.Engine_ID, (Cylinder_Spacing*(6-1) + 2*20 + 6*Bore) AS Calculated_Length, Length, ABS((Cylinder_Spacing*5 + 40 + 504) - Length) AS Length_Deviation FROM enginedimensions ed JOIN engine e USING(Engine_ID) WHERE e.Cylinders = 6 AND e.Configuration = 'Inline';",
        "db_id": "car_engine"
    },
    {
        "id": 286,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Cylinder_Spacing=50mm', 'Width=600mm', 'safety hazards', 'industry standards spacing requirement=1.2×bore'], 'relations': ['cylinder_spacing_vs_standard (Cylinder_Spacing vs 1.2×cylinder_bore)', 'engine_dimensions_link (enginedimensions table connects Cylinder_Spacing/Width to engine)'], 'intent': 'identify_safety_hazards_in_cylinder_arrangement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 600, 1.2], 'units': {'length': 'mm (millimeters)', 'bore': 'mm (implied by context)', 'calculation': 'required_spacing = 1.2 × cylinder_bore'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Cylinder_Spacing', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '气缸间距 (毫米)', 'examples': ['100.0', '90.0', '95.0', '110.0', '92.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}], 'car_engine.engine': [{'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}]}}\nA common sense reasoning question is as follows:\nFor an engine with Cylinder_Spacing=50mm and Width=600mm, can it be determined whether there are safety hazards in its cylinder arrangement? It is known that industry standards require the spacing between adjacent cylinders to be at least 1.2 times the cylinder bore diameter.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.Engine_ID, Cylinder_Spacing, Bore, ROUND(1.2*Bore,1) AS Min_Safe_Spacing, CASE WHEN Cylinder_Spacing < 1.2*Bore THEN '危险' ELSE '安全' END AS Safety_Status FROM enginedimensions ed JOIN engine e USING(Engine_ID) WHERE Cylinder_Spacing = 50 AND Width = 600;",
        "db_id": "car_engine"
    },
    {
        "id": 287,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['enginedimensions table', 'engineperformance table', 'Engine_ID'], 'relations': ['table_comparison (enginedimensions vs engineperformance)', 'existence_check (records in enginedimensions not present in engineperformance)'], 'intent': 'find_missing_records_between_tables', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [99999, 0.0001], 'units': {'weight': 'kg', 'power_to_weight_ratio': 'horsepower/kg'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.engineperformance': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nSuppose there is an engine with a weight Weight=99999kg and a Power_To_Weight_Ratio=0.0001 horsepower/kg. How can we use a difference query to find abnormal records that exist in the enginedimensions table but do not exist in the engineperformance table?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID FROM enginedimensions WHERE Weight > 10000 AND Engine_ID NOT IN (SELECT Engine_ID FROM engineperformance WHERE Power_To_Weight_Ratio < 0.001);",
        "db_id": "car_engine"
    },
    {
        "id": 288,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['titanium alloy valves', 'cast iron cylinder heads', 'theoretical heat transfer rate'], 'relations': ['engine_model_to_valve_material', 'engine_model_to_cylinder_head_material', 'thermal_conductivity_to_heat_transfer_rate'], 'intent': 'calculate_theoretical_heat_transfer_rate_based_on_material_properties', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'thermal_conductivity': 'W/(m·K) (watts per meter-kelvin)', 'heat_transfer_rate': 'W (watts)'}, 'foreign_keys': [{'fk_table': 'enginematerials_copy1', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials_copy1', 'pk_column': 'Material_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}], 'car_engine.enginematerials_copy1': [{'column': 'Valve_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '气门材料', 'examples': ['Stainless Steel', 'Titanium', 'Inconel']}, {'column': 'Head_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸盖材料', 'examples': ['Aluminum']}], 'car_engine.enginethermodynamics': [{'column': 'Thermal_Conductivity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热导率 (瓦/米·K)', 'examples': ['150.0', '155.0', '152.0', '153.0', '148.0']}]}}\nA physical knowledge question is as follows:\nFind the engine models that use titanium alloy valves and have cylinder heads made of cast iron, then calculate the theoretical heat transfer rate (in watts) between the cylinder head and the valve based on the material's thermal conductivity, and list the top 3 in descending order of heat transfer rate.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (80 * 21.9 * 0.01 * 600) / (80 * 0.005 + 21.9 * 0.010) AS Q FROM engine e JOIN enginematerials m USING(Engine_ID) JOIN enginethermodynamics t USING(Engine_ID) WHERE m.Valve_Material = 'Titanium' AND m.Head_Material = 'Cast Iron' ORDER BY Q DESC LIMIT 3;",
        "db_id": "car_engine"
    },
    {
        "id": 289,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['aluminum alloy pistons', 'steel connecting rods'], 'relations': ['engine_to_materials (engine → enginematerials_copy1)', \"piston_material_filter (Piston_Material = 'aluminum alloy')\", \"rod_material_filter (Connecting_Rod_Material = 'steel')\"], 'intent': 'calculate_piston_inertial_force', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'force': 'N (Newtons)', 'angular_velocity': 'rad/s (from Angular_Velocity column)', 'stroke': 'meters (derived from Stroke column, if converted)', 'mass': 'kg (requires Piston_Mass from material density × volume, implied but not directly available)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials_copy1', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}, {'pk_table': 'enginematerials_copy1', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginematerials_copy1': [{'column': 'Piston_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '活塞材料', 'examples': ['Forged Aluminum', 'Aluminum']}, {'column': 'Connecting_Rod_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '连杆材料', 'examples': ['Steel', 'Titanium']}], 'car_engine.enginedynamics': [{'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}], 'car_engine.enginedimensions': [{'column': 'Stroke'}]}}\nA mathematical logic question is as follows:\nCalculate the piston inertial force (in Newtons) for all engines using aluminum alloy pistons with connecting rods made of steel, then list the top 5 results sorted by inertial force in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, 2700 * PI() * POWER(e.Bore/2000,2) * e.Stroke/1000 * POWER(d.Angular_Velocity,2) * (e.Stroke/2000) * (1 + 1/(2*1.5)) AS F FROM engine e JOIN enginematerials m USING(Engine_ID) JOIN enginedynamics d USING(Engine_ID) WHERE m.Piston_Material = 'Aluminum' AND m.Connecting_Rod_Material = 'Steel' ORDER BY F ASC LIMIT 5;",
        "db_id": "car_engine"
    },
    {
        "id": 290,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline engine', 'cast iron cylinder block', 'compression ratio 10:1', 'specific power (hp/L)'], 'relations': ['engine_to_material (engine.model → enginematerials.block_material)', 'engine_to_compression (engine.model → engine.compression_ratio)', 'engine_to_power (engine.model → engineperformance.specific_power)'], 'intent': 'list_top_engine_models_by_criteria', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'compression_ratio': 'unitless (10:1 ratio)', 'specific_power': 'horsepower per liter (hp/L)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}], 'car_engine.engineperformance': [{'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}]}}\nA common sense reasoning question is as follows:\nList the top 3 gasoline engine models that use cast iron cylinder blocks and have a compression ratio greater than 10:1, sorted in descending order by specific power (horsepower per liter).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, p.Specific_Power FROM engine e JOIN enginematerials m USING(Engine_ID) JOIN engineperformance p USING(Engine_ID) WHERE m.Block_Material = 'Cast Iron' AND e.Fuel_Type = 'Gasoline' AND e.Compression_Ratio > 10 ORDER BY p.Specific_Power DESC LIMIT 3;",
        "db_id": "car_engine"
    },
    {
        "id": 291,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['W-type 24-cylinder engine', 'bore diameter 5000 mm', 'stroke 3000 mm', 'ceramic crankshaft material', 'elastic modulus 300 GPa', 'natural frequency torsional vibration'], 'relations': ['engine_to_dimensions (engine → bore/stroke)', 'material_to_properties (ceramic → elastic modulus)', 'torsional_frequency_dependence (elastic modulus → natural frequency)'], 'intent': 'calculate_crankshaft_torsional_natural_frequency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [24, 5000, 3000, 300], 'units': {'bore_stroke': 'mm (millimeters)', 'elastic_modulus': 'GPa (Gigapascals)', 'frequency': 'Hz (Hertz)', 'cylinders': 'unitless'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}, {'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}], 'car_engine.enginematerials': [{'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there exists a W-type 24-cylinder engine with a bore diameter of 5000 mm and a stroke of 3000 mm, and the crankshaft material is ceramic (assuming an elastic modulus of 300 GPa), find the natural frequency (Hz) of the crankshaft's torsional vibration.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, (1/(2*PI())) * SQRT( (300e9/(2*(1+0.3)) * PI()*POWER(ed.Rod_Journal_Diameter/1000,4)/32) / (ed.Length/1000 * (e.Weight * POWER(ed.Rod_Journal_Diameter/2000,2)/4)) ) AS f FROM engine e JOIN enginedimensions ed USING(Engine_ID) WHERE e.Configuration = 'W' AND e.Cylinders = 24 AND e.Bore = 5000 AND e.Stroke = 3000 ORDER BY f ASC;",
        "db_id": "car_engine"
    },
    {
        "id": 292,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine displacement > 2.0L', 'combustion efficiency', 'heat rejection rate', 'engine model'], 'relations': ['engine_to_thermodynamics (engine.Engine_ID → enginethermodynamics.Engine_ID)', 'ratio_calculation (Combustion_Efficiency / Heat_Rejection_Rate)'], 'intent': 'calculate_combustion_efficiency_to_heat_rejection_ratio_and_rank_models', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.0], 'units': {'displacement': 'liters', 'combustion_efficiency': 'unitless ratio (from enginethermodynamics)', 'heat_rejection_rate': 'W/m² (assumed from typical thermodynamics units)', 'ratio': 'unitless (combustion efficiency / heat rejection rate)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}], 'car_engine.enginethermodynamics': [{'column': 'Combustion_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃烧效率 (%)', 'examples': ['35.0', '38.0', '37.0', '36.0', '34.0']}, {'column': 'Heat_Rejection_Rate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热排放率 (千瓦)', 'examples': ['50.0', '45.0', '48.0', '49.0', '52.0']}]}}\nA physical knowledge question is as follows:\nBased on the enginethermodynamics table, calculate the ratio of combustion efficiency to heat emission rate for a certain engine, and list the top 5 models with the highest ratio among engines with a displacement greater than 2.0 liters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (et.Combustion_Efficiency / et.Heat_Rejection_Rate) AS Ratio FROM engine e INNER JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID WHERE e.Displacement > 2.0 ORDER BY Ratio DESC LIMIT 5;",
        "db_id": "car_engine"
    },
    {
        "id": 293,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine block materials (Block_Material)', 'exhaust temperature', 'specific heat capacity', 'thermal conductivity'], 'relations': ['engine_to_material (Engine_ID → Block_Material)', 'material_to_thermodynamics (Engine_ID → Exhaust_Gas_Temperature, Specific_Heat_Capacity, Thermal_Conductivity)', 'heat_dissipation_formula (ΔQ = Thermal_Conductivity × Specific_Heat_Capacity × ΔTemperature)'], 'intent': 'calculate_and_rank_heat_dissipation_capacity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['Exhaust_Gas_Temperature', 'Specific_Heat_Capacity', 'Thermal_Conductivity'], 'units': {'temperature': '°C or K (from Exhaust_Gas_Temperature)', 'specific_heat_capacity': 'J/(kg·K)', 'thermal_conductivity': 'W/(m·K)', 'heat_dissipation': 'W/m² (derived via formula)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginethermodynamics': [{'column': 'Exhaust_Gas_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排气温度 (°C)', 'examples': ['850.0', '800.0', '820.0', '830.0', '870.0']}, {'column': 'Specific_Heat_Capacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比热容 (焦耳/千克·K)', 'examples': ['0.9', '0.92', '0.91', '0.89', '0.93']}, {'column': 'Thermal_Conductivity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热导率 (瓦/米·K)', 'examples': ['150.0', '155.0', '152.0', '153.0', '148.0']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCombining the enginethermodynamics and enginematerials tables, calculate the heat dissipation capacity of engine block materials (Block_Material) based on exhaust temperature, specific heat capacity, and thermal conductivity, then list the top 3 models ranked in descending order of heat dissipation capacity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (et.Thermal_Conductivity * (et.Exhaust_Gas_Temperature - et.Coolant_Temperature) / ed.Cylinder_Spacing + et.Specific_Heat_Capacity * et.Oil_Temperature) AS Q_total FROM enginethermodynamics et INNER JOIN enginematerials em ON et.Engine_ID = em.Engine_ID INNER JOIN enginedimensions ed ON et.Engine_ID = ed.Engine_ID INNER JOIN engine e ON et.Engine_ID = e.Engine_ID ORDER BY Q_total DESC LIMIT 3;",
        "db_id": "car_engine"
    },
    {
        "id": 294,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine models', 'coolant temperature (Coolant_Temperature) > 100°C', 'gasoline (Gasoline)'], 'relations': ['engine_to_thermodynamics (engine.Engine_ID → enginethermodynamics.Engine_ID)', 'filter_by_coolant (Coolant_Temperature > 100°C)', \"filter_by_fuel (Fuel_Type = 'Gasoline')\"], 'intent': 'list_engine_models_with_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'temperature': '°C (Celsius)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}], 'car_engine.enginethermodynamics': [{'column': 'Coolant_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '冷却液温度 (°C)', 'examples': ['90.0', '85.0', '88.0', '89.0', '92.0']}]}}\nA common sense reasoning question is as follows:\nList the engine models where the coolant temperature (Coolant_Temperature) exceeds 100°C and the fuel type is gasoline (Gasoline), sorted in ascending order by displacement.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model FROM engine e INNER JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID WHERE et.Coolant_Temperature > 100 AND e.Fuel_Type = 'Gasoline' ORDER BY e.Displacement ASC;",
        "db_id": "car_engine"
    },
    {
        "id": 295,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Exhaust_Gas_Temperature 5000°C', 'Heat_Rejection_Rate 1000 kW'], 'relations': ['thermodynamic_constraint (Exhaust_Gas_Temperature → Heat_Rejection_Rate)', 'thermal_conductivity_requirement (Heat_Rejection_Rate ≤ 1000 kW → Thermal_Conductivity)'], 'intent': 'calculate_required_thermal_conductivity_for_heat_rejection_limit', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5000, 1000], 'units': {'temperature': '°C (Celsius)', 'power': 'kW (kilowatts)', 'thermal_conductivity': 'W/(m·K) (implied by field name)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginethermodynamics': [{'column': 'Exhaust_Gas_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排气温度 (°C)', 'examples': ['850.0', '800.0', '820.0', '830.0', '870.0']}, {'column': 'Heat_Rejection_Rate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热排放率 (千瓦)', 'examples': ['50.0', '45.0', '48.0', '49.0', '52.0']}, {'column': 'Thermal_Conductivity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热导率 (瓦/米·K)', 'examples': ['150.0', '155.0', '152.0', '153.0', '148.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the exhaust gas temperature (Exhaust_Gas_Temperature) of an engine reaches 5000°C (far exceeding the melting point of conventional materials), calculate how much the thermal conductivity (Thermal_Conductivity) needs to be for the heat rejection rate (Heat_Rejection_Rate) not to exceed 1000 kilowatts, and list the top 5 results sorted in ascending order by the required thermal conductivity value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (1000 * (ed.Cylinder_Spacing / 1000) ) / ( (2 * ((ed.Length / 1000) * (ed.Width / 1000) + (ed.Length / 1000) * (ed.Height / 1000) + (ed.Width / 1000) * (ed.Height / 1000))) * (5000 - 25) ) AS λ_min FROM enginedimensions ed INNER JOIN engine e ON ed.Engine_ID = e.Engine_ID ORDER BY λ_min ASC LIMIT 5;",
        "db_id": "car_engine"
    },
    {
        "id": 296,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['combustion efficiency', 'thermal emission rates', 'manufacturers'], 'relations': ['manufacturer_to_engines', 'combustion_efficiency_to_thermal_emission'], 'intent': 'calculate_theoretical_relationship_and_aggregate_by_manufacturer', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'combustion_efficiency': '% (percentage)', 'thermal_emission_rates': 'kW (kilowatts, inferred from Heat_Rejection_Rate)', 'aggregation': 'average & sum functions'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}], 'car_engine.enginethermodynamics': [{'column': 'Combustion_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃烧效率 (%)', 'examples': ['35.0', '38.0', '37.0', '36.0', '34.0']}, {'column': 'Heat_Rejection_Rate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热排放率 (千瓦)', 'examples': ['50.0', '45.0', '48.0', '49.0', '52.0']}]}}\nA physical knowledge question is as follows:\nCalculate the theoretical relationship between combustion efficiency and thermal emission rates for engines from different manufacturers, and display the average combustion efficiency and total thermal emission rate grouped by manufacturer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, AVG(et.Combustion_Efficiency) AS Avg_Combustion_Efficiency, SUM(et.Heat_Rejection_Rate) AS Total_Heat_Rejection_Rate FROM engine e JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID GROUP BY e.Manufacturer;",
        "db_id": "car_engine"
    },
    {
        "id": 297,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric engines', 'specific heat capacity', 'thermal conductivity', 'cylinder arrangement'], 'relations': ['engine_to_thermodynamics (engine.Engine_ID → enginethermodynamics.Engine_ID)', 'group_by_cylinder_arrangement (Configuration → engine group)', 'property_relation (specific heat capacity & thermal conductivity linked to engines)'], 'intent': 'calculate_weighted_harmonic_mean_of_thermal_properties_grouped_by_cylinder_arrangement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'specific_heat_capacity': 'J/(kg·K) (assumed unit)', 'thermal_conductivity': 'W/(m·K) (assumed unit)', 'harmonic_mean': 'dimensionless (ratio of properties)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Configuration (cylinder arrangement)'}, {'column': 'Fuel_Type (filter electric engines)'}], 'car_engine.enginethermodynamics': [{'column': 'Specific_Heat_Capacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比热容 (焦耳/千克·K)', 'examples': ['0.9', '0.92', '0.91', '0.89', '0.93']}, {'column': 'Thermal_Conductivity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热导率 (瓦/米·K)', 'examples': ['150.0', '155.0', '152.0', '153.0', '148.0']}]}}\nA mathematical logic question is as follows:\nCalculate the weighted harmonic mean of the specific heat capacity and thermal conductivity for all electric engines, grouped by cylinder arrangement.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Configuration, SUM(e.Weight)/(SUM(e.Weight/(0.6*et.Specific_Heat_Capacity + 0.4*et.Thermal_Conductivity))) AS Weighted_Harmonic_Mean FROM engine e JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID WHERE e.Fuel_Type = 'Electric' AND (0.6*et.Specific_Heat_Capacity + 0.4*et.Thermal_Conductivity) > 0 GROUP BY e.Configuration;",
        "db_id": "car_engine"
    },
    {
        "id": 298,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine models', 'coolant temperatures', 'fuel types'], 'relations': ['engine_to_thermodynamics (Engine_ID)', 'temperature_threshold (Coolant_Temperature > 120°C)', 'fuel_type_grouping (Fuel_Type)'], 'intent': 'count_quantities_grouped_by_fuel_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120], 'units': {'temperature': '°C (Celsius)', 'threshold': '120°C (coolant temperature cutoff)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.enginethermodynamics': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Coolant_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '冷却液温度 (°C)', 'examples': ['90.0', '85.0', '88.0', '89.0', '92.0']}]}}\nA common sense reasoning question is as follows:\nAnalyze engine models with coolant temperatures exceeding 120°C, and count the quantities grouped by fuel type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Fuel_Type, COUNT(DISTINCT e.Model) AS High_Temp_Models FROM engine e JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID WHERE et.Coolant_Temperature > 120 GROUP BY e.Fuel_Type;",
        "db_id": "car_engine"
    },
    {
        "id": 299,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine exhaust temperature 5000°C', 'thermal radiation power', 'material feasibility', 'cylinder count'], 'relations': ['exhaust_temperature_to_radiation_power (Stefan-Boltzmann Law)', 'material_to_engine_component (materials used in engine construction)', 'cylinders_to_engine_grouping (grouping by cylinder count)'], 'intent': 'calculate_thermal_radiation_power_and_assess_material_feasibility', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5000], 'units': {'temperature': '°C (converted to Kelvin for Stefan-Boltzmann equation)', 'thermal_radiation_power': 'Watts (W)', 'stefan_boltzmann_constant': 'σ = 5.67×10⁻⁸ W/m²K⁴'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginethermodynamics': [{'column': 'Exhaust_Gas_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排气温度 (°C)', 'examples': ['850.0', '800.0', '820.0', '830.0', '870.0']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Head_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸盖材料', 'examples': ['Aluminum', 'Cast Iron']}, {'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}], 'car_engine.engine': [{'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}, {'column': 'Height', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '高度 (毫米)', 'examples': ['800.0', '750.0', '780.0', '820.0', '850.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the exhaust temperature of a certain engine reaches 5000°C, calculate its thermal radiation power and infer material feasibility, grouped by the number of cylinders.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Cylinders, SUM(5.67E-8 * 0.9 * 2*(ed.Length*ed.Width + ed.Length*ed.Height + ed.Width*ed.Height) * (POWER(5273,4)-POWER(300,4))) AS Thermal_Radiation_Power FROM engine e JOIN enginedimensions ed ON e.Engine_ID = ed.Engine_ID GROUP BY e.Cylinders;",
        "db_id": "car_engine"
    },
    {
        "id": 300,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car_engine', 'total_energy_released 5000kW', 'combustion_efficiency 35%', 'coolant_oil_heat 2500kW', 'exhaust_gas_temperature'], 'relations': ['engine_to_thermodynamics (car_engine → enginethermodynamics)', 'energy_balance (input_energy = work_output + heat_loss)', 'heat_partition (coolant_oil_heat + exhaust_heat = total_heat_loss)'], 'intent': 'verify_first_law_of_thermodynamics_by_calculating_exhaust_heat_loss', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5000, 35, 2500], 'units': {'power': 'kW (kilowatts)', 'efficiency': '% (percentage)', 'temperature': '°C (implied by Exhaust_Gas_Temperature field)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginethermodynamics': [{'column': 'Combustion_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃烧效率 (%)', 'examples': ['35.0', '38.0', '37.0', '36.0', '34.0']}, {'column': 'Exhaust_Gas_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排气温度 (°C)', 'examples': ['850.0', '800.0', '820.0', '830.0', '870.0']}, {'column': 'Heat_Rejection_Rate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热排放率 (千瓦)', 'examples': ['50.0', '45.0', '48.0', '49.0', '52.0']}, {'column': 'Coolant_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '冷却液温度 (°C)', 'examples': ['90.0', '85.0', '88.0', '89.0', '92.0']}, {'column': 'Oil_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '机油温度 (°C)', 'examples': ['100.0', '95.0', '98.0', '99.0', '102.0']}]}}\nA physical knowledge question is as follows:\nCalculate whether the thermal emission rate of a certain engine meets the first law of thermodynamics (energy conservation) at a given combustion efficiency. Given that the total energy released by fuel combustion is 5000 kilowatts, the combustion efficiency is 35%, and the total heat carried away by the coolant and engine oil is 2500 kilowatts, what is the heat loss corresponding to the exhaust gas temperature?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, 5000 AS Total_Energy, Combustion_Efficiency, 2500 AS Cooling_Loss, (5000 - (5000 * Combustion_Efficiency / 100) - 2500) AS Calculated_Exhaust_Loss, Heat_Rejection_Rate AS Actual_Exhaust_Loss, CASE WHEN Heat_Rejection_Rate = (5000 - (5000 * Combustion_Efficiency / 100) - 2500) THEN '满足能量守恒' ELSE '不满足能量守恒' END AS Energy_Conservation_Status FROM enginethermodynamics WHERE Engine_ID = 12345;",
        "db_id": "car_engine"
    },
    {
        "id": 301,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine displacement 2.0 liters', 'specific heat capacity 4200 J/kg·K', 'oil temperature rise from 80°C to 120°C', 'oil density 0.85 kg/L', 'time duration 10 seconds'], 'relations': ['displacement_to_volume (2.0 liters → oil volume calculation)', 'heat_capacity_relation (Q = mass × ΔT × specific_heat_capacity)', 'power_relation (cooling_power = total_heat / time)'], 'intent': 'calculate_total_stored_heat_and_required_cooling_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.0, 4200, 80, 120, 0.85, 10], 'units': {'volume': 'liters (converted to m³ for calculation)', 'mass': 'kg (volume × density)', 'temperature': '°C (ΔT = 40 K)', 'specific_heat_capacity': 'J/kg·K', 'time': 'seconds', 'energy': 'joules (Q = kg × K × J/kg·K)', 'power': 'kilowatts (joules/second ÷ 1000)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}], 'car_engine.enginethermodynamics': [{'column': 'Specific_Heat_Capacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比热容 (焦耳/千克·K)', 'examples': ['0.9', '0.92', '0.91', '0.89', '0.93']}]}}\nA mathematical logic question is as follows:\nIf an engine has a displacement of 2.0 liters, a specific heat capacity of 4200 J/kg·K, and the oil temperature rises from 80°C to 120°C during operation, assuming the oil density is 0.85 kg/L, calculate the total stored heat (in joules). If this heat needs to be removed by the cooling system within 10 seconds, what cooling power in kilowatts must be achieved?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Displacement, et.Specific_Heat_Capacity, (e.Displacement * 0.85) AS Mass_kg, (120 - 80) AS Temp_Diff_K, ROUND((e.Displacement * 0.85) * et.Specific_Heat_Capacity * (120 - 80), 2) AS Total_Heat_J, ROUND(((e.Displacement * 0.85) * et.Specific_Heat_Capacity * (120 - 80)) / 10 / 1000, 2) AS Required_Power_kW FROM engine e JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID WHERE e.Engine_ID = 12345;",
        "db_id": "car_engine"
    },
    {
        "id": 302,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine exhaust temperature 950°C', 'catalytic converter operational limit 800°C'], 'relations': ['exhaust_temp_to_catalyst_limit (ΔT=150°C)', 'engine_to_thermodynamics (engine → exhaust temperature data)'], 'intent': 'analyze_catalytic_converter_failure_risk', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [950, 800], 'units': {'temperature': '°C (Celsius)', 'delta_temperature': '°C (temperature differential)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginethermodynamics': [{'column': 'Exhaust_Gas_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排气温度 (°C)', 'examples': ['850.0', '800.0', '820.0', '830.0', '870.0']}], 'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}]}}\nA common sense reasoning question is as follows:\nThe exhaust temperature of a certain engine reaches 950°C, significantly exceeding the operational limit of conventional catalytic converters (typically below 800°C). Analyze whether the high exhaust temperature could potentially cause the catalytic converter to fail in this engine.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Exhaust_Gas_Temperature, CASE WHEN Exhaust_Gas_Temperature > 800 THEN '存在催化器失效风险' ELSE '工作状态正常' END AS Catalyst_Status FROM enginethermodynamics WHERE Exhaust_Gas_Temperature > 800;",
        "db_id": "car_engine"
    },
    {
        "id": 303,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['combustion efficiency 200%', 'heat emission rate -1000 kW', 'engine'], 'relations': ['engine_to_combustion_efficiency (engine → combustion efficiency)', 'engine_to_heat_emission_rate (engine → heat emission rate)', 'efficiency_limit_contradiction (200% > physical limit)', 'heat_flux_contradiction (negative kW implies heat absorption)'], 'intent': 'verify_energy_conservation_in_engine', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, -1000], 'units': {'combustion_efficiency': '%', 'heat_emission_rate': 'kW', 'physical_limit': 'Carnot efficiency < 100%'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginethermodynamics': [{'column': 'Combustion_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃烧效率 (%)', 'examples': ['35.0', '38.0', '37.0', '36.0', '34.0']}, {'column': 'Heat_Rejection_Rate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热排放率 (千瓦)', 'examples': ['50.0', '45.0', '48.0', '49.0', '52.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the combustion efficiency of an engine is 200% (far exceeding physical limits), and its heat emission rate is -1000 kW (negative value indicates heat absorption). Please verify whether this engine satisfies energy conservation under these conditions. If there is a contradiction, what is the contradiction point?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Combustion_Efficiency, Heat_Rejection_Rate, CASE WHEN Combustion_Efficiency > 100 THEN '矛盾：燃烧效率超过物理极限' WHEN Heat_Rejection_Rate < 0 THEN '矛盾：热排放率违反热力学第二定律' ELSE '无矛盾' END AS Physical_Consistency FROM enginethermodynamics WHERE Combustion_Efficiency > 100 OR Heat_Rejection_Rate < 0;",
        "db_id": "car_engine"
    },
    {
        "id": 304,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cylinder bore 84 mm', 'stroke 90 mm', 'compression ratio 11.5:1', 'gasoline fuel', 'standard atmospheric pressure 1 Bar', 'specific heat ratio 1.4'], 'relations': ['bore_to_engine_dimensions (Bore → engine.Bore)', 'stroke_to_engine_dimensions (Stroke → engine.Stroke)', 'compression_ratio_to_engine (Compression_Ratio → engine.Compression_Ratio)', 'fuel_type_to_engine (Fuel_Type → engine.Fuel_Type)', 'specific_heat_ratio_to_thermodynamics (Specific_Heat_Capacity → enginethermodynamics.Specific_Heat_Capacity)'], 'intent': 'calculate_theoretical_maximum_combustion_pressure', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [84, 90, 11.5, 1, 1.4], 'units': {'length': 'mm (millimeters)', 'pressure': 'Bar (converted from standard atmospheric pressure)', 'specific_heat_ratio': 'unitless (γ=1.4)', 'compression_ratio': 'unitless (11.5:1)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.enginethermodynamics': [{'column': 'Specific_Heat_Capacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比热容 (焦耳/千克·K)', 'examples': ['0.9', '0.92', '0.91', '0.89', '0.93']}]}}\nA physical knowledge question is as follows:\nThe cylinder bore of an engine is 84 mm, the stroke is 90 mm, the compression ratio is 11.5:1, and the fuel is gasoline. Assuming standard atmospheric pressure, calculate the theoretical maximum combustion pressure (in Bar) in a single cylinder during one working cycle. The specific heat ratio of air is 1.4, and the standard atmospheric pressure is 1 Bar.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Model, 1 * POW(CAST(SUBSTRING_INDEX(Compression_Ratio, ':', 1) AS DECIMAL), 1.4) AS Theoretical_Max_Pressure_Bar FROM engine WHERE Bore = 84 AND Stroke = 90 AND Compression_Ratio = '11.5:1' AND Fuel_Type = 'Gasoline';",
        "db_id": "car_engine"
    },
    {
        "id": 305,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['V8 engine', 'crankshaft angular velocity 400 rad/s', 'piston stroke 86 mm', 'connecting rod length 150 mm', 'crankshaft angle 70 degrees'], 'relations': ['engine_to_dimensions (V8 → connecting rod length/stroke)', 'angular_velocity_to_piston_motion (400 rad/s → velocity calculation)', 'geometric_relationship (stroke/2 + connecting rod length)'], 'intent': 'calculate_instantaneous_piston_velocity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [400, 86, 150, 70], 'units': {'angular_velocity': 'rad/s', 'length': 'mm (converted to meters for calculation)', 'angle': 'degrees (converted to radians)', 'velocity': 'm/s'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}], 'car_engine.enginedynamics': [{'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}]}}\nA mathematical logic question is as follows:\nAn eight-cylinder V-engine (V8) has a crankshaft angular velocity of 400 radians/second, a piston stroke of 86 millimeters, and a connecting rod length of 150 millimeters. Calculate the instantaneous velocity of the piston (in meters/second) when the crankshaft angle is 70 degrees, accurate to four decimal places.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, ed.Angular_Velocity, (ed.Angular_Velocity * (e.Stroke/2000)) * (SIN(RADIANS(70)) + ((e.Stroke/2000)/(2*0.15))*SIN(RADIANS(140))) AS Instantaneous_Velocity FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID WHERE e.Cylinders = 8 AND e.Configuration = 'V' AND e.Stroke = 86;",
        "db_id": "car_engine"
    },
    {
        "id": 306,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['turbocharged diesel engine', 'Compression_Ratio=18:1', 'Fuel_Type=Diesel', 'altitude=4500 meters'], 'relations': ['engine_to_thermodynamics (engine → enginethermodynamics)', 'altitude_to_air_density (altitude → atmospheric pressure reduction)', 'compression_ratio_to_combustion (Compression_Ratio → combustion efficiency)'], 'intent': 'explain_power_loss_mechanism_using_physics_principles_and_propose_solutions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [18, 4500], 'units': {'compression_ratio': 'unitless (ratio)', 'altitude': 'meters (m)', 'pressure': 'Pascals (Pa, implied by gas equation)', 'temperature': 'Kelvin (K, implied by gas equation)'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Aspiration', 'type': 'ENUM', 'primary_key': False, 'comment': '进气方式', 'examples': ['Turbocharged', 'Naturally Aspirated', 'Supercharged']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.enginethermodynamics': [{'column': 'Combustion_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃烧效率 (%)', 'examples': ['35.0', '38.0', '37.0', '36.0', '34.0']}, {'column': 'Exhaust_Gas_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排气温度 (°C)', 'examples': ['850.0', '800.0', '820.0', '830.0', '870.0']}, {'column': 'Specific_Heat_Capacity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比热容 (焦耳/千克·K)', 'examples': ['0.9', '0.92', '0.91', '0.89', '0.93']}]}}\nA common sense reasoning question is as follows:\nA turbocharged diesel engine (Compression_Ratio=18:1, Fuel_Type=Diesel) experiences severe power loss at a plateau altitude of 4500 meters. Please explain the phenomenon using Bernoulli's principle and the gas state equation, and propose improvement measures.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Model, Compression_Ratio, Aspiration FROM engine WHERE Fuel_Type = 'Diesel' AND Aspiration = 'Turbocharged' AND Compression_Ratio = '18:1';",
        "db_id": "car_engine"
    },
    {
        "id": 307,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['24-cylinder W-type engine', 'mean piston speed 40 m/s', 'redline speed 30000 RPM', 'bore 200 mm', 'stroke 500 mm', 'piston assembly mass 2.5 kg', 'gravitational acceleration 9.8 m/s²'], 'relations': ['engine_to_specs (24-cylinder W-type engine → engine specifications)', 'piston_speed_to_rpm (mean piston speed → redline speed)', 'stroke_to_crank_radius (stroke → crank radius)', 'force_components (mass, angular velocity, crank radius)'], 'intent': 'calculate_inertial_force_on_connecting_rod', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [24, 40, 30000, 200, 500, 2.5, 9.8], 'units': {'piston_speed': 'm/s', 'rpm': 'RPM', 'bore': 'mm', 'stroke': 'mm', 'mass': 'kg', 'acceleration': 'm/s²', 'force': 'Newtons (N)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}, {'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Redline', 'type': 'INTEGER', 'primary_key': False, 'comment': '红线转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}], 'car_engine.enginedynamics': [{'column': 'Mean_Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均活塞速度 (米/秒)', 'examples': ['15.0', '16.0', '14.0', '15.5', '13.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a 24-cylinder W-type engine with a mean piston speed of 40 m/s, a redline speed of 30,000 RPM, a bore of 200 mm, and a stroke of 500 mm. Calculate the inertial force (in Newtons) experienced by the connecting rod, given a piston assembly mass of 2.5 kg and a gravitational acceleration of 9.8 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, e.Model, 2.5 * POW(2*PI()*e.Redline/60, 2) * (e.Stroke/2000) * (1 + (e.Stroke/2000)/0.15) AS Inertial_Force FROM engine e WHERE e.Cylinders = 24 AND e.Configuration = 'W' AND e.Bore = 200 AND e.Stroke = 500;",
        "db_id": "car_engine"
    },
    {
        "id": 308,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['V-type engine', 'crankshaft', 'main bearing bore diameter 80 mm', 'crankshaft weight 50 kg'], 'relations': ['crankshaft_to_diameter (80 mm → radius calculation)', 'mass_property (50 kg mass for inertia)'], 'intent': 'calculate_moment_of_inertia_of_crankshaft', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80, 50], 'units': {'diameter': 'mm (converted to 0.04 m radius)', 'mass': 'kg', 'moment_of_inertia': 'kg·m² (calculated)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Main_Bore_Diameter', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '主轴承孔径 (毫米)', 'examples': ['60.0', '55.0', '58.0', '62.0', '65.0']}]}}\nA physical knowledge question is as follows:\nA V-type engine has a cylinder spacing of 120 mm, a cylinder block height of 300 mm, and a main bearing bore diameter of 80 mm. Assuming the engine crankshaft is a uniform steel cylinder with a weight of 50 kg, calculate the moment of inertia of the crankshaft at its maximum rotational speed of 8000 RPM (ignoring the effect of the journals).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 50 * POWER((Main_Bore_Diameter/2/1000),2) AS 转动惯量, (2 * PI() * Max_turn)/60 AS 角速度 FROM enginedimensions JOIN enginedynamics USING(Engine_ID) WHERE Main_Bore_Diameter=80 AND Engine_ID IN (SELECT Engine_ID FROM engine WHERE Configuration='V')",
        "db_id": "car_engine"
    },
    {
        "id": 309,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['straight-six engine', 'cylinder', 'total volume', 'cylinder volume'], 'relations': ['engine_dimensions (length, width, height)', 'cylinder_specifications (bore, stroke, cylinder count)', 'volume_difference (total_volume - cylinder_volume)'], 'intent': 'calculate_unoccupied_volume_percentage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [600, 500, 400, 84, 90, 6], 'units': {'length': 'mm (millimeters)', 'volume': 'mm³ (cubic millimeters)', 'cylinder_bore': 'mm (millimeters)', 'cylinder_stroke': 'mm (millimeters)', 'percentage': '% (percentage)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}, {'column': 'Height', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '高度 (毫米)', 'examples': ['800.0', '750.0', '780.0', '820.0', '850.0']}], 'car_engine.engine': [{'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Cylinders', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数', 'examples': ['6', '4', '8', '12', '10']}]}}\nA mathematical logic question is as follows:\nA straight-six engine has a length of 600 mm, a width of 500 mm, and a height of 400 mm. The known cylinder spacing is 105 mm, the cylinder bore is 84 mm, and the stroke is 90 mm. Calculate the percentage of volume in the engine's total volume that is not occupied by the cylinders (retain 3 decimal places).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND((Length*Width*Height - Cylinders*PI()*POWER(Bore/2,2)*Stroke)/(Length*Width*Height)*100,3) AS 剩余空间占比 FROM enginedimensions JOIN engine USING(Engine_ID) WHERE Configuration='Inline' AND Cylinders=6 AND Length=600 AND Width=500 AND Height=400",
        "db_id": "car_engine"
    },
    {
        "id": 310,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine width 800 mm', 'vehicle compartment max width 900 mm', '5% width margin'], 'relations': ['engine_to_compartment_width (800 mm vs 900 mm)', 'margin_calculation (total 10% margin = 90 mm)'], 'intent': 'validate_engine_installation_requirements', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [800, 900, 5], 'units': {'width': 'mm (millimeters)', 'margin': '% (percentage)', 'conversion': 'total_margin = 900 * 10% = 90 mm (5% per side)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}]}}\nA common sense reasoning question is as follows:\nAn engine has a width of 800 millimeters, and the maximum allowable installation width in the vehicle's front compartment is 900 millimeters. According to the automotive production line assembly specifications, at least 5% width margin must be reserved on each side between the engine and the compartment. Does this engine meet the installation requirements?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Width, CASE WHEN Width <= 900*(1-0.1) THEN '符合' ELSE '不符合' END AS 安装状态 FROM enginedimensions WHERE Width=800",
        "db_id": "car_engine"
    },
    {
        "id": 311,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['24-cylinder W-type engine', 'cylinder spacing 5000 mm', '3-layer cylinder stacking structure', 'height increase per layer 200 mm', 'connecting rod journal diameter ratio 1/100', 'crankshaft yield strength 800 MPa', 'torque 20000 N·m'], 'relations': ['cylinder_spacing_to_journal_diameter (5000 mm → 50 mm)', 'stacking_layers_to_height_increase (3 layers → 600 mm total height increase)', 'torque_to_shear_stress (20000 N·m → τ calculation)', 'shear_stress_to_yield_strength (τ vs 800 MPa)'], 'intent': 'calculate_engine_dimensions_and_stress_analysis', 'reasoning_type': ['mathematical logic reasoning (length calculation)', 'mathematical logic reasoning (journal diameter calculation)', 'physical knowledge reasoning (shear stress analysis)'], 'numerical_values': [5000, 200, 3, 0.01, 20000, 800], 'units': {'length': 'millimeters (mm) → meters (m for stress calculation)', 'torque': 'N·m (Newton-meters)', 'stress': 'MPa (10^6 Pascals) → Pa conversion for calculation', 'conversion': ['1/100 of cylinder spacing = journal diameter', 'τ = (16 * Torque) / (π * d³) for shear stress']}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials_copy1', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginematerials_copy1', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Cylinder_Spacing', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '气缸间距 (毫米)', 'examples': ['100.0', '90.0', '95.0', '110.0', '92.0']}, {'column': 'Rod_Journal_Diameter', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '连杆轴颈直径 (毫米)', 'examples': ['50.0', '45.0', '48.0', '52.0', '55.0']}], 'car_engine.enginematerials': [{'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}], 'car_engine.enginematerials_copy1': [{'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a W-type 24-cylinder engine has a cylinder spacing of 5,000 millimeters and employs a 3-layer cylinder stacking structure (each layer increases in height by 200 millimeters). If the diameter of the connecting rod journal must be maintained at 1/100 of the cylinder spacing, determine:  \n1) The theoretical minimum length of the engine  \n2) The diameter of the connecting rod journal  \n3) Given that the crankshaft material has a yield strength of 800 MPa, calculate whether the shear stress on the journal under a torque of 20,000 N·m exceeds the limit.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (24/4)*Cylinder_Spacing AS 理论长度, Cylinder_Spacing/100 AS 轴颈直径, CASE WHEN (16*20000)/(PI()*POWER(Cylinder_Spacing/100/1000,3)) > 800e6 THEN '超出' ELSE '未超出' END AS 应力状态 FROM enginedimensions JOIN engine USING(Engine_ID) WHERE Configuration='W' AND Cylinders=24 AND Cylinder_Spacing=5000",
        "db_id": "car_engine"
    },
    {
        "id": 312,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Max_turn 8500 RPM', 'recorded Angular_Velocity 890 rad/s'], 'relations': ['RPM_to_rad_s_conversion (Max_turn → Angular_Velocity)'], 'intent': 'verify_angular_velocity_calculation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [8500, 890], 'units': {'rotation_speed': 'RPM (revolutions per minute)', 'angular_velocity': 'rad/s (radians per second)', 'conversion_factor': '2π/60 (conversion from RPM to rad/s)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.enginedynamics': [{'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}, {'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}]}}\nA physical knowledge question is as follows:\nThe maximum rotation speed (Max_turn) of an engine is 8500 RPM, and the recorded Angular_Velocity is 890 rad/s. Please verify whether the angular velocity data satisfies the calculated value from the physical formula?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Max_turn, Angular_Velocity, (PI() * Max_turn / 30) AS Formula_Value, ROUND(Angular_Velocity,2) = ROUND((PI() * Max_turn / 30),2) AS Data_Consistency FROM enginedynamics WHERE Max_turn = 8500 AND Angular_Velocity = 890;",
        "db_id": "car_engine"
    },
    {
        "id": 313,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Mean_Piston_Speed 25.4 m/s', 'Max_turn 6800 RPM', 'Stroke 86 mm'], 'relations': ['piston_speed_formula_verification (2*Stroke*Max_turn/60 = Mean_Piston_Speed)'], 'intent': 'verify_engineering_calculation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [25.4, 6800, 86], 'units': {'velocity': 'm/s', 'rotational_speed': 'RPM → Hz (÷60)', 'length': 'mm → m (×0.001)', 'formula': 'Mean Piston Speed = 2 * Stroke * RPM / 60'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.enginedynamics': [{'column': 'Mean_Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均活塞速度 (米/秒)', 'examples': ['15.0', '16.0', '14.0', '15.5', '13.0']}, {'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}], 'car_engine.engine': [{'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}]}}\nA mathematical logic question is as follows:\nThe Mean_Piston_Speed of a certain V-type engine is labeled as 25.4 m/s, with a Max_turn of 6800 RPM. Given that Stroke = 86 mm, please verify whether the average piston speed meets the calculated value from the formula.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, ed.Mean_Piston_Speed, (2 * (e.Stroke/1000) * ed.Max_turn)/60 AS Calculated_Speed, ROUND(ed.Mean_Piston_Speed,1) = ROUND((2 * (e.Stroke/1000) * ed.Max_turn)/60,1) AS Validation FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID WHERE e.Configuration = 'V型' AND ed.Max_turn = 6800 AND e.Stroke = 86;",
        "db_id": "car_engine"
    },
    {
        "id": 314,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['turbocharged engine', 'peak torque (1500-4000 RPM)', 'peak power (5500 RPM)'], 'relations': ['engine_to_performance (engine → enginedynamics)', 'rpm_range_to_characteristic (1500-4000 RPM → torque, 5500 RPM → power)'], 'intent': 'verify_conventional_power_characteristics', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1500, 4000, 5500], 'units': {'rpm': 'RPM (revolutions per minute)', 'torque': 'N·m or lb·ft (implied by database schema)', 'power': 'HP or kW (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Aspiration', 'type': 'ENUM', 'primary_key': False, 'comment': '进气方式', 'examples': ['Turbocharged', 'Naturally Aspirated', 'Supercharged']}], 'car_engine.enginedynamics': [{'column': 'Peak_Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '峰值扭矩转速 (RPM)', 'examples': ['4000', '5000', '3500', '4500', '3000']}, {'column': 'Peak_Power', 'type': 'INTEGER', 'primary_key': False, 'comment': '峰值功率转速 (RPM)', 'examples': ['6000', '7000', '5500', '6500', '5000']}]}}\nA common sense reasoning question is as follows:\nThe peak torque of a certain turbocharged engine is marked within the 1500-4000 RPM range, while the peak power is marked at 5500 RPM. Does this comply with conventional power characteristics?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_ID, Peak_Torque, Peak_Power, CAST(SUBSTRING_INDEX(Peak_Torque,'-',-1) AS UNSIGNED) < CAST(Peak_Power AS UNSIGNED) AS Logic_Validation FROM enginedynamics WHERE Engine_ID IN (SELECT Engine_ID FROM engine WHERE Aspiration = '涡轮增压');",
        "db_id": "car_engine"
    },
    {
        "id": 315,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rotary engine', 'Max_turn 1,500,000 RPM', 'Angular_Velocity', 'Crankshaft material yield strength 3000 MPa', 'density 7850 kg/m³', 'crankshaft radius 50 mm'], 'relations': ['RPM_to_rad/s_conversion (1,500,000 RPM → angular velocity in rad/s)', 'centrifugal_stress_calculation (σ = ρω²r², compared to yield strength)'], 'intent': 'calculate_angular_velocity_and_determine_crankshaft_fracture_risk', 'reasoning_type': 'physical knowledge reasoning combined with mathematical logic', 'numerical_values': [1500000, 3000, 7850, 50], 'units': {'RPM': 'revolutions per minute', 'angular_velocity': 'rad/s (radians per second)', 'yield_strength': 'MPa (megapascals)', 'density': 'kg/m³ (kilograms per cubic meter)', 'radius': 'mm (millimeters, converted to meters for calculation)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginedynamics': [{'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}, {'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}], 'car_engine.enginematerials': [{'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Max_turn of a certain rotary engine reaches 1,500,000 RPM, how much will its Angular_Velocity exceed in rad/s? Given the crankshaft material's yield strength of 3000 MPa and a density of 7850 kg/m³, would the centrifugal force cause the crankshaft to fracture? (Assume the crankshaft radius is 50 mm)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT PI() * 1500000 / 30 AS Angular_Velocity, (7850 * POW(PI() * 1500000 / 30, 2) * POW(0.05, 2)) / 3 AS Centrifugal_Stress, (7850 * POW(PI() * 1500000 / 30, 2) * POW(0.05, 2)) / 3 > 3e9 AS Will_Break FROM engine WHERE Configuration = '转子' LIMIT 1;",
        "db_id": "car_engine"
    },
    {
        "id": 316,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['aluminum alloy engine block', 'cast iron cylinder head', 'temperature difference (ΔT=100°C)', 'contact area 0.5 m²', 'thickness 10 mm'], 'relations': ['material_to_thermal_conductivity (aluminum alloy/cast iron → thermal conductivity value)', 'heat_transfer_equation (Q = (k*A*ΔT)/d)'], 'intent': 'calculate_heat_conduction_at_material_interface', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 300, 0.5, 10], 'units': {'temperature': '°C (Celsius)', 'area': 'm² (square meters)', 'thickness': 'mm (millimeters) → converted to 0.01 meters', 'thermal_conductivity': 'W/(m·K) (Watts per meter-Kelvin)', 'heat_transfer': 'W (Watts) → converted to J/h (Joules per hour)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}, {'column': 'Head_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸盖材料', 'examples': ['Aluminum', 'Cast Iron']}], 'car_engine.enginethermodynamics': [{'column': 'Thermal_Conductivity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热导率 (瓦/米·K)', 'examples': ['150.0', '155.0', '152.0', '153.0', '148.0']}]}}\nA physical knowledge question is as follows:\nThe engine block is made of aluminum alloy, and the cylinder head is made of cast iron. When the engine is running, the block temperature reaches 200°C while the cylinder head temperature reaches 300°C. How much heat is conducted per hour at the interface between the two materials? Assume a contact area of 0.5 square meters and a thickness of 10 millimeters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((300-200)*0.5)/((0.01/80)+(0.01/205))*3600 AS Heat_Joules_Per_Hour FROM enginematerials WHERE Block_Material='Aluminum' AND Head_Material='Cast Iron'",
        "db_id": "car_engine"
    },
    {
        "id": 317,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['titanium alloy connecting rod', 'tensile strength 900 MPa', 'density 4.5 g/cm³', 'safety factor 2', 'tensile force 50,000 N', 'length 150 mm'], 'relations': ['material_to_strength (titanium alloy → 900 MPa)', 'strength_to_force (900 MPa → 50,000 N with safety factor)', 'density_to_weight (4.5 g/cm³ → maximum weight calculation)'], 'intent': 'calculate_minimum_cross-sectional_area_and_maximum_weight', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [900, 2, 50000, 4.5, 150], 'units': {'tensile_strength': 'MPa (converted to Pa for calculation)', 'force': 'N (Newtons)', 'density': 'g/cm³ (converted to kg/m³)', 'length': 'mm (converted to m)', 'area': 'm² (required output unit)', 'weight': 'kg (required output unit)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials_copy1', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginematerials_copy1', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Connecting_Rod_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '连杆材料', 'examples': ['Steel', 'Titanium', 'Aluminum']}], 'car_engine.enginematerials_copy1': [{'column': 'Connecting_Rod_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '连杆材料', 'examples': ['Steel', 'Titanium']}]}}\nA mathematical logic question is as follows:\nA certain titanium alloy connecting rod material has a tensile strength of 900 MPa and a density of 4.5 g/cm³. If the connecting rod is required to have a safety factor of 2 when subjected to a tensile force of 50,000 N and its length must not exceed 150 mm, calculate the minimum cross-sectional area and the maximum allowable weight.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (2*50000)/(900e6) AS Min_Area_m2, (2*50000)/(900e6) * 0.15 * (4.5*1000) AS Max_Weight_kg FROM enginematerials WHERE Connecting_Rod_Material='Titanium'",
        "db_id": "car_engine"
    },
    {
        "id": 318,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cast iron cylinder block', 'magnesium alloy', '35% weight reduction', '2mm steel reinforcement layer', 'steel density 7.8g/cm³', 'cylinder block volume 0.015m³', 'original weight 120kg'], 'relations': ['material_substitution (cast iron → magnesium alloy)', 'weight_change (magnesium_weight = 120kg * 0.65)', 'steel_layer_addition (thickness × surface_area)', 'density_volume_mass_relation (steel_weight = density × volume)'], 'intent': 'compare_final_weight_with_original', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120, 35, 2, 7.8, 0.015], 'units': {'weight': 'kg (original) / converted steel weight kg', 'thickness': 'mm → meters (2mm = 0.002m)', 'density': 'g/cm³ → kg/m³ (7.8g/cm³ = 7800kg/m³)', 'volume': 'cubic meters (m³)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量 (公斤)', 'examples': ['200.0', '150.0', '180.0', '190.0', '250.0']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}], 'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Width', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '宽度 (毫米)', 'examples': ['700.0', '650.0', '680.0', '720.0', '750.0']}, {'column': 'Height', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '高度 (毫米)', 'examples': ['800.0', '750.0', '780.0', '820.0', '850.0']}]}}\nA common sense reasoning question is as follows:\nWhen an engine uses a cast iron cylinder block, its weight is 120kg. After switching to a magnesium alloy, the weight is reduced by 35%, but a 2mm-thick steel reinforcement layer (steel density 7.8g/cm³) needs to be added. Assuming the cylinder block volume is 0.015 cubic meters, is the final weight lower than the original cast iron solution?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (0.015*1800*0.65) + (2*(e.Length*e.Width + e.Width*e.Height + e.Height*e.Length)/1e6 * 0.002 * 7800) < 120 THEN '是' ELSE '否' END FROM engine en JOIN enginedimensions e ON en.Engine_ID = e.Engine_ID JOIN enginematerials em ON en.Engine_ID = em.Engine_ID WHERE en.Weight = 120 AND em.Block_Material = 'Cast Iron';",
        "db_id": "car_engine"
    },
    {
        "id": 319,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['crankshaft material', 'ultra-light material density 0.01 kg/m³', '6000 RPM', 'crankshaft arm length 80 mm', 'cross-sectional area 200 mm²', 'tensile strength 900 MPa'], 'relations': ['material_to_density (crankshaft material → 0.01 kg/m³)', 'rpm_to_angular_velocity (6000 RPM → angular velocity calculation)', 'arm_length_to_radius (80 mm → radius for centrifugal force)', 'cross_sectional_area_to_volume (200 mm² → volume per unit length)', 'tensile_strength_comparison (900 MPa vs calculated stress)'], 'intent': 'calculate_centrifugal_stress_failure', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.01, 6000, 80, 200, 900], 'units': {'density': 'kg/m³', 'rpm': 'revolutions per minute', 'length': 'mm (arm length)', 'area': 'mm² (cross-sectional area)', 'tensile_strength': 'MPa', 'conversion': 'mm→m (×10⁻³), mm²→m² (×10⁻⁶), RPM→rad/s (×2π/60), MPa→Pa (×10⁶)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginematerials': [{'column': 'Crankshaft_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '曲轴材料', 'examples': ['Forged Steel', 'Cast Iron', 'Billet Steel']}], 'car_engine.enginedynamics': [{'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}, {'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}]}}\nA hypothetical reasoning question is as follows:\nIf a certain crankshaft material is set as an ultra-light material with a density of 0.01 kg/m³, calculate whether the centrifugal force at 6000 RPM would cause structural failure of the material. It is known that the crankshaft arm length is 80 mm, the cross-sectional area is 200 mm², and the material's tensile strength is maintained at 900 MPa.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (0.5 * (0.01 * 0.0002 * 0.08) * POWER((6000*2*PI()/60),2) * 0.08)/200e-6 > 900e6 THEN '失效' ELSE '安全' END FROM enginematerials WHERE Crankshaft_Material='假设材料'",
        "db_id": "car_engine"
    },
    {
        "id": 320,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine model', 'brake mean effective pressure (BMEP)', 'thermal efficiency', 'cylinder arrangement (Configuration)'], 'relations': ['engine_to_performance (Engine_ID)', 'engine_to_configuration (Configuration)', 'BMEP_thermal_efficiency_correlation', 'configuration_grouping'], 'intent': 'calculate_BMEP_and_analyze_relationship_with_thermal_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Torque', 'Displacement', 'Thermal_Efficiency', 'BMEP'], 'units': {'torque': 'Nm (Newton-meters)', 'displacement': 'L (Liters) or cm³ (Cubic centimeters)', 'BMEP': 'kPa (Kilopascals) or bar (1 bar = 100 kPa)', 'thermal_efficiency': '% (Percentage)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}, {'column': 'Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '扭矩 (牛米)', 'examples': ['427', '206', '350', '550', '650']}, {'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}, {'column': 'BMEP', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均有效压力 (Bar)', 'examples': ['10.0', '12.0', '11.0', '12.5', '14.0']}]}}\nA physical knowledge question is as follows:\nCalculate the brake mean effective pressure (BMEP) for each engine model and analyze its relationship with thermal efficiency, displaying the results grouped by cylinder arrangement (Configuration).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Configuration, AVG((e.Torque * 2 * PI() * ed.Peak_Torque) / (e.Displacement * 1000) * 60 / 100000) AS Calculated_BMEP, AVG(ep.Thermal_Efficiency) AS Avg_Thermal_Efficiency FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID GROUP BY e.Configuration ORDER BY e.Configuration;",
        "db_id": "car_engine"
    },
    {
        "id": 321,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturer', 'Specific_Power', 'Specific_Torque'], 'relations': ['manufacturer_to_performance (Manufacturer → Specific_Power/Specific_Torque)'], 'intent': 'calculate_geometric_mean_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'specific_power': 'kW/L (implied by database schema)', 'specific_torque': 'N·m/L (implied by database schema)', 'geometric_mean': 'unit = √(kW/L * N·m/L) (derived from multiplication of input units)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}], 'car_engine.engineperformance': [{'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}, {'column': 'Specific_Torque', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比扭矩 (牛米/升)', 'examples': ['93.75', '190.0', '137.5', '135.0', '187.5']}]}}\nA mathematical logic question is as follows:\nCalculate the geometric mean of the specific power and specific torque for each manufacturer, and sort the results accordingly.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, SQRT(AVG(ep.Specific_Power * ep.Specific_Torque)) AS Geometric_Mean FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID GROUP BY e.Manufacturer ORDER BY Geometric_Mean DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 322,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['displacement intervals (<2.0L, 2.0-3.0L, >3.0L)', 'median fuel consumption rate', 'common knowledge verification'], 'relations': ['displacement_to_fuel_consumption (grouping by displacement → median fuel consumption comparison)'], 'intent': 'verify_common_knowledge_on_displacement_vs_fuel_consumption', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [2.0, 3.0], 'units': {'displacement': 'L (liters)', 'fuel_consumption': 'unknown_unit (assumed to be stored in Fuel_Consumption column)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排量 (升)', 'examples': ['3.0', '2.0', '2.3', '6.2', '2.4']}], 'car_engine.engineperformance': [{'column': 'Fuel_Consumption', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃油消耗率 (升/100公里)', 'examples': ['8.0', '7.5', '6.8', '7.2', '6.0']}]}}\nA common sense reasoning question is as follows:\nGroup by displacement intervals (<2.0L, 2.0-3.0L, >3.0L) to count the median fuel consumption rate (Fuel_Consumption), verifying whether the common knowledge that 'larger displacement leads to higher fuel consumption' holds true.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Displacement_Group, AVG(Fuel_Consumption) AS Median_Fuel_Consumption FROM (SELECT e.Engine_ID, ep.Fuel_Consumption, CASE WHEN e.Displacement < 2.0 THEN '<2.0L' WHEN e.Displacement BETWEEN 2.0 AND 3.0 THEN '2.0-3.0L' ELSE '>3.0L' END AS Displacement_Group, ROW_NUMBER() OVER (PARTITION BY CASE WHEN e.Displacement < 2.0 THEN '<2.0L' WHEN e.Displacement BETWEEN 2.0 AND 3.0 THEN '2.0-3.0L' ELSE '>3.0L' END ORDER BY ep.Fuel_Consumption) AS RowAsc, ROW_NUMBER() OVER (PARTITION BY CASE WHEN e.Displacement < 2.0 THEN '<2.0L' WHEN e.Displacement BETWEEN 2.0 AND 3.0 THEN '2.0-3.0L' ELSE '>3.0L' END ORDER BY ep.Fuel_Consumption DESC) AS RowDesc FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID) AS Ranked WHERE RowAsc = RowDesc OR RowAsc + 1 = RowDesc GROUP BY Displacement_Group ORDER BY MIN(Ranked.Displacement_Group);",
        "db_id": "car_engine"
    },
    {
        "id": 323,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric engine with Thermal_Efficiency 120%', 'gasoline engines'], 'relations': ['engine_to_performance (engine.Engine_ID → engineperformance.Engine_ID)', 'fuel_type_comparison (group by Fuel_Type)'], 'intent': 'calculate_theoretical_fuel_consumption_and_compare_with_gasoline_engines', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [120], 'units': {'thermal_efficiency': '% (percentage)', 'fuel_consumption': 'units defined in engineperformance.Fuel_Consumption (e.g., L/km, kg/kWh)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}, {'column': 'Fuel_Consumption', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃油消耗率 (升/100公里)', 'examples': ['8.0', '7.5', '6.8', '7.2', '6.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the thermal efficiency (Thermal_Efficiency) of an electric engine (Fuel_Type=Electric) reaches 120%, calculate its theoretical fuel consumption rate (Fuel_Consumption) and compare it with actual gasoline engines, grouped by fuel type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Fuel_Type, CASE WHEN e.Fuel_Type = 'Electric' THEN (100 / 120) * 100 ELSE AVG(ep.Fuel_Consumption) END AS Theoretical_Fuel_Consumption FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE e.Fuel_Type IN ('Electric', 'Gasoline') GROUP BY e.Fuel_Type;",
        "db_id": "car_engine"
    },
    {
        "id": 324,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['combustion efficiency of 30%', '1°C increase in coolant temperature', 'manufacturer', 'heat removal'], 'relations': ['engine_to_manufacturer', 'combustion_efficiency_threshold (30%)', 'coolant_temp_to_heat_rejection_rate'], 'intent': 'calculate_total_heat_removal_per_coolant_degree_and_identify_top_manufacturer', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30, 1], 'units': {'combustion_efficiency': '%', 'coolant_temperature': '°C', 'heat_rejection_rate': 'kW (implied by database schema)', 'conversion': 'heat_removal_per_degree = Heat_Rejection_Rate / 1°C'}, 'foreign_keys': [{'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginethermodynamics': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Combustion_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '燃烧效率 (%)', 'examples': ['35.0', '38.0', '37.0', '36.0', '34.0']}, {'column': 'Coolant_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '冷却液温度 (°C)', 'examples': ['90.0', '85.0', '88.0', '89.0', '92.0']}, {'column': 'Heat_Rejection_Rate', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热排放率 (千瓦)', 'examples': ['50.0', '45.0', '48.0', '49.0', '52.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total amount of heat removed per 1°C increase in coolant temperature for engines with combustion efficiency exceeding 30% by different manufacturers, and identify the manufacturer with the highest total heat removal.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, SUM(et.Heat_Rejection_Rate * 1000 / (et.Specific_Heat_Capacity * (et.Coolant_Temperature - 25))) AS Total_Heat_Capacity_Per_Degree FROM engine e JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID WHERE et.Combustion_Efficiency > 30 GROUP BY e.Manufacturer ORDER BY Total_Heat_Capacity_Per_Degree DESC LIMIT 1;",
        "db_id": "car_engine"
    },
    {
        "id": 325,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine', 'compression ratio', 'specific power', 'thermal efficiency', 'engine model'], 'relations': ['engine_to_compression_ratio (engine.Engine_ID → engine.Compression_Ratio)', 'engine_to_performance (engine.Engine_ID → engineperformance.Engine_ID)', 'specific_power_thermal_efficiency_product (Specific_Power × Thermal_Efficiency)', 'average_product_comparison (engine.product > overall_average)'], 'intent': 'statistical_analysis_with_filtering', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'compression_ratio': 'ratio (unitless, threshold: 10:1)', 'specific_power': 'kW/L or hp/L (from engineperformance.Specific_Power)', 'thermal_efficiency': 'percentage (%) (from engineperformance.Thermal_Efficiency)', 'product': 'unitless (Specific_Power × Thermal_Efficiency)'}, 'foreign_keys': [{'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}], 'car_engine.engineperformance': [{'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}, {'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA mathematical logic question is as follows:\nStatistics on all engines with a compression ratio greater than 10:1, calculating the arithmetic mean of the product of specific power (Specific_Power) and thermal efficiency (Thermal_Efficiency), and filtering out engine models that exceed the overall average.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (ep.Specific_Power * ep.Thermal_Efficiency) AS Efficiency_Product FROM engine e JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE CAST(SUBSTRING_INDEX(e.Compression_Ratio, ':', 1) AS UNSIGNED) > 10 AND (ep.Specific_Power * ep.Thermal_Efficiency) > (SELECT AVG(ep2.Specific_Power * ep2.Thermal_Efficiency) FROM engineperformance ep2 JOIN engine e2 ON ep2.Engine_ID = e2.Engine_ID WHERE CAST(SUBSTRING_INDEX(e2.Compression_Ratio, ':', 1) AS UNSIGNED) > 10);",
        "db_id": "car_engine"
    },
    {
        "id": 326,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Engines with Exhaust Gas Temperature >900°C', 'Cylinder Block Material as Cast Iron', 'Material Temperature Resistance Limits'], 'relations': ['engine_to_exhaust_temperature (Engine_ID → Exhaust_Gas_Temperature)', 'engine_to_block_material (Engine_ID → Block_Material)', 'material_temperature_limit_violation (Cast Iron → ~500°C operational limit)'], 'intent': 'identify_and_analyze_material_violations', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [900], 'units': {'temperature': '°C (Celsius)', 'material_limit': 'Cast Iron operational limit ~500°C (implied by metallurgical knowledge)'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginethermodynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'enginethermodynamics', 'pk_column': 'Thermodynamics_ID'}], 'tableinfo': {'car_engine.enginethermodynamics': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Exhaust_Gas_Temperature', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排气温度 (°C)', 'examples': ['850.0', '800.0', '820.0', '830.0', '870.0']}], 'car_engine.enginematerials': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}]}}\nA common sense reasoning question is as follows:\nIdentify engines with exhaust gas temperature (Exhaust_Gas_Temperature) exceeding 900°C and cylinder block material as cast iron (Cast Iron), and analyze whether this violates common knowledge about the temperature resistance limits of materials.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Engine_ID, et.Exhaust_Gas_Temperature, em.Block_Material FROM engine e JOIN enginethermodynamics et ON e.Engine_ID = et.Engine_ID JOIN enginematerials em ON e.Engine_ID = em.Engine_ID WHERE et.Exhaust_Gas_Temperature > 900 AND em.Block_Material = 'Cast Iron';",
        "db_id": "car_engine"
    },
    {
        "id": 327,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine with 100,000 RPM', 'intercontinental missile warhead re-entry velocity (7,000 m/s)'], 'relations': ['speed_comparison (piston_speed vs 7,000 m/s)', 'overspeed_ratio (piston_speed / 7,000 m/s)'], 'intent': 'calculate_piston_speed_comparison_and_overspeed_ratio', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 7000], 'units': {'rotational_speed': 'RPM (revolutions per minute)', 'linear_velocity': 'm/s (meters per second)', 'ratio': 'dimensionless (unitless ratio)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.enginedynamics': [{'column': 'Max_turn', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}, {'column': 'Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '活塞速度 (米/秒)', 'examples': ['20.0', '22.0', '18.0', '21.0', '17.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the existence of an engine with a rotational speed of 100,000 RPM, calculate whether its piston speed exceeds the re-entry velocity of an intercontinental missile warhead (approximately 7,000 m/s) and return the overspeed ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, (2 * e.Stroke * 100000) / 60000 AS Hypothetical_Piston_Speed, ((2 * e.Stroke * 100000) / 60000 - 7000) / 7000 * 100 AS Over_Speed_Percentage FROM engine e HAVING Hypothetical_Piston_Speed > 7000;",
        "db_id": "car_engine"
    },
    {
        "id": 328,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine block', 'DeckHeight (200 mm)', 'Bore (90 mm)', 'Stroke (100 mm)', 'Compression_Ratio (11:1)'], 'relations': ['bore_to_stroke_ratio (90:100)', 'compression_ratio_to_volume (Combustion Chamber Volume = Swept Volume / (Compression Ratio - 1))'], 'intent': 'calculate_combustion_chamber_volume_and_verify_compression_ratio', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 90, 100, 11], 'units': {'length': 'mm (millimeters)', 'volume': 'liters (converted from mm³ via 1 liter = 1,000,000 mm³)', 'compression_ratio': 'dimensionless (ratio)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Bore', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸径 (毫米)', 'examples': ['86.0', '87.5', '84.0', '105.0', '82.5']}, {'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}], 'car_engine.enginedimensions': [{'column': 'DeckHeight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '缸体高度 (毫米)', 'examples': ['200.0', '180.0', '190.0', '220.0', '185.0']}]}}\nA physical knowledge question is as follows:\nAssuming the engine block height (DeckHeight) is 200 millimeters, the bore (Bore) is 90 millimeters, the stroke (Stroke) is 100 millimeters, and the compression ratio (Compression_Ratio) is 11:1. Please calculate the combustion chamber volume (in liters) for this engine and verify if it adheres to the common knowledge regarding compression ratios for gasoline engines?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND((PI() * POW(90/2,2) * 100) / (11-1) / 1000000, 4) AS Combustion_Chamber_Volume_L, CASE WHEN 11 <= 13 THEN '符合' ELSE '不符合' END AS Compression_Ratio_Check FROM DUAL;",
        "db_id": "car_engine"
    },
    {
        "id": 329,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['aluminum alloy cylinder block', 'turbocharged engine', 'specific power', 'thermal efficiency'], 'relations': ['engine_to_material (engine → enginematerials)', 'engine_to_performance (engine → engineperformance)', 'aspiration_filter (turbocharged condition)', 'material_filter (aluminum alloy block condition)', 'weighted_score (specific_power*0.6 + thermal_efficiency*0.4)'], 'intent': 'calculate_weighted_composite_score', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.6, 0.4], 'units': {'calculation': 'unitless weighted score', 'rounding': '2 decimal places'}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Aspiration', 'type': 'ENUM', 'primary_key': False, 'comment': '进气方式', 'examples': ['Turbocharged', 'Naturally Aspirated', 'Supercharged']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}], 'car_engine.engineperformance': [{'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}, {'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}]}}\nA mathematical logic question is as follows:\nPlease calculate the weighted composite score (with weights of 0.6 and 0.4, respectively) of specific power and thermal efficiency for all engines that use an aluminum alloy cylinder block and are turbocharged, rounding the result to two decimal places.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND((ep.Specific_Power*0.6 + ep.Thermal_Efficiency*0.4),2) AS Comprehensive_Score FROM engine e JOIN enginematerials em ON e.Engine_ID=em.Engine_ID JOIN engineperformance ep ON e.Engine_ID=ep.Engine_ID WHERE em.Block_Material='Aluminum' AND e.Aspiration='Turbocharged' AND ep.Specific_Power IS NOT NULL AND ep.Thermal_Efficiency IS NOT NULL;",
        "db_id": "car_engine"
    },
    {
        "id": 330,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['V-type engine', 'engine length 600 millimeters', 'cylinder spacing 120 millimeters'], 'relations': ['engine_to_dimensions (V-type engine → enginedimensions)', 'length_constraint (600 mm ≤ maximum allowed)', 'cylinder_spacing_relationship (120 mm spacing between cylinders)'], 'intent': 'calculate_maximum_cylinders_for_v_engine', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [600, 120], 'units': {'length': 'millimeters (mm)', 'cylinder_count': 'unitless (count)', 'conversion': 'Cylinder count = floor((engine_length / cylinder_spacing)) + 1'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car_engine.enginedimensions': [{'column': 'Length', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '长度 (毫米)', 'examples': ['600.0', '550.0', '580.0', '620.0', '650.0']}, {'column': 'Cylinder_Spacing', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '气缸间距 (毫米)', 'examples': ['100.0', '90.0', '95.0', '110.0', '92.0']}]}}\nA common sense reasoning question is as follows:\nA manufacturer needs to design a V-type engine with a length not exceeding 600 millimeters. Given that the cylinder spacing is 120 millimeters, calculate the maximum number of cylinders this engine can accommodate, taking into account the staggered arrangement characteristic of the two rows of cylinders in a V-type engine.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT FLOOR(600 / (120 * 0.866)) * 2 AS Max_Cylinders FROM engine WHERE Configuration = 'V' LIMIT 1;",
        "db_id": "car_engine"
    },
    {
        "id": 331,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric engine', 'piston speed 50 m/s', 'stroke 200 mm', 'conventional engine'], 'relations': ['piston_speed_to_angular_velocity (50 m/s and 200 mm → angular velocity)', 'centrifugal_force_comparison (angular_velocity_electric² / angular_velocity_conventional²)'], 'intent': 'calculate_angular_velocity_and_centrifugal_force_ratio', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50, 200], 'units': {'piston_speed': 'meters per second (m/s)', 'stroke': 'millimeters (mm) → converted to 0.2 meters', 'angular_velocity': 'radians per second (rad/s)', 'centrifugal_force_ratio': 'dimensionless (× times)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Stroke', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '行程 (毫米)', 'examples': ['86.0', '94.0', '89.6', '104.0', '92.8']}], 'car_engine.enginedimensions': [{'column': 'Rod_Journal_Diameter', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '连杆轴颈直径 (毫米)', 'examples': ['50.0', '45.0', '48.0', '52.0', '55.0']}], 'car_engine.enginedynamics': [{'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}]}}\nA hypothetical reasoning question is as follows:\nAssuming that the piston speed of a certain electric engine reaches 50 meters per second (far exceeding the physical limit), with a stroke of 200 millimeters, please calculate the angular velocity of the engine at peak power speed and determine how many times greater the centrifugal force acting on the crankshaft is compared to that of a conventional engine.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND((50*60)/(2*0.2),0) AS RPM_假设, ROUND((50*60)/(2*0.2)*PI()/30,2) AS Angular_Velocity, ROUND(POW((50*60)/(2*0.2)/6000,2),2) AS Centrifugal_Force_Multiplier FROM engine WHERE Fuel_Type='Electric' AND Stroke=200 LIMIT 1;",
        "db_id": "car_engine"
    },
    {
        "id": 332,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific engine model', 'maximum RPM', '25 meters per second'], 'relations': ['engine_model_to_dynamics (Engine_ID → enginedynamics)', 'piston_speed_filter (Mean_Piston_Speed > 25 m/s)'], 'intent': 'calculate_and_filter_average_piston_speed', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [25], 'units': {'piston_speed': 'meters per second (m/s)', 'rpm': 'revolutions per minute (RPM)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '发动机型号', 'examples': ['2JZ-GTE', 'K20A', 'EcoBoost 2.3', 'S55B30', 'LT4']}, {'column': 'Manufacturer', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['Toyota', 'Honda', 'Ford', 'BMW', 'Chevrolet']}, {'column': 'Redline', 'type': 'INTEGER', 'primary_key': False, 'comment': '红线转速 (RPM)', 'examples': ['7000', '8000', '6500', '7500', '6800']}], 'car_engine.enginedynamics': [{'column': 'Mean_Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '平均活塞速度 (米/秒)', 'examples': ['15.0', '16.0', '14.0', '15.5', '13.0']}]}}\nA physical knowledge question is as follows:\nCalculate the average piston speed of a specific engine model at maximum RPM, and identify all engine models with an average piston speed exceeding 25 meters per second along with their manufacturers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Manufacturer, e.Model, (2 * e.Stroke * ed.Max_turn) / 60000 AS Mean_Piston_Speed FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID WHERE (2 * e.Stroke * ed.Max_turn) / 60000 > 25;",
        "db_id": "car_engine"
    },
    {
        "id": 333,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['V-type engines', 'inline engines', 'compression ratio ≥ 10'], 'relations': ['engine_configuration (V-type vs inline)', 'compression_ratio_filter (threshold=10)', 'angular_velocity_statistics (standard deviation calculation)'], 'intent': 'calculate_and_compare_standard_deviation_of_angular_velocity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'compression_ratio': 'unitless', 'angular_velocity': 'rad/s or RPM (dependent on database column definition)'}, 'foreign_keys': [{'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Configuration', 'type': 'ENUM', 'primary_key': False, 'comment': '气缸排列', 'examples': ['Inline', 'V', 'Boxer', 'Rotary', 'W']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(10, 1)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '11.7', '9.5', '10.2', '10.0']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}], 'car_engine.enginedynamics': [{'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}, {'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的发动机ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCalculate the standard deviation of angular velocity for V-type engines, and compare it with inline engines, excluding those with a compression ratio less than 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Configuration, STDDEV((ed.Max_turn * 2 * PI()) / 60) AS Angular_Velocity_StdDev FROM engine e JOIN enginedynamics ed ON e.Engine_ID = ed.Engine_ID WHERE e.Compression_Ratio >= 10 AND e.Configuration IN ('V', 'Inline') GROUP BY e.Configuration;",
        "db_id": "car_engine"
    },
    {
        "id": 334,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['diesel engines', 'cast iron cylinder blocks', 'thermal efficiency >40%', 'specific power'], 'relations': ['engine_to_material (engine.Engine_ID → enginematerials.Engine_ID)', 'engine_to_performance (engine.Engine_ID → engineperformance.Engine_ID)', \"material_to_block (enginematerials.Block_Material = 'cast iron')\", 'performance_to_efficiency (engineperformance.Thermal_Efficiency > 40%)'], 'intent': 'filter_and_sort_diesel_engines', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [40], 'units': {'thermal_efficiency': '% (percentage)', 'specific_power': \"kW/L (implied by column name 'Specific_Power')\"}, 'foreign_keys': [{'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'engineperformance', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'engine', 'pk_column': 'Engine_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}, {'pk_table': 'engineperformance', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car_engine.engine': [{'column': 'Engine_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '发动机唯一标识符', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '燃油类型', 'examples': ['Gasoline', 'Diesel', 'Electric', 'Hybrid']}], 'car_engine.enginematerials': [{'column': 'Block_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '缸体材料', 'examples': ['Cast Iron', 'Aluminum', 'Magnesium']}], 'car_engine.engineperformance': [{'column': 'Thermal_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '热效率 (%)', 'examples': ['35.0', '30.0', '32.0', '38.0', '40.0']}, {'column': 'Specific_Power', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '比功率 (马力/升)', 'examples': ['106.25', '135.0', '156.25', '150.0', '125.0']}]}}\nA common sense reasoning question is as follows:\nFind all diesel engines that use cast iron cylinder blocks but have a thermal efficiency exceeding 40%, and sort them by specific power from highest to lowest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Model, e.Manufacturer, ep.Specific_Power FROM engine e JOIN enginematerials em ON e.Engine_ID = em.Engine_ID JOIN engineperformance ep ON e.Engine_ID = ep.Engine_ID WHERE em.Block_Material = 'Cast Iron' AND e.Fuel_Type = 'Diesel' AND ep.Thermal_Efficiency > 40 ORDER BY ep.Specific_Power DESC;",
        "db_id": "car_engine"
    },
    {
        "id": 335,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine speed 100,000 RPM', 'piston speed', 'angular velocity', 'connecting rod journal diameter 500 millimeters', 'material'], 'relations': ['engine_speed_to_piston_speed (RPM → stroke-dependent linear velocity)', 'engine_speed_to_angular_velocity (RPM → rad/s conversion)', 'diameter_to_material (rod journal diameter ≥500mm → material strength correlation)'], 'intent': 'calculate_piston_speed_and_angular_velocity_at_extreme_rpm_predict_material_for_rod_journal', 'reasoning_type': 'physical knowledge reasoning (mechanical engineering principles)', 'numerical_values': [100000, 500], 'units': {'rpm': 'RPM (revolutions per minute)', 'length': 'millimeters', 'piston_speed': 'meters/second (m/s)', 'angular_velocity': 'radians/second (rad/s)'}, 'foreign_keys': [{'fk_table': 'enginedimensions', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginedynamics', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}, {'fk_table': 'enginematerials', 'fk_column': 'Engine_ID', 'ref_table': 'engine', 'ref_column': 'Engine_ID'}], 'primary_keys': [{'pk_table': 'enginedimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'enginedynamics', 'pk_column': 'Dynamics_ID'}, {'pk_table': 'enginematerials', 'pk_column': 'Material_ID'}], 'tableinfo': {'car_engine.enginedynamics': [{'column': 'Piston_Speed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '活塞速度 (米/秒)', 'examples': ['20.0', '22.0', '18.0', '21.0', '17.0']}, {'column': 'Angular_Velocity', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '角速度 (弧度/秒)', 'examples': ['733.04', '837.76', '680.68', '785.4', '712.96']}], 'car_engine.enginedimensions': [{'column': 'Rod_Journal_Diameter', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '连杆轴颈直径 (毫米)', 'examples': ['50.0', '45.0', '48.0', '52.0', '55.0']}], 'car_engine.enginematerials': [{'column': 'Connecting_Rod_Material', 'type': 'ENUM', 'primary_key': False, 'comment': '连杆材料', 'examples': ['Steel', 'Titanium', 'Aluminum']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the engine speed reaches 100,000 RPM, calculate its piston speed and angular velocity, and predict what material's connecting rod journal diameter must exceed 500 millimeters to withstand this operating condition.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT em.Connecting_Rod_Material FROM enginematerials em JOIN enginedimensions ed ON em.Engine_ID = ed.Engine_ID WHERE ed.Rod_Journal_Diameter > 500;",
        "db_id": "car_engine"
    },
    {
        "id": 336,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 50L', 'city fuel efficiency 10km/L', 'highway fuel efficiency 15km/L'], 'relations': ['fuel_tank_to_city_efficiency (50L × 10km/L)', 'fuel_tank_to_highway_efficiency (50L × 15km/L)'], 'intent': 'calculate_total_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 10, 15], 'units': {'fuel_capacity': 'L (liters)', 'fuel_efficiency': 'km/L (kilometers per liter)', 'energy_consumption': 'L (liters, implied by fuel tank capacity)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a car in both city and highway driving, given its fuel tank capacity is 50L, city fuel efficiency is 10km/L, and highway fuel efficiency is 15km/L.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (50 * 10) + (50 * 15) AS Total_Energy_Consumption;",
        "db_id": "car"
    },
    {
        "id": 337,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'cars', 'power-to-weight ratio'], 'relations': ['manufacturer_to_cars (Manufacturer_ID)', 'car_to_performance (Car_ID)', 'power_weight_ratio_to_car (Power_to_Weight_Ratio)'], 'intent': 'calculate_average_power_to_weight_ratio_and_find_top_5_cars', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'power_to_weight_ratio': 'horsepower per pound (hp/lb) or kilowatt per kilogram (kW/kg) - depends on database schema definition'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Name'}], 'car.cars': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.performance_metrics': [{'column': 'Power_to_Weight_Ratio'}]}}\nA mathematical logic question is as follows:\nCalculate the average power-to-weight ratio of all cars from a certain manufacturer and identify the top 5 cars with the highest power-to-weight ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(engine_specs.Horsepower / dimensions.Curb_Weight) AS Avg_Power_to_Weight_Ratio FROM engine_specs JOIN dimensions ON engine_specs.Car_ID = dimensions.Car_ID JOIN cars ON cars.Car_ID = engine_specs.Car_ID WHERE cars.Manufacturer_ID = 123; SELECT cars.Model, (engine_specs.Horsepower / dimensions.Curb_Weight) AS Power_to_Weight_Ratio FROM engine_specs JOIN dimensions ON engine_specs.Car_ID = dimensions.Car_ID JOIN cars ON cars.Car_ID = engine_specs.Car_ID WHERE cars.Manufacturer_ID = 123 ORDER BY Power_to_Weight_Ratio DESC LIMIT 5;",
        "db_id": "car"
    },
    {
        "id": 338,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cars', '2020', 'more than 5 seats', 'average cargo capacity'], 'relations': ['cars.Year=2020', 'cars.Seating_Capacity>5', 'cars.Cargo_Capacity'], 'intent': 'filter_cars_by_year_and_seating_and_calculate_average_cargo', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2020, 5], 'units': {'year': 'year', 'seats': 'number of seats', 'cargo_capacity': 'unit not explicitly defined (likely cubic feet/liters)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产年份', 'examples': ['2022', '2023', '2020', '2021', '2024']}, {'column': 'Seating_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '座位数', 'examples': ['5', '7', '4', '2', '1']}, {'column': 'Cargo_Capacity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '载货容量（L）', 'examples': ['370.0', '425.0', '650.0', '382.0', '380.0']}]}}\nA common sense reasoning question is as follows:\nFind all cars produced in 2020 with more than 5 seats and calculate their average cargo capacity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(Cargo_Capacity) AS Avg_Cargo_Capacity FROM cars WHERE Year = 2020 AND Seating_Capacity > 5;",
        "db_id": "car"
    },
    {
        "id": 339,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car with Battery_Capacity 1000 kWh', 'Range 10,000 km', 'energy consumption 0.1 kWh/km'], 'relations': ['car_to_battery (Battery_Capacity = 1000 kWh)', 'car_to_range (Range = 10,000 km)', 'energy_consumption (calculated as 1000/10000 = 0.1 kWh/km)', 'comparison (other_electric_vehicles.energy_consumption < 0.1 kWh/km)'], 'intent': 'calculate_energy_consumption_per_kilometer_and_compare', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 10000, 0.1], 'units': {'battery_capacity': 'kWh', 'range': 'km', 'energy_consumption': 'kWh/km (calculated unit)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}, {'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}, {'column': 'Range', 'type': 'INTEGER', 'primary_key': False, 'comment': '续航里程（km，适用于电动车）', 'examples': ['500']}]}}\nA hypothetical reasoning question is as follows:\nA certain car has a battery capacity of 1000 kWh and a range of 10,000 km. Calculate its energy consumption per kilometer, and find all electric vehicles with energy consumption lower than that value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000 / 10000 AS Energy_Consumption_Per_km; SELECT * FROM cars WHERE Battery_Capacity / Range < (1000 / 10000);",
        "db_id": "car"
    },
    {
        "id": 340,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"car's engine horsepower\", 'maximum speed', 'air resistance parameters (air density 1.225 kg/m³, drag coefficient 0.3, frontal area 2.5 m²)'], 'relations': ['car_to_engine_specs (engine horsepower)', 'car_to_performance_metrics (maximum speed)', 'aerodynamic_drag_parameters (density, coefficient, frontal area)'], 'intent': 'calculate_required_power_to_overcome_air_resistance_at_top_speed_and_compare_with_engine_horsepower', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1.225, 0.3, 2.5], 'units': {'air_density': 'kg/m³', 'drag_coefficient': 'dimensionless (Cd)', 'frontal_area': 'm²', 'velocity': 'm/s (assumed from Top_Speed conversion from km/h)', 'power': 'watts (W) or horsepower (hp)', 'conversion': '1 hp = 745.7 W; velocity conversion: km/h to m/s (divide by 3.6)'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力（HP）', 'examples': ['139', '283', '523', '450', '170']}], 'car.performance_metrics': [{'column': 'Top_Speed'}]}}\nA physical knowledge question is as follows:\nCalculate whether the horsepower of a car's engine is sufficient to overcome air resistance when driving at its maximum speed on the highway, given the air density is 1.225 kg/m³, the car's drag coefficient is 0.3, and the frontal area is 2.5 m².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, e.Horsepower, (0.5 * 1.225 * POWER(p.Top_Speed / 3.6, 2) * 0.3 * 2.5) AS Air_Resistance FROM cars c JOIN performance_metrics p ON c.Car_ID = p.Car_ID JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 341,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['certain manufacturer', 'average fuel efficiency', 'top three models'], 'relations': ['manufacturer_to_cars (Manufacturer_ID)', 'model_to_fuel_efficiency (Model → Fuel_Efficiency_City/Highway)'], 'intent': 'calculate_average_fuel_efficiency_and_rank_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'fuel_efficiency': 'MPG (Miles Per Gallon, implied by column names)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}], 'car.manufacturers': [{'column': 'Name'}]}}\nA mathematical logic question is as follows:\nCalculate the average fuel efficiency of all cars from a certain manufacturer and identify the top three models with the highest fuel efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, (c.Fuel_Efficiency_City + c.Fuel_Efficiency_Highway) / 2 AS Avg_Fuel_Efficiency FROM cars c JOIN manufacturers m ON c.Manufacturer_ID = m.Manufacturer_ID WHERE m.Name = '某制造商' ORDER BY Avg_Fuel_Efficiency DESC LIMIT 3;",
        "db_id": "car"
    },
    {
        "id": 342,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific car model', 'urban conditions', 'highway conditions', 'weight', 'fuel efficiency', 'fuel price $1.2 per liter'], 'relations': ['car_model_to_fuel_efficiency (car model → Fuel_Efficiency_City/Fuel_Efficiency_Highway)', 'fuel_efficiency_to_cost (Fuel_Efficiency_City/Highway → per_kilometer_cost)', 'fuel_price_to_cost (fuel price → per_kilometer_cost)'], 'intent': 'calculate_fuel_cost_per_kilometer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.2], 'units': {'fuel_price': '$/liter', 'fuel_efficiency_city': 'km/liter or L/100km (implied by database schema)', 'fuel_efficiency_highway': 'km/liter or L/100km (implied by database schema)', 'conversion': 'per_kilometer_cost = (fuel_price $/liter) / (fuel_efficiency km/liter) OR (fuel_efficiency L/100km * fuel_price $/liter)/100'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}]}}\nA common sense reasoning question is as follows:\nEstimate the per-kilometer fuel cost for a specific car model in urban and highway conditions based on its weight and fuel efficiency, with the fuel price set at $1.2 per liter.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, (1 / c.Fuel_Efficiency_City) * 1.2 AS City_Cost_Per_KM, (1 / c.Fuel_Efficiency_Highway) * 1.2 AS Highway_Cost_Per_KM FROM cars c WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 343,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 1000 kWh', 'electricity consumption 0.2 kWh/km', 'target range 10,000 km'], 'relations': ['battery_capacity_to_range (Battery_Capacity ÷ Consumption_Rate = 5000 km)', 'range_comparison (5000 km < 10,000 km)'], 'intent': 'determine_if_range_exceeds_target', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 0.2, 10000], 'units': {'battery_capacity': 'kWh', 'consumption_rate': 'kWh/km', 'range': 'km', 'calculation': '1000 kWh ÷ 0.2 kWh/km = 5000 km'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}, {'column': 'Range', 'type': 'INTEGER', 'primary_key': False, 'comment': '续航里程（km，适用于电动车）', 'examples': ['500']}]}}\nA hypothetical reasoning question is as follows:\nIf the battery capacity of a certain car is increased to 1000 kWh, calculate whether its range will exceed 10,000 km, given an electricity consumption of 0.2 kWh per kilometer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, 1000 / 0.2 AS Theoretical_Range FROM cars c WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 344,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA physical knowledge question is as follows:\nCalculate the total energy consumption (in kilowatt-hours) of a car for driving 100 kilometers in the city and 200 kilometers on the highway.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((100 / Fuel_Efficiency_City) + (200 / Fuel_Efficiency_Highway)) * 8.9 AS Total_Energy_Consumption FROM cars WHERE Car_ID = '具体的Car_ID';",
        "db_id": "car"
    },
    {
        "id": 345,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'cars', 'power-to-weight ratio'], 'relations': ['manufacturer_to_cars (Manufacturer_ID → Car_ID)', 'car_to_performance_metrics (Car_ID → Performance_ID)'], 'intent': 'calculate_average_power_to_weight_ratio_and_identify_top_5_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power-to-weight_ratio': 'hp/kg (assumed standard unit)', 'calculation': 'average (grouped by manufacturer), top 5 sorting'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Manufacturer_ID'}], 'car.cars': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.performance_metrics': [{'column': 'Power_to_Weight_Ratio'}]}}\nA mathematical logic question is as follows:\nCalculate the average power-to-weight ratio for all cars from a certain manufacturer and identify the top 5 models with the highest power-to-weight ratios.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, AVG(e.Horsepower / d.Curb_Weight) AS Avg_Power_to_Weight_Ratio FROM cars c JOIN engine_specs e ON c.Car_ID = e.Car_ID JOIN dimensions d ON c.Car_ID = d.Car_ID WHERE c.Manufacturer_ID = 1 GROUP BY c.Model ORDER BY Avg_Power_to_Weight_Ratio DESC LIMIT 5;",
        "db_id": "car"
    },
    {
        "id": 346,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cars produced in 2020', 'fuel tank capacity > 50 liters', 'city fuel efficiency < 10 km/L'], 'relations': ['year_filter (Year=2020)', 'fuel_capacity_filter (Fuel_Tank_Capacity>50)', 'fuel_efficiency_filter (Fuel_Efficiency_City<10)'], 'intent': 'retrieve_and_sort_car_models_by_specifications', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2020, 50, 10], 'units': {'fuel_capacity': 'liters', 'fuel_efficiency': 'km/L (kilometers per liter)', 'year': 'YYYY format'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产年份', 'examples': ['2022', '2023', '2020', '2021', '2024']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Production_Volume', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产数量', 'examples': ['1500000', '500000', '200000', '100000', '800000']}]}}\nA common sense reasoning question is as follows:\nFind all car models produced in 2020 with a fuel tank capacity greater than 50 liters and city fuel efficiency below 10 km/L, sorted in descending order by production quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model FROM cars WHERE Year = 2020 AND Fuel_Tank_Capacity > 50 AND Fuel_Efficiency_City < 10 ORDER BY Production_Volume DESC",
        "db_id": "car"
    },
    {
        "id": 347,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car travel 1000 km', 'fuel efficiency 0.1 km/L', 'fuel tank capacity 1000 liters'], 'relations': ['fuel_efficiency_to_distance (0.1 km/L × 1000 km = 10,000 L required)', 'tank_capacity_comparison (10,000 L > 1000 L tank)', 'CO2_emissions_per_liter (from database)'], 'intent': 'calculate_fuel_requirement_and_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 0.1, 1000], 'units': {'distance': 'km', 'fuel_efficiency': 'km/L', 'fuel_capacity': 'liters', 'carbon_emissions': 'gCO₂/km (from engine_specs.CO2_Emissions)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}], 'car.engine_specs': [{'column': 'CO2_Emissions', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '二氧化碳排放量（g/km）', 'examples': ['120.0', '0.0', '220.0', '250.0', '110.0']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the amount of fuel required for a car to travel 1000 kilometers under extreme conditions (with a fuel tank capacity of 1000 liters and urban fuel efficiency of 0.1 km/L), and determine its carbon dioxide emissions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1000 / 0.1) AS Fuel_Consumption, (1000 / 0.1) * 2.31 AS CO2_Emissions",
        "db_id": "car"
    },
    {
        "id": 348,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight', 'fuel efficiency (city)', 'fuel efficiency (highway)', '10% weight increase'], 'relations': ['weight_to_fuel_efficiency (inverse relationship)', 'percentage_change (weight → fuel efficiency)'], 'intent': 'calculate_percentage_change_in_fuel_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10], 'units': {'weight': 'kg (assumed unit from database context)', 'fuel_efficiency': 'km/L or mpg (implied by database schema)', 'percentage': '% (relative change)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA physical knowledge question is as follows:\nIf the weight of a car increases by 10%, what is the percentage change in its fuel efficiency in both city and highway driving?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, ((Fuel_Efficiency_City * 0.9 - Fuel_Efficiency_City) / Fuel_Efficiency_City) * 100 AS City_Efficiency_Change_Percent, ((Fuel_Efficiency_Highway * 0.9 - Fuel_Efficiency_Highway) / Fuel_Efficiency_Highway) * 100 AS Highway_Efficiency_Change_Percent FROM cars;",
        "db_id": "car"
    },
    {
        "id": 349,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'car models', 'production quantities'], 'relations': ['manufacturer_to_cars (manufacturer → cars)', 'car_to_production_volume (car model → production quantity)'], 'intent': 'calculate_average_production_and_identify_above_average_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'production_quantity': 'units (implied by Production_Volume field)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Name'}], 'car.cars': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Production_Volume', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产数量', 'examples': ['1500000', '500000', '200000', '100000', '800000']}]}}\nA mathematical logic question is as follows:\nCalculate the average production quantity of all cars from a certain manufacturer and identify the car models with production quantities above the average.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model FROM cars WHERE Manufacturer_ID = (SELECT Manufacturer_ID FROM manufacturers WHERE Name = '某制造商') AND Production_Volume > (SELECT AVG(Production_Volume) FROM cars WHERE Manufacturer_ID = (SELECT Manufacturer_ID FROM manufacturers WHERE Name = '某制造商'));",
        "db_id": "car"
    },
    {
        "id": 350,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cars', 'fuel tank capacity', 'city fuel consumption', '1,000 kilometers'], 'relations': ['cars_to_engine_specs (Fuel_Consumption_City from engine_specs)', 'cars_to_manufacturers (Manufacturer_ID mapping)', 'fuel_requirement_calculation (Fuel_Consumption_City * 10 for 1,000 km)'], 'intent': 'filter_cars_with_insufficient_fuel_tank_capacity', 'reasoning_type': 'mathematical_logic_reasoning', 'numerical_values': [1000], 'units': {'fuel_tank_capacity': 'liters (from cars.Fuel_Tank_Capacity)', 'fuel_consumption_city': 'liters per 100 kilometers (L/100km, from engine_specs.Fuel_Consumption_City)', 'conversion': '1,000 km requires (Fuel_Consumption_City * 10) liters'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.manufacturers': [{'column': 'Name'}], 'car.engine_specs': [{'column': 'Fuel_Consumption_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市油耗（L/100km）', 'examples': ['8.0', '0.0', '12.0', '14.0', '7.5']}]}}\nA common sense reasoning question is as follows:\nFind which cars have a fuel tank capacity that is less than the amount of fuel required for city fuel consumption multiplied by 1,000 kilometers, and list the manufacturers and models of these cars.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Name, c.Model FROM cars c JOIN manufacturers m ON c.Manufacturer_ID = m.Manufacturer_ID JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE c.Fuel_Tank_Capacity < (e.Fuel_Consumption_City * 10);",
        "db_id": "car"
    },
    {
        "id": 351,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car', 'maximum speed of 1000 km/h', 'braking distance'], 'relations': ['speed_to_braking_distance (distance ∝ speed²)'], 'intent': 'calculate_braking_distance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'speed': 'km/h', 'distance': 'meters (implied by standard braking distance units)', 'proportionality': 'square relationship (d ∝ v²)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.performance_metrics': [{'column': 'Top_Speed'}, {'column': 'Braking_Distance'}]}}\nA hypothetical reasoning question is as follows:\nIf a car has a maximum speed of 1000 km/h, what would its braking distance be? Braking distance is proportional to the square of the speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, (p.Braking_Distance * POWER(1000, 2) / POWER(p.Top_Speed, 2)) AS Hypothetical_Braking_Distance FROM performance_metrics p JOIN cars c ON p.Car_ID = c.Car_ID;",
        "db_id": "car"
    },
    {
        "id": 352,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight 1500kg', 'speed 100km/h'], 'relations': ['mass_to_kinetic_energy (m → KE)', 'velocity_to_kinetic_energy (v → KE)'], 'intent': 'calculate_kinetic_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 100], 'units': {'mass': 'kg (kilograms)', 'velocity': 'km/h (converted to m/s for calculation)', 'conversion': '1 km/h = 0.2778 m/s (conversion factor)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and is traveling at a speed of 100km/h, how much kinetic energy does it have?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * Weight * POWER((100 * 1000 / 3600), 2) AS Kinetic_Energy FROM cars WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 353,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'car models', 'fuel efficiency values'], 'relations': ['manufacturer_to_cars (Manufacturer_ID → cars.Manufacturer_ID)', 'fuel_efficiency_values (Fuel_Efficiency_City + Fuel_Efficiency_Highway)'], 'intent': 'calculate_average_fuel_efficiency_and_identify_highest_model', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_efficiency': 'MPG (miles per gallon) or equivalent unit (implied by database schema)', 'average_formula': '(Fuel_Efficiency_City + Fuel_Efficiency_Highway) / 2'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Name'}], 'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA mathematical logic question is as follows:\nCalculate the average fuel efficiency (average of city and highway) for all cars from a certain manufacturer, and identify the model with the highest fuel efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, AVG((Fuel_Efficiency_City + Fuel_Efficiency_Highway) / 2) AS Avg_Fuel_Efficiency FROM cars WHERE Manufacturer_ID = 1 GROUP BY Model ORDER BY Avg_Fuel_Efficiency DESC LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 354,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 50L', 'urban fuel consumption 8L/100km', 'highway fuel consumption 6L/100km'], 'relations': ['fuel_consumption_to_distance_city (50L / 8L/100km = 625km)', 'fuel_consumption_to_distance_highway (50L / 6L/100km ≈ 833.33km)'], 'intent': 'calculate_travel_distance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 8, 6], 'units': {'fuel_consumption': 'L/100km', 'fuel_capacity': 'L', 'distance': 'km', 'conversion': 'distance = (fuel_tank_capacity / fuel_consumption) * 100'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}], 'car.engine_specs': [{'column': 'Fuel_Consumption_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市油耗（L/100km）', 'examples': ['8.0', '0.0', '12.0', '14.0', '7.5']}, {'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}]}}\nA common sense reasoning question is as follows:\nIf a car has a fuel tank capacity of 50L, urban fuel consumption of 8L/100km, and highway fuel consumption of 6L/100km, how many kilometers can it travel in the city and on the highway respectively?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Tank_Capacity / e.Fuel_Consumption_City * 100 AS City_Range, Fuel_Tank_Capacity / e.Fuel_Consumption_Highway * 100 AS Highway_Range FROM cars c JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE c.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 355,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine maximum speed 10000 RPM', 'fuel consumption 0.1L per revolution', 'operation duration 1 hour'], 'relations': ['RPM_to_revolution_count (10000 RPM × 60 minutes)', 'fuel_total (revolution_count × 0.1L)'], 'intent': 'calculate_fuel_consumption_at_max_rpm', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 0.1, 1], 'units': {'RPM': 'revolutions per minute', 'fuel_consumption_rate': 'liters per revolution', 'duration': 'hours to minutes conversion (60 minutes)', 'total_fuel': 'liters'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Max_RPM', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速（RPM）', 'examples': ['6500', '7000', '7500', '6600']}]}}\nA hypothetical reasoning question is as follows:\nIf a car's engine has a maximum speed of 10,000 RPM and consumes 0.1L of fuel per revolution, how much fuel will it consume when running at maximum speed for 1 hour?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_RPM * 60 * 0.1 AS Fuel_Consumption FROM engine_specs WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 356,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cars', 'maximum speed', 'kinetic energy', 'car model'], 'relations': ['car_to_weight (Car → Weight)', 'car_to_top_speed (Car → Top_Speed)', 'kinetic_energy_to_model (KE → Model)'], 'intent': 'calculate_kinetic_energy_at_max_speed_and_identify_top_model', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'weight': 'kg (assumed unit from cars.Weight column)', 'speed': 'km/h or mph (assumed unit from performance_metrics.Top_Speed)', 'kinetic_energy': 'Joules (calculated as 0.5 * mass_kg * (speed_mps)^2)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Top_Speed'}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of all cars at their maximum speed and identify the model with the highest kinetic energy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, 0.5 * Weight * POWER((Top_Speed * 1000 / 3600), 2) AS Kinetic_Energy FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID ORDER BY Kinetic_Energy DESC LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 357,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel efficiency', 'city and highway', 'manufacturers'], 'relations': ['car_to_manufacturer (cars.Manufacturer_ID → manufacturers.Manufacturer_ID)', 'fuel_efficiency_average ((Fuel_Efficiency_City + Fuel_Efficiency_Highway)/2)'], 'intent': 'calculate_average_fuel_efficiency_and_identify_top_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_efficiency': 'miles per gallon (MPG, implied by column names)', 'calculation': 'arithmetic mean of city and highway values'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.cars': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}], 'car.manufacturers': [{'column': 'Name'}]}}\nA mathematical logic question is as follows:\nCalculate the average fuel efficiency (mean of city and highway) for all manufacturers' cars, and identify the manufacturer with the highest fuel efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturers.Name, AVG((Fuel_Efficiency_City + Fuel_Efficiency_Highway) / 2) AS Avg_Fuel_Efficiency FROM cars JOIN manufacturers ON cars.Manufacturer_ID = manufacturers.Manufacturer_ID GROUP BY manufacturers.Name ORDER BY Avg_Fuel_Efficiency DESC LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 358,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car models', 'urban driving mileage', 'highway driving mileage'], 'relations': ['car_model_to_mileage (model → calculated mileage)', 'mileage_type (urban vs highway)'], 'intent': 'calculate_and_compare_driving_mileage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_efficiency': 'mpg (miles per gallon) or km per liter (implied by database schema)', 'fuel_tank_capacity': 'gallons or liters', 'mileage': 'miles or kilometers (calculated as fuel_efficiency × fuel_tank_capacity)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}, {'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}]}}\nA common sense reasoning question is as follows:\nCalculate the driving mileage for all cars in both urban and highway conditions, and list the car models with the highest mileage.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, c.Fuel_Tank_Capacity / e.Fuel_Consumption_City * 100 AS City_Range, c.Fuel_Tank_Capacity / e.Fuel_Consumption_Highway * 100 AS Highway_Range FROM cars c JOIN engine_specs e ON c.Car_ID = e.Car_ID ORDER BY City_Range DESC, Highway_Range DESC LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 359,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cars', 'engine_specs', 'fuel consumption', 'maximum RPM', '1 hour'], 'relations': ['car_to_engine_specs (cars.Car_ID → engine_specs.Car_ID)', 'fuel_consumption_to_rpm (Fuel_Consumption_Highway → Max_RPM relationship)'], 'intent': 'calculate_fuel_consumption_at_max_rpm_and_rank_models', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1], 'units': {'time': 'hour', 'fuel_consumption': 'L/100km (implied by Fuel_Consumption_Highway)', 'conversion': 'Assuming Fuel_Consumption_Highway represents high RPM conditions'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.engine_specs': [{'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}, {'column': 'Max_RPM', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速（RPM）', 'examples': ['6500', '7000', '7500', '6600']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the fuel consumption of all cars running at maximum RPM for 1 hour, and list the models with the highest fuel consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cars.Model, Max_RPM * 60 * 0.1 AS Fuel_Consumption FROM engine_specs JOIN cars ON engine_specs.Car_ID = cars.Car_ID ORDER BY Fuel_Consumption DESC LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 360,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight 1500kg', '0-100 acceleration time 8 seconds'], 'relations': ['car_to_weight (cars.Weight)', 'car_to_performance (performance_metrics.Acceleration_0_to_100)'], 'intent': 'calculate_average_acceleration', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 8], 'units': {'mass': 'kg', 'time': 'seconds', 'velocity': 'km/h (converted to m/s)', 'acceleration': 'm/s² (calculated)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and its 0-100 acceleration time is 8 seconds, what is its average acceleration?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, Acceleration_0_to_100 FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID WHERE Weight = 1500;",
        "db_id": "car"
    },
    {
        "id": 361,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel efficiency 10 km/L', 'fuel tank capacity 50 L', 'daily travel distance 30 km'], 'relations': ['efficiency_to_range (10 km/L × 50 L → 500 km total range)', 'range_to_days (500 km ÷ 30 km/day → ~16 days)'], 'intent': 'calculate_days_without_refueling', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 50, 30], 'units': {'fuel_efficiency': 'km/L (kilometers per liter)', 'tank_capacity': 'L (liters)', 'distance_per_day': 'km/day (kilometers per day)', 'calculation': '(10 km/L × 50 L) ÷ 30 km/day'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}]}}\nA mathematical logic question is as follows:\nA car has a fuel efficiency of 10 km/L in the city, with a fuel tank capacity of 50 L. If it travels 30 km per day, how many consecutive days can the car drive without refueling?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Efficiency_City, Fuel_Tank_Capacity FROM cars WHERE Fuel_Efficiency_City = 10 AND Fuel_Tank_Capacity = 50;",
        "db_id": "car"
    },
    {
        "id": 362,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car cargo capacity 500L', 'transport requirement 300L'], 'relations': ['capacity_to_requirement_ratio (500L / 300L ≈ 1.666)'], 'intent': 'calculate_max_transport_times', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 300], 'units': {'volume': 'L (liters)', 'conversion': '1 transport = 300L'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Cargo_Capacity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '载货容量（L）', 'examples': ['370.0', '425.0', '650.0', '382.0', '380.0']}]}}\nA common sense reasoning question is as follows:\nIf a car has a cargo capacity of 500L, and each transport requires 300L of cargo, what is the maximum number of times this car can transport?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Cargo_Capacity FROM cars WHERE Cargo_Capacity = 500;",
        "db_id": "car"
    },
    {
        "id": 363,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine maximum speed 10000 RPM', 'engine operating speed 5000 RPM', 'power output'], 'relations': ['engine_speed_to_power_output (RPM → power relationship)', 'RPM_ratio (10000/5000 = 2:1)'], 'intent': 'calculate_engine_power_output_at_max_rpm', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 5000], 'units': {'rpm': 'RPM (revolutions per minute)', 'power': 'HP (horsepower) or kW (kilowatts)', 'conversion': 'Power (HP) = (Torque × RPM) / 5252 (standard formula)'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力（HP）', 'examples': ['139', '283', '523', '450', '170']}, {'column': 'Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '扭矩（Nm）', 'examples': ['173', '450', '750', '510', '200']}, {'column': 'Max_RPM', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速（RPM）', 'examples': ['6500', '7000', '7500', '6600']}]}}\nA hypothetical reasoning question is as follows:\nIf a car's engine has a maximum speed of 10000 RPM, but it is actually designed to operate at 5000 RPM, what would be its power output when running at 10000 RPM?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_RPM, Horsepower FROM engine_specs WHERE Max_RPM = 10000;",
        "db_id": "car"
    },
    {
        "id": 364,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight 1500kg', 'acceleration time 8s', 'target speed 100km/h'], 'relations': ['car_to_weight (car → cars.Weight)', 'car_to_acceleration (car → performance_metrics.Acceleration_0_to_100)'], 'intent': 'calculate_average_power_during_acceleration', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 8, 100], 'units': {'mass': 'kg (kilograms)', 'time': 's (seconds)', 'velocity': 'km/h → m/s (unit conversion required)', 'power': 'W (watts, derived from energy/time)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and takes 8 seconds to accelerate from 0 to 100 km/h, what is the average power it generates during the acceleration process?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, Acceleration_0_to_100 FROM performance_metrics JOIN cars ON performance_metrics.Car_ID = cars.Car_ID WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 365,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car fuel tank capacity 60L', 'urban fuel efficiency 10km/L', 'highway fuel efficiency 15km/L', 'urban travel distance 200km', 'highway travel distance 200km'], 'relations': ['fuel_efficiency_to_consumption (10km/L → 20L urban)', 'fuel_efficiency_to_consumption (15km/L → 13.33L highway)', 'total_fuel_consumption (20L + 13.33L = 33.33L)'], 'intent': 'calculate_total_fuel_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 10, 15, 200, 200], 'units': {'fuel_capacity': 'L (liters)', 'fuel_efficiency': 'km/L (kilometers per liter)', 'distance': 'km (kilometers)', 'consumption': 'L (liters)', 'conversion': '10km/L = 0.1L/km; 15km/L = 0.0667L/km'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA mathematical logic question is as follows:\nA car's fuel tank capacity is 60L, with urban fuel efficiency of 10km/L and highway fuel efficiency of 15km/L. If this car travels 200km in the city and 200km on the highway, how many liters of fuel does it consume in total?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Tank_Capacity, Fuel_Efficiency_City, Fuel_Efficiency_Highway FROM cars WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 366,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car', 'cargo capacity 500L', 'trunk capacity 300L', 'item volume 50L'], 'relations': ['total_capacity (800L = 500L + 300L)', 'items_capacity_ratio (16 items = 800L ÷ 50L/item)'], 'intent': 'calculate_max_items_transportable', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 300, 50], 'units': {'volume': 'L (Liters)', 'conversion': 'Total Capacity = Cargo Capacity + Trunk Capacity'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car.dimensions': [{'column': 'Cargo_Capacity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '载货容量（L）', 'examples': ['500.0', '425.0', '650.0', '382.0', '380.0']}, {'column': 'Trunk_Capacity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '后备箱容量（L）', 'examples': ['300.0', '425.0', '650.0', '382.0', '380.0']}]}}\nA common sense reasoning question is as follows:\nA car has a cargo capacity of 500L and a trunk capacity of 300L. If the owner needs to transport a batch of goods, with each item having a volume of 50L, what is the maximum number of items this car can transport?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (dimensions.Cargo_Capacity + dimensions.Trunk_Capacity) / 50 AS Max_Cargo_Items FROM dimensions JOIN cars ON dimensions.Car_ID = cars.Car_ID WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 367,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car with battery capacity 100 kWh', 'initial range 500 km', 'increased battery capacity 1000 kWh'], 'relations': ['battery_capacity_to_range (linear proportionality)', 'scaling_factor (10× increase)'], 'intent': 'calculate_range_increase_from_battery_upgrade', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 500, 1000], 'units': {'battery_capacity': 'kWh', 'range': 'km', 'scaling_relation': '100 kWh → 500 km, 1000 kWh → X km'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}, {'column': 'Range', 'type': 'INTEGER', 'primary_key': False, 'comment': '续航里程（km，适用于电动车）', 'examples': ['500']}]}}\nA hypothetical reasoning question is as follows:\nIf a car has a battery capacity of 100 kWh and a range of 500 km, how much would the range increase if the battery capacity suddenly increased to 1000 kWh, with all other conditions remaining the same?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT `Range` * (1000 / `Battery_Capacity`) AS New_Range FROM cars WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 368,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight 1500kg', 'acceleration time 8 seconds', '0-100 km/h velocity change'], 'relations': ['car_to_specification (weight from cars table)', 'performance_metric_to_acceleration (0-100 time from performance_metrics table)', 'physics_formula (force = mass × acceleration)'], 'intent': 'calculate_average_acceleration_and_traction_force', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 8], 'units': {'acceleration': 'm/s² (converted from km/h to m/s)', 'force': 'N (Newton, kg·m/s²)', 'velocity_conversion': '100 km/h = 27.778 m/s', 'time': 'seconds'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and its 0-100 acceleration time is 8 seconds, what are the average acceleration and the required average traction force?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, Acceleration_0_to_100 FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 369,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model A', 'annual sales 5000 units', 'average selling price $30,000', 'car model B', 'annual sales 3000 units', 'average selling price $40,000', 'car model C', 'annual sales 2000 units', 'average selling price $50,000'], 'relations': ['model_to_sales_volume (model A → 5000 units)', 'model_to_sales_volume (model B → 3000 units)', 'model_to_sales_volume (model C → 2000 units)', 'model_to_price (model A → $30,000)', 'model_to_price (model B → $40,000)', 'model_to_price (model C → $50,000)'], 'intent': 'calculate_total_annual_revenue', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 3000, 2000, 30000, 40000, 50000], 'units': {'sales_volume': 'units (number of cars sold)', 'price': '$ (USD)', 'revenue': '$ (USD, calculated as units × USD)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'prices', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'prices', 'pk_column': 'Price_ID'}], 'tableinfo': {'car.cars': [{'column': 'Production_Volume', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产数量', 'examples': ['1500000', '500000', '200000', '100000', '800000']}], 'car.prices': [{'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '总价格（美元）', 'examples': ['23000.0', '65000.0', '85000.0', '53000.0', '35000.0']}]}}\nA mathematical logic question is as follows:\nAn automobile manufacturer produces three car models, with annual sales of 5,000 units, 3,000 units, and 2,000 units respectively, and the average selling prices for each model are $30,000, $40,000, and $50,000 respectively. Calculate the manufacturer's total annual revenue.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Annual_Sales * Average_Price) AS Total_Revenue FROM manufacturers WHERE Manufacturer_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 370,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 60L', 'urban fuel efficiency 10km/L', 'highway fuel efficiency 15km/L', '200km urban driving', '200km highway driving'], 'relations': ['efficiency_to_consumption (inverse relationship)', 'distance_to_fuel (urban_distance / urban_efficiency)', 'total_fuel_consumption (urban_fuel + highway_fuel)'], 'intent': 'calculate_total_fuel_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 15, 200, 200], 'units': {'fuel_efficiency': 'km/L (kilometers per liter)', 'distance': 'km (kilometers)', 'fuel_consumption': 'L (liters)', 'conversion': 'urban_fuel = 200km / 10km/L = 20L; highway_fuel = 200km / 15km/L ≈ 13.33L'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA common sense reasoning question is as follows:\nA car has a fuel tank capacity of 60L, with urban fuel efficiency of 10km/L and highway fuel efficiency of 15km/L. If the owner drives 200km in the city and 200km on the highway, how much fuel does the car consume in total?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Tank_Capacity, Fuel_Efficiency_City, Fuel_Efficiency_Highway FROM cars WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 371,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car battery capacity 1000kWh', 'top speed 300km/h', 'energy consumption 500Wh/km'], 'relations': ['battery_capacity_to_car', 'top_speed_to_performance', 'energy_consumption_to_power'], 'intent': 'calculate_endurance_time_at_top_speed', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 300, 500], 'units': {'energy': 'kWh (kilowatt-hour)', 'speed': 'km/h (kilometers per hour)', 'energy_consumption': 'Wh/km (watt-hour per kilometer)', 'conversion': '1000kWh = 1,000,000Wh'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}], 'car.performance_metrics': [{'column': 'Top_Speed'}]}}\nA hypothetical reasoning question is as follows:\nIf a car has a battery capacity of 1000kWh, a range of 1000km, travels at a top speed of 300km/h, and has an energy consumption of 500Wh/km at top speed, calculate the endurance time of the car when driving at top speed with a full battery.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cars.Car_ID, (cars.Battery_Capacity * 1000) / (500 * performance_metrics.Top_Speed) AS Max_Speed_Range_Time FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 372,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight 1500kg', '0-100 acceleration time 8s'], 'relations': ['car_to_performance (car → performance_metrics)', 'mass_to_force (1500kg → F=ma)'], 'intent': 'calculate_average_acceleration_and_traction_force', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 8], 'units': {'mass': 'kg', 'time': 'seconds', 'acceleration': 'm/s² (Δv/Δt = 27.78m/s ÷ 8s ≈ 3.47m/s²)', 'force': 'Newtons (F = 1500kg × 3.47m/s² ≈ 5205N)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and its 0-100 acceleration time is 8 seconds, what is the car's average acceleration and the required average traction force?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, Acceleration_0_to_100 FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 373,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA mathematical logic question is as follows:\nAn automobile manufacturer produces three different models of cars. Model A has an annual sales volume of 5,000 units, Model B sells 3,000 units, and Model C sells 2,000 units. If the profit margin for Model A is 10%, Model B is 15%, and Model C is 20%, with the average selling price of Model A being $30,000, Model B $40,000, and Model C $50,000, what is the manufacturer's total profit?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Annual_Sales, Profit_Margin, Average_Price FROM manufacturers WHERE Name = '指定制造商';",
        "db_id": "car"
    },
    {
        "id": 374,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['city fuel consumption 10L/100km', 'highway fuel consumption 7L/100km', '200km city driving', '200km highway driving'], 'relations': ['fuel_consumption_to_distance_city (10L/100km × 200km)', 'fuel_consumption_to_distance_highway (7L/100km × 200km)'], 'intent': 'calculate_total_fuel_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 7, 200, 200], 'units': {'fuel_consumption': 'L/100km', 'distance': 'km', 'total_fuel': 'liters (L)', 'conversion': 'Total fuel = (city consumption × city distance / 100) + (highway consumption × highway distance / 100)'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Fuel_Consumption_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市油耗（L/100km）', 'examples': ['8.0', '0.0', '12.0', '14.0', '7.5']}, {'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}]}}\nA common sense reasoning question is as follows:\nA car's fuel tank has a capacity of 60L, with a city fuel consumption of 10L/100km and highway fuel consumption of 7L/100km. If the car owner drives 200km in the city and 200km on the highway, how much fuel does the car consume in total?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Tank_Capacity, Fuel_Efficiency_City, Fuel_Efficiency_Highway FROM cars WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 375,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 1000kWh', 'maximum power 500kW'], 'relations': ['battery_capacity_to_power_ratio (1000kWh / 500kW = 2 hours)'], 'intent': 'calculate_minimum_travel_time', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 500], 'units': {'battery_capacity': 'kWh', 'power': 'kW', 'time': 'hours', 'conversion_formula': 'Battery Capacity (kWh) / Maximum Power (kW) = Time (hours)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a car has a battery capacity of 1000kWh and a range of 1000km, and under extreme conditions it drives continuously at maximum power, what is the minimum time the car can travel before the battery is depleted? The car's maximum power is 500kW.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Battery_Capacity, pm.Range_Electric FROM cars c JOIN performance_metrics pm ON c.Car_ID = pm.Car_ID WHERE c.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 376,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weighs 1500kg', '0 to 100 acceleration time 8 seconds'], 'relations': ['delta_velocity (100 km/h)', 'delta_time (8 seconds)', 'average_acceleration (a = Δv/Δt)'], 'intent': 'calculate_average_acceleration', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 8], 'units': {'velocity': 'km/h (converted to m/s: 27.78 m/s)', 'time': 'seconds', 'acceleration': 'm/s² (calculated as 3.47 m/s²)', 'conversion': '1 km/h = 0.2778 m/s'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and its 0 to 100 acceleration time is 8 seconds, what is its average acceleration?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100 * 1000 / 3600) / 8 AS average_acceleration FROM cars WHERE Weight = 1500;",
        "db_id": "car"
    },
    {
        "id": 377,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 60L', 'urban fuel efficiency 10km/L', 'highway fuel efficiency 15km/L', 'mixed driving conditions 50% city/50% highway'], 'relations': ['fuel_efficiency_to_range (urban+highway → weighted average)', 'fuel_capacity_to_total_range (60L × average efficiency)'], 'intent': 'calculate_total_range_under_mixed_driving', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 10, 15, 50], 'units': {'fuel_capacity': 'L (liters)', 'fuel_efficiency': 'km/L (kilometers per liter)', 'range': 'km (kilometers)', 'calculation': 'Total Range = (60L × 50% × 10km/L) + (60L × 50% × 15km/L)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA mathematical logic question is as follows:\nIf a car has a fuel tank capacity of 60L, an urban fuel efficiency of 10km/L, and a highway fuel efficiency of 15km/L, what is the vehicle's total range under mixed driving conditions (with 50% city driving and 50% highway driving)?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Fuel_Tank_Capacity * Fuel_Efficiency_City * 0.5) + (Fuel_Tank_Capacity * Fuel_Efficiency_Highway * 0.5) AS total_range FROM cars WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 378,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car', 'annual maintenance cost $500', 'depreciation rate 15%', '5 years'], 'relations': ['car_to_maintenance (car → annual maintenance cost)', 'car_to_depreciation (car → depreciation rate)', 'time_span (5 years)'], 'intent': 'calculate_total_maintenance_and_depreciated_value', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 15, 5], 'units': {'cost': '$ (USD)', 'depreciation': '% (annual rate)', 'time': 'years'}, 'foreign_keys': [{'fk_table': 'prices', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'prices', 'pk_column': 'Price_ID'}], 'tableinfo': {'car.prices': [{'column': 'Maintenance_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '年均维护费用（美元）', 'examples': ['800.0', '1200.0', '1500.0', '1000.0', '900.0']}, {'column': 'Depreciation_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '年均折旧率（%）', 'examples': ['15.0', '20.0', '18.0', '17.0', '16.0']}, {'column': 'Resale_Value', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '预估残值（美元）', 'examples': ['17000.0', '45000.0', '60000.0', '40000.0', '25000.0']}]}}\nA common sense reasoning question is as follows:\nIf a car has an annual maintenance cost of $500 and an annual depreciation rate of 15%, what will be the total maintenance cost and the depreciated value of the car after 5 years?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_Cost * 5 AS total_maintenance_cost, Base_Price * POWER(1 - Depreciation_Rate, 5) AS depreciated_value FROM prices WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 379,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 1000kWh', 'range 1000km', 'battery capacity 100000kWh'], 'relations': ['battery_capacity_to_range (linear proportionality)', 'capacity_increase_factor (100×)'], 'intent': 'calculate_new_range_based_on_scaled_battery_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 1000, 100000], 'units': {'battery_capacity': 'kWh (kilowatt-hours)', 'range': 'km (kilometers)', 'scaling_factor': 'dimensionless (factor of 100)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}, {'column': 'Range', 'type': 'INTEGER', 'primary_key': False, 'comment': '续航里程（km，适用于电动车）', 'examples': ['500']}]}}\nA hypothetical reasoning question is as follows:\nIf a car has a battery capacity of 1000kWh and a range of 1000km, what would its range be if the battery capacity were increased to 100000kWh?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (100000 / Battery_Capacity) * `Range` AS extended_range FROM cars WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 380,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car with weight 1500kg', '0-100 acceleration time 8 seconds'], 'relations': ['car_to_performance_metrics (car_id → performance_metrics.car_id)', 'acceleration_formula (Δv/Δt)', 'force_formula (mass × acceleration)'], 'intent': 'calculate_average_acceleration_and_thrust', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 8], 'units': {'weight': 'kg (kilograms)', 'time': 'seconds', 'acceleration': 'm/s² (derived from 100km/h → 27.78m/s ÷ 8s)', 'force': 'N (Newtons, 1500kg × 3.4725m/s² = 5208.75N)', 'conversion': 'km/h_to_m/s = 100 × 1000/3600 = 27.78m/s'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and its 0-100 acceleration time is 8 seconds, what are the car's average acceleration and the required average thrust?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, Acceleration_0_to_100 FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 381,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['automobile manufacturer', 'car model 1', 'car model 2', 'car model 3'], 'relations': ['manufacturer_produces_model', 'model_sales (5000, 7000, 9000 units)', 'model_price ($30000, $40000, $50000)'], 'intent': 'calculate_total_annual_revenue_and_average_price', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 7000, 9000, 30000, 40000, 50000], 'units': {'sales_volume': 'units sold', 'price': 'USD (dollars)', 'revenue': 'USD (calculated as price × volume)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'prices', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'prices', 'pk_column': 'Price_ID'}], 'tableinfo': {'car.cars': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Production_Volume', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产数量', 'examples': ['1500000', '500000', '200000', '100000', '800000']}], 'car.prices': [{'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '总价格（美元）', 'examples': ['23000.0', '65000.0', '85000.0', '53000.0', '35000.0']}], 'car.manufacturers': [{'column': 'Annual_Sales'}, {'column': 'Revenue'}]}}\nA mathematical logic question is as follows:\nAn automobile manufacturer produces three car models with annual sales of 5,000, 7,000, and 9,000 units, and average selling prices of $30,000, $40,000, and $50,000, respectively. Calculate the manufacturer's total annual revenue and the average price per car sold.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Annual_Sales * Average_Price) AS Total_Revenue, SUM(Annual_Sales) AS Total_Sales, SUM(Annual_Sales * Average_Price) / SUM(Annual_Sales) AS Average_Price_Per_Car FROM manufacturers WHERE Manufacturer_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 382,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 60L', 'urban fuel efficiency 10km/L', 'highway fuel efficiency 15km/L', '200km driven in city', '200km driven on highway'], 'relations': ['fuel_efficiency_to_distance_ratio (10km/L → 200km)', 'fuel_efficiency_to_distance_ratio (15km/L → 200km)', 'total_fuel_consumption_summation (20L + 13.33L)'], 'intent': 'calculate_total_fuel_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 10, 15, 200, 200], 'units': {'fuel_efficiency': 'km/L (kilometers per liter)', 'distance': 'km (kilometers)', 'fuel_consumption': 'L (liters)', 'calculation': 'urban consumption = 200km / 10km/L = 20L; highway consumption = 200km / 15km/L ≈ 13.33L'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}, {'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}]}}\nA common sense reasoning question is as follows:\nA car has a fuel tank capacity of 60L, with an urban fuel efficiency of 10km/L and a highway fuel efficiency of 15km/L. If the car owner drove 200km in the city and 200km on the highway, how much fuel did the car consume in total?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Tank_Capacity, Fuel_Efficiency_City, Fuel_Efficiency_Highway FROM cars WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 383,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car engine', 'maximum RPM 10,000', 'cylinder displacement 2.0L', 'cylinder combustion rate 100 times/minute'], 'relations': ['engine_to_specs (engine → engine_specs)', 'cylinder_count_to_combustion (cylinder_count × combustion_rate)'], 'intent': 'calculate_total_combustion_events', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 60], 'units': {'combustion_rate': 'combustions/cylinder/minute', 'total_combustion_minute': 'combustions/minute', 'total_combustion_hour': 'combustions/hour', 'conversion': '1 hour = 60 minutes'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '汽车ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Displacement', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '排量（L）', 'examples': ['1.8', '0.0', '4.4', '5.0', '2.0']}, {'column': 'Max_RPM', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速（RPM）', 'examples': ['6500', '7000', '7500', '6600']}, {'column': 'Cylinder_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数量', 'examples': ['4', '0', '8', '6', '16']}]}}\nA hypothetical reasoning question is as follows:\nIf a car's engine has a maximum RPM of 10,000 and a cylinder displacement of 2.0L, with each cylinder burning 100 times per minute at maximum RPM, calculate the total combustion per minute and per hour for the engine at maximum RPM.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_RPM, Cylinder_Count FROM engine_specs WHERE Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 384,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight 1500kg', '0-100 acceleration time 8 seconds'], 'relations': ['car_to_weight (car → weight)', 'car_to_acceleration_time (car → 0-100 time)'], 'intent': 'calculate_average_power_during_acceleration', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 8, 100], 'units': {'weight': 'kg', 'velocity': 'km/h → m/s (conversion: 100 km/h = 27.78 m/s)', 'time': 'seconds', 'power': 'Watts (calculated via kinetic energy formula)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and its 0-100 acceleration time is 8 seconds, what is the average power generated during the acceleration process?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (0.5 * Weight * POWER(27.78, 2)) / Acceleration_0_to_100 AS Average_Power FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID WHERE cars.Weight = 1500 AND performance_metrics.Acceleration_0_to_100 = 8;",
        "db_id": "car"
    },
    {
        "id": 385,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 50L', 'urban fuel consumption 8L/100km', 'highway fuel consumption 6L/100km'], 'relations': ['fuel_consumption_to_distance_urban (50L / 8L/100km)', 'fuel_consumption_to_distance_highway (50L / 6L/100km)'], 'intent': 'calculate_distance_based_on_fuel_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 8, 6], 'units': {'fuel_capacity': 'liters (L)', 'fuel_consumption': 'liters per 100 kilometers (L/100km)', 'distance': 'kilometers (km)', 'conversion': '100km per 8L (urban), 100km per 6L (highway)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}], 'car.engine_specs': [{'column': 'Fuel_Consumption_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市油耗（L/100km）', 'examples': ['8.0', '0.0', '12.0', '14.0', '7.5']}, {'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}]}}\nA mathematical logic question is as follows:\nIf a car has a fuel tank capacity of 50L, with urban fuel consumption of 8L/100km and highway fuel consumption of 6L/100km, how many kilometers will the car travel before the tank becomes empty, respectively, in urban and highway conditions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT cars.Fuel_Tank_Capacity / (engine_specs.Fuel_Consumption_City / 100) AS City_Distance, cars.Fuel_Tank_Capacity / (engine_specs.Fuel_Consumption_Highway / 100) AS Highway_Distance FROM cars JOIN engine_specs ON cars.Car_ID = engine_specs.Car_ID WHERE cars.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 386,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car with cargo capacity 500 liters', 'trunk capacity 300 liters'], 'relations': ['total_cargo_capacity_to_trunk_capacity (500L → 300L)', 'volume_to_weight_assumption (1L = 1kg)'], 'intent': 'calculate_max_cargo_weight_without_affecting_passenger_comfort', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500, 300], 'units': {'volume': 'liters', 'weight': 'kilograms', 'conversion': '1 liter ≈ 1 kilogram (assumed density of water for calculation)'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car.dimensions': [{'column': 'Trunk_Capacity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '后备箱容量（L）', 'examples': ['300.0', '425.0', '650.0', '382.0', '380.0']}]}}\nA common sense reasoning question is as follows:\nIf a car has a cargo capacity of 500 liters and its trunk capacity is 300 liters, how many kilograms of cargo can it carry at most without affecting passenger comfort?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Cargo_Capacity * 1 AS Max_Cargo_Weight FROM dimensions WHERE Cargo_Capacity = 500 AND Trunk_Capacity = 300;",
        "db_id": "car"
    },
    {
        "id": 387,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine displacement 2.0L', 'maximum speed 8000 RPM', '4 cylinders', 'compression ratio 10:1'], 'relations': ['engine_spec_to_combustion (RPM_to_combustion_events)', 'cylinder_count_to_combustion (cylinders_to_distribution)'], 'intent': 'calculate_combustion_events_per_minute_per_cylinder', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.0, 8000, 4, 10], 'units': {'displacement': 'L (liters)', 'RPM': 'revolutions per minute', 'cylinders': 'count', 'compression_ratio': 'unitless (ratio)', 'combustion_events': 'events/minute/cylinder'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Displacement', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '排量（L）', 'examples': ['1.8', '0.0', '4.4', '5.0', '2.0']}, {'column': 'Max_RPM', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速（RPM）', 'examples': ['6500', '7000', '7500', '6600']}, {'column': 'Cylinder_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数量', 'examples': ['4', '0', '8', '6', '16']}, {'column': 'Compression_Ratio', 'type': 'DECIMAL(4, 2)', 'primary_key': False, 'comment': '压缩比', 'examples': ['10.5', '10.0', '11.0', '10.2']}]}}\nA hypothetical reasoning question is as follows:\nIf a car has an engine displacement of 2.0L, a maximum speed of 8000 RPM, 4 cylinders, and a compression ratio of 10:1, how many combustion events occur per minute per cylinder at maximum speed?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_RPM / 2 * Cylinder_Count AS Combustion_Per_Minute FROM engine_specs WHERE Displacement = 2.0 AND Max_RPM = 8000 AND Cylinder_Count = 4 AND Compression_Ratio = 10;",
        "db_id": "car"
    },
    {
        "id": 388,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['vehicle with curb weight 1200 kg', 'braking distance 36 meters', 'brake assist response time 0.2 seconds', 'engine torque 250 Nm', 'speed change from 100 km/h to 0 km/h', 'recovery efficiency 60%'], 'relations': ['curb_weight_to_kinetic_energy (mass → energy calculation)', 'speed_to_kinetic_energy (velocity → energy calculation)', 'efficiency_to_energy_conversion (60% → final stored energy)', 'braking_distance_to_deceleration (distance → uniform deceleration assumption)'], 'intent': 'calculate_max_electrical_energy_stored', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1200, 36, 0.2, 250, 100, 60], 'units': {'mass': 'kg (kilograms)', 'distance': 'meters', 'time': 'seconds', 'torque': 'Nm (Newton-meters)', 'speed': 'km/h (kilometers per hour) → converted to m/s (27.78 m/s)', 'efficiency': '% (percent)', 'energy_conversion': '1 kWh = 3.6×10^6 J'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'safety_features', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'safety_features', 'pk_column': 'Safety_ID'}], 'tableinfo': {'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Braking_Distance'}], 'car.safety_features': [{'column': 'Brake_Assist_Response_Time', 'type': 'DECIMAL(4, 2)', 'primary_key': False, 'comment': '刹车辅助响应时间（秒）', 'examples': ['0.25', '0.2', '0.22', '0.3', '0.28']}], 'car.engine_specs': [{'column': 'Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '扭矩（Nm）', 'examples': ['173', '450', '750', '510', '200']}]}}\nA physical knowledge question is as follows:\nA vehicle has a curb weight of 1200 kg, a braking distance of 36 meters, a brake assist response time of 0.2 seconds, and an engine torque of 250 Nm. Calculate the maximum electrical energy that can be stored by the regenerative braking system during the process of braking from 100 km/h to a complete stop (with a recovery efficiency of 60% and uniform deceleration during braking).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Weight, pm.Braking_Distance, sf.Brake_Assist_Response_Time, es.Torque FROM cars c JOIN performance_metrics pm ON c.Car_ID = pm.Car_ID JOIN safety_features sf ON c.Car_ID = sf.Car_ID JOIN engine_specs es ON c.Car_ID = es.Car_ID WHERE c.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 389,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA mathematical logic question is as follows:\nA hybrid vehicle has a fuel tank capacity of 45L, a battery capacity of 18kWh, an electric-only range of 80km, and a fuel range of 600km. If the user commutes 120km daily (40% on urban roads and 60% on highways), calculate the minimum number of times they need to refuel and recharge per week.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Fuel_Tank_Capacity, c.Battery_Capacity, pm.Range_Hybrid, pm.Range_Electric FROM cars c JOIN performance_metrics pm ON c.Car_ID = pm.Car_ID WHERE c.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 390,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MPV with 7 seats', 'standard trunk capacity 500L', 'maximum expanded capacity 1800L', '20 boxes of 0.6m × 0.4m × 0.3m each'], 'relations': ['trunk_capacity (500L → standard)', 'cargo_capacity (1800L → max_expanded)', 'box_volume (20 × 0.072m³ = 1.44m³)'], 'intent': 'optimize_loading_by_adjusting_seating_layout', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 1800, 0.6, 0.4, 0.3, 20], 'units': {'volume': 'liters (L) and cubic meters (m³)', 'conversion': '1m³ = 1000L (box volume: 0.6×0.4×0.3=0.072m³ per box → 72L per box)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car.cars': [{'column': 'Seating_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '座位数', 'examples': ['5', '7', '4', '2', '1']}, {'column': 'Cargo_Capacity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '载货容量（L）', 'examples': ['370.0', '425.0', '650.0', '382.0', '380.0']}], 'car.dimensions': [{'column': 'Trunk_Capacity', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '后备箱容量（L）', 'examples': ['300.0', '425.0', '650.0', '382.0', '380.0']}]}}\nA common sense reasoning question is as follows:\nAn MPV has 7 seats, with a standard trunk capacity of 500L and a maximum expanded capacity of 1800L. When transporting 20 boxes measuring 0.6m × 0.4m × 0.3m each, how should the seating layout be adjusted to optimize loading?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Seating_Capacity, d.Trunk_Capacity, d.Cargo_Capacity FROM dimensions d JOIN cars c ON d.Car_ID = c.Car_ID WHERE c.Car_ID = 1;",
        "db_id": "car"
    },
    {
        "id": 391,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA hypothetical reasoning question is as follows:\nA certain sports car has a maximum engine speed of 9000 RPM, with 8 cylinders, and a fuel tank capacity of 70 liters. If it continuously travels at its top speed of 300 km/h (with a fuel consumption of 45 liters per 100 km under these conditions), calculate how many fuel tanker trucks are needed to support its journey across the Taklamakan Desert (approximately 1000 km in length).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT es.Max_RPM, es.Cylinder_Count, c.Fuel_Tank_Capacity, es.Fuel_Consumption_Highway FROM engine_specs es JOIN cars c ON es.Car_ID=c.Car_ID JOIN performance_metrics pm ON c.Car_ID=pm.Car_ID WHERE c.Car_ID=123;",
        "db_id": "car"
    },
    {
        "id": 392,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car', 'top speed', 'engine horsepower', 'total resistance force'], 'relations': ['car_to_engine_spec (car → engine_specs)', 'car_to_performance (car → performance_metrics)', 'power_to_resistance (power = resistance × velocity)'], 'intent': 'calculate_total_resistance_at_top_speed', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'horsepower': '1 hp = 745.7 Watts', 'speed': 'converted from km/h to m/s (if needed)', 'resistance': 'Newtons (N = kg·m/s²)', 'conversion_formula': 'Resistance = (Power × 745.7) / Velocity_m/s'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力（HP）', 'examples': ['139', '283', '523', '450', '170']}], 'car.performance_metrics': [{'column': 'Top_Speed'}]}}\nA physical knowledge question is as follows:\nWhen a certain car is traveling at its top speed under maximum power, what is the total resistance that the engine's traction force needs to overcome?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Horsepower, p.Top_Speed, d.Length, d.Width, d.Curb_Weight FROM engine_specs e JOIN performance_metrics p ON e.Car_ID = p.Car_ID JOIN dimensions d ON e.Car_ID = d.Car_ID WHERE e.Car_ID = 123;",
        "db_id": "car"
    },
    {
        "id": 393,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['top 5 best-selling car models', \"manufacturer's annual profit\"], 'relations': ['manufacturer_to_cars (Manufacturer_ID → cars.Manufacturer_ID)', 'car_to_prices (Car_ID → prices.Car_ID)', 'best_selling_models_to_production_volume (Production_Volume ranking)'], 'intent': 'calculate_profit_proportion_of_top_models_to_total_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'profit': 'currency (USD, implied by Revenue field in manufacturers)', 'production_volume': 'units (cars produced/sold)', 'proportion': 'dimensionless ratio'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'prices', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'prices', 'pk_column': 'Price_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Revenue'}, {'column': 'Profit_Margin'}], 'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Production_Volume', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产数量', 'examples': ['1500000', '500000', '200000', '100000', '800000']}, {'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}], 'car.prices': [{'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '总价格（美元）', 'examples': ['23000.0', '65000.0', '85000.0', '53000.0', '35000.0']}]}}\nA mathematical logic question is as follows:\nWhat is the proportion of the total profit of the top 5 best-selling car models by a manufacturer to the manufacturer's annual profit?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, c.Production_Volume, p.Total_Price, m.Profit_Margin FROM cars c JOIN prices p ON c.Car_ID = p.Car_ID JOIN manufacturers m ON c.Manufacturer_ID = m.Manufacturer_ID WHERE m.Manufacturer_ID = 123 ORDER BY c.Production_Volume DESC LIMIT 5;",
        "db_id": "car"
    },
    {
        "id": 394,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Fuel_Tank_Capacity', 'Fuel_Efficiency_Highway', 'Range_Gasoline', 'Top_Speed'], 'relations': ['Fuel_Tank_Capacity * Fuel_Efficiency_Highway → Range', 'Range / Top_Speed → Driving_Hours'], 'intent': 'calculate_max_driving_hours_on_full_tank', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['Fuel_Tank_Capacity', 'Fuel_Efficiency_Highway', 'Top_Speed'], 'units': {'Fuel_Tank_Capacity': 'gallons (or liters)', 'Fuel_Efficiency_Highway': 'mpg (miles per gallon)', 'Range': 'miles (implied by calculation)', 'Top_Speed': 'mph (miles per hour)', 'Driving_Hours': 'hours (calculated unit)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}], 'car.performance_metrics': [{'column': 'Range_Gasoline'}, {'column': 'Top_Speed'}]}}\nA common sense reasoning question is as follows:\nAfter a conventional fuel-powered car's tank is fully filled, what is the maximum number of hours it can sustain continuous driving on a highway?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Fuel_Tank_Capacity, c.Fuel_Efficiency_Highway FROM cars c WHERE c.Car_ID = 123;",
        "db_id": "car"
    },
    {
        "id": 395,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['vehicle model', '1000 airbags', 'curb weight increase 5 tons', 'braking distance', 'road safety standard'], 'relations': ['airbags_to_weight_increase (1000 airbags → +5 tons curb weight)', 'weight_to_braking_distance (increased weight → change in braking distance)', 'braking_distance_to_standard (calculated ratio vs safety standard)'], 'intent': 'calculate_braking_distance_multiple_exceeding_safety_standard', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 5], 'units': {'weight': 'tons (converted to kg for database alignment)', 'braking_distance': 'meters (or feet, implied by database schema)', 'conversion': '1 ton = 1000 kg'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'safety_features', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'safety_features', 'pk_column': 'Safety_ID'}], 'tableinfo': {'car.safety_features': [{'column': 'Airbag_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '安全气囊数量', 'examples': ['8', '10', '12']}], 'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Braking_Distance'}]}}\nA hypothetical reasoning question is as follows:\nIf installing 1000 airbags in a vehicle model increases the curb weight by 5 tons, how many times would the braking distance exceed the road safety standard?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.Airbag_Count, d.Curb_Weight, p.Braking_Distance FROM safety_features s JOIN dimensions d ON s.Car_ID = d.Car_ID JOIN performance_metrics p ON s.Car_ID = p.Car_ID WHERE s.Car_ID = 123;",
        "db_id": "car"
    },
    {
        "id": 396,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car weight 1500kg', 'acceleration time 8 seconds', 'velocity change 0-100 km/h'], 'relations': ['car_weight_to_mass (1500kg → Newtonian mass)', 'velocity_change_to_time (Δv=100 km/h over t=8s)'], 'intent': 'calculate_average_acceleration_and_traction_force', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500, 8], 'units': {'mass': 'kg (kilograms)', 'time': 'seconds', 'velocity': 'km/h (converted to m/s via 27.78 m/s)', 'acceleration': 'm/s² (calculated as Δv/Δt)', 'force': 'N (Newtons, calculated as F = m*a)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Acceleration_0_to_100'}]}}\nA physical knowledge question is as follows:\nIf a car weighs 1500kg and its 0-100 acceleration time is 8 seconds, what is the average acceleration and the required average traction force?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Weight, Acceleration_0_to_100 FROM cars JOIN performance_metrics ON cars.Car_ID = performance_metrics.Car_ID WHERE cars.Weight = 1500 AND performance_metrics.Acceleration_0_to_100 = 8;",
        "db_id": "car"
    },
    {
        "id": 397,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'total production quantity 500000 vehicles', 'annual sales 450000 vehicles', 'R&D expenditures $200 million', 'profit margin 8%'], 'relations': ['manufacturer_to_production (500000 vehicles)', 'manufacturer_to_sales (450000 vehicles)', 'manufacturer_to_R&D ($200 million)', 'manufacturer_to_profit_margin (8%)', 'sales_to_revenue (450000 × average_price)', 'revenue_to_profit (revenue × 8%)', 'R&D_to_per_vehicle ($200 million ÷ 500000 vehicles)'], 'intent': 'calculate_total_revenue, calculate_total_profit, calculate_average_RnD_cost_per_vehicle', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500000, 450000, 200000000, 8], 'units': {'production_quantity': 'vehicles', 'sales': 'vehicles', 'R&D_expenditures': 'USD (US Dollar)', 'profit_margin': '% (percentage)', 'revenue': 'USD', 'profit': 'USD', 'average_RnD_per_vehicle': 'USD per vehicle', 'conversion': 'profit = revenue × 0.08; average R&D = $200,000,000 ÷ 500,000 vehicles'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Annual_Sales'}, {'column': 'Average_Price'}, {'column': 'Profit_Margin'}, {'column': 'R&D_Spending'}, {'column': 'Production_Volume_Total'}]}}\nA mathematical logic question is as follows:\nA car manufacturer has a total production quantity of 500,000 vehicles, annual sales of 450,000 vehicles, R&D expenditures of $200 million, and a profit margin of 8%. Calculate the manufacturer's total revenue, total profit, and the average R&D cost per vehicle.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Production_Volume_Total, Annual_Sales, `R&D_Spending`, Profit_Margin FROM manufacturers WHERE Production_Volume_Total = 500000 AND Annual_Sales = 450000 AND `R&D_Spending` = 200000000 AND Profit_Margin = 8;",
        "db_id": "car"
    },
    {
        "id": 398,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car', '60L fuel tank', '10km/L city fuel efficiency', '15km/L highway fuel efficiency', '200km city driving', '200km highway driving'], 'relations': ['car_to_fuel_efficiency (car → fuel_efficiency_city & fuel_efficiency_highway)', 'distance_to_consumption (200km city → 20L, 200km highway → 13.33L)'], 'intent': 'calculate_total_fuel_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [200, 200, 10, 15], 'units': {'distance': 'km', 'fuel_efficiency': 'km/L', 'fuel_consumption': 'L (liters)', 'calculation': 'Total Fuel Consumption = (City Distance / City Efficiency) + (Highway Distance / Highway Efficiency)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA common sense reasoning question is as follows:\nA car has a fuel tank capacity of 60L, with a city fuel efficiency of 10km/L and a highway fuel efficiency of 15km/L. If the owner drives 200km in the city and 200km on the highway, how much fuel is consumed in total?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Tank_Capacity, Fuel_Efficiency_City, Fuel_Efficiency_Highway FROM cars WHERE Fuel_Tank_Capacity = 60 AND Fuel_Efficiency_City = 10 AND Fuel_Efficiency_Highway = 15;",
        "db_id": "car"
    },
    {
        "id": 399,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine max speed 10000 RPM', 'torque 500 Nm', 'duration 1 hour'], 'relations': ['torque_to_power (Torque × Angular Velocity → Power)', 'power_to_energy (Power × Time → Energy)'], 'intent': 'calculate_mechanical_energy_output', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 500, 1], 'units': {'speed': 'RPM (revolutions per minute)', 'torque': 'Nm (Newton-meter)', 'time': 'hour (conversion to seconds required)', 'power': 'Watt (W = J/s)', 'energy': 'Joule (J) or Watt-hour (Wh)', 'conversion': '1 hour = 3600 seconds, RPM to rad/s = (2π/60) × RPM'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Max_RPM', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速（RPM）', 'examples': ['6500', '7000', '7500', '6600']}, {'column': 'Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '扭矩（Nm）', 'examples': ['173', '450', '750', '510', '200']}]}}\nA hypothetical reasoning question is as follows:\nIf a car's engine has a maximum speed of 10,000 RPM and a torque of 500 Nm, running continuously at maximum speed for 1 hour, what is the total mechanical energy output?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_RPM, Torque FROM engine_specs WHERE Max_RPM = 10000 AND Torque = 500;",
        "db_id": "car"
    }
]