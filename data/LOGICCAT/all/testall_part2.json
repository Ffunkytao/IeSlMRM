[
    {
        "id": 0,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car with top speed 240 km/h', 'curb weight 1800 kg'], 'relations': ['car_to_performance_metrics (car → performance_metrics.Top_Speed)', 'car_to_dimensions (car → dimensions.Curb_Weight)'], 'intent': 'calculate_kinetic_energy_reduction', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [240, 1800], 'units': {'velocity': 'km/h (converted to m/s: 240 × 1000/3600 = 66.67 m/s)', 'mass': 'kg (1800 kg)', 'energy': 'joules (kg·m²/s²)'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Top_Speed'}]}}\nA physical knowledge question is as follows:\nA car has a top speed of 240 km/h and a curb weight of 1800 kg. If it comes to a complete stop during emergency braking, what is the amount of kinetic energy reduction in joules?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND(0.5 * d.Curb_Weight * POWER(p.Top_Speed/3.6, 2)) AS KineticEnergy_J FROM performance_metrics p JOIN dimensions d ON p.Car_ID = d.Car_ID WHERE p.Top_Speed = 240 AND d.Curb_Weight = 1800;",
        "db_id": "car"
    },
    {
        "id": 1,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer producing 100,000 cars', 'average selling price $35,000', 'profit margin 8%', 'R&D expenses 15% of revenue'], 'relations': ['revenue = production_volume * average_price', 'gross_profit = revenue * profit_margin', 'R&D_expenses = revenue * 15%', 'net_profit = gross_profit - R&D_expenses'], 'intent': 'calculate_net_profit_after_rnd_expenses', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 35000, 8, 15], 'units': {'currency': '$ (USD)', 'profit_margin': '% (percentage)', 'R&D_expenses': '% (percentage) of revenue'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Production_Volume_Total'}, {'column': 'Average_Price'}, {'column': 'Profit_Margin'}]}}\nA mathematical logic question is as follows:\nA manufacturer produces 100,000 cars with an average selling price of $35,000 and a profit margin of 8%. If research and development expenses account for 15% of the revenue, what is the actual net profit?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (m.Production_Volume_Total * m.Average_Price * 0.85 * m.Profit_Margin/100) AS NetProfit FROM manufacturers m WHERE m.Name = '某制造商' AND m.Production_Volume_Total = 100000 AND m.Average_Price = 35000;",
        "db_id": "car"
    },
    {
        "id": 2,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['ABS efficiency 95%', 'base braking distance 40 meters', 'road friction coefficient decreases by 30%'], 'relations': ['ABS_effectiveness_to_braking_distance (ABS_Effectiveness → Braking_Distance)', 'friction_coefficient_decrease (Δμ = 30%)'], 'intent': 'calculate_increase_in_braking_distance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [95, 40, 30], 'units': {'ABS_efficiency': '% (percentage)', 'braking_distance': 'meters', 'friction_coefficient_change': '% (percentage decrease)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'safety_features', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'safety_features', 'pk_column': 'Safety_ID'}], 'tableinfo': {'car.performance_metrics': [{'column': 'Braking_Distance'}], 'car.safety_features': [{'column': 'ABS_Effectiveness', 'type': 'DECIMAL(4, 2)', 'primary_key': False, 'comment': 'ABS系统效率（%）', 'examples': ['95.0', '98.0', '97.0', '94.0', '93.0']}]}}\nA common sense reasoning question is as follows:\nThe ABS efficiency of a certain car is 95%, and its base braking distance is 40 meters. When the road friction coefficient decreases by 30% in rainy conditions, how much will the actual braking distance increase in meters?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.ABS_Effectiveness, p.Braking_Distance, ROUND((p.Braking_Distance/(s.ABS_Effectiveness/100) * 1.3) - p.Braking_Distance, 1) AS RainIncrease_m FROM safety_features s JOIN performance_metrics p USING(Car_ID) WHERE s.ABS_Effectiveness = 95 AND p.Braking_Distance = 40;",
        "db_id": "car"
    },
    {
        "id": 3,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine displacement 100L', '16 cylinders', '6000 RPM', '1.2 times displacement'], 'relations': ['displacement_to_cylinder_count (100L → 16 cylinders)', 'RPM_to_cycle_rate (6000 RPM → cycles per hour)', 'fuel_consumption_model (1.2 × displacement × cycles/hour)'], 'intent': 'calculate_hourly_fuel_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 16, 6000, 1.2], 'units': {'displacement': 'liters (L)', 'RPM': 'revolutions per minute (RPM)', 'fuel_consumption': 'liters per hour (L/h)', 'conversion': '4-stroke engine cycle formula: 6000 RPM → 3000 cycles/minute per cylinder'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Displacement', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '排量（L）', 'examples': ['1.8', '0.0', '4.4', '5.0', '2.0']}, {'column': 'Cylinder_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '气缸数量', 'examples': ['4', '0', '8', '6', '16']}, {'column': 'Max_RPM', 'type': 'INTEGER', 'primary_key': False, 'comment': '最大转速（RPM）', 'examples': ['6500', '7000', '7500', '6600']}]}}\nA hypothetical reasoning question is as follows:\nIf an engine has a displacement of 100L with 16 cylinders, and runs at 6000 revolutions per minute, what might its hourly fuel consumption be in liters? (Each cycle consumes 1.2 times the displacement of fuel.)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Displacement, e.Cylinder_Count, (e.Displacement * e.Max_RPM * e.Cylinder_Count * 1.2 * 60)/1000 AS TheoreticalFuel_L_h FROM engine_specs e WHERE e.Displacement = 100 AND e.Cylinder_Count = 16 AND e.Max_RPM = 6000;",
        "db_id": "car"
    },
    {
        "id": 4,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car with top speed 210 km/h', 'curb weight 1500 kg', 'drag coefficient 0.28', 'frontal area 2.3 m²', 'air density 1.225 kg/m³'], 'relations': ['speed_to_power (velocity^3 scaling)', 'drag_coefficient_to_resistance (Cd × frontal_area)', 'air_density_dependency (ρ = 1.225 kg/m³)'], 'intent': 'calculate_power_to_overcome_air_resistance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [210, 0.28, 2.3, 1.225], 'units': {'velocity': 'km/h (converted to m/s for calculation)', 'power': 'kW (calculated via 0.5 × ρ × Cd × A × v³)', 'area': 'm² (frontal area)', 'density': 'kg/m³ (air density)', 'weight': 'kg (not used in aerodynamic calculation)'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.performance_metrics': [{'column': 'Top_Speed'}, {'column': 'Drag_Coefficient'}], 'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}]}}\nA physical knowledge question is as follows:\nThe top speed of a certain car is 210 km/h, with a curb weight of 1500 kg. When traveling at high speed, it has a drag coefficient of 0.28, a frontal area of 2.3 m², and an air density of 1.225 kg/m³. Calculate the power required to overcome air resistance to maintain this speed?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT  (0.5 * 1.225 * pm.Drag_Coefficient * 2.3 * POWER((pm.Top_Speed*1000/3600),3)) AS Air_Power FROM performance_metrics pm JOIN dimensions d ON pm.Car_ID = d.Car_ID WHERE pm.Top_Speed = 210 AND d.Curb_Weight = 1500 AND pm.Drag_Coefficient = 0.28 LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 5,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model with weight 1800 kg', 'fleet of 500 cars', 'speed 120 km/h', 'rolling resistance coefficient 0.015', 'air density 1.225 kg/m³', 'drag coefficient 0.3', 'frontal area 2.5 m²', 'distance 100 km'], 'relations': ['weight_to_force (mass × gravity)', 'rolling_resistance_force (coefficient × normal_force)', 'aerodynamic_drag_force (0.5 × air_density × velocity² × drag_coefficient × frontal_area)', 'total_force (rolling_resistance_force + aerodynamic_drag_force)', 'energy_consumption (total_force × distance × fleet_count)'], 'intent': 'calculate_total_energy_consumed_by_fleet', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1800, 500, 120, 0.015, 1.225, 0.3, 2.5, 100], 'units': {'weight': 'kg (kilograms)', 'speed': 'km/h → m/s (33.333 m/s)', 'distance': 'km → meters (100,000 m)', 'energy': 'joules (N·m = kg·m²/s²)', 'air_density': 'kg/m³', 'frontal_area': 'm²', 'conversion': '1 km/h = 0.27778 m/s, 1 km = 1000 m'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Drag_Coefficient'}]}}\nA mathematical logic question is as follows:\nA manufacturer produces cars with an average weight of 1800 kg. When a fleet of 500 of these models travels at a constant speed of 120 km/h, with a rolling resistance coefficient of 0.015, air density of 1.225 kg/m³, drag coefficient of 0.3, and frontal area of 2.5 m², calculate the total energy consumed (in joules) by the fleet after continuously traveling 100 kilometers?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT   ( (1800*9.8*0.015 + 0.5*1.225*0.3*2.5*POWER(120/3.6,2)) * 100000 ) * 500 AS Total_Energy FROM dimensions d JOIN cars c ON d.Car_ID = c.Car_ID JOIN manufacturers m ON c.Manufacturer_ID = m.Manufacturer_ID WHERE m.Name = '某制造商' GROUP BY m.Name LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 6,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 60L', 'remaining fuel percentage 15%', 'highway fuel consumption 6.5L/100km', 'speed limit 120km/h'], 'relations': ['car_to_engine_specs (Car_ID → Fuel_Consumption_Highway)', 'remaining_fuel (9L = 60L * 15%)'], 'intent': 'calculate_remaining_distance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 15, 6.5, 120], 'units': {'fuel_capacity': 'L (liters)', 'fuel_consumption': 'L/100km (liters per 100 kilometers)', 'speed': 'km/h (kilometers per hour)', 'distance': 'km (kilometers, calculated as (remaining_fuel / fuel_consumption) * 100)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}], 'car.engine_specs': [{'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}]}}\nA common sense reasoning question is as follows:\nA fuel car has a fuel tank capacity of 60L, with a highway fuel consumption of 6.5L/100km. When the fuel gauge shows 15% remaining, what is the maximum distance it can continue to travel on a highway with a speed limit of 120km/h?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT  (c.Fuel_Tank_Capacity*0.15 / es.Fuel_Consumption_Highway)*100 AS Remaining_Range FROM cars c JOIN engine_specs es ON c.Car_ID = es.Car_ID WHERE c.Fuel_Tank_Capacity = 60 AND es.Fuel_Consumption_Highway = 6.5 AND c.Battery_Capacity IS NULL LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 7,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric vehicle battery capacity 99999 kWh', 'curb weight 2000 kg', 'drag coefficient 0.21', 'energy consumption 15 kWh/100 km', 'equator circumference 40075 km'], 'relations': ['car_to_battery (electric vehicle → battery capacity)', 'car_to_weight (electric vehicle → curb weight)', 'car_to_aerodynamics (electric vehicle → drag coefficient)', 'energy_consumption_to_range (kWh → distance calculation)'], 'intent': 'calculate_theoretical_equator_laps', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [99999, 2000, 0.21, 15, 40075], 'units': {'energy': 'kWh', 'weight': 'kg', 'distance': 'km', 'energy_consumption': 'kWh/100 km', 'circumference': 'km'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}], 'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Drag_Coefficient'}]}}\nA hypothetical reasoning question is as follows:\nIf the battery capacity of an electric vehicle suddenly increases to 99999 kWh, with the curb weight remaining at 2000 kg, a drag coefficient of 0.21, and an energy consumption of 15 kWh/100 km under the WLTP standard, how many theoretical laps around the equator (which has a circumference of 40075 km) can it complete when traveling at a constant speed in a vacuum environment?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT  (99999/(15/100))/40075 AS Theoretical_Laps FROM cars c JOIN dimensions d ON c.Car_ID = d.Car_ID JOIN performance_metrics pm ON c.Car_ID = pm.Car_ID WHERE c.Battery_Capacity IS NOT NULL AND d.Curb_Weight = 2000 AND pm.Drag_Coefficient = 0.21 LIMIT 1;",
        "db_id": "car"
    },
    {
        "id": 8,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['kinetic energy', 'fuel-powered vehicle', 'curb weight', 'top speed'], 'relations': ['vehicle_to_curb_weight (vehicle → dimensions.Curb_Weight)', 'vehicle_to_top_speed (vehicle → performance_metrics.Top_Speed)'], 'intent': 'calculate_kinetic_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['curb_weight_value', 'top_speed_value'], 'units': {'curb_weight': 'kg (kilograms) or lb (pounds) - as stored in dimensions.Curb_Weight', 'top_speed': 'km/h or mph - as stored in performance_metrics.Top_Speed', 'kinetic_energy': 'Joules (J) - derived from KE = ½mv² formula'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Top_Speed'}]}}\nA physical knowledge question is as follows:\nWhat is the kinetic energy of a certain fuel-powered vehicle when traveling at its top speed? This requires calculating based on the vehicle's curb weight and top speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.Curb_Weight, p.Top_Speed, 0.5 * d.Curb_Weight * POWER((p.Top_Speed/3.6),2) AS Kinetic_Energy_J FROM dimensions d JOIN performance_metrics p ON d.Car_ID = p.Car_ID JOIN engine_specs e ON d.Car_ID = e.Car_ID WHERE e.Displacement > 0 AND e.Fuel_Consumption_Highway > 0;",
        "db_id": "car"
    },
    {
        "id": 9,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['hybrid vehicle model', '5-year period', 'base price', 'annual maintenance costs', 'depreciation rate', 'insurance expenses', 'tax rates'], 'relations': ['vehicle_to_price (hybrid vehicle → base price, maintenance costs, depreciation rate, insurance costs, tax rate)', 'time_period_to_cost_components (5-year period → annualized cost calculations)'], 'intent': 'calculate_total_cost_of_ownership', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'currency': 'USD (implied by context)', 'time': 'years', 'rate': '% (percent)', 'conversion': '5-year maintenance = annual maintenance * 5, depreciation = base price * (1 - (1 - depreciation_rate)^5)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'prices', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'prices', 'pk_column': 'Price_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}], 'car.prices': [{'column': 'Base_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '基础价格（美元）', 'examples': ['20000.0', '55000.0', '70000.0', '45000.0', '30000.0']}, {'column': 'Maintenance_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '年均维护费用（美元）', 'examples': ['800.0', '1200.0', '1500.0', '1000.0', '900.0']}, {'column': 'Insurance_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '保险费用（美元）', 'examples': ['1200.0', '2500.0', '3000.0', '2000.0', '1500.0']}, {'column': 'Depreciation_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '年均折旧率（%）', 'examples': ['15.0', '20.0', '18.0', '17.0', '16.0']}, {'column': 'Tax_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '税率（%）', 'examples': ['7.5']}], 'car.performance_metrics': [{'column': 'Range_Hybrid'}]}}\nA mathematical logic question is as follows:\nCalculate the total cost of ownership over five years for a hybrid vehicle model, taking into account the base price, annual maintenance costs, depreciation rate, and insurance expenses, while also considering the impact of tax rates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT pr.Base_Price, pr.Maintenance_Cost, pr.Depreciation_Rate, pr.Insurance_Cost, pr.Tax_Rate, (pr.Total_Price*(1+pr.Tax_Rate/100)) + (pr.Maintenance_Cost*5) + (pr.Base_Price*(1-POWER(1-pr.Depreciation_Rate/100,5))) - pr.Insurance_Cost AS Total_5yr_Cost FROM prices pr JOIN cars c ON pr.Car_ID = c.Car_ID WHERE c.Range IS NOT NULL;",
        "db_id": "car"
    },
    {
        "id": 10,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline-powered car', 'full fuel tank', 'urban road conditions'], 'relations': ['fuel_efficiency_to_range (Fuel_Efficiency_City × Fuel_Tank_Capacity)', 'car_to_tank (car → Fuel_Tank_Capacity)'], 'intent': 'calculate_urban_driving_range', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_efficiency': 'km/liter (implied by Fuel_Efficiency_City)', 'tank_capacity': 'liters (Fuel_Tank_Capacity unit)', 'range': 'kilometers (calculated unit)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}]}}\nA common sense reasoning question is as follows:\nHow many kilometers can a full tank of fuel allow a gasoline-powered car to travel under pure urban road conditions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, c.Fuel_Tank_Capacity, e.Fuel_Consumption_City, (c.Fuel_Tank_Capacity * (100 / e.Fuel_Consumption_City)) AS City_Range FROM cars c JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE c.Fuel_Tank_Capacity > 0 AND e.Fuel_Consumption_City > 0;",
        "db_id": "car"
    },
    {
        "id": 11,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['2.0L displacement engine', '2L fuel tank', '50L/100km fuel consumption'], 'relations': ['car_to_engine_specs (Car_ID → Engine displacement)', 'car_to_fuel_tank_capacity (Car_ID → 2L capacity)', 'fuel_consumption_rate (50L/100km)'], 'intent': 'calculate_continuous_driving_distance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 50], 'units': {'fuel_capacity': 'L (Liters)', 'fuel_consumption': 'L/100km (Liters per 100 kilometers)', 'distance_conversion': '1 km = 1000 meters'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}], 'car.engine_specs': [{'column': 'Displacement', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '排量（L）', 'examples': ['1.8', '0.0', '4.4', '5.0', '2.0']}, {'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}]}}\nA hypothetical reasoning question is as follows:\nA certain vehicle is equipped with a 2.0L displacement engine but has only a 2L fuel tank, with a high-speed fuel consumption reaching 50L/100km. How many meters can it continuously drive at full fuel?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, e.Displacement, c.Fuel_Tank_Capacity, e.Fuel_Consumption_Highway, (c.Fuel_Tank_Capacity / e.Fuel_Consumption_Highway) * 100000 AS Absurd_Range_m FROM cars c JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE e.Displacement >= 20 AND c.Fuel_Tank_Capacity <= 2 AND e.Fuel_Consumption_Highway >= 50;",
        "db_id": "car"
    },
    {
        "id": 12,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model with engine torque 450 Nm', 'curb weight 1500 kg', 'electronic stability control system efficiency 95%', 'wheel radius 0.3 meters'], 'relations': ['car_to_engine_specs (car model → torque)', 'car_to_dimensions (car model → curb weight)', 'car_to_safety_features (car model → ESC efficiency)'], 'intent': 'calculate_theoretical_acceleration', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [450, 1500, 95, 0.3], 'units': {'torque': 'Nm (Newton-meters)', 'weight': 'kg (kilograms)', 'efficiency': '% (percentage)', 'wheel_radius': 'meters (m)', 'acceleration': 'm/s² (meters per second squared)'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'safety_features', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'safety_features', 'pk_column': 'Safety_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '扭矩（Nm）', 'examples': ['173', '450', '750', '510', '200']}], 'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}], 'car.safety_features': [{'column': 'ESC_Effectiveness', 'type': 'DECIMAL(4, 2)', 'primary_key': False, 'comment': '电子稳定控制效率（%）', 'examples': ['92.0', '96.0', '95.0', '90.0', '91.0']}]}}\nA physical knowledge question is as follows:\nThe engine torque of a certain car model is 450 Nm, the curb weight is 1500 kg, the electronic stability control system efficiency is 95%, and the wheel radius is 0.3 meters. Calculate the theoretical acceleration of the vehicle during full-throttle acceleration.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (e.Torque * (s.ESC_Effectiveness / 100)) / (d.Curb_Weight * 0.3) AS Acceleration FROM engine_specs e JOIN dimensions d ON e.Car_ID = d.Car_ID JOIN safety_features s ON e.Car_ID = s.Car_ID WHERE e.Torque = 450 AND d.Curb_Weight = 1500 AND s.ESC_Effectiveness = 95",
        "db_id": "car"
    },
    {
        "id": 13,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['urban fuel consumption 8 L/100km', 'highway fuel consumption 6 L/100km', 'fuel tank capacity 60 L', 'crash test rating 4.5 points', '10% increase in city driving proportion'], 'relations': ['fuel_consumption_to_combined (urban + highway weighted average)', 'fuel_tank_to_range (capacity / consumption)', 'crash_rating_to_city_proportion (4.5 → 10% higher city driving)'], 'intent': 'calculate_combined_fuel_consumption_and_maximum_range', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 6, 60, 10], 'units': {'fuel_consumption': 'L/100km', 'fuel_capacity': 'L (liters)', 'range': 'km (kilometers)', 'proportion_increase': '% (percentage points)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Fuel_Consumption_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市油耗（L/100km）', 'examples': ['8.0', '0.0', '12.0', '14.0', '7.5']}, {'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}], 'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}]}}\nA mathematical logic question is as follows:\nThe car's urban fuel consumption is 8 L/100km, highway fuel consumption is 6 L/100km, fuel tank capacity is 60 L, and its crash test rating is 4.5 points (out of 5). If the crash rating increases by 1 point, the proportion of city driving increases by 10%. Calculate its combined fuel consumption and maximum range.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (8*(0.6 + (4.5/5)*0.1) + 6*(1 - (0.6 + (4.5/5)*0.1))) AS Combined_Fuel, 60 / ((8*(0.6 + (4.5/5)*0.1) + 6*(1 - (0.6 + (4.5/5)*0.1)))/100) AS `Range`;",
        "db_id": "car"
    },
    {
        "id": 14,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model with 8 airbags', 'car model with 6 airbags', 'crash test rating of 4.8', 'crash test rating of 4.5'], 'relations': ['airbag_count_to_crash_rating (8 airbags → 4.8 rating)', 'airbag_count_to_crash_rating (6 airbags → 4.5 rating)', 'comparison_between_models (8_airbags vs 6_airbags)'], 'intent': 'assess_causality_in_safety_ratings', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [8, 6, 4.8, 4.5], 'units': {'airbag_count': 'count (unitless)', 'crash_test_rating': 'points (scale: 0-5)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'safety_features', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'safety_features', 'pk_column': 'Safety_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.safety_features': [{'column': 'Airbag_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '安全气囊数量', 'examples': ['8', '10', '12']}, {'column': 'Crash_Test_Rating', 'type': 'DECIMAL(3, 1)', 'primary_key': False, 'comment': '碰撞测试评分（满分5分）', 'examples': ['4.5', '5.0', '4.8', '4.2', '4.3']}]}}\nA common sense reasoning question is as follows:\nOne car model is equipped with 8 airbags and has a crash test rating of 4.8 points, while another model has 6 airbags but a rating of 4.5 points. Can we infer that the number of airbags is the sole determinant of the crash test rating?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (SUM(Airbag_Count * Crash_Test_Rating) - (SUM(Airbag_Count) * SUM(Crash_Test_Rating)) / COUNT(*)) / (COUNT(*) * (SUM(Airbag_Count * Airbag_Count) - POW(SUM(Airbag_Count),2)/COUNT(*))) AS Correlation FROM safety_features",
        "db_id": "car"
    },
    {
        "id": 15,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine horsepower 100,000 HP', 'curb weight 1 kg', 'ABS efficiency 150%'], 'relations': ['horsepower_to_weight_ratio (HP/kg)', 'acceleration_time_0_to_100 (physics-based calculation)'], 'intent': 'calculate_power_to_weight_ratio_and_acceleration_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 1, 150], 'units': {'horsepower': 'HP (horsepower)', 'weight': 'kg (kilograms)', 'acceleration_time': 'seconds (derived from physics formula)', 'conversion': '100 km/h = 27.78 m/s (velocity conversion)'}, 'foreign_keys': [{'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力（HP）', 'examples': ['139', '283', '523', '450', '170']}], 'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}], 'car.performance_metrics': [{'column': 'Power_to_Weight_Ratio'}, {'column': 'Acceleration_0_to_100'}]}}\nA hypothetical reasoning question is as follows:\nA car has an engine horsepower of 100,000 HP, a curb weight of 1 kg, and an ABS efficiency of 150%. Calculate its power-to-weight ratio and estimate the 0-100 km/h acceleration time (ignoring air resistance and friction).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Horsepower / d.Curb_Weight AS Power_Ratio, (100/3.6) / ((e.Horsepower / d.Curb_Weight) * 745.7 / (100/3.6)) AS Acceleration_Time FROM engine_specs e JOIN dimensions d USING(Car_ID) WHERE e.Horsepower = 100000 AND d.Curb_Weight = 1",
        "db_id": "car"
    },
    {
        "id": 16,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['vehicle model', 'manufacturer', 'maximum speed'], 'relations': ['model_to_manufacturer (vehicle model → manufacturer)', 'model_to_performance (vehicle model → performance_metrics)', 'speed_to_drag (maximum speed → drag_coefficient)'], 'intent': 'calculate_air_resistance_at_max_speed', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'drag_coefficient': 'dimensionless quantity (Cd)', 'speed': 'km/h or mph (implied by database schema for Top_Speed)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.manufacturers': [{'column': 'Name'}], 'car.performance_metrics': [{'column': 'Top_Speed'}, {'column': 'Drag_Coefficient'}]}}\nA physical knowledge question is as follows:\nFor a certain vehicle model produced by a manufacturer, what is the air resistance that the engine needs to overcome when it reaches its maximum speed?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT    p.Top_Speed,   d.Width,   d.Height,   0.5 * 1.225 * p.Drag_Coefficient * (d.Width * d.Height) * POWER(p.Top_Speed/3.6, 2) AS Air_Resistance_Newtons FROM performance_metrics p JOIN dimensions d ON p.Car_ID = d.Car_ID JOIN cars c ON p.Car_ID = c.Car_ID JOIN manufacturers m ON c.Manufacturer_ID = m.Manufacturer_ID WHERE m.Name = '指定制造商名称' AND c.Model = '指定车型'",
        "db_id": "car"
    },
    {
        "id": 17,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'vehicle models', 'carbon emissions'], 'relations': ['manufacturer_to_cars (Manufacturer_ID → Car_ID)', 'car_to_engine_specs (Car_ID → Engine_ID)', 'sum_of_emissions (ΣCO2)'], 'intent': 'calculate_total_annual_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'emissions': 'g/km (assumed unit for CO2_Emissions)', 'total': \"kg/year (annualized, inferred from 'annual' context)\"}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Manufacturer_ID'}], 'car.cars': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}], 'car.engine_specs': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '汽车ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'CO2_Emissions', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '二氧化碳排放量（g/km）', 'examples': ['120.0', '0.0', '220.0', '250.0', '110.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total annual carbon emissions for all vehicle models of a certain manufacturer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT    SUM(e.CO2_Emissions * m.Annual_Sales * 15000 / 1000000) AS Total_CO2_Tonnes FROM manufacturers m JOIN cars c ON m.Manufacturer_ID = c.Manufacturer_ID JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE m.Name = '指定制造商'",
        "db_id": "car"
    },
    {
        "id": 18,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SUV', 'bridge weight limit 2.5 tons'], 'relations': ['SUV_to_weight (SUV → Gross_Weight)', 'weight_limit_comparison (Gross_Weight ≤ 2.5 tons)'], 'intent': 'verify_vehicle_weight_against_bridge_limit', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.5], 'units': {'weight': 'tons', 'conversion': '2.5 tons = 2500 kg (metric) or 5000 lbs (US short tons), depending on database unit'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.dimensions': [{'column': 'Gross_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '总质量（kg）', 'examples': ['1800.0', '2100.0', '2800.0', '2200.0', '2000.0']}]}}\nA common sense reasoning question is as follows:\nCan an SUV pass a bridge with a weight limit of 2.5 tons when fully loaded?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT    d.Curb_Weight,   d.Cargo_Capacity,   (d.Curb_Weight + 350 + (d.Cargo_Capacity * 0.7)) AS Total_Weight,   CASE WHEN (d.Curb_Weight + 350 + (d.Cargo_Capacity * 0.7)) <= 2500 THEN '安全' ELSE '超重' END AS Safety_Status FROM dimensions d JOIN cars c USING(Car_ID) WHERE c.Model = '指定SUV车型'",
        "db_id": "car"
    },
    {
        "id": 19,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['sports car', 'G-force', 'power-to-weight ratio', '10 times the norm', '3G threshold'], 'relations': [\"power_to_weight_ratio_comparison (10x norm vs car's ratio)\", 'force_calculation (G-force derived from acceleration metrics)', 'performance_metric_link (power-to-weight ratio → acceleration performance)'], 'intent': 'validate_physical_performance_limit', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3, 10], 'units': {'g_force': 'G (gravitational acceleration)', 'power_to_weight': 'hp/kg (horsepower per kilogram)', 'conversion': '1G = 9.8 m/s²; power-to-weight ratio relates to acceleration capacity'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.performance_metrics': [{'column': 'Power_to_Weight_Ratio'}, {'column': 'Acceleration_0_to_100'}], 'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}]}}\nA hypothetical reasoning question is as follows:\nDoes a sports car's G-force exceed 3G when its power-to-weight ratio is 10 times the norm?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT    p.Power_to_Weight_Ratio,   c.Weight,   (p.Power_to_Weight_Ratio * 10 * 745.7) / (9.8 * c.Weight) AS G_Force,   CASE WHEN (p.Power_to_Weight_Ratio * 10 * 745.7) / (9.8 * c.Weight) > 3 THEN '超过' ELSE '未超过' END AS Comparison FROM performance_metrics p JOIN cars c USING(Car_ID) WHERE c.Model = '指定跑车型号'",
        "db_id": "car"
    },
    {
        "id": 20,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car engine horsepower', 'air resistance', 'top speed', 'air density 1.225 kg/m³', 'drag coefficient 0.3', 'frontal area 2.5 m²'], 'relations': ['engine_to_horsepower (engine_specs.Horsepower)', 'speed_to_drag (Top_Speed → Drag_Force)', 'air_resistance_calculation (0.5 × ρ × Cd × A × v³)'], 'intent': 'calculate_engine_power_sufficiency_for_air_resistance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1.225, 0.3, 2.5], 'units': {'air_density': 'kg/m³', 'drag_coefficient': 'unitless', 'frontal_area': 'm²', 'horsepower': 'HP (to be converted to watts)', 'top_speed': 'km/h (to be converted to m/s)', 'power': 'watts (calculated unit)'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力（HP）', 'examples': ['139', '283', '523', '450', '170']}], 'car.performance_metrics': [{'column': 'Top_Speed'}, {'column': 'Drag_Coefficient'}]}}\nA physical knowledge question is as follows:\nCalculate whether the horsepower of a car's engine, when traveling at its top speed on a highway, is sufficient to overcome air resistance, given an air density of 1.225 kg/m³, a drag coefficient of 0.3, and a frontal area of 2.5 m² for the car.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, e.Horsepower, (0.5 * 1.225 * POWER(p.Top_Speed / 3.6, 2) * 0.3 * 2.5) AS Air_Resistance FROM cars c JOIN performance_metrics p ON c.Car_ID = p.Car_ID JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 21,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['certain manufacturer', 'cars', 'fuel efficiency', 'top three models'], 'relations': ['manufacturer_to_cars (Manufacturer_ID → Car_ID)', 'car_to_fuel_efficiency (Car_ID → Fuel_Efficiency_City/Highway)'], 'intent': 'calculate_average_fuel_efficiency_and_identify_top_3_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Fuel_Efficiency_City', 'Fuel_Efficiency_Highway'], 'units': {'fuel_efficiency': 'mpg (miles per gallon)', 'conversion': 'average_fuel_efficiency = (Fuel_Efficiency_City + Fuel_Efficiency_Highway) / 2'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Manufacturer_ID'}, {'column': 'Name'}], 'car.cars': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA mathematical logic question is as follows:\nCalculate the average fuel efficiency of all cars from a certain manufacturer and identify the top three models with the highest fuel efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, (c.Fuel_Efficiency_City + c.Fuel_Efficiency_Highway) / 2 AS Avg_Fuel_Efficiency FROM cars c JOIN manufacturers m ON c.Manufacturer_ID = m.Manufacturer_ID WHERE m.Name = '某制造商' ORDER BY Avg_Fuel_Efficiency DESC LIMIT 3;",
        "db_id": "car"
    },
    {
        "id": 22,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model', 'vehicle weight', 'fuel efficiency (city)', 'fuel efficiency (highway)', 'fuel price $1.2 per liter'], 'relations': ['car_to_weight (via dimensions table)', 'car_to_fuel_efficiency (city)', 'car_to_fuel_efficiency (highway)', 'fuel_efficiency_to_cost (fuel_price × fuel_efficiency ÷ 100)'], 'intent': 'estimate_per_kilometer_fuel_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.2], 'units': {'fuel_efficiency': 'liters per 100 kilometers (assumed unit)', 'fuel_price': 'USD per liter', 'output_unit': 'USD per kilometer', 'conversion': 'Fuel cost per km = (Fuel efficiency [L/100km] × Fuel price [USD/L]) ÷ 100'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}], 'car.dimensions': [{'column': 'Weight'}]}}\nA common sense reasoning question is as follows:\nEstimate the per-kilometer fuel cost of a specific car model in city and highway driving based on its weight and fuel efficiency, with the fuel price at $1.2 per liter.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, (1 / c.Fuel_Efficiency_City) * 1.2 AS City_Cost_Per_KM, (1 / c.Fuel_Efficiency_Highway) * 1.2 AS Highway_Cost_Per_KM FROM cars c WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 23,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 1000 kWh', 'energy consumption 0.2 kWh/km', 'target range 10,000 km'], 'relations': ['battery_capacity / energy_consumption = range', 'calculated_range < target_range'], 'intent': 'calculate_range_and_compare', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 0.2, 10000], 'units': {'battery_capacity': 'kWh', 'energy_consumption': 'kWh/km', 'range': 'km', 'calculation': '1000 kWh ÷ 0.2 kWh/km = 5000 km'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}, {'column': 'Range', 'type': 'INTEGER', 'primary_key': False, 'comment': '续航里程（km，适用于电动车）', 'examples': ['500']}], 'car.performance_metrics': [{'column': 'Range_Electric'}]}}\nA hypothetical reasoning question is as follows:\nIf the battery capacity of a certain car is increased to 1000 kWh, calculate whether its range will exceed 10,000 km, given an energy consumption of 0.2 kWh per kilometer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, 1000 / 0.2 AS Theoretical_Range FROM cars c WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 24,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine torque', 'car weight 1500 kg', 'rolling resistance coefficient 0.015', 'gravitational acceleration 9.81 m/s²'], 'relations': ['car_to_engine_specs (Car_ID → Engine_ID)', 'resistance_components (coefficient × weight × gravity)'], 'intent': 'calculate_and_compare_torque_vs_rolling_resistance', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.015, 1500, 9.81], 'units': {'weight': 'kg (kilograms)', 'coefficient': 'unitless (dimensionless value)', 'gravity': 'm/s² (meters per second squared)', 'torque': 'Nm (Newton-meters)', 'resistance_force': 'N (Newtons)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.engine_specs': [{'column': 'Torque', 'type': 'INTEGER', 'primary_key': False, 'comment': '扭矩（Nm）', 'examples': ['173', '450', '750', '510', '200']}]}}\nA physical knowledge question is as follows:\nCalculate whether the engine torque of a certain car, when driving at its maximum speed on the highway, is sufficient to overcome the rolling resistance, with a rolling resistance coefficient of 0.015, a car weight of 1500 kg, and gravitational acceleration of 9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, e.Torque, (0.015 * c.Weight * 9.81) AS Rolling_Resistance FROM cars c JOIN engine_specs e ON c.Car_ID = e.Car_ID WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 25,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'cars', 'carbon dioxide emissions', 'models'], 'relations': ['manufacturer_to_cars (Manufacturer_ID)', 'car_to_engine_specs (Car_ID)'], 'intent': 'calculate_average_emissions_and_identify_top_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'CO2_Emissions': 'g/km (assumed for CO2 emissions)', 'average': 'mean value'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'car.manufacturers': [{'column': 'Manufacturer_ID'}, {'column': 'Name'}], 'car.cars': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.engine_specs': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '汽车ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'CO2_Emissions', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '二氧化碳排放量（g/km）', 'examples': ['120.0', '0.0', '220.0', '250.0', '110.0']}]}}\nA mathematical logic question is as follows:\nCalculate the average carbon dioxide emissions of all cars from a certain manufacturer and identify the top three models with the lowest emissions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, AVG(e.CO2_Emissions) AS Avg_CO2_Emissions FROM cars c JOIN engine_specs e ON c.Car_ID = e.Car_ID JOIN manufacturers m ON c.Manufacturer_ID = m.Manufacturer_ID WHERE m.Name = '某制造商' GROUP BY c.Model ORDER BY Avg_CO2_Emissions ASC LIMIT 3;",
        "db_id": "car"
    },
    {
        "id": 26,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific car model', 'car weight', 'fuel efficiency (urban)', 'fuel efficiency (highway)', '2.31 kg CO2 per liter'], 'relations': ['car_model_to_weight (model → weight)', 'car_model_to_fuel_efficiency (model → fuel_efficiency)', 'fuel_to_co2_conversion (2.31 kg CO2/liter)'], 'intent': 'calculate_per_km_co2_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.31], 'units': {'fuel_efficiency': 'km/liter (assumed from field name)', 'co2_conversion': '2.31 kg CO2/liter', 'co2_per_km': 'kg CO2/km (calculated)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA common sense reasoning question is as follows:\nEstimate the per-kilometer carbon dioxide emissions of a specific car model in urban and highway conditions based on the car's weight and fuel efficiency, with each liter of fuel producing 2.31 kg of carbon dioxide.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, (1 / c.Fuel_Efficiency_City) * 2.31 AS City_CO2_Per_KM, (1 / c.Fuel_Efficiency_Highway) * 2.31 AS Highway_CO2_Per_KM FROM cars c WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 27,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery_capacity 5000 kWh', 'energy_consumption 0.1 kWh/km', 'target_range 50,000 km'], 'relations': ['battery_to_range (5000 kWh ÷ 0.1 kWh/km = 50,000 km)'], 'intent': 'calculate_electric_range_with_new_battery_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 0.1, 50000], 'units': {'battery_capacity': 'kWh', 'energy_consumption': 'kWh/km', 'range': 'km'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'car.cars': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（kWh，适用于电动车）', 'examples': ['75.0', '100.0', '85.0']}], 'car.performance_metrics': [{'column': 'Range_Electric'}]}}\nA hypothetical reasoning question is as follows:\nIf the battery capacity of a certain car increases to 5000 kWh, calculate whether its range will exceed 50,000 km, with an energy consumption of 0.1 kWh per kilometer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Model, 5000 / 0.1 AS Theoretical_Range FROM cars c WHERE c.Model = '某款汽车';",
        "db_id": "car"
    },
    {
        "id": 28,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car Car_123', 'city distance 100 km', 'highway distance 100 km'], 'relations': ['car_to_engine_specs (Car_ID → engine_specs.Car_ID)', 'distance_to_fuel_consumption (100 km × Fuel_Consumption)'], 'intent': 'calculate_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 100], 'units': {'distance': 'km', 'fuel_consumption': 'liters per 100 km (from engine_specs)', 'energy': 'liters (implied by fuel consumption units)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}], 'car.engine_specs': [{'column': 'Fuel_Consumption_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市油耗（L/100km）', 'examples': ['8.0', '0.0', '12.0', '14.0', '7.5']}, {'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a certain car on both city roads and highways, where the car has traveled 100 kilometers on each.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Car_ID, Model, (100 / Fuel_Efficiency_City) + (100 / Fuel_Efficiency_Highway) AS Total_Fuel_Consumption FROM cars;",
        "db_id": "car"
    },
    {
        "id": 29,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model', 'total mass', 'curb weight', 'ratio'], 'relations': ['model_to_dimensions (Car_ID/dimensions.Car_ID)', 'mass_ratio (total_mass/curb_weight)'], 'intent': 'calculate_mass_ratio_and_rank_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'mass_weight': 'kg (implied by database schema)', 'ratio': 'unitless (mass ratio)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'dimensions', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'dimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'car.cars': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}], 'car.dimensions': [{'column': 'Curb_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '整备质量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1700.0', '1300.0']}, {'column': 'Gross_Weight', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '总质量（kg）', 'examples': ['1800.0', '2100.0', '2800.0', '2200.0', '2000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of the total mass to the curb weight for a certain car model, and identify the top 5 car models with the highest ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.Car_ID, c.Model, d.Gross_Weight / d.Curb_Weight AS Weight_Ratio FROM dimensions d JOIN cars c ON d.Car_ID = c.Car_ID ORDER BY Weight_Ratio DESC LIMIT 5;",
        "db_id": "car"
    },
    {
        "id": 30,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cars produced in 2020', 'fuel efficiency', 'top 10 cars'], 'relations': ['year_filter (2020)', 'fuel_efficiency_comparison', 'top_n_selection (10)'], 'intent': 'find_top_cars_by_fuel_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2020, 10], 'units': {'fuel_efficiency': 'mpg or km/L (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产年份', 'examples': ['2022', '2023', '2020', '2021', '2024']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Efficiency_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速燃油效率（km/L）', 'examples': ['15.0', '0.0', '10.5', '12.0', '16.0']}]}}\nA common sense reasoning question is as follows:\nFind the top 10 cars with the highest fuel efficiency among all cars produced in 2020, sorted by fuel efficiency in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Car_ID, Model, (Fuel_Efficiency_City + Fuel_Efficiency_Highway) / 2 AS Avg_Fuel_Efficiency FROM cars WHERE Year = 2020 ORDER BY Avg_Fuel_Efficiency DESC LIMIT 10;",
        "db_id": "car"
    },
    {
        "id": 31,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car', 'urban fuel efficiency (1 km/L)', 'fuel tank capacity (1,000 liters)', 'travel distance (10,000 km)'], 'relations': ['car_to_fuel_efficiency (car → Fuel_Efficiency_City)', 'fuel_efficiency_to_fuel_required (1 km/L → 10,000 liters)', 'distance_to_fuel_required (10,000 km ÷ 1 km/L)', 'tank_capacity_to_refuel_count (10,000 liters ÷ 1,000 liters = 10 refuels)'], 'intent': 'calculate_fuel_required_and_feasibility', 'reasoning_type': 'physical knowledge reasoning (fuel consumption calculation) + common sense understanding reasoning (practical feasibility evaluation)', 'numerical_values': [1, 1000, 10000], 'units': {'fuel_efficiency': 'km/L (kilometers per liter)', 'fuel_capacity': 'liters (L)', 'distance': 'kilometers (km)', 'calculation': 'Fuel required = Distance ÷ Fuel efficiency = 10,000 liters', 'feasibility': 'Refueling frequency = Fuel required ÷ Tank capacity = 10 times'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}, {'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}]}}\nA hypothetical reasoning question is as follows:\nIf the fuel tank capacity of a certain car is 1,000 liters and its urban fuel efficiency is 1 km/L, calculate the amount of fuel required for the car to travel 10,000 kilometers in the city, and discuss the practical feasibility under such extreme conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Car_ID, Model, 10000 / 1 AS Required_Fuel FROM cars WHERE Fuel_Tank_Capacity = 1000 AND Fuel_Efficiency_City = 1;",
        "db_id": "car"
    },
    {
        "id": 32,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model', 'power-to-weight ratio (HP/kg)', 'top 5 car models'], 'relations': ['model_to_horsepower (Car_ID → engine_specs.Horsepower)', 'model_to_weight (Car_ID → cars.Weight)', 'power_to_weight_ratio (Horsepower / Weight)'], 'intent': 'calculate_power_to_weight_ratio_for_specific_model_and_identify_top_5_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'power': 'HP (Horsepower from engine_specs)', 'weight': 'kg (Weight from cars)', 'ratio': 'HP/kg (calculated by dividing Horsepower by Weight)'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.cars': [{'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（kg）', 'examples': ['1325.0', '1611.0', '2240.0', '1500.0', '1300.0']}], 'car.engine_specs': [{'column': 'Horsepower', 'type': 'INTEGER', 'primary_key': False, 'comment': '马力（HP）', 'examples': ['139', '283', '523', '450', '170']}]}}\nA physical knowledge question is as follows:\nCalculate the power-to-weight ratio (HP/kg) of a certain car model and identify the top 5 car models with the highest power-to-weight ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p.Car_ID, c.Model, p.Power_to_Weight_Ratio FROM performance_metrics p JOIN cars c ON p.Car_ID = c.Car_ID ORDER BY p.Power_to_Weight_Ratio DESC LIMIT 5;",
        "db_id": "car"
    },
    {
        "id": 33,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['car model', 'urban driving 100 km', 'highway driving 100 km'], 'relations': ['model_to_engine_specs (car model → engine_specs)', 'urban_distance_to_fuel_consumption (100 km → Fuel_Consumption_City)', 'highway_distance_to_fuel_consumption (100 km → Fuel_Consumption_Highway)'], 'intent': 'calculate_total_carbon_dioxide_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 100], 'units': {'distance': 'kilometers', 'fuel_consumption': 'liters per 100 kilometers (L/100km)', 'emission_factor': '2.64 kg CO2 per liter of gasoline (assumed standard)', 'co2': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'engine_specs', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'engine_specs', 'pk_column': 'Engine_ID'}], 'tableinfo': {'car.engine_specs': [{'column': 'Fuel_Consumption_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市油耗（L/100km）', 'examples': ['8.0', '0.0', '12.0', '14.0', '7.5']}, {'column': 'Fuel_Consumption_Highway', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '高速油耗（L/100km）', 'examples': ['6.5', '0.0', '9.0', '10.0', '6.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total carbon dioxide emissions of a particular car model that has been driven 100 kilometers each in urban and highway conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.Car_ID, c.Model, (e.Fuel_Consumption_City * 100 / 100) * e.CO2_Emissions + (e.Fuel_Consumption_Highway * 100 / 100) * e.CO2_Emissions AS Total_CO2_Emissions FROM engine_specs e JOIN cars c ON e.Car_ID = c.Car_ID;",
        "db_id": "car"
    },
    {
        "id": 34,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['cars produced in 2020', 'airbags'], 'relations': ['car_to_safety_features (Car_ID → Safety_ID)', 'airbag_count_to_ranking (Airbag_Count → descending_order)'], 'intent': 'retrieve_top_n_by_metric', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2020, 10], 'units': {'year': 'YYYY format', 'airbag_count': 'unitless integer'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'safety_features', 'fk_column': 'Car_ID', 'ref_table': 'cars', 'ref_column': 'Car_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}, {'pk_table': 'safety_features', 'pk_column': 'Safety_ID'}], 'tableinfo': {'car.cars': [{'column': 'Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产年份', 'examples': ['2022', '2023', '2020', '2021', '2024']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '车型', 'examples': ['Corolla', 'Model 3', 'X5', 'Mustang', 'Golf']}, {'column': 'Car_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '汽车唯一标识', 'examples': ['1', '11', '18', '19', '20']}], 'car.safety_features': [{'column': 'Airbag_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '安全气囊数量', 'examples': ['8', '10', '12']}]}}\nA common sense reasoning question is as follows:\nFind the top 10 cars produced in 2020 with the highest number of airbags, sorted in descending order by the number of airbags.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.Car_ID, c.Model, s.Airbag_Count FROM safety_features s JOIN cars c ON s.Car_ID = c.Car_ID WHERE c.Year = 2020 ORDER BY s.Airbag_Count DESC LIMIT 10;",
        "db_id": "car"
    },
    {
        "id": 35,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel tank capacity 1000 liters', 'urban fuel efficiency 0.5 km/L', '10,000 kilometers travel distance'], 'relations': ['fuel_efficiency_to_consumption (0.5 km/L → calculate fuel needed)', 'tank_capacity_to_refills (1000 L → num_refills = 20,000 L / 1000 L)'], 'intent': 'calculate_fuel_required_and_evaluate_feasibility', 'reasoning_type': 'mathematical logic reasoning and common sense understanding reasoning', 'numerical_values': [1000, 0.5, 10000], 'units': {'fuel': 'liters', 'distance': 'kilometers', 'efficiency': 'km/L (kilometers per liter)', 'conversion': 'Total fuel = 10,000 km / 0.5 km/L = 20,000 L'}, 'foreign_keys': [{'fk_table': 'cars', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'cars', 'pk_column': 'Car_ID'}], 'tableinfo': {'car.cars': [{'column': 'Fuel_Tank_Capacity', 'type': 'DECIMAL(7, 2)', 'primary_key': False, 'comment': '油箱容量（L）', 'examples': ['50.0', '85.0', '60.0', '47.0']}, {'column': 'Fuel_Efficiency_City', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '城市燃油效率（km/L）', 'examples': ['12.5', '0.0', '8.5', '9.0', '13.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a car has a fuel tank capacity of 1000 liters and its urban fuel efficiency is 0.5 km/L, calculate the amount of fuel needed for the car to travel 10,000 kilometers in the city, and discuss the practical feasibility under such extreme conditions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Car_ID, Model, 10000 / 0.5 AS Required_Fuel FROM cars WHERE Fuel_Tank_Capacity = 1000 AND Fuel_Efficiency_City = 0.5;",
        "db_id": "car"
    },
    {
        "id": 36,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar energy equipment', 'theoretical maximum power generation', 'equipment name'], 'relations': ['device_to_power_rating (EnergyDevices.powerRating)', \"device_type_filter (deviceType = 'solar')\", 'sorting_order (ascending by deviceName)'], 'intent': 'calculate_and_sort_theoretical_max_power_generation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'W (Watts) or kW (Kilowatts) implied by EnergyConsumption.powerUsage unit'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA physical knowledge question is as follows:\nCalculate the theoretical maximum power generation for all solar energy equipment, and sort the results in ascending order by equipment name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, powerRating * efficiency / 100 AS theoreticalMaxOutput FROM EnergyDevices WHERE deviceType = '太阳能' ORDER BY deviceName ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 37,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total_energy_savings', 'past_year', 'top_5_devices'], 'relations': ['device_to_energy_savings (EnergyDevices.deviceId → EnergyEfficiency.deviceId)'], 'intent': 'calculate_total_energy_savings', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1, 5], 'units': {'energy_saved': 'kWh (implied by context)', 'time': 'years (for past year filter)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'timestamp'}, {'column': 'energySaved'}]}}\nA mathematical logic question is as follows:\nFind the total energy savings for all devices over the past year, sorted in descending order by the amount of energy saved, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, SUM(energySaved) AS totalEnergySaved FROM EnergyEfficiency WHERE timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY deviceId ORDER BY totalEnergySaved DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 38,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'maintenance date', 'equipment status', 'equipment name'], 'relations': ['equipment_to_status', 'equipment_to_last_maintenance_date', 'equipment_to_name'], 'intent': 'identify_aging_equipment_needing_maintenance', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [1], 'units': {'time': 'year', 'date_comparison': 'current_date - last_maintenance_date > 1 year'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['运行中', '维修中']}, {'column': 'lastMaintenanceDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-06-15 14:00:00']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA common sense reasoning question is as follows:\nFind all currently running equipment where the most recent maintenance date exceeds one year, and sort them in ascending order by equipment name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, lastMaintenanceDate FROM EnergyDevices WHERE status = '运行中' AND lastMaintenanceDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR) ORDER BY deviceName ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 39,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', '100% efficiency', 'annual energy savings'], 'relations': ['device_to_efficiency (EnergyDevices.efficiency)', 'device_to_energy_consumption (EnergyConsumption.energyConsumed)'], 'intent': 'calculate_hypothetical_energy_savings', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100], 'units': {'efficiency': '% (percentage)', 'energy': 'kWh (kilowatt-hour)', 'conversion': 'Energy Saved = Total Annual Consumption * (1 - Current Efficiency / 100)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'timestamp'}]}}\nA hypothetical reasoning question is as follows:\nAssuming all devices suddenly achieve 100% efficiency, calculate the total amount of energy saved by these devices within a year, and rank them in descending order by energy savings, taking the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, (powerRating * 24 * 365) AS totalEnergySaved FROM EnergyDevices ORDER BY totalEnergySaved DESC LIMIT 10;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 40,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturer A', 'solar panels', 'standard test conditions', 'maximum efficiency'], 'relations': ['manufacturer_to_devices (Manufacturer A → EnergyDevices)', 'device_type_filter (solar panels)', 'power_rating_aggregation (SUM(powerRating))'], 'intent': 'calculate_total_power_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'power_generation': 'Watts (W) or Kilowatts (kW) based on EnergyDevices.powerRating unit'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total power generation of solar panels produced by Manufacturer A under standard test conditions, assuming all devices are operating at maximum efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ed.powerRating * ed.efficiency / 100 * ec.energyConsumed) AS totalEnergyGenerated FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId WHERE m.manufacturerName = '制造商A' AND ed.deviceType = '太阳能';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 41,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer B', 'manufacturer C', 'wind turbines', 'average energy consumption', 'past year'], 'relations': ['manufacturer_to_devices (Manufacturers.manufacturerId → EnergyDevices.manufacturerId)', 'device_to_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'time_filter (timestamp within past year)', 'comparison_between_manufacturers (B vs C energy consumption difference)'], 'intent': 'calculate_average_energy_consumption_difference_between_manufacturers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['12 months (past year)'], 'units': {'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed)', 'difference': 'ΔkWh = avg_B - avg_C'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'timestamp'}, {'column': 'energyConsumed'}]}}\nA mathematical logic question is as follows:\nFind the average energy consumption of wind turbines produced by manufacturer B over the past year and calculate its difference in energy consumption compared to those produced by manufacturer C.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ManufacturerB_Consumption AS (SELECT AVG(ec.energyConsumed) AS avg_energy_consumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'B' AND ed.deviceType = '风能' AND ec.timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)), ManufacturerC_Consumption AS (SELECT AVG(ec.energyConsumed) AS avg_energy_consumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'C' AND ed.deviceType = '风能' AND ec.timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) SELECT (SELECT avg_energy_consumed FROM ManufacturerB_Consumption) AS avg_energy_consumed_B, (SELECT avg_energy_consumed FROM ManufacturerC_Consumption) AS avg_energy_consumed_C, (SELECT avg_energy_consumed FROM ManufacturerB_Consumption) - (SELECT avg_energy_consumed FROM ManufacturerC_Consumption) AS energy_consumption_difference;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 42,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturer D', 'fossil fuel equipment', 'winter', 'summer'], 'relations': ['manufacturer_to_devices (Manufacturer D → EnergyDevices)', 'device_to_consumption (EnergyDevices.deviceId → EnergyConsumption)', 'seasonal_comparison (winter vs summer energy consumption)', 'environmental_factors (temperature/humidity in EnergyConsumption)'], 'intent': 'seasonal_energy_consumption_analysis', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': ['winter_energy_consumed', 'summer_energy_consumed'], 'units': {'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed)', 'temperature': '°C (from EnergyConsumption.temperature)', 'time_period': 'seasonal (winter/summer)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'timestamp'}, {'column': 'temperature'}, {'column': 'humidity'}], 'EnergyManagementDB.EnvironmentalImpact': [{'column': 'energySource', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA common sense reasoning question is as follows:\nDetermine whether the energy consumption of fossil fuel equipment produced by Manufacturer D is significantly higher in winter than in summer, and explain possible reasons.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT winter.avg_winter_consumption AS Winter_Avg_Consumption, summer.avg_summer_consumption AS Summer_Avg_Consumption, (winter.avg_winter_consumption - summer.avg_summer_consumption) AS Consumption_Difference FROM (SELECT AVG(ec.energyConsumed) AS avg_winter_consumption FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'D' AND ed.deviceType = '化石燃料' AND MONTH(ec.timestamp) IN (12, 1, 2)) AS winter, (SELECT AVG(ec.energyConsumed) AS avg_summer_consumption FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'D' AND ed.deviceType = '化石燃料' AND MONTH(ec.timestamp) IN (6, 7, 8)) AS summer;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 43,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturer E', '10 billion yuan annual turnover', 'current profit rate'], 'relations': ['manufacturer_to_financials (Manufacturer E → revenue/profit)', 'profit_rate_calculation (profit/revenue ratio)'], 'intent': 'calculate_new_profit_and_analyze_sustainability', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000000], 'units': {'turnover': 'yuan', 'profit': 'yuan', 'profit_rate': '% (implied by profit/revenue)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'revenue'}, {'column': 'profit'}]}}\nA hypothetical reasoning question is as follows:\nAssuming that Manufacturer E's annual turnover suddenly increases to 10 billion yuan, calculate what its annual profit would be if it grows at the current profit rate, and analyze whether this growth is sustainable.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CurrentProfitMargin AS (SELECT (profit / revenue) * 100 AS profitMargin FROM Manufacturers WHERE manufacturerName = '制造商E'), FutureProfit AS (SELECT 1000000 * (profitMargin / 100) AS futureProfit FROM CurrentProfitMargin) SELECT futureProfit FROM FutureProfit;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 44,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific device', 'given time period'], 'relations': ['device_to_energy_consumption (deviceId → EnergyConsumption)', 'time_period_to_timestamp (timestamp ∈ time period)'], 'intent': 'calculate_total_energy_consumption_and_analyze_power_factor', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['start_time', 'end_time'], 'units': {'energy_consumption': 'kWh', 'power_factor': 'unitless (ratio)', 'time': 'datetime', 'voltage': 'V (volts)', 'current': 'A (amps)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}, {'column': 'powerUsage'}, {'column': 'voltage'}, {'column': 'current'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a specific device during a given time period and analyze its power factor.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceConsumption AS (SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed, AVG(ec.powerUsage) AS avgPowerUsage, AVG(ec.voltage) AS avgVoltage, AVG(ec.current) AS avgCurrent FROM EnergyConsumption ec WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ec.deviceId) SELECT dc.deviceId, dc.totalEnergyConsumed, dc.avgPowerUsage, dc.avgVoltage, dc.avgCurrent, (dc.avgPowerUsage / (dc.avgVoltage * dc.avgCurrent)) AS powerFactor FROM DeviceConsumption dc WHERE dc.deviceId = '特定设备的ID';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 45,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption', 'EnergyDevices', 'deviceType', 'energyConsumed', 'timestamp', 'deviceId'], 'relations': ['EnergyConsumption.deviceId → EnergyDevices.deviceId (foreign key relationship)'], 'intent': 'calculate_total_energy_consumption_by_device_type_and_identify_peak', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1], 'units': {'timeframe': 'year', 'energy_consumption_unit': 'kWh (assumed based on energyConsumed column)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'timestamp'}, {'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of all devices over one year, grouped by device type, and identify the device type with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceType, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId WHERE ec.timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ed.deviceType ORDER BY totalEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 46,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"equipment\", \"environmental humidity levels\", \"energy consumption\"],\n  \"relations\": [\"humidity_to_energy_consumption (humidity → energyConsumed)\", \"equipment_to_humidity (device → humidity)\", \"equipment_to_energy_consumption (device → energyConsumed)\"],\n  \"intent\": \"analyze_correlation_between_humidity_and_energy_consumption\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [\"variable humidity thresholds\", \"energy consumption metrics across humidity ranges\"],\n  \"units\": {\n    \"humidity\": \"% RH (relative humidity)\",\n    \"energy_consumption\": \"kWh (kilowatt-hours)\",\n    \"power\": \"W (watts)\"\n  },\n  \"required_tables\": [\"EnergyConsumption\", \"EnergyDevices\"],\n  \"required_fields\": [\n    \"EnergyConsumption.humidity\",\n    \"EnergyConsumption.energyConsumed\",\n    \"EnergyConsumption.powerUsage\",\n    \"EnergyConsumption.timestamp\",\n    \"EnergyConsumption.deviceId\",\n    \"EnergyDevices.deviceType\",\n    \"EnergyDevices.powerRating\",\n    \"EnergyDevices.efficiency\"\n  ]\n}\n``` \n\n### Key Analysis:\n1. **Core Tables/Fields**:  \n   - `EnergyConsumption` provides humidity measurements and corresponding energy consumption metrics.  \n   - `EnergyDevices` adds device-specific attributes (e.g., `deviceType`, `powerRating`) to identify patterns across equipment types.  \n\n2. **Relationships**:  \n   - Humidity (`EnergyConsumption.humidity`) directly influences energy consumption (`EnergyConsumption.energyConsumed`).  \n   - Equipment characteristics (`EnergyDevices.deviceType`, `powerRating`) modify how humidity impacts energy use.  \n\n3. **Reasoning Type**:  \n   - Requires physical knowledge reasoning to understand how humidity affects equipment performance (e.g., HVAC systems working harder in high humidity).  \n\n4. **Numerical Analysis**:  \n   - Quantify energy consumption changes at specific humidity thresholds (e.g., \"How much does energy consumption increase when humidity rises from 50% to 70%?\").  \n\n5. **Temporal Scope**:  \n   - `timestamp` in `EnergyConsumption` allows analysis of patterns over time (e.g., seasonal humidity variations).\nA common sense reasoning question is as follows:\nAnalyze the energy consumption changes of equipment under different environmental humidity levels and identify the impact patterns of humidity on energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT hc.deviceId, ed.deviceName, hc.highHumidityEnergy, hc.lowHumidityEnergy, (hc.highHumidityEnergy - hc.lowHumidityEnergy) / hc.lowHumidityEnergy * 100 AS energyChangeRate FROM (SELECT deviceId, MAX(CASE WHEN humidity = (SELECT MAX(humidity) FROM EnergyConsumption WHERE deviceId = he.deviceId) THEN avgEnergyConsumed END) AS highHumidityEnergy, MAX(CASE WHEN humidity = (SELECT MIN(humidity) FROM EnergyConsumption WHERE deviceId = he.deviceId) THEN avgEnergyConsumed END) AS lowHumidityEnergy FROM (SELECT deviceId, humidity, AVG(energyConsumed) AS avgEnergyConsumed FROM EnergyConsumption GROUP BY deviceId, humidity) AS he GROUP BY deviceId) AS hc JOIN EnergyDevices ed ON hc.deviceId = ed.deviceId;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 47,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'rated power', '10 times multiplier', 'extreme conditions', 'power grid'], 'relations': ['device_to_rated_power (device → powerRating)', 'rated_power_to_multiplier (rated power ×10)', 'extreme_conditions_to_energy_consumption (timestamp → powerUsage)', 'energy_consumption_to_power_grid_impact (powerUsage → voltage/current anomaly)'], 'intent': 'calculate_energy_consumption_under_hypothetical_overload_and_assess_grid_impact', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [10], 'units': {'power': 'Watts (W)', 'energy': 'kWh', 'multiplier': 'dimensionless (×10)', 'conversion': 'energy = power × time (kWh = (W × hours) / 1000)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'timestamp'}, {'column': 'powerUsage'}, {'column': 'energyConsumed'}, {'column': 'voltage'}, {'column': 'current'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power of a certain device suddenly increases to 10 times its rated power, calculate its energy consumption under extreme conditions and analyze its impact on the power grid.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ExtremePower AS (SELECT deviceId, deviceName, powerRating * 10 AS extremePower, powerRating FROM EnergyDevices WHERE deviceId = 11), ExtremeEnergyConsumption AS (SELECT ep.deviceId, ep.deviceName, ep.extremePower, ep.powerRating, ec.timestamp, ec.energyConsumed, ec.powerUsage, ec.voltage, ec.current, ec.temperature, ec.humidity, ec.dataQuality, ep.extremePower * (ec.timestamp - LAG(ec.timestamp) OVER (PARTITION BY ec.deviceId ORDER BY ec.timestamp)) / 3600 AS extremeEnergyConsumed FROM EnergyConsumption ec JOIN ExtremePower ep ON ec.deviceId = ep.deviceId) SELECT eec.deviceId, eec.deviceName, eec.extremePower, eec.powerRating, eec.timestamp, eec.energyConsumed, eec.powerUsage, eec.voltage, eec.current, eec.temperature, eec.humidity, eec.dataQuality, eec.extremeEnergyConsumed, eec.extremeEnergyConsumed / 100 AS gridImpact FROM ExtremeEnergyConsumption eec;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 48,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'specific time period', 'carbon emissions'], 'relations': ['device_to_emissions (deviceId → carbonFootprint)', 'time_period_to_emissions (timestamp ∈ [start_date, end_date] → carbonFootprint)'], 'intent': 'calculate_total_carbon_emissions_and_identify_max_emitter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'carbon_emissions': 'kg CO₂ (assumed from carbonFootprint column in EnvironmentalImpact)', 'time_period': 'datetime range (from timestamp column in EnvironmentalImpact)'}, 'foreign_keys': [{'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnvironmentalImpact': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '123']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 08:00:00']}, {'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA physical knowledge question is as follows:\nCalculate the total carbon emissions of a device during a specific time period, and identify the device with the highest carbon emissions.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceCarbonFootprint AS (SELECT ec.deviceId, SUM(ec.energyConsumed * ef.carbonFootprint) AS totalCarbonEmission FROM EnergyConsumption ec JOIN EnvironmentalImpact ef ON ec.deviceId = ef.deviceId AND ec.timestamp = ef.timestamp WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ec.deviceId) SELECT dcf.deviceId, ed.deviceName, dcf.totalCarbonEmission FROM DeviceCarbonFootprint dcf JOIN EnergyDevices ed ON dcf.deviceId = ed.deviceId ORDER BY dcf.totalCarbonEmission DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 49,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'EnergyEfficiency table', 'one year period'], 'relations': ['device_to_efficiency (EnergyDevices ↔ EnergyEfficiency)', 'time_filter (timestamp within one year)'], 'intent': 'calculate_average_energy_efficiency_and_identify_below_average', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [365], 'units': {'time_frame': '365 days (annual period)', 'efficiency': 'unit from EnergyEfficiency.efficiency column (unknown explicit unit, database-defined)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'efficiency'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the average energy efficiency of all equipment over one year and identify the equipment with efficiency below the average.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ae.deviceId, ae.avgEfficiency FROM (SELECT deviceId, AVG(efficiency) AS avgEfficiency FROM EnergyEfficiency WHERE timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY deviceId) AS ae JOIN (SELECT AVG(efficiency) AS overallAvgEfficiency FROM EnergyEfficiency WHERE timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AS oa WHERE ae.avgEfficiency < oa.overallAvgEfficiency;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 50,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'maintenance record'], 'relations': ['device_to_last_maintenance_date (deviceId → lastMaintenanceDate)'], 'intent': 'find_equipment_without_recent_maintenance', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1], 'units': {'time': 'year', 'date_comparison': 'lastMaintenanceDate < current_date - 1 year'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}, {'column': 'installationDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-01-15 10:00:00']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['运行中', '维修中']}, {'column': 'location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Sun City, USA', 'Wind Town, Canada', 'Energy City, UK', '测试地点', 'Test Location']}, {'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}, {'column': 'lastMaintenanceDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-06-15 14:00:00']}, {'column': 'nextMaintenanceDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-12-15 14:00:00']}, {'column': 'humidity', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': ['10.0']}, {'column': 'voltage', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0']}, {'column': 'current', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['20.0']}]}}\nA common sense reasoning question is as follows:\nFind equipment that has not undergone maintenance in the past year and list the detailed information of these devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, ed.deviceType, ed.powerRating, ed.efficiency, ed.installationDate, ed.status, ed.location, ed.manufacturerId, ed.lastMaintenanceDate, ed.nextMaintenanceDate FROM EnergyDevices ed WHERE ed.deviceId NOT IN (SELECT mr.deviceId FROM MaintenanceRecords mr WHERE mr.maintenanceDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR))",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 51,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'energy consumption (100x normal)', 'environmental impact', 'environmental indicator'], 'relations': ['device_to_energy_consumption (device → energyConsumed)', 'energy_consumption_to_environmental_impact (100x energyConsumed → carbonFootprint, pollutionLevel)', 'environmental_impact_to_indicator (EnvironmentalImpact → indicator correlation)'], 'intent': 'calculate_environmental_impact_and_identify_most_affected_indicator', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100], 'units': {'energy_consumption': 'kWh (baseline and 100x multiplier)', 'carbon_footprint': 'kg CO₂ (via energy source efficiency factors)', 'pollution_level': 'AQI/Pollution Index (proportional to energy source)', 'water_usage': 'liters (indirectly impacted via energy production)', 'land_usage': 'm² (indirectly impacted via infrastructure)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}], 'EnergyManagementDB.EnvironmentalImpact': [{'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}, {'column': 'pollutionLevel', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '50.0', '60.0', '55.0', '10.0']}, {'column': 'waterUsage', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '10.0', '1000.0', '1100.0', '5.0']}, {'column': 'landUsage', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '50.0', '100.0', '500.0', '550.0']}, {'column': 'energySource', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a device's energy consumption suddenly increases to 100 times its normal value, calculate its impact on the environment and identify the most affected environmental indicator.\nyour response just have a SQL without anything.\n",
        "solution": "DROP TEMPORARY TABLE IF EXISTS NormalImpact; DROP TEMPORARY TABLE IF EXISTS ExtremeImpact; CREATE TEMPORARY TABLE NormalImpact AS SELECT deviceId, AVG(carbonFootprint) AS avgCarbonFootprint, AVG(pollutionLevel) AS avgPollutionLevel, AVG(waterUsage) AS avgWaterUsage, AVG(landUsage) AS avgLandUsage FROM EnvironmentalImpact GROUP BY deviceId; CREATE TEMPORARY TABLE ExtremeImpact AS SELECT deviceId, avgCarbonFootprint * 100 AS extremeCarbonFootprint, avgPollutionLevel * 100 AS extremePollutionLevel, avgWaterUsage * 100 AS extremeWaterUsage, avgLandUsage * 100 AS extremeLandUsage FROM NormalImpact; SELECT deviceId, CASE WHEN extremeCarbonFootprint = GREATEST(extremeCarbonFootprint, extremePollutionLevel, extremeWaterUsage, extremeLandUsage) THEN 'carbonFootprint' WHEN extremePollutionLevel = GREATEST(extremeCarbonFootprint, extremePollutionLevel, extremeWaterUsage, extremeLandUsage) THEN 'pollutionLevel' WHEN extremeWaterUsage = GREATEST(extremeCarbonFootprint, extremePollutionLevel, extremeWaterUsage, extremeLandUsage) THEN 'waterUsage' WHEN extremeLandUsage = GREATEST(extremeCarbonFootprint, extremePollutionLevel, extremeWaterUsage, extremeLandUsage) THEN 'landUsage' END AS maxImpactIndicator, GREATEST(extremeCarbonFootprint, extremePollutionLevel, extremeWaterUsage, extremeLandUsage) AS maxImpactValue FROM ExtremeImpact; DROP TEMPORARY TABLE IF EXISTS NormalImpact; DROP TEMPORARY TABLE IF EXISTS ExtremeImpact;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 52,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar panels', 'devices', 'actual output power', 'maximum efficiency'], 'relations': ['deviceType_to_device (solar panels → EnergyDevices.deviceType)', 'powerRating_to_efficiency (powerRating * efficiency = actual output power)', 'efficiency_to_ranking (efficiency values determine device ranking)'], 'intent': 'calculate_actual_output_power_and_rank_devices', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5], 'units': {'power': 'W (Watts) from EnergyDevices.powerRating', 'efficiency': 'Decimal value (e.g., 0.2 for 20%) from EnergyEfficiency.efficiency', 'actual_output_power': 'Watts (calculated as powerRating * efficiency)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'efficiency'}]}}\nA physical knowledge question is as follows:\nCalculate the actual output power of solar panels at maximum efficiency and identify the top 5 devices with the highest actual output power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, powerRating * efficiency / 100 AS P_actual FROM EnergyDevices WHERE deviceType = '太阳能' ORDER BY P_actual DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 53,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyEfficiency', 'device', 'cost_savings', 'past_year', 'timestamp', 'EnergyDevices'], 'relations': ['device_to_efficiency (deviceId → EnergyEfficiency)', 'time_filter (timestamp ≥ now-1_year)', 'aggregation (sum(costSavings) per device)'], 'intent': 'calculate_and_rank_annual_energy_cost_savings', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [365, 10], 'units': {'cost_savings': 'currency_unit (implied by costSavings column)', 'time_period': 'year (365 days)', 'ranking': 'top N = 10'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'costSavings'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy cost savings for each device over the past year, sort them in descending order by savings, and identify the top 10 devices with the highest savings.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, SUM(ee.energySaved) * 0.5 AS total_cost_savings FROM EnergyEfficiency ee JOIN EnergyDevices ed ON ee.deviceId = ed.deviceId WHERE ee.timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ed.deviceId, ed.deviceName ORDER BY total_cost_savings DESC LIMIT 10;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 54,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'target efficiency'], 'relations': ['device_efficiency_comparison (device.efficiency < policy.targetEfficiency)'], 'intent': 'filter_and_rank_devices_by_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'efficiency': 'unitless (as per EnergyPolicies.targetEfficiency and EnergyDevices.efficiency columns)', 'result_limit': '10 devices'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyPolicies', 'pk_column': 'policyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.EnergyPolicies': [{'column': 'targetEfficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '85.0']}]}}\nA common sense reasoning question is as follows:\nFind all devices with efficiency below the target efficiency, sort them in ascending order of efficiency, and identify the 10 least efficient devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, ed.efficiency, ep.targetEfficiency FROM EnergyDevices ed JOIN EnergyPolicies ep ON ed.efficiency < ep.targetEfficiency ORDER BY ed.efficiency ASC LIMIT 10;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 55,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyDevices', 'device efficiency', '100% efficiency scenario'], 'relations': ['device_to_efficiency (EnergyDevices.efficiency)', 'hypothetical_efficiency_increase (original_efficiency → 100%)'], 'intent': 'calculate_actual_output_power_under_ideal_efficiency_and_rank_top_5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'efficiency': 'percentage (%)', 'output_power': 'implied by EnergyDevices.powerRating column (likely kW/W)', 'conversion': 'efficiency from percentage to decimal (100% → 1.0)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the efficiency of all equipment suddenly increases to 100%, calculate the actual output power of each device in this scenario, and identify the top 5 devices with the highest actual output power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, powerRating * 1.0 AS P_actual FROM EnergyDevices ORDER BY P_actual DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 56,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'specific time period'], 'relations': ['device_to_consumption_data (deviceId → EnergyConsumption)', 'time_period_filter (timestamp ≥ start_time ∧ timestamp ≤ end_time)'], 'intent': 'calculate_total_energy_consumption_and_identify_peak_consumer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed)', 'time': 'timestamp (ISO 8601 format implied)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a device during a specific time period, and identify the device with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.deviceId, ed.deviceName, SUM(ec.energyConsumed) AS TotalEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ec.deviceId, ed.deviceName ORDER BY TotalEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 57,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption', 'EnergyDevices', 'device type', 'year-long period', 'energyConsumed'], 'relations': ['device_to_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'time_filter (timestamp → last year)', 'type_grouping (deviceType → aggregation)'], 'intent': 'calculate_total_and_average_energy_consumption_grouped_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy': 'unit implied by EnergyConsumption.energyConsumed (e.g., kWh)', 'time': 'yearly aggregation'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of all devices over a year, grouped by device type, and determine the average energy consumption for each device type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceType, SUM(ec.energyConsumed) AS totalEnergyConsumed, AVG(ec.energyConsumed) AS averageEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId WHERE ec.timestamp >= NOW() - INTERVAL 1 YEAR GROUP BY ed.deviceType;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 58,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'maintenance costs', 'maintenance frequency', 'part replacement status'], 'relations': ['equipment_to_maintenance_records (EnergyDevices.deviceId → MaintenanceRecords.deviceId)', 'maintenance_cost_aggregation (total costs per deviceId)', 'maintenance_frequency (count of maintenance records per device)'], 'intent': 'identify_highest_maintenance_cost_equipment_and_analyze_usage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['total_maintenance_costs', 'maintenance_record_count'], 'units': {'maintenance_cost': \"currency (implied by 'cost' field in MaintenanceRecords)\", 'frequency': 'count (number of maintenance events)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}, {'column': 'maintenanceDate'}, {'column': 'partsReplaced'}]}}\nA common sense reasoning question is as follows:\nFind the equipment with the highest maintenance costs and analyze its maintenance frequency and part replacement status.\nyour response just have a SQL without anything.\n",
        "solution": "WITH MaintenanceCosts AS (SELECT deviceId, SUM(cost) AS totalMaintenanceCost, COUNT(*) AS maintenanceFrequency, GROUP_CONCAT(partsReplaced SEPARATOR ', ') AS partsReplacedList FROM MaintenanceRecords GROUP BY deviceId) SELECT ED.deviceId, ED.deviceName, ED.deviceType, MC.totalMaintenanceCost, MC.maintenanceFrequency, MC.partsReplacedList FROM EnergyDevices ED JOIN MaintenanceCosts MC ON ED.deviceId = MC.deviceId ORDER BY MC.totalMaintenanceCost DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 59,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Device with power 1,000,000 kW', '1-year duration', 'Environmental impact factors'], 'relations': ['device_to_power_usage (deviceId → EnergyConsumption.powerUsage)', 'time_period_to_energy_calculation (1 year → energyConsumed = power × time)', 'device_to_environmental_impact (deviceId → EnvironmentalImpact.carbonFootprint)'], 'intent': 'calculate_annual_energy_consumption_and_environmental_impact', 'reasoning_type': 'mathematical logic reasoning + physical knowledge reasoning', 'numerical_values': [1000000, 1], 'units': {'power': 'kW (kilowatts)', 'energy': 'kWh (kilowatt-hours) [1,000,000 kW × 8,760 hours]', 'time_conversion': '1 year = 8,760 hours', 'environmental_impact_units': ['tons CO2', 'pollutionLevel (scale)', 'waterUsage (m³)']}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnvironmentalImpact': [{'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}, {'column': 'pollutionLevel', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '50.0', '60.0', '55.0', '10.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power of a certain device suddenly increases to 1,000,000 kilowatts, calculate its total energy consumption in one year and analyze its impact on the environment.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEnergy AS (  SELECT     deviceId,    1000000 AS powerRating,    8760 AS hoursInYear,    1000000 * 8760 AS totalEnergyConsumed  FROM     EnergyDevices  WHERE     deviceId = 12345 ), EnvironmentalImpactAnalysis AS (  SELECT     deviceId,    totalEnergyConsumed,    totalEnergyConsumed * 0.85 AS carbonFootprint,    totalEnergyConsumed * 0.001 AS waterUsage,    totalEnergyConsumed * 0.0001 AS landUsage  FROM     DeviceEnergy ) SELECT   DE.deviceId,  DE.powerRating,  DE.totalEnergyConsumed,  EIA.carbonFootprint,  EIA.waterUsage,  EIA.landUsage FROM   DeviceEnergy DE JOIN   EnvironmentalImpactAnalysis EIA ON   DE.deviceId = EIA.deviceId;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 60,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific device', 'time period', 'highest energy consumption device'], 'relations': ['device_to_consumption_records (deviceId → EnergyConsumption records)', 'aggregation_of_consumption (sum over time/device)'], 'intent': 'calculate_total_energy_consumption_and_identify_peak_device', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['timestamp_start', 'timestamp_end'], 'units': {'energy_consumption': 'kWh (implied by energyConsumed field in EnergyConsumption table)', 'time_period': 'datetime range'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a specific device over a certain time period and identify the device with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.deviceId, ed.deviceName, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ec.deviceId, ed.deviceName ORDER BY totalEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 61,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'efficiency', 'time period'], 'relations': ['device_to_efficiency (deviceId → efficiency)', 'efficiency_comparison (individual_efficiency < average_efficiency)'], 'intent': 'calculate_average_efficiency_and_identify_underperforming_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'efficiency': 'unitless (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'efficiency'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA mathematical logic question is as follows:\nCalculate the average efficiency of all devices over a specific time period and identify devices with efficiency below the average.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEfficiency AS (SELECT deviceId, AVG(efficiency) AS avgEfficiency FROM EnergyEfficiency WHERE timestamp BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY deviceId), OverallAverageEfficiency AS (SELECT AVG(avgEfficiency) AS overallAvgEfficiency FROM DeviceEfficiency) SELECT de.deviceId, de.avgEfficiency FROM DeviceEfficiency de, OverallAverageEfficiency oae WHERE de.avgEfficiency < oae.overallAvgEfficiency;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 62,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['high-temperature environment', 'total energy consumption'], 'relations': ['device_to_environment (deviceId → temperature)', 'energy_aggregation (sum energyConsumed)'], 'intent': 'filter_devices_by_temperature_and_sum_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30], 'units': {'temperature': '°C (Celsius)', 'energy': 'kWh (implied by energyConsumed field)', 'threshold': '30°C (assumed high-temperature threshold)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'temperature'}, {'column': 'energyConsumed'}, {'column': 'deviceId'}]}}\nA common sense reasoning question is as follows:\nFind all devices operating in high-temperature environments and calculate their total energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ec.energyConsumed) AS TotalEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId WHERE ec.temperature > 30;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 63,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', '1,000,000 kilowatts', '1 year'], 'relations': ['device_to_power_rating (device → powerRating)', 'power_to_energy (power × time = energyConsumed)', 'energy_to_environmental_impact (energyConsumed → carbonFootprint)'], 'intent': 'calculate_annual_energy_consumption_and_environmental_impact', 'reasoning_type': 'mathematical logic reasoning + physical knowledge reasoning', 'numerical_values': [1000000, 365, 24], 'units': {'power': 'kW (kilowatts)', 'time': 'hours/year (8760)', 'energy': 'kWh (kilowatt-hours)', 'environmental_impact_conversion': 'carbonFootprint per kWh (from EnvironmentalImpact table)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnvironmentalImpact': [{'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}, {'column': 'energySource', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power of a certain device suddenly increases to 1,000,000 kilowatts, calculate its total energy consumption over a year and determine the related environmental impacts.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEnergy AS (SELECT deviceId, 1000000 AS powerRating, 8760 AS hoursInYear FROM EnergyDevices WHERE deviceId = 123) SELECT de.deviceId, de.powerRating * de.hoursInYear AS totalEnergyConsumed, ei.carbonFootprint, ei.pollutionLevel, ei.waterUsage, ei.landUsage FROM DeviceEnergy de JOIN EnvironmentalImpact ei ON de.deviceId = ei.deviceId WHERE ei.timestamp = (SELECT MAX(timestamp) FROM EnvironmentalImpact WHERE deviceId = de.deviceId);",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 64,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar devices', 'specific time period', 'average power output', 'highest power output'], 'relations': ['device_type_classification (solar → EnergyDevices.deviceType)', 'time_range_filter (timestamp ∈ [start, end])', 'power_output_measurement (EnergyConsumption.powerUsage)'], 'intent': 'calculate_average_and_identify_highest_power_output', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'time_period': 'timestamp (YYYY-MM-DD HH:MM:SS)', 'power_output': 'watts (W) or kilowatts (kW) (implied by EnergyConsumption.powerUsage field)', 'conversion': 'average = Σ(powerUsage)/n, max = MAX(powerUsage)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'timestamp'}, {'column': 'powerUsage'}]}}\nA physical knowledge question is as follows:\nCalculate the average power output of all solar devices within a specific time period and identify the device with the highest power output.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, SUM(ec.energyConsumed) / (TIMESTAMPDIFF(HOUR, MIN(ec.timestamp), MAX(ec.timestamp))) AS averagePowerOutput FROM EnergyDevices ed JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId WHERE ed.deviceType = '太阳能' AND ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ed.deviceId, ed.deviceName ORDER BY averagePowerOutput DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 65,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind turbines'], 'relations': ['EnergyConsumption.deviceId → EnergyDevices.deviceId', \"EnergyDevices.deviceType = 'wind turbine'\"], 'intent': 'calculate_energy_consumption_to_power_generation_ratio_for_wind_turbines', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed)', 'power_generation': 'kW (from EnergyDevices.powerRating)', 'ratio_unit': 'hours (energy/power)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total energy consumption to total power generation for all wind turbines, and sort the results in ascending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, SUM(ec.energyConsumed) AS totalEnergyConsumed, SUM(ef.forecastValue) AS totalEnergyGenerated, (SUM(ec.energyConsumed) / SUM(ef.forecastValue)) AS energyConsumptionToGenerationRatio FROM EnergyDevices ed JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId JOIN EnergyForecasts ef ON ed.deviceId = ef.deviceId WHERE ed.deviceType = '风能' AND ef.forecastType = '发电量预测' GROUP BY ed.deviceId, ed.deviceName ORDER BY energyConsumptionToGenerationRatio ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 66,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices installed in 2022', 'target efficiency'], 'relations': ['device_to_target_efficiency (device.efficiency < targetEfficiency)', 'device_to_installation_year (installationDate ∈ 2022)'], 'intent': 'retrieve_devices_below_target_efficiency_installed_in_2022_sorted', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2022], 'units': {'efficiency': 'unitless (same units for device efficiency and target efficiency)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyPolicies', 'pk_column': 'policyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'installationDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-01-15 10:00:00']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.EnergyPolicies': [{'column': 'targetEfficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '85.0']}]}}\nA common sense reasoning question is as follows:\nFind all devices installed in 2022 that have efficiency below the target efficiency, sorted in descending order of efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, ed.efficiency, ep.targetEfficiency FROM EnergyDevices ed JOIN EnergyPolicies ep ON ed.installationDate >= '2022-01-01' AND ed.installationDate <= '2022-12-31' WHERE ed.efficiency < ep.targetEfficiency ORDER BY ed.efficiency DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 67,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyDevices', 'EnergyConsumption', 'efficiency', 'powerRating', 'energyConsumed'], 'relations': ['EnergyConsumption.deviceId → EnergyDevices.deviceId', 'adjusted_energy_consumption = energyConsumed * efficiency', 'ratio = adjusted_energy_consumption / powerRating'], 'intent': 'calculate_hypothetical_ratio_and_sort', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1.0], 'units': {'efficiency': 'unitless ratio (1.0 for 100%)', 'energyConsumed': 'kWh (implied by field name)', 'powerRating': 'W (implied by field name)', 'adjusted_energy_consumption': 'kWh', 'ratio': 'unitless (kWh/W, equivalent to hours)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the efficiency of all equipment suddenly increases to 100%, calculate the ratio of total energy consumption to total power generation for all equipment under this scenario, and sort the results in ascending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEfficiency AS (SELECT deviceId, 100 AS efficiency FROM EnergyDevices), TotalEnergy AS (SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed, SUM(ec.energyConsumed / (de.efficiency / 100.0)) AS totalEnergyGenerated FROM EnergyConsumption ec JOIN DeviceEfficiency de ON ec.deviceId = de.deviceId GROUP BY ec.deviceId) SELECT te.deviceId, (te.totalEnergyConsumed / te.totalEnergyGenerated) AS energyRatio FROM TotalEnergy te ORDER BY energyRatio ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 68,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar energy devices'], 'relations': [\"deviceType_to_efficiency (deviceType='solar' → efficiency values)\"], 'intent': 'calculate_average_efficiency_and_identify_max', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'efficiency': 'unitless (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA physical knowledge question is as follows:\nCalculate the average efficiency of all solar energy devices and identify the device with the highest efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "WITH SolarDeviceEfficiency AS (SELECT deviceId, efficiency FROM EnergyDevices WHERE deviceType = '太阳能') SELECT AVG(efficiency) AS average_efficiency, (SELECT deviceId FROM SolarDeviceEfficiency ORDER BY efficiency DESC LIMIT 1) AS most_efficient_device FROM SolarDeviceEfficiency;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 69,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind energy devices', 'past year'], 'relations': ['device_to_efficiency (EnergyDevices.deviceId → EnergyEfficiency.deviceId)', 'time_filter (timestamp within past year)', 'aggregation (sum of energySaved per device)'], 'intent': 'calculate_and_sort_total_energy_saved_by_wind_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_saved': 'unit type (e.g., kWh) from EnergyEfficiency.energySaved field', 'time_filter': '1 year (365 days)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'energySaved'}, {'column': 'timestamp'}]}}\nA mathematical logic question is as follows:\nCalculate the total energy saved by all wind energy devices over the past year, sorted in descending order by the amount of energy saved.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, SUM(ed.powerRating * ed.efficiency * ec.energyConsumed) AS totalEnergySaved FROM EnergyDevices ed JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId WHERE ed.deviceType = '风能' AND ec.timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ed.deviceId, ed.deviceName ORDER BY totalEnergySaved DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 70,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices installed in 2022', 'total energy consumption'], 'relations': ['device_to_consumption (deviceId → energyConsumed)', 'installation_date_filter (2022)'], 'intent': 'filter_devices_by_installation_year_and_sum_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2022], 'units': {'installation_date': 'YYYY format', 'energy_consumption': 'unit unspecified (assumed kWh from table name)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'installationDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-01-15 10:00:00']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA common sense reasoning question is as follows:\nFind all devices installed in 2022 and calculate their total energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, ed.powerRating, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyDevices ed JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId WHERE YEAR(ed.installationDate) = 2022 GROUP BY ed.deviceId, ed.deviceName, ed.powerRating;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 71,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['all devices', '100% efficiency', 'one year', 'most energy-saving device'], 'relations': ['device_to_energy_consumption (deviceId → EnergyConsumption)', 'device_to_efficiency (deviceId → EnergyDevices.efficiency)', 'hypothetical_efficiency (100% efficiency assumption)', 'time_frame (annual calculation)'], 'intent': 'calculate_total_energy_savings_and_identify_top_device', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100], 'units': {'efficiency': '% (percentage)', 'energy_saved': 'kWh', 'time': 'year'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming all devices achieve 100% efficiency, calculate the total energy saved by all devices in one year and identify the device that saves the most energy.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEnergySavings AS (SELECT ed.deviceId, ed.deviceName, ed.powerRating * (100 - ed.efficiency) / 100 * 365 * 24 AS energySaved FROM EnergyDevices ed) SELECT des.deviceId, des.deviceName, des.energySaved FROM DeviceEnergySavings des ORDER BY des.energySaved DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 72,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar energy devices'], 'relations': ['device_to_efficiency (EnergyDevices.deviceId → EnergyEfficiency.deviceId)'], 'intent': 'calculate_theoretical_max_power_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['powerRating', 'efficiency'], 'units': {'power': 'W (Watts) or kW (Kilowatts) (implied by powerRating field)', 'efficiency': 'unitless ratio (assumed to be decimal value, e.g., 0.85 for 85%)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'efficiency'}]}}\nA physical knowledge question is as follows:\nCalculate the theoretical maximum power generation for all solar energy devices, sorted by device ID in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, powerRating * efficiency / 100 AS theoreticalMaxOutput FROM EnergyDevices WHERE deviceType = '太阳能' ORDER BY deviceId ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 73,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['past year', 'energy consumption data', 'devices'], 'relations': ['device_to_consumption (deviceId in EnergyConsumption → EnergyDevices)', 'time_period_filter (timestamp ≥ current_date - 1 year)'], 'intent': 'calculate_total_energy_consumption_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1], 'units': {'time': 'year', 'energy_consumption': 'kWh (as per EnergyConsumption.energyConsumed unit)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of all devices over the past year, sorted in descending order by energy consumption value, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, SUM(energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption WHERE timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY deviceId ORDER BY totalEnergyConsumed DESC LIMIT 5",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 74,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyDevices', 'MaintenanceRecords'], 'relations': ['device_to_maintenance (EnergyDevices.deviceId → MaintenanceRecords.deviceId)'], 'intent': 'find_highest_maintenance_frequency_and_sort_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'maintenance_count': 'occurrences (count of maintenance records)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'maintenanceId'}]}}\nA common sense reasoning question is as follows:\nFind the device with the highest maintenance frequency among all devices, and sort them in descending order by the number of maintenance occurrences.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, COUNT(maintenanceId) AS maintenanceCount FROM MaintenanceRecords GROUP BY deviceId ORDER BY maintenanceCount DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 75,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current device efficiency', 'hypothetical 100% efficiency', 'one year time frame'], 'relations': ['device_to_efficiency (deviceId → EnergyDevices.efficiency)', 'efficiency_improvement (current_efficiency → 100%)', 'annual_energy_consumption (timestamp → yearly aggregation)'], 'intent': 'calculate_energy_savings_with_perfect_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 1], 'units': {'efficiency': '% (percentage)', 'time': 'year', 'energy_savings': 'kWh (kilowatt-hour, derived from EnergyConsumption.energyConsumed)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the efficiency of all devices is increased to 100%, calculate the total energy savings these devices would achieve in one year, and sort them in descending order by the amount of energy saved.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, SUM(energySaved * (100 / efficiency)) AS totalEnergySaved FROM EnergyEfficiency WHERE efficiency < 100 GROUP BY deviceId ORDER BY totalEnergySaved DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 76,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar panel', 'solar radiation intensity 1000 watts per square meter', 'solar panel area 2 square meters', 'efficiency 20%'], 'relations': ['radiation_intensity_to_power (1000 W/m² → calculation)', 'area_to_power (2 m² → calculation)', 'efficiency_to_power (20% → calculation)'], 'intent': 'calculate_daily_power_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 2, 20], 'units': {'radiation_intensity': 'watts per square meter (W/m²)', 'area': 'square meters (m²)', 'efficiency': '% (converted to decimal for calculation)', 'daily_power': 'watt-hours (Wh) or kilowatt-hours (kWh)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the daily power generation of the solar panel at maximum efficiency, assuming a solar radiation intensity of 1000 watts per square meter, a solar panel area of 2 square meters, and an efficiency of 20%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1000 * 2 * 0.20 * 24) / 1000 AS daily_energy_output_kWh;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 77,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"wind turbine\", \"wind speed 12 m/s\", \"power coefficient 0.4\", \"air density 1.225 kg/m³\", \"blade radius 30 m\"],\n  \"relations\": [\"wind_speed_to_power (12 m/s → power output)\", \"coefficient_to_efficiency (0.4 → energy conversion efficiency)\", \"radius_to_swept_area (30 m → πr² calculation)\"],\n  \"intent\": \"calculate_output_power_of_wind_turbine\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [12, 0.4, 1.225, 30],\n  \"units\": {\n    \"wind_speed\": \"m/s (meters per second)\",\n    \"power_coefficient\": \"dimensionless (0.4)\",\n    \"air_density\": \"kg/m³ (kilograms per cubic meter)\",\n    \"radius\": \"m (meters)\",\n    \"power\": \"kW (requires calculation using P=0.5*ρ*π*r²*v³*Cp)\"\n  },\n  \"required_tables\": [\"EnergyDevices\"],\n  \"required_fields\": [\n    \"EnergyDevices.deviceType\", // To identify wind turbine type\n    \"EnergyDevices.powerRating\", // Base power rating if available\n    \"EnergyDevices.efficiency\" // General efficiency factor\n  ],\n  \"missing_parameters\": {\n    \"blade_radius\": \"Not present in current schema\",\n    \"power_coefficient\": \"Not present in current schema\",\n    \"air_density\": \"Environmental parameter not stored in EnergyDevices\",\n    \"wind_speed\": \"Operational parameter not stored in EnergyDevices\"\n  }\n}\nA mathematical logic question is as follows:\nCalculate the output power of the wind turbine at a wind speed of 12 meters per second, assuming a power coefficient of 0.4 for the wind turbine, an air density of 1.225 kilograms per cubic meter, and a blade radius of 30 meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * PI() * POWER(30, 2) * POWER(12, 3) * 0.4 / 1000 AS output_power_kw;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 78,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'blade_radius': 'Not present in current schema', 'power_coefficient': 'Not present in current schema', 'air_density': 'Environmental parameter not stored in EnergyDevices', 'wind_speed': 'Operational parameter not stored in EnergyDevices'}\nA common sense reasoning question is as follows:\nCalculate the total energy consumption of the equipment over a month based on its rated power and operating time, assuming the equipment runs for 8 hours per day, with an electricity price of 0.5 yuan per kilowatt-hour.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, powerRating * 8 * 30 AS totalEnergyConsumed, powerRating * 8 * 30 * 0.5 AS totalCost FROM EnergyDevices;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 79,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rated power', '8 hours per day', '0.5 yuan per kilowatt-hour', '1 month'], 'relations': ['rated_power_to_daily_consumption (rated power × 8 hours = daily kWh)', 'daily_to_monthly_consumption (daily kWh × 30 days = monthly kWh)'], 'intent': 'calculate_total_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 30], 'units': {'power': 'kW (kilowatts, inferred from kWh construction)', 'time': 'hours per day (h/day) and days per month (30 days)', 'energy': 'kWh (kilowatt-hour, calculated unit)', 'price': 'yuan/kWh (for potential cost conversion, not used here)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the blade radius of a wind turbine increases to 1000 meters with a wind speed of 50 meters per second, calculate its output power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * PI() * POWER(1000, 2) * POWER(50, 3) * 0.4 / 1000 AS output_power_kw;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 80,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind turbine blade radius 1000 meters', 'wind speed 50 meters per second'], 'relations': ['radius_to_swept_area (A=πr²)', 'power_coefficient (Cp≈0.59 for Betz limit)'], 'intent': 'calculate_wind_turbine_output_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 50], 'units': {'length': 'meters', 'speed': 'meters/second', 'power': 'watts (calculated using P=0.5*ρ*A*v³*Cp)', 'conversion': 'A=π*(1000)^2=3,141,593 m²; ρ=1.225 kg/m³ (standard air density)'}, 'missing_parameters': {'air_density': '1.225 kg/m³ (standard value not in database)', 'blade_radius': 'not stored in EnergyDevices', 'power_coefficient': 'not explicitly stored in tables'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'energySaved'}, {'column': 'costSavings'}]}}\nA physical knowledge question is as follows:\nCalculate the average efficiency of all devices produced by a certain manufacturer and identify the devices with efficiency below the average.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ManufacturerDevices AS (SELECT ed.deviceId, ed.efficiency FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = '某制造商名称'), AverageEfficiency AS (SELECT AVG(efficiency) AS avgEfficiency FROM ManufacturerDevices) SELECT md.deviceId, md.efficiency FROM ManufacturerDevices md, AverageEfficiency ae WHERE md.efficiency < ae.avgEfficiency;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 81,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'devices', 'efficiency'], 'relations': ['manufacturer_to_devices (manufacturerId → deviceId)', 'device_efficiency_comparison (efficiency < average_efficiency)'], 'intent': 'calculate_average_efficiency_and_identify_below_average_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'efficiency': 'unitless (assumed based on database schema, potentially percentage or ratio)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerId'}, {'column': 'manufacturerName'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}, {'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of all equipment produced by a certain manufacturer and identify the device with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ManufacturerDevices AS (SELECT ed.deviceId FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = '某制造商名称'), TotalEnergyConsumption AS (SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption ec WHERE ec.deviceId IN (SELECT deviceId FROM ManufacturerDevices) GROUP BY ec.deviceId) SELECT tec.deviceId, tec.totalEnergyConsumed FROM TotalEnergyConsumption tec ORDER BY tec.totalEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 82,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"manufacturer\", \"equipment\", \"energy consumption\"],\n  \"relations\": [\n    \"manufacturer_to_equipment (Manufacturers.manufacturerId → EnergyDevices.manufacturerId)\",\n    \"equipment_to_energy_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)\"\n  ],\n  \"intent\": \"calculate_total_energy_consumption_and_identify_highest_consumer\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"energy_consumption\": \"kWh (from EnergyConsumption.energyConsumed column)\",\n    \"aggregation\": \"summed total kWh per manufacturer, max individual kWh per device\"\n  },\n  \"required_tables\": [\n    \"Manufacturers\",\n    \"EnergyDevices\",\n    \"EnergyConsumption\"\n  ],\n  \"required_fields\": [\n    \"Manufacturers.manufacturerId\",\n    \"EnergyDevices.deviceId\",\n    \"EnergyDevices.manufacturerId\",\n    \"EnergyConsumption.deviceId\",\n    \"EnergyConsumption.energyConsumed\"\n  ]\n}\n```\nA common sense reasoning question is as follows:\nFind all equipment produced by a certain manufacturer where the maintenance cost is higher than the average maintenance cost.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ManufacturerDevices AS (SELECT ed.deviceId, ed.deviceName, ed.manufacturerId FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = '某制造商名称'), AverageMaintenanceCost AS (SELECT AVG(mr.cost) AS avgCost FROM MaintenanceRecords mr JOIN ManufacturerDevices md ON mr.deviceId = md.deviceId) SELECT md.deviceId, md.deviceName, mr.cost FROM MaintenanceRecords mr JOIN ManufacturerDevices md ON mr.deviceId = md.deviceId CROSS JOIN AverageMaintenanceCost amc WHERE mr.cost > amc.avgCost;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 83,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'equipment (EnergyDevices)', 'maintenance cost'], 'relations': ['manufacturer_to_equipment (Manufacturers.manufacturerId → EnergyDevices.manufacturerId)', 'equipment_to_maintenance (EnergyDevices.deviceId → MaintenanceRecords.deviceId)', 'cost_comparison (maintenance cost > average maintenance cost)'], 'intent': 'filter_equipment_with_above_average_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'monetary': 'currency units (e.g., USD)', 'average_calculation': 'AVG(MaintenanceRecords.cost)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerId'}, {'column': 'manufacturerName'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the rated power of all devices produced by a certain manufacturer has increased by 1000 times, calculate the total energy consumption of these devices and identify the device with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH IncreasedPower AS (SELECT deviceId, powerRating * 1000 AS increasedPowerRating FROM EnergyDevices WHERE manufacturerId = '1') SELECT ec.deviceId, SUM(ec.energyConsumed * ip.increasedPowerRating) AS totalEnergyConsumed FROM EnergyConsumption ec JOIN IncreasedPower ip ON ec.deviceId = ip.deviceId GROUP BY ec.deviceId ORDER BY totalEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 84,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'devices', 'rated power', 'energy consumption'], 'relations': ['manufacturer_to_devices (manufacturerId → deviceId)', 'rated_power_adjustment (×1000 factor)'], 'intent': 'calculate_total_energy_consumption_and_identify_highest_consumer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'power_rating': 'watts (W)', 'energy_consumption': 'watt-hours (Wh) or watt (assumed instantaneous power)', 'adjustment_factor': '1000× scaling of rated power'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}], 'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerId'}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a certain device during a specific time period and analyze its power usage.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed, SUM(ec.energyConsumed) / (MAX(ec.timestamp) - MIN(ec.timestamp)) AS averagePowerUsage FROM EnergyConsumption ec WHERE ec.deviceId = '特定设备的deviceId' AND ec.timestamp BETWEEN '开始时间' AND '结束时间' GROUP BY ec.deviceId;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 85,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyDevices', 'specific_time_period'], 'relations': ['device_to_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', \"time_period_filter (timestamp BETWEEN 'start_time' AND 'end_time')\"], 'intent': 'calculate_total_energy_consumption_and_analyze_power_usage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumed': 'kWh (kilowatt-hours)', 'power_usage': 'W (Watts)', 'timestamp': 'datetime (YYYY-MM-DD HH:MM:SS)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}, {'column': 'powerUsage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of all devices over one year, grouped by device type, and identify the device type with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceType, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId WHERE ec.timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ed.deviceType ORDER BY totalEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 86,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption', 'EnergyDevices', 'device type', 'one year', 'energy consumption'], 'relations': ['EnergyConsumption.deviceId → EnergyDevices.deviceId', 'EnergyDevices.deviceType → energy consumption aggregation'], 'intent': 'calculate_and_compare_energy_consumption_by_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [365], 'units': {'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed field)', 'timeframe': 'year (365 days)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA common sense reasoning question is as follows:\nAnalyze the differences in energy consumption of equipment under varying environmental humidity levels, and identify the patterns of humidity's impact on energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN humidity > 60 THEN '高湿度' ELSE '低湿度' END AS humidity_level, SUM(energyConsumed) AS total_energy_consumed FROM EnergyConsumption GROUP BY CASE WHEN humidity > 60 THEN '高湿度' ELSE '低湿度' END;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 87,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['environmental humidity', 'energy consumption', 'equipment'], 'relations': ['humidity_to_energy_correlation', 'equipment_to_environmental_factors'], 'intent': 'analyze_energy_consumption_patterns_related_to_humidity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['humidity_percentage_values', 'energy_consumption_values'], 'units': {'humidity': '% (relative humidity)', 'energy_consumption': 'kWh (kilowatt-hours)', 'power': 'W (watts)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'humidity'}, {'column': 'energyConsumed'}, {'column': 'deviceId'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power consumption of a certain device suddenly increases to 10 times its rated power, calculate its energy consumption under extreme conditions and analyze its impact on the environment.\nyour response just have a SQL without anything.\n",
        "solution": "WITH TimeDifferences AS ( SELECT deviceId, timestamp, powerUsage, TIMESTAMPDIFF(SECOND, timestamp, LEAD(timestamp) OVER (PARTITION BY deviceId ORDER BY timestamp)) AS timeDiff FROM EnergyConsumption ), ExtremeEnergyConsumption AS ( SELECT deviceId, SUM(powerUsage * 10 * (timeDiff / 3600)) AS extremeEnergyConsumed FROM TimeDifferences WHERE timeDiff IS NOT NULL GROUP BY deviceId ), EnvironmentalImpactAnalysis AS ( SELECT ei.deviceId, SUM(ei.carbonFootprint) AS totalCarbonFootprint FROM EnvironmentalImpact ei JOIN EnergyConsumption ec ON ei.deviceId = ec.deviceId GROUP BY ei.deviceId ) SELECT eec.deviceId, eec.extremeEnergyConsumed, eia.totalCarbonFootprint FROM ExtremeEnergyConsumption eec JOIN EnvironmentalImpactAnalysis eia ON eec.deviceId = eia.deviceId;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 88,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"device rated power\", \"10x power multiplier\", \"extreme power consumption\"],\n  \"relations\": [\n    \"device_to_power (energy_devices.deviceId → powerRating)\",\n    \"multiplier_applied_to_power (powerRating × 10 → extremePower)\",\n    \"energy_consumption_to_environmental_impact (powerUsage → carbonFootprint)\"\n  ],\n  \"intent\": \"calculate_energy_consumption_under_extreme_conditions_and_analyze_environmental_impact\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [10],\n  \"units\": {\n    \"power\": \"kW (assumed unit from energy_devices.powerRating)\",\n    \"energy\": \"kWh (calculated as power × time)\",\n    \"carbon_footprint\": \"kgCO2/kWh (from environmental_impact.carbonFootprint)\"\n  },\n  \"required_tables\": [\"energy_devices\", \"energy_consumption\", \"environmental_impact\"],\n  \"required_fields\": [\n    \"energy_devices.deviceId\",\n    \"energy_devices.powerRating\",\n    \"energy_consumption.powerUsage\",  // Calculated as 10 x powerRating\n    \"energy_consumption.energyConsumed\",  // Calculated as (10 x powerRating) × time\n    \"environmental_impact.carbonFootprint\"  // Derived from energy consumption\n  ]\n}\nA physical knowledge question is as follows:\nCalculate the total carbon emissions of a specific device within a given time period, assuming the device's carbon footprint is proportional to its energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed, ei.carbonFootprint AS carbonFootprintCoefficient, SUM(ec.energyConsumed) * ei.carbonFootprint AS totalCarbonEmission FROM EnergyConsumption ec JOIN EnvironmentalImpact ei ON ec.deviceId = ei.deviceId WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' AND ec.deviceId = '特定设备的deviceId' GROUP BY ec.deviceId, ei.carbonFootprint;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 89,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific device', 'given time period'], 'relations': ['device_to_energy_consumption (specific device → EnergyConsumption records)', 'time_period_filter (timestamp ∈ given time period)', 'energy_to_carbon_conversion (carbon_emissions = energy_consumed × emission_factor)'], 'intent': 'calculate_total_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['start_time', 'end_time'], 'units': {'energy_consumed': 'kWh (assumed from typical energy consumption units)', 'carbon_emissions': 'kg CO₂ (assumed standard unit)', 'conversion_factor': 'kg CO₂/kWh (default 0.997 for grid electricity, if unspecified)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA mathematical logic question is as follows:\nCalculate the average efficiency of a device over the course of a year and analyze its correlation with the device type.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEfficiency AS ( SELECT ed.deviceId, ed.deviceType, AVG(ee.efficiency) AS avgEfficiency FROM EnergyDevices ed JOIN EnergyEfficiency ee ON ed.deviceId = ee.deviceId WHERE ee.timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY ed.deviceId, ed.deviceType ) SELECT deviceType, AVG(avgEfficiency) AS avgEfficiencyByType FROM DeviceEfficiency GROUP BY deviceType;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 90,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'device type', 'average efficiency', 'correlation'], 'relations': ['device_to_efficiency (deviceId → EnergyEfficiency.efficiency)', 'device_to_type (deviceId → EnergyDevices.deviceType)', 'time_range (annual period)'], 'intent': 'analyze_correlation_between_average_efficiency_and_device_type', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1], 'units': {'efficiency': 'dimensionless (unitless)', 'time': 'year', 'correlation': 'Pearson correlation coefficient (implied)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'efficiency'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA common sense reasoning question is as follows:\nAnalyze the energy consumption changes of a certain device under different environmental humidity levels to infer the impact of humidity on energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.deviceId, AVG(CASE WHEN ec.humidity > 70 THEN ec.energyConsumed END) AS high_humidity_energy, AVG(CASE WHEN ec.humidity < 30 THEN ec.energyConsumed END) AS low_humidity_energy, (AVG(CASE WHEN ec.humidity > 70 THEN ec.energyConsumed END) - AVG(CASE WHEN ec.humidity < 30 THEN ec.energyConsumed END)) AS energy_change FROM EnergyConsumption ec WHERE ec.deviceId = '指定设备ID' GROUP BY ec.deviceId;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 91,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['environmental humidity levels', 'energy consumption', 'specific device'], 'relations': ['humidity_to_energy_consumption (humidity → energyConsumed)', 'device_to_humidity_data (deviceId → humidity measurements)'], 'intent': 'analyze_impact_of_humidity_on_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'humidity': '% (relative humidity)', 'energy_consumption': 'kWh (via energyConsumed column)', 'conversion': 'energy consumption per humidity percentage interval'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'humidity'}, {'column': 'energyConsumed'}, {'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the carbon footprint coefficient of a certain device suddenly increases to 100 times its normal value, calculate its total carbon emissions within a year and analyze its environmental impact.\nyour response just have a SQL without anything.\n",
        "solution": "WITH AnnualEnergyConsumption AS (SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption ec WHERE ec.timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY ec.deviceId), CarbonFootprintAnalysis AS (SELECT aec.deviceId, aec.totalEnergyConsumed, aec.totalEnergyConsumed * (ei.carbonFootprint * 100) AS totalCarbonEmission, ei.pollutionLevel, ei.waterUsage, ei.landUsage FROM AnnualEnergyConsumption aec JOIN EnvironmentalImpact ei ON aec.deviceId = ei.deviceId WHERE ei.timestamp = (SELECT MAX(timestamp) FROM EnvironmentalImpact WHERE deviceId = aec.deviceId)) SELECT cfa.deviceId, cfa.totalEnergyConsumed, cfa.totalCarbonEmission, cfa.pollutionLevel, cfa.waterUsage, cfa.landUsage, CASE WHEN cfa.totalCarbonEmission > (SELECT AVG(totalCarbonEmission) FROM CarbonFootprintAnalysis) THEN 'High Impact' ELSE 'Normal Impact' END AS environmentalImpact FROM CarbonFootprintAnalysis cfa;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 92,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'normal carbon footprint coefficient', '100x increased coefficient', 'annual time frame'], 'relations': ['device_to_carbon_footprint (device → EnvironmentalImpact.carbonFootprint)', 'coefficient_multiplier (normal → 100x increased)', 'annual_energy_usage (timestamp → 1 year period)'], 'intent': 'calculate_total_carbon_emissions_under_increased_coefficient_and_analyze_environmental_impact', 'reasoning_type': 'mathematical_logic_reasoning', 'numerical_values': [100, 1], 'units': {'carbon_footprint': 'kgCO2e/kWh (assumed unit from EnvironmentalImpact.carbonFootprint)', 'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed)', 'time': 'year (12-month period)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyPolicies', 'pk_column': 'policyId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnvironmentalImpact': [{'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}], 'EnergyManagementDB.EnergyPolicies': [{'column': 'targetCarbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '100.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a specific device over a given time period, and analyze its efficiency changes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed, (SELECT efficiency FROM EnergyEfficiency WHERE deviceId = ec.deviceId AND timestamp = '2023-12-31 23:59:59') - (SELECT efficiency FROM EnergyEfficiency WHERE deviceId = ec.deviceId AND timestamp = '2023-01-01 00:00:00') AS efficiencyChange FROM EnergyConsumption ec WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ec.deviceId;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 93,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific device', 'given time period'], 'relations': ['device_to_energy_consumption (deviceId → EnergyConsumption)', 'device_to_efficiency (deviceId → EnergyEfficiency)', 'time_range_filter (timestamp ∈ [start_time, end_time])'], 'intent': 'calculate_total_energy_consumption_and_analyze_efficiency_changes', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': ['energyConsumed', 'efficiency', 'timestamp'], 'units': {'energy_consumption': 'kWh (kilowatt-hour)', 'efficiency': '% (percentage)', 'time': 'datetime (YYYY-MM-DD HH:MM:SS)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}, {'column': 'powerUsage'}, {'column': 'dataQuality'}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'timestamp'}, {'column': 'efficiency'}, {'column': 'energySaved'}, {'column': 'dataQuality'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy savings and total cost savings for all devices over a one-year period, grouped by device type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energySaved) AS totalEnergySaved, SUM(costSavings) AS totalCostSavings FROM EnergyEfficiency JOIN EnergyDevices ON EnergyEfficiency.deviceId = EnergyDevices.deviceId WHERE timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY deviceType;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 94,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Energy savings', 'Cost savings', 'Device type'], 'relations': ['EnergyEfficiency.deviceId → EnergyDevices.deviceId', 'EnergyDevices.deviceType → Grouping key'], 'intent': 'Calculate total energy and cost savings grouped by device type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_saved': \"kWh (inferred from column name 'energySaved')\", 'cost_savings': \"USD (inferred from column name 'costSavings')\"}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'energySaved'}, {'column': 'costSavings'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA common sense reasoning question is as follows:\nAnalyze the relationship between equipment maintenance frequency and equipment efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT MR.deviceId, COUNT(MR.maintenanceDate) AS maintenanceFrequency, AVG(EE.efficiency) AS averageEfficiency FROM MaintenanceRecords MR JOIN EnergyEfficiency EE ON MR.deviceId = EE.deviceId GROUP BY MR.deviceId ORDER BY maintenanceFrequency, averageEfficiency;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 95,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment maintenance frequency', 'equipment efficiency'], 'relations': ['maintenance_frequency_to_efficiency_correlation'], 'intent': 'analyze_statistical_relationship', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'maintenance_frequency': 'times per unit time (calculated from MaintenanceRecords.maintenanceDate)', 'efficiency': 'percentage or unit from EnergyEfficiency.efficiency'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'maintenanceDate'}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'efficiency'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the efficiency of a certain device improves to 1000%, calculate its energy savings and cost savings within a year, and analyze its environmental impact.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, ed.deviceType, (ee.energySaved * 10) AS annualEnergySaved, (ee.costSavings * 10) AS annualCostSavings, env.carbonFootprint, env.pollutionLevel FROM EnergyDevices ed JOIN EnergyEfficiency ee ON ed.deviceId = ee.deviceId JOIN EnvironmentalImpact env ON ed.deviceId = env.deviceId WHERE ed.deviceId = 123;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 96,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'efficiency (1000%)', 'time frame (year)', 'energy consumption', 'carbon footprint'], 'relations': ['device_to_efficiency (device → efficiency)', 'efficiency_impact (1000% efficiency → energy savings)', 'cost_impact (energy savings → cost savings)', 'environmental_impact (device → carbon footprint)'], 'intent': 'calculate_energy_and_cost_savings_with_environmental_analysis', 'reasoning_type': 'physical knowledge reasoning and mathematical logic reasoning', 'numerical_values': [1000, 1], 'units': {'efficiency': '% (percentage)', 'energy_savings': 'kWh/year (kilowatt-hours per year)', 'cost_savings': '$/year (currency per year)', 'carbon_footprint': 'kgCO₂/year (kilograms of CO₂ equivalent per year)', 'conversion': '1000% efficiency = 10x baseline efficiency'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'Hypotheses', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}, {'pk_table': 'Hypotheses', 'pk_column': 'hypothesisId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'efficiency'}, {'column': 'energySaved'}, {'column': 'costSavings'}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}], 'EnergyManagementDB.EnvironmentalImpact': [{'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}, {'column': 'pollutionLevel', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '50.0', '60.0', '55.0', '10.0']}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.Hypotheses': [{'column': 'hypothesisText'}, {'column': 'verificationResult'}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a specific device during a given time period and analyze its efficiency changes.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEnergy AS (SELECT ec.deviceId, SUM(ec.energyConsumed) AS totalEnergyConsumed, MIN(ee.efficiency) AS efficiency_start, MAX(ee.efficiency) AS efficiency_end FROM EnergyConsumption ec JOIN EnergyEfficiency ee ON ec.deviceId = ee.deviceId WHERE ec.timestamp BETWEEN '2023-01-01' AND '2023-12-31' AND ee.timestamp BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ec.deviceId) SELECT de.deviceId, de.totalEnergyConsumed, (de.efficiency_end - de.efficiency_start) / de.efficiency_start * 100 AS efficiency_change_percentage FROM DeviceEnergy de;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 97,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific_device', 'given_time_period'], 'relations': ['device_to_consumption (specific_device → EnergyConsumption)', 'device_to_efficiency (specific_device → EnergyEfficiency)'], 'intent': 'calculate_total_energy_consumption_and_analyze_efficiency_changes', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['start_time', 'end_time'], 'units': {'time': 'timestamp format (YYYY-MM-DD HH:MM:SS)', 'energy_consumption': 'energyConsumed unit (implied by EnergyConsumption.energyConsumed column)', 'efficiency': 'efficiency unit (implied by EnergyEfficiency.efficiency column)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'efficiency'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA mathematical logic question is as follows:\nCalculate the average maintenance cost for all equipment from a specific manufacturer and analyze its relationship with the equipment type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceType, AVG(mr.cost) AS avgMaintenanceCost FROM MaintenanceRecords mr JOIN EnergyDevices ed ON mr.deviceId = ed.deviceId JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = '某制造商名称' GROUP BY ed.deviceType;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 98,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific manufacturer', 'equipment type', 'maintenance cost'], 'relations': ['manufacturer_to_equipment (Manufacturers.manufacturerId → EnergyDevices.manufacturerId)', 'equipment_to_maintenance (EnergyDevices.deviceId → MaintenanceRecords.deviceId)', 'equipment_type_to_cost (EnergyDevices.deviceType → MaintenanceRecords.cost)'], 'intent': 'calculate_average_maintenance_cost_and_analyze_equipment_type_relationship', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['average_maintenance_cost'], 'units': {'cost': \"USD (currency unit implied by 'cost' field)\", 'aggregation': 'average (statistical calculation)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'cost'}]}}\nA common sense reasoning question is as follows:\nAnalyze the energy consumption changes of a particular device under different environmental humidity levels and provide energy-saving recommendations.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT humidity_range, AVG(energyConsumed) AS avg_energy_consumed FROM (SELECT CASE WHEN humidity BETWEEN 0 AND 30 THEN '0-30%' WHEN humidity BETWEEN 31 AND 60 THEN '31-60%' WHEN humidity BETWEEN 61 AND 90 THEN '61-90%' ELSE '91-100%' END AS humidity_range, energyConsumed FROM EnergyConsumption WHERE deviceId = '指定设备ID') AS subquery GROUP BY humidity_range ORDER BY humidity_range;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 99,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific device', 'environmental humidity levels', 'energy consumption', 'energy-saving recommendations'], 'relations': ['device_to_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'humidity_to_energy (EnergyConsumption.humidity → EnergyConsumption.energyConsumed)', 'device_to_efficiency (EnergyDevices.deviceId → EnergyEfficiency.deviceId)'], 'intent': 'analyze_correlation_and_recommend', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['humidity_percentage', 'energy_consumption_kWh'], 'units': {'humidity': '% relative humidity (RH)', 'energy': 'kWh (kilowatt-hours)', 'power': 'Watts (W)', 'conversion': 'humidty-energy correlation coefficient (calculated)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'humidity'}, {'column': 'energyConsumed'}, {'column': 'powerUsage'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['运行中', '维修中']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'energySaved'}, {'column': 'efficiency'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power of a certain device is increased to 1,000,000 kilowatts, calculate its total energy consumption within one year and analyze its environmental impact.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DevicePower AS (SELECT 1000000 AS powerRating), TotalEnergyConsumed AS (SELECT powerRating * 24 * 365 AS totalEnergyConsumed FROM DevicePower), EnvironmentalImpact AS (SELECT totalEnergyConsumed * (SELECT AVG(carbonFootprint) FROM EnvironmentalImpact WHERE deviceId = (SELECT deviceId FROM EnergyDevices WHERE powerRating = 1000000)) AS carbonFootprint FROM TotalEnergyConsumed) SELECT totalEnergyConsumed, carbonFootprint FROM TotalEnergyConsumed, EnvironmentalImpact;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 100,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device with power 1,000,000 kW', '1-year time frame', 'environmental impact metrics'], 'relations': ['device_to_energy_consumption (deviceId → EnergyConsumption)', 'energy_to_environmental_impact (energyConsumed → EnvironmentalImpact)'], 'intent': 'calculate_annual_energy_consumption_and_analyze_environmental_impact', 'reasoning_type': ['mathematical logic reasoning (energy calculation)', 'physical knowledge reasoning (environmental impact analysis)'], 'numerical_values': [1000000, 1, 8760], 'units': {'power': 'kW (kilowatts)', 'time': 'year → hours conversion (1 year = 8,760 hours)', 'energy': 'kWh (kilowatt-hours) = power(kW) × time(hours)', 'environmental_impact': 'carbonFootprint (kgCO₂/kWh), pollutionLevel (scale)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'powerUsage'}], 'EnergyManagementDB.EnvironmentalImpact': [{'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}, {'column': 'pollutionLevel', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '50.0', '60.0', '55.0', '10.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total power generation of a certain solar panel over a specific time period, assuming the solar radiation intensity is 800W/m², the area of the solar panel is 2m², and the efficiency is 20%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (800 * 2 * 0.20 * (TIMESTAMPDIFF(HOUR, '2023-10-01 00:00:00', '2023-10-01 12:00:00'))) / 1000 AS total_energy_output FROM EnergyDevices WHERE deviceType = '太阳能';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 101,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar radiation intensity 800W/m²', 'solar panel area 2m²', 'efficiency 20%'], 'relations': ['radiation_to_area (800W/m² × 2m² = 1600W)', 'efficiency_application (1600W × 20% = 320W)'], 'intent': 'calculate_power_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [800, 2, 20], 'units': {'solar_radiation': 'W/m² (Watts per square meter)', 'area': 'm² (square meters)', 'efficiency': '% (percentage)', 'power': 'W (Watts, derived from calculation)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total annual electricity generation of a wind turbine, assuming a wind speed of 10 m/s, air density of 1.225 kg/m³, a turbine blade radius of 30 m, and an efficiency of 40%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * PI() * POWER(30, 2) * POWER(10, 3) * 0.40 * 8760 / 1000 AS total_energy_output_kWh;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 102,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind turbine', 'wind speed 10 m/s', 'air density 1.225 kg/m³', 'turbine blade radius 30 m', 'efficiency 40%'], 'relations': ['turbine_to_hypothesis (wind turbine → Hypotheses.hypothesisId)', 'hypothesis_parameters (wind speed, air density, blade radius, efficiency)'], 'intent': 'calculate_annual_electricity_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 1.225, 30, 40], 'units': {'wind_speed': 'm/s', 'air_density': 'kg/m³', 'radius': 'm', 'efficiency': '%', 'energy': 'kWh/year (calculated)', 'conversion': 'P = 0.5 * ρ * A * v³ * η, E = P * 8760 hours'}, 'foreign_keys': [{'fk_table': 'Hypotheses', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Hypotheses', 'pk_column': 'hypothesisId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId (to identify turbine)'}, {'column': 'efficiency (for η parameter)'}], 'EnergyManagementDB.Hypotheses': [{'column': 'hypothesisText (to describe calculation parameters)'}]}}\nA common sense reasoning question is as follows:\nCalculate the total carbon emissions of a fossil fuel generator over a year, assuming the carbon emission per kilowatt-hour of electricity generated is 0.5 kg CO2, with an annual generation of 100,000 kilowatt-hours.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 100000 AS total_carbon_footprint;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 103,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fossil fuel generator', 'carbon emission 0.5 kg CO2/kWh', 'annual generation 100,000 kWh'], 'relations': ['generator_to_emission_factor (fossil fuel generator → carbon emission rate)', 'emission_calculation (total = 100,000 kWh × 0.5 kg CO2/kWh)'], 'intent': 'calculate_total_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5, 100000], 'units': {'carbon_emission': 'kg CO2 per kWh', 'energy_generation': 'kWh', 'total_emission_unit': 'kg CO2'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnvironmentalImpact': [{'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the area of a solar panel is expanded to 1,000 m², its efficiency is increased to 100%, and the solar radiation intensity rises to 2,000 W/m², calculate its total electricity generation in one day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (2000 * 1000 * 1 * 24) / 1000 AS total_energy_output_kWh;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 104,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar panel', 'area 1,000 m²', 'efficiency 100%', 'solar radiation intensity 2,000 W/m²', 'one day'], 'relations': ['area_to_radiation (1,000 m² × 2,000 W/m² → 2,000,000 W)', 'efficiency_to_power (2,000,000 W × 100% → 2,000,000 W)', 'power_to_energy (2,000,000 W × 24 hours → 48,000 kWh)'], 'intent': 'calculate_total_electricity_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 100, 2000, 1, 24], 'units': {'area': 'm² (square meters)', 'efficiency': '% (percentage)', 'radiation_intensity': 'W/m² (watts per square meter)', 'time': 'hours (24 hours/day)', 'electricity_generation': 'kWh (kilowatt-hours)'}, 'foreign_keys': [{'fk_table': 'Hypotheses', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Hypotheses', 'pk_column': 'hypothesisId'}], 'tableinfo': {'EnergyManagementDB.Hypotheses': [{'column': 'hypothesisText'}, {'column': 'verificationResult'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total electricity generation of a solar panel over a specific time period, assuming the solar radiation intensity is 1000 W/m², the solar panel area is 2 m², and the efficiency is 20%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM((1000 * 2 * 20 * TIMESTAMPDIFF(HOUR, '2023-10-01 00:00:00', '2023-10-31 23:59:59')) / 1000) AS total_energy_generated FROM EnergyConsumption WHERE deviceId = (SELECT deviceId FROM EnergyDevices WHERE deviceName = '太阳能板') AND timestamp BETWEEN '2023-10-01 00:00:00' AND '2023-10-31 23:59:59';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 105,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar panel', 'solar radiation intensity 1000 W/m²', 'solar panel area 2 m²', 'efficiency 20%'], 'relations': ['device_type_to_efficiency (solar_panel → efficiency=20%)', 'radiation_to_power (1000 W/m² * 2 m² * 0.2 = 400 W)'], 'intent': 'calculate_electricity_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 2, 20], 'units': {'radiation_intensity': 'W/m² (watts per square meter)', 'area': 'm² (square meters)', 'efficiency': '% (percentage, 20% → 0.2 in decimal)', 'power': 'W (watts, calculated)', 'energy': 'Wh or kWh (dependent on time parameter, not explicitly provided)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total annual power generation of a wind turbine, assuming a wind speed of 10 m/s, a rotor diameter of 80 m, an air density of 1.225 kg/m³, and an efficiency of 40%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * PI() * POWER(80 / 2, 2) * POWER(10, 3) * 0.40 * 8760 / 1000 AS total_energy_output;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 106,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind turbine', 'wind speed 10 m/s', 'rotor diameter 80 m', 'air density 1.225 kg/m³', 'efficiency 40%'], 'relations': ['turbine_to_wind_speed (10 m/s)', 'turbine_to_rotor_diameter (80 m)', 'turbine_to_air_density (1.225 kg/m³)', 'turbine_to_efficiency (40%)'], 'intent': 'calculate_annual_power_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 80, 1.225, 40], 'units': {'wind_speed': 'm/s (meters per second)', 'rotor_diameter': 'm (meters)', 'air_density': 'kg/m³ (kilograms per cubic meter)', 'efficiency': '% (percentage)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA common sense reasoning question is as follows:\nCalculate the total energy consumption of a certain device within one year based on its rated power and operating time, assuming the device operates for 8 hours per day with a rated power of 50kW.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT powerRating * 8 * 365 AS totalEnergyConsumption FROM EnergyDevices WHERE deviceId = '特定设备的ID';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 107,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rated power 50kW', 'operating time 8 hours/day', 'one year'], 'relations': ['power_to_energy (50kW × hours → energy consumption)', 'daily_to_annual (8 hours/day × 365 days)'], 'intent': 'calculate_annual_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 8, 1], 'units': {'power': 'kW (kilowatts)', 'time': 'hours/day and years', 'energy': 'kWh (kilowatt-hours)', 'conversion': '1 year = 365 days, daily energy = 50kW × 8h = 400kWh, annual energy = 400kWh/day × 365 = 146,000kWh'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a certain device has a rated power of 1000 kW and an efficiency of 200%, calculate its total power generation over a year, assuming the device operates 24 hours a day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (powerRating * efficiency * 24 * 365 / 100) AS totalEnergyOutput FROM EnergyDevices WHERE deviceId = '6';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 108,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['rated power 1000 kW', 'efficiency 200%', '24 hours/day', '1 year'], 'relations': ['power_efficiency_relation (1000 kW * 200% = 2000 kW output)', 'time_duration_relation (24 hours/day * 365 days/year = 8760 hours)', 'power_generation_relation (2000 kW * 8760 hours = 17,520,000 kWh)'], 'intent': 'calculate_annual_power_generation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 200, 24, 365], 'units': {'power': 'kW (kilowatts)', 'efficiency': '% (percentage conversion → 2.0 multiplier)', 'time': 'hours (8760 hours/year)', 'energy': 'kWh (kilowatt-hours) = kW * hours'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total power generation of a solar panel during a specific time period, assuming constant solar radiation intensity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM((ed.powerRating * ed.efficiency * 1000 * TIMESTAMPDIFF(HOUR, ec.timestamp, ec_end.timestamp)) / 1000) AS totalEnergyGenerated FROM EnergyDevices ed JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId JOIN EnergyConsumption ec_end ON ec.deviceId = ec_end.deviceId WHERE ed.deviceType = '太阳能' AND ec.timestamp >= '2023-01-01 00:00:00' AND ec_end.timestamp <= '2023-01-31 23:59:59' GROUP BY ed.deviceId;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 109,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar panel', 'time period (start timestamp and end timestamp)'], 'relations': ['device_to_power_rating (solar_panel → powerRating)', 'time_period_duration (Δt = end_timestamp - start_timestamp)'], 'intent': 'calculate_total_power_generation', 'reasoning_type': 'mathematical_logic_reasoning', 'numerical_values': ['start_timestamp', 'end_timestamp'], 'units': {'power': 'kW (kilowatts)', 'time': 'hours', 'energy': 'kWh (kilowatt-hours)', 'conversion': '1 kW × 1 hour = 1 kWh'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'timestamp'}]}}\nA mathematical logic question is as follows:\nCalculate the total power generation of a wind turbine over a year, assuming the wind speed distribution follows a Weibull distribution.\nyour response just have a SQL without anything.\n",
        "solution": "WITH PowerData AS (SELECT deviceId, timestamp, powerUsage FROM EnergyConsumption WHERE deviceId = '指定风力发电机的deviceId' AND timestamp >= '2022-01-01' AND timestamp < '2023-01-01'), EnergyCalculation AS (SELECT deviceId, SUM(powerUsage * 1) AS totalEnergyGenerated FROM PowerData GROUP BY deviceId) SELECT deviceId, totalEnergyGenerated FROM EnergyCalculation;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 110,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind turbine', 'Weibull distribution'], 'relations': ['turbine_to_power_spec (wind turbine → powerRating)', 'wind_speed_distribution (Weibull distribution → shape/scale parameters)'], 'intent': 'calculate_annual_power_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'wind_speed': 'm/s (assumed standard unit)', 'power': 'W (watts)', 'time': 'hours (annual period)', 'energy': 'kWh (derived unit)'}, 'foreign_keys': [{'fk_table': 'Hypotheses', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Hypotheses', 'pk_column': 'hypothesisId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.Hypotheses': [{'column': 'hypothesisText (containing Weibull parameters)'}, {'column': 'verificationResult'}]}}\nA common sense reasoning question is as follows:\nDetermine whether a certain device requires an increased maintenance frequency in high-temperature environments.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, ed.deviceType, ed.nextMaintenanceDate, ec.temperature, CASE WHEN ec.temperature > 30 THEN '需要增加维护频率' ELSE '无需增加维护频率' END AS maintenanceFrequencyRecommendation FROM EnergyDevices ed JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId WHERE ec.timestamp = (SELECT MAX(timestamp) FROM EnergyConsumption WHERE deviceId = ed.deviceId);",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 111,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'high-temperature environments'], 'relations': ['temperature_to_maintenance_correlation (temperature → maintenance frequency)'], 'intent': 'assess_maintenance_frequency_in_high_temperature', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius, from EnergyConsumption.temperature)', 'maintenance_frequency': 'days_between_maintenance (derived from MaintenanceRecords.maintenanceDate)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'temperature'}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'maintenanceDate'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power of a certain device is increased to 10 million kilowatts, calculate its total energy consumption within one year and determine whether it is necessary to increase the grid capacity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 10000000 AS power_kw, 10000000 * 24 * 365 AS total_energy_consumption_kwh FROM dual;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 112,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'power 10 million kilowatts', 'one year'], 'relations': ['power_to_energy_conversion (P × t = E)', 'energy_to_grid_capacity_comparison'], 'intent': 'calculate_annual_energy_consumption_and_assess_grid_capacity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000000, 1], 'units': {'power': 'kW (kilowatts)', 'energy': 'kWh (kilowatt-hours)', 'time': 'year → 8760 hours conversion', 'conversion': '1 year = 8760 hours'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'Hypotheses', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Hypotheses', 'pk_column': 'hypothesisId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['运行中', '维修中']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'powerUsage'}], 'EnergyManagementDB.Hypotheses': [{'column': 'hypothesisText'}, {'column': 'verificationResult'}]}}\nA physical knowledge question is as follows:\nCalculate the total power generation of a solar panel during a specific time period, assuming its efficiency is 20%, rated power is 5 kilowatts, and the solar radiation intensity remains constant at 800 watts per square meter during that time period.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (efficiency * powerRating * 800 * TIMESTAMPDIFF(HOUR, '2023-01-01 00:00:00', '2023-01-01 12:00:00')) / 1000 AS totalEnergyGenerated FROM EnergyDevices WHERE deviceName = '太阳能板';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 113,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar panel', 'efficiency 20%', 'rated power 5 kilowatts', 'solar radiation intensity 800 watts per square meter'], 'relations': ['solar_panel_to_specs (solar panel → powerRating, efficiency)', 'solar_radiation_to_power_generation (800 W/m² → power output)'], 'intent': 'calculate_total_power_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [20, 5, 800], 'units': {'efficiency': '% (percentage)', 'rated_power': 'kW (kilowatts)', 'solar_radiation': 'W/m² (watts per square meter)', 'conversion': 'Standard solar irradiance = 1000 W/m² (implied by physical knowledge)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA mathematical logic question is as follows:\nCalculate the annual total power generation of a wind turbine, assuming its rated power is 2 megawatts, efficiency is 35%, and the wind speed follows a Weibull distribution for the year with shape parameter k=2 and scale parameter c=8 m/s.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceInfo AS (SELECT deviceId, powerRating, efficiency FROM EnergyDevices WHERE deviceType = '风能' AND deviceName = '特定风力发电机名称'), EnergyData AS (SELECT deviceId, SUM(energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption WHERE deviceId = (SELECT deviceId FROM DeviceInfo) AND timestamp >= DATE_SUB(NOW(), INTERVAL 1 YEAR) GROUP BY deviceId) SELECT d.deviceId, d.powerRating * d.efficiency / 100 * 8760 AS estimatedTotalEnergyOutput FROM DeviceInfo d;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 114,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"wind turbine\", \"rated power 2 MW\", \"efficiency 35%\", \"Weibull distribution k=2\", \"Weibull distribution c=8 m/s\"],\n  \"relations\": [\"device_to_power_rating (wind turbine → 2 MW)\", \"device_to_efficiency (wind turbine → 35%)\", \"wind_profile_to_distribution (Weibull parameters k=2, c=8 m/s)\"],\n  \"intent\": \"calculate_annual_power_generation\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [2, 35, 2, 8],\n  \"units\": {\n    \"power\": \"MW (megawatts)\",\n    \"efficiency\": \"% (percentage)\",\n    \"wind_speed\": \"m/s (meters per second)\",\n    \"time\": \"year (annual period)\",\n    \"conversion\": \"Weibull PDF integration for energy calculation\"\n  },\n  \"required_tables\": [\"EnergyDevices\"],\n  \"required_fields\": [\n    \"EnergyDevices.powerRating\",\n    \"EnergyDevices.efficiency\"\n  ]\n}\n\nKey considerations:\n- The calculation requires wind turbine power curve modeling (Weibull distribution) not directly supported by database fields\n- The EnergyDevices table contains basic device parameters (powerRating, efficiency) but not wind distribution data\n- The Weibull parameters would need external implementation for the probability density function calculation\n- Actual energy production calculation would follow the formula: \n  Annual Energy = Rated Power × Efficiency × ∫(Weibull PDF) × Time Hours\nA common sense reasoning question is as follows:\nBased on the equipment's maintenance records, estimate the possible number of maintenance interventions the equipment may require within the next year, assuming the average maintenance interval is 6 months and each maintenance costs 5000 yuan.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, 12 / 6 AS maintenanceCount, 12 / 6 * 5000 AS estimatedMaintenanceCost FROM EnergyDevices;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 115,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment maintenance records', 'average maintenance interval 6 months'], 'relations': ['maintenance_interval_to_annual_count (6 months → 2 interventions/year)'], 'intent': 'estimate_maintenance_interventions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [6], 'units': {'interval': 'months', 'annual_period': 'year', 'conversion': '12 months/year ÷ 6 months = 2 interventions/year'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'maintenanceDate'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'nextMaintenanceDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-12-15 14:00:00']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a certain device has a rated power of 1000 kilowatts, an efficiency of 100%, and without considering any energy losses, calculate the maximum electricity generation it can produce when operating continuously for one year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT powerRating * 24 * 365 AS maxEnergyOutput FROM EnergyDevices WHERE deviceId = '特定设备ID';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 116,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device rated power 1000 kW', 'efficiency 100%', 'one year'], 'relations': ['device_to_power_rating (1000 kW)', 'device_to_efficiency (100%)', 'time_period_to_hours (8760 hours)'], 'intent': 'calculate_max_electricity_generation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100, 1], 'units': {'power': 'kW (kilowatts)', 'time': 'year → 8760 hours (1 year = 365 days × 24 hours/day)', 'energy': 'kWh (kiloWatt-hour) = power(kW) × time(h)', 'conversion': '1 year = 8760 hours'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the theoretical maximum power generation capacity for all solar energy equipment, and sort the results in ascending order by equipment name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, powerRating * efficiency AS theoreticalMaxOutput FROM EnergyDevices WHERE deviceType = '太阳能' ORDER BY deviceName ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 117,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"solar energy equipment\", \"theoretical maximum power generation capacity\"],\n  \"relations\": [\"equipment_to_power_capacity (device → powerRating)\", \"equipment_type_filter (deviceType = 'solar')\"],\n  \"intent\": \"calculate_and_sort_max_power_capacity_for_solar_devices\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"power\": \"kW (kilowatts) or W (watts) - determined by EnergyDevices.powerRating unit\",\n    \"sorting\": \"alphabetical order for equipment names\"\n  },\n  \"required_tables\": [\"EnergyDevices\"],\n  \"required_fields\": [\n    \"EnergyDevices.deviceName\",\n    \"EnergyDevices.deviceType\",\n    \"EnergyDevices.powerRating\"\n  ],\n  \"filters\": {\n    \"deviceType\": \"solar\"  // Assuming deviceType field contains 'solar' for solar equipment\n  },\n  \"sort_order\": {\n    \"field\": \"EnergyDevices.deviceName\",\n    \"direction\": \"ASC\"\n  }\n}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of all wind power equipment in the past year, ranked in descending order by energy consumption value, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyDevices ed JOIN EnergyConsumption ec ON ed.deviceId = ec.deviceId WHERE ed.deviceType = '风能' AND ec.timestamp BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY ed.deviceId, ed.deviceName ORDER BY totalEnergyConsumed DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 118,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"solar energy equipment\", \"theoretical maximum power generation capacity\"],\n  \"relations\": [\"equipment_to_power_capacity (device → powerRating)\", \"equipment_type_filter (deviceType = 'solar')\"],\n  \"intent\": \"calculate_and_sort_max_power_capacity_for_solar_devices\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"power\": \"kW (kilowatts) or W (watts) - determined by EnergyDevices.powerRating unit\",\n    \"sorting\": \"alphabetical order for equipment names\"\n  },\n  \"required_tables\": [\"EnergyDevices\"],\n  \"required_fields\": [\n    \"EnergyDevices.deviceName\",\n    \"EnergyDevices.deviceType\",\n    \"EnergyDevices.powerRating\"\n  ],\n  \"filters\": {\n    \"deviceType\": \"solar\"  // Assuming deviceType field contains 'solar' for solar equipment\n  },\n  \"sort_order\": {\n    \"field\": \"EnergyDevices.deviceName\",\n    \"direction\": \"ASC\"\n  }\n}\nA common sense reasoning question is as follows:\nFind all equipment that requires maintenance in 2023, and group them by equipment status.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT status, COUNT(*) AS device_count FROM EnergyDevices WHERE nextMaintenanceDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY status;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 119,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'field': 'EnergyDevices.deviceName', 'direction': 'ASC'}\nA hypothetical reasoning question is as follows:\nAssuming the efficiency of all devices improves to 100%, calculate the total energy savings of all devices over one year, and rank them in descending order of energy saved, taking the top 10.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, (100 - efficiency) * powerRating * 8760 AS energySaved FROM EnergyDevices ORDER BY energySaved DESC LIMIT 10;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 120,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind power equipment', 'past year', 'top 5'], 'relations': ['device_to_consumption (deviceId → EnergyConsumption)', 'temporal_filter (timestamp ∈ last year)', 'ranking_by_energy_consumption'], 'intent': 'calculate_and_rank_total_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1, 5], 'units': {'timeframe': 'year', 'ranking_count': 'unitless (count)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA physical knowledge question is as follows:\nPlease calculate the average efficiency of all solar panels produced by the manufacturer 'GreenTech', and find the deviceId and efficiency of the top 5 devices with the highest efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "WITH GreenTechDevices AS (SELECT ed.deviceId, ed.efficiency FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'GreenTech' AND ed.deviceType = '太阳能') SELECT AVG(efficiency) AS average_efficiency FROM GreenTechDevices; WITH GreenTechDevices AS (SELECT ed.deviceId, ed.efficiency FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'GreenTech' AND ed.deviceType = '太阳能') SELECT deviceId, efficiency FROM GreenTechDevices ORDER BY efficiency DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 121,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'maintenance in 2023', 'equipment status'], 'relations': ['device_to_maintenance_records', 'grouping_by_status'], 'intent': 'retrieve_and_group_equipment_by_maintenance_status', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2023], 'units': {'maintenance_date': 'YYYY-MM-DD format', 'grouping': 'status categories (e.g., active, inactive, decommissioned)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['运行中', '维修中']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'maintenanceDate'}]}}\nA mathematical logic question is as follows:\nPlease calculate the total power output of all wind turbines manufactured by 'EcoPower' and identify the top 3 devices with the highest power ratings, including their deviceId and powerRating.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ed.powerRating) AS total_power, ed.deviceId, ed.powerRating FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'EcoPower' AND ed.deviceType = '风能' GROUP BY ed.deviceId, ed.powerRating ORDER BY ed.powerRating DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 122,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'current efficiency', 'target efficiency 100%', 'one year period'], 'relations': ['device_to_efficiency (devices → current efficiency)', 'efficiency_comparison (current efficiency → target efficiency 100%)', 'energy_savings_calculation (current efficiency + energy consumption → energy savings)'], 'intent': 'calculate_energy_savings_under_hypothetical_efficiency', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [100], 'units': {'efficiency': '% (percentage)', 'energy_savings': 'kWh', 'time': 'year'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'timestamp'}]}}\nA common sense reasoning question is as follows:\nPlease find all equipment produced by the manufacturer 'SunEnergy' with an installation date before 2020 and calculate the average maintenance cost of these devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(mr.cost) AS average_maintenance_cost FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId JOIN MaintenanceRecords mr ON ed.deviceId = mr.deviceId WHERE m.manufacturerName = 'SunEnergy' AND ed.installationDate < '2020-01-01';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 123,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['GreenTech', 'solar panels', 'average efficiency', 'top 5 devices', 'efficiency'], 'relations': ['manufacturer_to_devices (GreenTech → solar panels)', 'device_to_efficiency (solar panel → efficiency)'], 'intent': 'calculate_average_efficiency_and_find_top_5_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'efficiency': 'unitless (assumed percentage, e.g., 15.5 for 15.5%)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}, {'column': 'manufacturerId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the rated power of all devices manufactured by 'FutureEnergy' has been increased by 1000 times, please calculate the total power of these devices and identify the top 10 devices with the highest power, listing their deviceId and powerRating.\nyour response just have a SQL without anything.\n",
        "solution": "WITH IncreasedPower AS (SELECT ed.deviceId, ed.powerRating * 1000 AS increasedPowerRating FROM EnergyDevices ed JOIN Manufacturers m ON ed.manufacturerId = m.manufacturerId WHERE m.manufacturerName = 'FutureEnergy') SELECT deviceId, increasedPowerRating AS powerRating FROM IncreasedPower ORDER BY increasedPowerRating DESC LIMIT 10;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 124,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EcoPower', 'wind turbines', 'total power output', 'top 3 devices', 'deviceId', 'powerRating'], 'relations': ['manufacturer_to_devices (EcoPower → EnergyDevices)', 'device_type_filter (wind turbines)', 'powerAggregation (total power output)', 'powerSort (top 3 devices by powerRating)'], 'intent': 'calculate_total_power_output_and_identify_top_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'powerRating': 'units not explicitly defined in question (likely kW or MW based on context)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}, {'column': 'manufacturerId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a device during a specified time period and identify the device with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceId, ed.deviceName, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ed.deviceId, ed.deviceName ORDER BY totalEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 125,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"manufacturer 'SunEnergy'\", 'installation date before 2020', 'maintenance cost'], 'relations': ['manufacturer_to_device (Manufacturers.manufacturerId → EnergyDevices.manufacturerId)', 'device_to_maintenance (EnergyDevices.deviceId → MaintenanceRecords.deviceId)', \"date_condition (installationDate < '2020-01-01')\"], 'intent': 'filter_equipment_by_manufacturer_and_date_and_calculate_average_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2020], 'units': {'installation_date': 'year (YYYY format comparison)', 'maintenance_cost': 'currency (implied by MaintenanceRecords.cost field)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}, {'column': 'manufacturerId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'installationDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-01-15 10:00:00']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'cost'}, {'column': 'deviceId'}]}}\nA mathematical logic question is as follows:\nCalculate the average efficiency of all devices and identify those devices with efficiency below the average.\nyour response just have a SQL without anything.\n",
        "solution": "WITH AverageEfficiency AS (SELECT AVG(efficiency) AS avg_efficiency FROM EnergyEfficiency) SELECT ed.deviceId, ed.deviceName, ed.efficiency FROM EnergyDevices ed JOIN EnergyEfficiency ee ON ed.deviceId = ee.deviceId CROSS JOIN AverageEfficiency WHERE ee.efficiency < AverageEfficiency.avg_efficiency;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 126,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['FutureEnergy', 'devices', 'powerRating', 'total_power', 'top_10_devices'], 'relations': ['manufacturer_to_devices (FutureEnergy → EnergyDevices via manufacturerId)', 'power_scaling (×1000 factor)', 'ranking (sorted by scaled powerRating)'], 'intent': 'calculate_total_power_after_scaling_and_list_top_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 10], 'units': {'power': 'Watts (original unit from EnergyDevices.powerRating)', 'scaled_power': 'Watts ×1000 (assumed unit conversion)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}]}}\nA common sense reasoning question is as follows:\nFind equipment that has not undergone maintenance in the past year and list the detailed information of these devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM EnergyDevices WHERE lastMaintenanceDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR) OR lastMaintenanceDate IS NULL;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 127,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'specified time period', 'total energy consumption', 'highest energy consumption'], 'relations': ['device_to_energy_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'time_period_filter (timestamp ∈ [start, end])', 'energy_summation (SUM(energyConsumed))', 'consumption_comparison (MAX(total_energy_consumption))'], 'intent': 'calculate_total_energy_consumption_and_identify_peak_device', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy': 'kWh (implied by context of energyConsumed field)', 'time_period': 'duration (days/hours, implied by timestamp field)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power of a certain device suddenly increases to 10,000 kilowatts, calculate its energy consumption over one day and identify the potential damages to the equipment caused by this abnormal situation.\nyour response just have a SQL without anything.\n",
        "solution": "WITH AbnormalPowerUsage AS (SELECT deviceId, timestamp, powerUsage, energyConsumed, temperature, humidity FROM EnergyConsumption WHERE powerUsage >= 10000) SELECT AP.deviceId, AP.timestamp, AP.powerUsage, AP.energyConsumed, AP.temperature, AP.humidity, ED.deviceName, ED.deviceType, ED.powerRating, ED.efficiency, ED.status, ED.location, MR.maintenanceType, MR.maintenanceDescription, MR.nextMaintenanceDate FROM AbnormalPowerUsage AP JOIN EnergyDevices ED ON AP.deviceId = ED.deviceId LEFT JOIN MaintenanceRecords MR ON AP.deviceId = MR.deviceId ORDER BY AP.timestamp DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 128,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'efficiency values', 'average efficiency'], 'relations': ['device_to_efficiency (EnergyDevices.efficiency)', 'efficiency_comparison (device efficiency < average efficiency)'], 'intent': 'calculate_average_efficiency_and_identify_below_average_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'efficiency': 'unitless (assumed from database schema)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total power generation of a solar panel during a specific time period, assuming the solar radiation intensity is 800W/m², the area of the solar panel is 2m², and the efficiency is 20%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM((800 * 2 * 20 * TIMESTAMPDIFF(HOUR, '2023-01-01 00:00:00', '2023-01-31 23:59:59')) / 1000) AS total_energy_generated FROM EnergyDevices WHERE deviceType = '太阳能';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 129,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyDevices', 'MaintenanceRecords', 'Manufacturers'], 'relations': ['EnergyDevices.deviceId_to_MaintenanceRecords.deviceId (foreign key relationship)', 'EnergyDevices.manufacturerId_to_Manufacturers.manufacturerId (foreign key relationship)', 'device_maintenance_age (lastMaintenanceDate < 1 year ago)'], 'intent': 'identify_devices_without_recent_maintenance', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [1], 'units': {'time': 'year', 'date_calculation': \"current_date - interval '1 year'\"}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['运行中', '维修中']}, {'column': 'lastMaintenanceDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-06-15 14:00:00']}, {'column': 'location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Sun City, USA', 'Wind Town, Canada', 'Energy City, UK', '测试地点', 'Test Location']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}], 'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}, {'column': 'contactEmail'}, {'column': 'contactPhone'}]}}\nA mathematical logic question is as follows:\nCalculate the total annual electricity generation of a wind turbine, assuming a wind speed of 10 m/s, air density of 1.225 kg/m³, a turbine blade radius of 30 m, and an efficiency of 40%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1.225 * PI() * POWER(30, 2) * POWER(10, 3) * 0.40 * 8760 / 1000 AS total_energy_output_kWh;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 130,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'power increase to 10,000 kilowatts', 'one-day period', 'equipment damages'], 'relations': ['device_to_power_rating', 'power_to_energy_consumption', 'abnormal_power_to_damage_risk'], 'intent': 'calculate_energy_consumption_and_assess_equipment_damage_risk', 'reasoning_type': 'mathematical_logic_reasoning (for energy calculation) + common_sense_understanding_reasoning (for damage assessment)', 'numerical_values': [10000, 24], 'units': {'power': 'kilowatts (kW)', 'time': 'hours (h)', 'energy_consumption': 'kilowatt-hours (kWh = kW × h)', 'conversion': '10,000 kW × 24 h = 240,000 kWh'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}, {'column': 'energyConsumed'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'maintenanceType'}, {'column': 'partsReplaced'}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'efficiency'}]}}\nA common sense reasoning question is as follows:\nIdentify the device with the highest energy consumption in the energy consumption table and calculate its hourly energy cost, assuming an electricity price of 0.5 yuan per kilowatt-hour.\nyour response just have a SQL without anything.\n",
        "solution": "WITH MaxEnergyConsumption AS (SELECT deviceId, MAX(energyConsumed) AS maxEnergyConsumed FROM EnergyConsumption GROUP BY deviceId) SELECT ec.deviceId, ed.deviceName, mec.maxEnergyConsumed, (mec.maxEnergyConsumed * 0.5) AS hourlyCost FROM EnergyConsumption ec JOIN MaxEnergyConsumption mec ON ec.deviceId = mec.deviceId AND ec.energyConsumed = mec.maxEnergyConsumed JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId ORDER BY mec.maxEnergyConsumed DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 131,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['solar radiation intensity 800W/m²', 'solar panel area 2m²', 'efficiency 20%'], 'relations': ['radiation_to_power (800W/m² → power generation)', 'area_to_power (2m² → power calculation)', 'efficiency_to_power (20% → power adjustment)'], 'intent': 'calculate_total_power_generation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [800, 2, 20], 'units': {'radiation_intensity': 'W/m² (Watts per square meter)', 'area': 'm² (square meters)', 'efficiency': '% (percentage, converted to 0.2 for calculation)', 'result': 'W (Watts, calculated as 800 * 2 * 0.2 = 320W)'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA hypothetical reasoning question is as follows:\nAssuming the efficiency of a certain device suddenly increases to 1000%, calculate the energy and cost savings within one year, given that the original efficiency of the device was 20%, with an annual energy consumption of 100,000 kilowatt-hours and an electricity price of 0.5 yuan per kilowatt-hour.\nyour response just have a SQL without anything.\n",
        "solution": "WITH EfficiencyData AS (SELECT 20 AS originalEfficiency, 1000 AS newEfficiency, 100000 AS annualEnergyConsumption, 0.5 AS electricityPrice) SELECT annualEnergyConsumption * (newEfficiency - originalEfficiency) / originalEfficiency AS energySaved, annualEnergyConsumption * (newEfficiency - originalEfficiency) / originalEfficiency * electricityPrice AS costSavings FROM EfficiencyData;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 132,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wind speed 10 m/s', 'air density 1.225 kg/m³', 'turbine blade radius 30 m', 'efficiency 40%'], 'relations': ['swept_area_calculation (A = πr²)', 'wind_power_formula (P = 0.5 * ρ * A * v³ * η)', 'annual_energy_generation (E = P * 24h/day * 365d/year)'], 'intent': 'calculate_annual_electricity_generation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10, 1.225, 30, 40], 'units': {'wind_speed': 'm/s', 'air_density': 'kg/m³', 'radius': 'meters', 'efficiency': '% (converted to 0.4 in calculation)', 'energy': 'kWh/year (derived from calculation)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of a certain device during a specific time period and identify the device with the highest energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEnergy AS (SELECT ec.deviceId, SUM(ec.powerUsage * TIMESTAMPDIFF(SECOND, ec.timestamp, (SELECT MIN(ec2.timestamp) FROM EnergyConsumption ec2 WHERE ec2.deviceId = ec.deviceId AND ec2.timestamp > ec.timestamp))) / 3600 AS totalEnergyConsumption FROM EnergyConsumption ec WHERE ec.timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY ec.deviceId) SELECT de.deviceId, ed.deviceName, de.totalEnergyConsumption FROM DeviceEnergy de JOIN EnergyDevices ed ON de.deviceId = ed.deviceId ORDER BY de.totalEnergyConsumption DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 133,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'energy consumption', 'electricity price 0.5 yuan/kWh'], 'relations': ['device_to_energy_consumption (deviceId → energyConsumed)', 'cost_calculation (energyConsumed × 0.5 yuan/kWh)'], 'intent': 'identify_device_with_highest_energy_consumption_and_calculate_hourly_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5], 'units': {'energy_consumption': 'kWh (kilowatt-hour)', 'electricity_price': 'yuan/kWh', 'cost': 'yuan (calculated as kWh × yuan/kWh)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA mathematical logic question is as follows:\nCalculate the average efficiency of all devices over a year and identify devices with efficiency below the average.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceYearlyEfficiency AS ( SELECT deviceId, AVG(efficiency) AS avgEfficiency FROM EnergyEfficiency WHERE timestamp >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY deviceId ), OverallAverageEfficiency AS ( SELECT AVG(avgEfficiency) AS overallAvgEfficiency FROM DeviceYearlyEfficiency ) SELECT ed.deviceId, ed.deviceName, ed.deviceType, dye.avgEfficiency FROM DeviceYearlyEfficiency dye JOIN EnergyDevices ed ON dye.deviceId = ed.deviceId JOIN OverallAverageEfficiency oae ON dye.avgEfficiency < oae.overallAvgEfficiency;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 134,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['original efficiency 20%', 'new efficiency 10000%', 'annual energy consumption 100000 kWh', 'electricity price 0.5 yuan/kWh'], 'relations': ['efficiency_change (20% → 1000%)', 'energy_savings_calculation', 'cost_savings_calculation'], 'intent': 'calculate_energy_and_cost_savings_with_efficiency_change', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [20, 1000, 100000, 0.5], 'units': {'efficiency': '% (percentage)', 'energy': 'kWh (kilowatt-hour)', 'cost': 'yuan/kWh (electricity price)', 'conversion': 'ΔEfficiency = 980% (1000% - 20%), Energy savings = 98000 kWh/year'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'efficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '80.0', '88.0']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'energySaved'}, {'column': 'costSavings'}]}}\nA common sense reasoning question is as follows:\nIdentify equipment that has not undergone maintenance in the past year and list the names and locations of these devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceName, ed.location FROM EnergyDevices ed WHERE ed.deviceId NOT IN (SELECT mr.deviceId FROM MaintenanceRecords mr WHERE mr.maintenanceDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 135,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['certain device', 'specific time period', 'device with highest energy consumption'], 'relations': ['device_to_consumption_records (deviceId → EnergyConsumption)', 'time_bound_filtering (timestamp ∈ [start, end])', 'aggregation_comparison (SUM(energyConsumed) per device)'], 'intent': 'calculate_total_energy_consumption_and_identify_peak_consumer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (inferred from energyConsumed field)', 'time': 'timestamp format (YYYY-MM-DD HH:MM:SS)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power of a certain device suddenly increases to 1,000,000 kilowatts, calculate its total energy consumption over one year, and compare the difference with the total energy consumption of all devices.\nyour response just have a SQL without anything.\n",
        "solution": "WITH DeviceEnergy AS (SELECT deviceId, powerRating * 24 * 365 AS totalEnergyConsumption FROM EnergyDevices WHERE deviceId = '特定设备ID'), AllDevicesEnergy AS (SELECT SUM(powerRating * 24 * 365) AS totalEnergyConsumptionAll FROM EnergyDevices) SELECT DE.totalEnergyConsumption AS SpecificDeviceEnergy, ADE.totalEnergyConsumptionAll AS AllDevicesEnergy, DE.totalEnergyConsumption - ADE.totalEnergyConsumptionAll AS EnergyDifference FROM DeviceEnergy DE, AllDevicesEnergy ADE;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 136,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['average efficiency', 'devices with efficiency below average'], 'relations': ['device_to_efficiency (device → average_efficiency)', 'efficiency_comparision (device_efficiency < global_average)'], 'intent': 'calculate_and_compare_device_efficiencies', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'efficiency': 'unitless (assumed efficiency metric)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}], 'EnergyManagementDB.EnergyEfficiency': [{'column': 'efficiency'}, {'column': 'timestamp'}]}}\nA physical knowledge question is as follows:\nIf a gas station stores 10,000 liters of gasoline with a carbon emission of 2.31 grams per liter, how many grams of carbon dioxide would be produced if all the gasoline were completely burned?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * Carbon_Emission AS Total_Carbon_Emission FROM gas WHERE Fuel_Type = '汽油' AND Stock_Liters = 10000;",
        "db_id": "gas"
    },
    {
        "id": 137,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'maintenance records', 'past year'], 'relations': ['device_to_last_maintenance_date (deviceId → lastMaintenanceDate)', 'maintenance_date_comparison (lastMaintenanceDate < current_date - 1_year)'], 'intent': 'identify_inactive_maintenance_equipment', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'time_period': 'year (duration for maintenance check)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Sun City, USA', 'Wind Town, Canada', 'Energy City, UK', '测试地点', 'Test Location']}, {'column': 'lastMaintenanceDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-06-15 14:00:00']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'maintenanceDate'}]}}\nA mathematical logic question is as follows:\nThe sales revenue of an oil company is $50 billion, with a net profit margin of 5% and a debt-to-equity ratio of 2:1. Find the company's net profit and total assets.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * Net_Profit_Margin / 100 AS Profits, (Sales * Net_Profit_Margin / 100) * (Debt_Equity_Ratio + 1) AS Assets FROM company WHERE Sales = 500;",
        "db_id": "gas"
    },
    {
        "id": 138,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device with power 1,000,000 kilowatts', 'all devices'], 'relations': ['device_power_rating (1,000,000 kW → EnergyDevices.powerRating)', 'total_energy_comparison (single_device_energy_vs_all_devices_energy)'], 'intent': 'calculate_and_compare_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 1], 'units': {'power': 'kW (kilowatts)', 'time': 'year → 8760 hours (conversion)', 'energy': 'kWh (kilowatt-hours)', 'conversion': '1 year = 8760 hours, energy = power(kW) × time(hours)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a minimum inventory level of 5,000 liters, a current inventory of 4,500 liters, and an average daily sales volume of 1,000 liters, how many days later does the station need to replenish its inventory to avoid a stockout?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Minimum_Stock_Liters - Stock_Liters) / 1000 AS Days_Until_Replenishment FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Location = '指定加油站位置');",
        "db_id": "gas"
    },
    {
        "id": 139,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline stock 10,000 liters', 'carbon emission factor 2.31 grams/liter'], 'relations': ['fuel_to_emission_factor (10,000 liters × 2.31g/L = 23,100g CO₂)'], 'intent': 'calculate_total_carbon_dioxide_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 2.31], 'units': {'volume': 'liters', 'emission_factor': 'grams per liter', 'total_emission': 'grams (calculated)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station has a total fuel capacity of 1,000,000 liters, with each liter priced at 10 dollars and a tax of 1 dollar per liter, and if the gas station sells all the fuel at once without considering any costs or losses, what would be the station's total revenue?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT gs.Capacity_Liters * (g.Price_Liter + g.Tax_per_Liter) AS Total_Revenue FROM gas_station gs JOIN gas g ON gs.Station_ID = g.Station_ID WHERE gs.Station_ID = (SELECT Station_ID FROM gas_station WHERE Location = '指定加油站位置');",
        "db_id": "gas"
    },
    {
        "id": 140,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales revenue $50 billion', 'net profit margin 5%', 'debt-to-equity ratio 2:1'], 'relations': ['revenue_to_profit (Sales × Net_Profit_Margin → Net_Profit)', 'debt_to_equity_ratio_to_assets (Debt_Equity_Ratio → Assets calculation)'], 'intent': 'calculate_net_profit_and_retrieve_total_assets', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 5, 2, 1], 'units': {'revenue': 'billion USD', 'profit': 'billion USD', 'ratio': 'debt-to-equity (no unit)', 'assets': 'billion USD (implied by database schema)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}]}}\nA physical knowledge question is as follows:\nIf a gas station stores 50,000 liters of diesel with a density of approximately 0.85 kilograms per liter, what is the total mass of this diesel?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 50000 * 0.85 AS TotalMass;",
        "db_id": "gas"
    },
    {
        "id": 141,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'current inventory 4,500 liters', 'minimum inventory 5,000 liters', 'average daily sales 1,000 liters'], 'relations': ['current_inventory_to_minimum_inventory (4,500L < 5,000L)', 'daily_sales_rate (1,000L/day)'], 'intent': 'calculate_days_until_replenishment', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 4500, 1000], 'units': {'inventory': 'liters', 'sales': 'liters/day', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nIf the revenue growth rate of an oil company is 5% and last year's sales were $300 billion, what is the projected sales for this year? If the net profit margin is 10%, what is the expected profit for this year?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (1 + Revenue_Growth_Rate / 100) AS Projected_Sales, Sales * (1 + Revenue_Growth_Rate / 100) * Net_Profit_Margin / 100 AS Projected_Profit FROM company WHERE Company = '某石油公司';",
        "db_id": "gas"
    },
    {
        "id": 142,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'total fuel capacity 1,000,000 liters', 'price per liter 10 dollars', 'tax per liter 1 dollar'], 'relations': ['station_to_capacity (gas_station → Capacity_Liters)', 'fuel_pricing (price + tax = 11 dollars per liter)'], 'intent': 'calculate_total_revenue_with_tax', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 10, 1], 'units': {'fuel_volume': 'liters', 'price': 'dollars per liter', 'tax': 'dollars per liter', 'revenue': 'dollars'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}, {'column': 'Tax_per_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的税收（美元）。', 'examples': ['0.3', '0.28', '0.35', '0.25', '0.32']}]}}\nA common sense reasoning question is as follows:\nIf a gas station's minimum inventory is 10,000 liters, the current inventory is 12,000 liters, and the average daily sales volume is 2,000 liters, will this gas station need to refuel in the next few days?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (Stock_Liters - Minimum_Stock_Liters) / 2000 <= 0 THEN '需要立即补充燃油' ELSE '无需立即补充燃油' END AS RefuelNeeded FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 143,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['50,000 liters of diesel', 'density of 0.85 kilograms per liter'], 'relations': ['volume_to_mass_conversion (mass = volume × density)'], 'intent': 'calculate_total_mass', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000, 0.85], 'units': {'volume': 'liters (L)', 'density': 'kilograms per liter (kg/L)', 'mass': 'kilograms (kg)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station has a total fuel capacity of 50,000 liters, with a fuel price of $5 per liter and a tax of $1 per liter, and if the gas station sells 100,000 liters of fuel in a day, what is the gas station's daily revenue? If the station's carbon emission is 2.5 grams per liter, what is the total carbon emission for that day?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100000 * (5 + 1) AS DailyRevenue, 100000 * 2.5 AS TotalCarbonEmission;",
        "db_id": "gas"
    },
    {
        "id": 144,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate 5%', 'last year sales $300 billion', 'net profit margin 10%'], 'relations': ['growth_rate_to_sales (5% → projected_sales)', 'profit_margin_to_sales (10% → expected_profit)'], 'intent': 'calculate_projected_sales_and_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 300, 10], 'units': {'revenue_growth': '% (percentage)', 'sales': '$ billion (US Dollars)', 'profit_margin': '% (percentage)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}]}}\nA physical knowledge question is as follows:\nIf a gas station stores 50,000 liters of diesel, and the sulfur content per liter is 10 ppm (parts per million), then how many grams of sulfur in total do these diesels contain?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * Sulfur_Content * 0.001 AS Total_Sulfur_Content_Grams FROM gas WHERE Fuel_Type = '柴油' AND Station_ID = (SELECT Station_ID FROM gas_station WHERE Location = '指定加油站位置');",
        "db_id": "gas"
    },
    {
        "id": 145,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['minimum inventory 10,000 liters', 'current inventory 12,000 liters', 'average daily sales volume 2,000 liters'], 'relations': ['inventory_difference (ΔStock=2,000 liters)', 'days_until_refuel (ΔStock/daily_sales=1 day)'], 'intent': 'predict_refueling_necessity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 12000, 2000], 'units': {'volume': 'liters', 'time': 'days', 'calculation': 'ΔStock = Current_Inventory - Minimum_Inventory, Days_Before_Refuel = ΔStock / Daily_Sales'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nIf an oil company's revenue growth rate is 8%, and last year's sales were 30 billion dollars, what is the projected sales for this year?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (1 + Revenue_Growth_Rate / 100) AS Projected_Sales FROM company WHERE Company = '指定公司名称';",
        "db_id": "gas"
    },
    {
        "id": 146,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station total fuel capacity 50,000 liters', 'fuel price $5 per liter', 'tax $1 per liter', 'daily fuel sales 100,000 liters', 'carbon emission 2.5 grams per liter'], 'relations': ['daily_revenue = (fuel_price × liters_sold)', 'total_carbon_emission = (carbon_emission_rate × liters_sold)'], 'intent': 'calculate_daily_revenue_and_total_carbon_emission', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000, 5, 1, 100000, 2.5], 'units': {'fuel_capacity': 'liters', 'price': '$ (USD) per liter', 'tax': '$ (USD) per liter', 'sales_volume': 'liters', 'carbon_emission': 'grams per liter', 'revenue': '$ (USD)', 'total_emission': 'grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}, {'column': 'Tax_per_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的税收（美元）。', 'examples': ['0.3', '0.28', '0.35', '0.25', '0.32']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nIf the minimum inventory level for a gas station is 2000 liters, the current inventory is 2100 liters, and the next fuel delivery date is in 3 days, does this gas station need to arrange for fuel replenishment in advance?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Stock_Liters - ((Stock_Liters - Minimum_Stock_Liters) / 3 * 3) < Minimum_Stock_Liters THEN '需要提前补充' ELSE '无需提前补充' END AS Need_Replenishment FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Location = '指定加油站位置');",
        "db_id": "gas"
    },
    {
        "id": 147,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', '50,000 liters of diesel', '10 ppm sulfur content'], 'relations': ['gas_station_to_diesel_volume (gas_station → stock_liters)', 'volume_to_sulfur_content (liters × ppm)'], 'intent': 'calculate_total_sulfur_weight', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000, 10], 'units': {'volume': 'liters', 'concentration': 'ppm (mg/kg)', 'weight': 'grams', 'conversion': '1 ppm = 1 mg per 1,000,000 mg (assuming diesel density ≈ 1 kg/L)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station has a total fuel capacity of 1,000,000 liters and the carbon emissions per liter of fuel is 2.31 grams, what is the total carbon emissions of this gas station? If the total fuel capacity of this gas station increases to 1,000,000,000 liters, with the carbon emissions per liter still at 2.31 grams, what is the total carbon emissions of this gas station? How many cars’ annual emissions does this amount of carbon emissions equate to? (The average annual carbon emissions of a car is 4,000 kilograms)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity_Liters * 2.31 AS Total_Carbon_Emission_Grams, (Capacity_Liters * 2.31) / 1000 / 4000 AS Equivalent_Car_Emissions FROM gas_station WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Location = '指定加油站位置');",
        "db_id": "gas"
    },
    {
        "id": 148,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate 8%', 'sales 30 billion dollars'], 'relations': ['company_to_sales_growth (company → revenue growth rate)', 'projected_sales_growth (30 billion * 1.08)'], 'intent': 'calculate_projected_sales_using_growth_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 30], 'units': {'revenue_growth_rate': '% (percentage)', 'sales': 'billion dollars', 'projection': 'billion dollars (calculated as 30 * 1.08)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA physical knowledge question is as follows:\nIf a gas station has a total capacity of 100,000 liters, with a current inventory of 80,000 liters, and the fuel density is 0.75 kg/L, what is the total mass of the current fuel inventory?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.75 AS Total_Mass_Kg FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 100000) AND Stock_Liters = 80000;",
        "db_id": "gas"
    },
    {
        "id": 149,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'minimum inventory level 2000 liters', 'current inventory 2100 liters', 'next fuel delivery date 3 days'], 'relations': ['station_to_inventory (gas station → fuel stock levels)', 'inventory_threshold (current vs minimum)', 'delivery_timing (next delivery in 3 days)'], 'intent': 'determine_urgency_of_fuel_replenishment', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2000, 2100, 3], 'units': {'inventory': 'liters', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA mathematical logic question is as follows:\nThe net profit margin of a certain petroleum company is 15%, with sales of $50 billion. What is the company's net profit? If the company aims to increase the net profit margin to 20%, how much does the sales need to reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * Net_Profit_Margin / 100 AS Current_Profits, (Sales * Net_Profit_Margin / 100) / 0.20 AS Required_Sales FROM company WHERE Company = '某石油公司';",
        "db_id": "gas"
    },
    {
        "id": 150,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'total fuel capacity 1,000,000 liters', 'carbon emissions per liter 2.31 grams', 'total fuel capacity 1,000,000,000 liters', 'average annual car emissions 4,000 kilograms'], 'relations': ['capacity_to_emissions_factor (capacity × 2.31 grams/liter)', 'emissions_to_cars (total emissions ÷ 4,000 kg/car)'], 'intent': 'calculate_total_carbon_emissions_and_equivalent_cars', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 1000000000, 2.31, 4000], 'units': {'capacity': 'liters', 'emission_factor': 'grams/liter', 'total_emissions': 'kilograms (grams × 10^-3)', 'car_emissions': 'kilograms (per car)', 'conversion': '1 kg = 1000 grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station's fuel inventory falls below the minimum stock level, the system will issue an alert. Given that a certain gas station has a minimum inventory of 10,000 liters, a current inventory of 9,500 liters, and daily sales of 2,000 liters, for how many more days can the station sustain sales?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters - Minimum_Stock_Liters) / 2000 AS Remaining_Days FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Minimum_Stock_Liters = 10000) AND Stock_Liters = 9500;",
        "db_id": "gas"
    },
    {
        "id": 151,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station capacity 100,000 liters', 'current fuel inventory 80,000 liters', 'fuel density 0.75 kg/L'], 'relations': ['inventory_volume_to_mass (mass = current fuel inventory × fuel density)'], 'intent': 'calculate_total_mass', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 80000, 0.75], 'units': {'volume': 'liters', 'density': 'kg/L', 'mass': 'kg (calculated via mass = volume × density)', 'conversion': 'mass = 80,000 liters × 0.75 kg/L = 60,000 kg'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station has a total fuel capacity of 1,000,000 liters, and the current inventory is 999,999 liters. If the station sells 1 liter of fuel per second and receives no new fuel deliveries, how long will it take for the inventory to be sold down to the minimum inventory level (the minimum inventory level is 10,000 liters)?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters - Minimum_Stock_Liters) / 1 AS Required_Time_Seconds FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 1000000) AND Stock_Liters = 999999;",
        "db_id": "gas"
    },
    {
        "id": 152,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', 'net profit margin 15%', 'sales $50 billion', 'target net profit margin 20%'], 'relations': ['company_to_sales (company → $50 billion)', 'margin_to_profit (15% → net profit)', 'target_margin_to_sales (20% → required sales)'], 'intent': 'calculate_net_profit_and_required_sales_for_target_margin', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15, 50000000000, 20], 'units': {'currency': 'USD', 'margin': '% (percentage)', 'conversion': 'Net Profit = Sales × Net Profit Margin; Required Sales = Net Profit / Target Margin'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}]}}\nA physical knowledge question is as follows:\nIf a gas station sells 5,000 liters of diesel per day, with each liter containing 10ppm (parts per million) of sulfur, what is the total amount of sulfur emitted in grams per day?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 5000 * Sulfur_Content * 0.001 AS Sulfur_Total_Grams FROM gas WHERE Fuel_Type = '柴油';",
        "db_id": "gas"
    },
    {
        "id": 153,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current inventory 9,500 liters', 'minimum stock level 10,000 liters', 'daily sales 2,000 liters'], 'relations': ['inventory_comparison (current < minimum)', 'days_sustained (9,500 ÷ 2,000 = 4.75)'], 'intent': 'calculate_days_until_stock_depletion', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [9500, 10000, 2000], 'units': {'stock': 'liters', 'daily_sales': 'liters/day', 'duration': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has a revenue growth rate of 8%, with last year's sales amounting to $300 billion. If the growth rate remains unchanged, what is the projected sales figure after 5 years?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * POWER(1 + Revenue_Growth_Rate / 100, 5) AS Future_Sales FROM company WHERE Company = '某石油公司';",
        "db_id": "gas"
    },
    {
        "id": 154,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current inventory 999,999 liters', 'minimum inventory level 10,000 liters', 'sale rate 1 liter/second'], 'relations': ['inventory_difference (989,999 liters)', 'time_calculation (inventory_difference / sale_rate)'], 'intent': 'calculate_time_until_minimum_inventory', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [999999, 10000, 1], 'units': {'volume': 'liters', 'rate': 'liters/second', 'time': 'seconds (calculated), optionally days/hours (interpreted)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a total fuel capacity of 20,000 liters, a current inventory of 5,000 liters, and a minimum inventory requirement of 1,000 liters, how many liters of fuel can be sold at most without restocking?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters - Minimum_Stock_Liters AS Max_Sellable_Liters FROM gas_station JOIN gas ON gas_station.Station_ID = gas.Station_ID WHERE gas_station.Capacity_Liters = 20000 AND gas.Stock_Liters = 5000 AND gas.Minimum_Stock_Liters = 1000;",
        "db_id": "gas"
    },
    {
        "id": 155,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'diesel', '5,000 liters per day', '10ppm sulfur content'], 'relations': ['fuel_type_to_sulfur_content (diesel → 10ppm)', 'volume_to_pollutant (5,000 liters × 10ppm)'], 'intent': 'calculate_total_sulfur_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5000, 10], 'units': {'volume': 'liters (L)', 'sulfur_content': 'ppm (parts per million)', 'conversion': '1 liter diesel ≈ 0.85 kg (density conversion), 1 ppm = 1 mg/kg, total grams = (5000 L × 0.85 kg/L) × (10 mg/kg) / 1000 = 42.5 grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station's fuel inventory suddenly increased to 1 million liters, but the station's total capacity is only 20,000 liters. If each liter of fuel emits 2.31 grams of carbon, what would be the total carbon emissions if all this fuel were burned? Could this situation realistically happen?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 * Carbon_Emission AS Total_Carbon_Emission FROM gas JOIN gas_station ON gas.Station_ID = gas_station.Station_ID WHERE gas_station.Capacity_Liters = 20000;",
        "db_id": "gas"
    },
    {
        "id": 156,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'revenue growth rate of 8%', \"last year's sales $300 billion\", '5 years'], 'relations': ['company_to_growth_rate (oil company → 8%)', 'sales_growth_projection (initial $300B → future value over 5 years)'], 'intent': 'calculate_future_sales_with_compound_growth', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 300, 5], 'units': {'growth_rate': '% (percentage)', 'sales': '$300 billion (USD)', 'time': 'years'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}]}}\nA physical knowledge question is as follows:\nIf a gas station stores 50,000 liters of diesel, and the calorific value of diesel is 35.8 MJ/L, how much energy can be released if all this diesel is completely burned?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 35.8 AS Total_Energy_MJ FROM gas WHERE Fuel_Type = '柴油' AND Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters >= 50000 LIMIT 1);",
        "db_id": "gas"
    },
    {
        "id": 157,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total fuel capacity 20,000 liters', 'current inventory 5,000 liters', 'minimum inventory requirement 1,000 liters'], 'relations': ['available_liters (ΔL = 4,000 liters)'], 'intent': 'calculate_max_liters_to_sell_without_restocking', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000, 5000, 1000], 'units': {'capacity': 'liters', 'inventory': 'liters', 'minimum_requirement': 'liters', 'available_liters': 'liters (ΔL = current_inventory - minimum_requirement)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $30 billion, a net profit margin of 12%, and a debt-to-equity ratio of 0.8. If the company wants to reduce its debt-to-equity ratio to 0.5, how much debt does it need to repay, assuming shareholders' equity remains unchanged?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Debt_Equity_Ratio * (Sales * Net_Profit_Margin / 100)) - (0.5 * (Sales * Net_Profit_Margin / 100)) AS Debt_Repayment FROM company WHERE Sales = 300 AND Net_Profit_Margin = 12 AND Debt_Equity_Ratio = 0.8;",
        "db_id": "gas"
    },
    {
        "id": 158,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station fuel inventory 1,000,000 liters', 'station capacity 20,000 liters', 'carbon emission factor 2.31 grams/liter'], 'relations': ['inventory_capacity_comparison (1,000,000L > 20,000L)', 'carbon_calculation (total_emission = 1,000,000 * 2.31g)'], 'intent': 'calculate_total_carbon_emissions_and_assess_realism', 'reasoning_type': ['mathematical logic reasoning', 'common sense understanding reasoning'], 'numerical_values': [1000000, 20000, 2.31], 'units': {'volume': 'liters', 'carbon_emission': 'grams/liter (conversion factor)', 'total_emission': 'grams (1,000,000L * 2.31g/L = 2,310,000g)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a fuel inventory of 20,000 liters, a minimum inventory level of 10,000 liters, and an average daily sales volume of 2,000 liters, how many days can the gas station maintain its fuel inventory without replenishment?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters - Minimum_Stock_Liters) / 2000 AS Days_Remaining FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters >= 20000 LIMIT 1);",
        "db_id": "gas"
    },
    {
        "id": 159,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station', 'diesel', 'calorific value 35.8 MJ/L', '50,000 liters of diesel'], 'relations': ['gas_station_to_fuel (gas_station.Station_ID → gas.Station_ID)', 'fuel_type_to_energy (diesel → calorific_value)', 'energy_calculation (total_energy = 50,000 L × 35.8 MJ/L)'], 'intent': 'calculate_energy_released_from_burning_diesel', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000, 35.8], 'units': {'volume': 'liters (L)', 'energy_density': 'MJ/L (megajoules per liter)', 'total_energy': 'MJ (megajoules)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station has a total fuel capacity of 1,000,000 liters and a current inventory of 999,999 liters, with each liter of fuel emitting 2.5 grams of carbon per liter, how much carbon emissions will be generated if the station sells and burns all the fuel at once? If all gas stations worldwide (there are 1,000,000 of them) perform this operation simultaneously, by how much will global carbon emissions increase?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters * Carbon_Emission) AS Single_Station_Emissions, (Stock_Liters * Carbon_Emission * 1000000) AS Global_Emissions FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 1000000 LIMIT 1);",
        "db_id": "gas"
    },
    {
        "id": 160,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'debt-to-equity ratio 0.8', 'target debt-to-equity ratio 0.5', 'sales $30 billion', 'net profit margin 12%'], 'relations': ['company_to_financials (oil company → debt-to-equity ratio, sales, profit margin)', 'current_to_target_ratio (0.8 → 0.5)', 'profit_calculation (sales × net profit margin)'], 'intent': 'calculate_debt_repayment_for_ratio_reduction', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 12, 0.8, 0.5], 'units': {'sales': '$ billion (USD)', 'profit': '% (percentage)', 'debt_ratio': 'unitless (debt/equity)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA physical knowledge question is as follows:\nIf a gas station stores 50,000 liters of liquefied natural gas (LNG) with a density of 0.45 kg/liter and the LNG has a calorific value of 50 MJ/kg, how much energy can be generated by burning all of it? If this energy is entirely converted into electricity with a conversion efficiency of 40%, how much electricity can be generated?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (50000 * 0.45) AS total_mass_kg, (50000 * 0.45 * 50) AS total_energy_MJ, (50000 * 0.45 * 50 * 0.4) AS electrical_energy_MJ FROM gas WHERE Fuel_Type = '液化天然气' AND Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters >= 50000);",
        "db_id": "gas"
    },
    {
        "id": 161,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 20,000 liters', 'minimum inventory level 10,000 liters', 'average daily sales volume 2,000 liters'], 'relations': ['inventory_to_minimum (current_stock - minimum_stock)', 'inventory_depletion_days (available_stock / daily_sales)'], 'intent': 'calculate_inventory_sustainability_days', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000, 10000, 2000], 'units': {'inventory': 'liters', 'sales': 'liters/day', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has a debt-to-equity ratio of 2:1. If the company's total assets are $80 billion, what are the company's debt and shareholder equity? If the company plans to adjust the debt-to-equity ratio to 1:1 while keeping total assets unchanged, how much debt does it need to repay?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Assets * (2 / 3)) AS Debt, (Assets * (1 / 3)) AS Equity, (Assets * (2 / 3) - (Assets / 2)) AS Debt_Repayment FROM company WHERE Assets = 800;",
        "db_id": "gas"
    },
    {
        "id": 162,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'fuel inventory (999,999 liters)', 'carbon emission factor (2.5 grams/liter)', 'global gas station count (1,000,000)'], 'relations': ['station_to_inventory (gas_station → gas.Stock_Liters)', 'emission_factor (gas.Carbon_Emission)', 'global_scaling (per-station_emissions × 1,000,000)'], 'intent': 'calculate_total_carbon_emissions_from_fuel_burning', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [999999, 2.5, 1000000], 'units': {'fuel': 'liters', 'carbon_emission_factor': 'grams/liter', 'total_emissions': 'grams (per station: 2,499,997.5 grams; global: 2,499,997,500,000 grams)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a fuel inventory of 30,000 liters, a minimum stock level of 10,000 liters, sells 1,500 liters of fuel daily, and replenishes its stock every 3 days with 20,000 liters each time, will the gas station experience a shortage? If so, how long will the shortage last?\nyour response just have a SQL without anything.\n",
        "solution": "WITH daily_consumption AS (SELECT 1500 AS daily_sales, 20000 AS replenishment_amount, 3 AS replenishment_interval), inventory_trend AS (SELECT 30000 AS current_stock, 10000 AS minimum_stock, (1500 - (20000 / 3)) AS net_daily_consumption, (30000 - 10000 + (20000 * (FLOOR((30000 - 10000) / (1500 - (20000 / 3))) / 3))) AS inventory_change FROM daily_consumption) SELECT CASE WHEN inventory_change < 0 THEN 'Yes' ELSE 'No' END AS shortage_occurrence, CASE WHEN inventory_change < 0 THEN ABS(inventory_change) / net_daily_consumption ELSE 0 END AS shortage_duration_days FROM inventory_trend;",
        "db_id": "gas"
    },
    {
        "id": 163,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['50,000 liters of LNG', 'density 0.45 kg/liter', 'calorific value 50 MJ/kg', 'conversion efficiency 40%'], 'relations': ['volume_to_mass (50,000 liters × 0.45 kg/liter → 22,500 kg mass)', 'mass_to_energy (22,500 kg × 50 MJ/kg → 1,125,000 MJ energy)', 'energy_to_electricity (1,125,000 MJ × 40% → 450,000 MJ electricity)'], 'intent': 'calculate_electricity_generation_from_lng', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [50000, 0.45, 50, 40], 'units': {'volume': 'liters', 'mass': 'kg (kilograms)', 'energy': 'MJ (megajoules)', 'efficiency': '% (percentage)', 'conversion': '1 MJ = 0.2778 kWh (for final electricity output conversion)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nAn oil company's gas station sells 50,000,000 liters of gasoline daily, with each liter emitting 2.31 kg of carbon. The company plans to offset its carbon emissions through tree planting. Given that one tree can absorb 20 kg of carbon dioxide annually, how many trees must the company plant to fully offset its carbon emissions for one year? If each tree requires 10 square meters of land, how many square kilometers of land are needed to plant these trees?\nyour response just have a SQL without anything.\n",
        "solution": "WITH carbon_data AS (SELECT 50000000 AS daily_sales_liters, 2.31 AS carbon_emission_per_liter_kg, 20 AS carbon_absorption_per_tree_kg, 10 AS land_area_per_tree_sqm), total_emission AS (SELECT (daily_sales_liters * carbon_emission_per_liter_kg * 365) AS total_carbon_emission_kg FROM carbon_data), trees_needed AS (SELECT (total_carbon_emission_kg / carbon_absorption_per_tree_kg) AS trees_required FROM total_emission, carbon_data), land_required AS (SELECT (trees_required * land_area_per_tree_sqm / 1000000) AS land_area_sqkm FROM trees_needed, carbon_data) SELECT trees_required, land_area_sqkm FROM trees_needed, land_required;",
        "db_id": "gas"
    },
    {
        "id": 164,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'debt-to-equity ratio 2:1', 'total assets $80 billion', 'target debt-to-equity ratio 1:1'], 'relations': ['company_to_financials (oil company → debt, equity, assets)', 'ratio_to_components (debt-to-equity ratio → debt, shareholder equity)', 'asset_debt_equity (assets = debt + equity)'], 'intent': 'calculate_debt_equity_and_repayment_requirements', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 1, 80, 1, 1], 'units': {'currency': 'billion USD', 'ratio': 'dimensionless (debt:equity)', 'conversion': '1:1 ratio requires debt = equity'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA physical knowledge question is as follows:\nIf a gas station has stored gasoline with a density of 0.75 kg/liter and a total capacity of 100,000 liters, what is the total mass of the gasoline stored at the station? If all this gasoline is completely burned, how much energy is produced (the heating value of gasoline is 45 MJ/kg)?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity_Liters * 0.75 AS Total_Mass_Kg, (Capacity_Liters * 0.75) * 45 AS Total_Energy_MJ FROM gas_station WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 165,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station', 'fuel_inventory_30000_liters', 'minimum_stock_level_10000_liters', 'daily_sales_1500_liters', 'replenishment_20000_liters_every_3_days'], 'relations': ['inventory_to_minimum_stock (30000 → 10000)', 'daily_sales_to_replenishment_interval (1500 liters/day over 3 days)', 'inventory_depletion_and_replenishment_cycle'], 'intent': 'predict_fuel_shortage_and_duration', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30000, 10000, 1500, 3, 20000], 'units': {'volume': 'liters', 'time': 'days', 'depletion_rate': 'liters/day', 'replenishment_interval': 'days', 'replenishment_volume': 'liters'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Last_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '最后一次燃油交付的日期。', 'examples': ['2023-01-15', '2023-02-01', '2023-03-10', '2023-04-05', '2023-05-20']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA mathematical logic question is as follows:\nA petroleum company owns 5,000 gas stations across the country, with each station selling an average of 5,000 liters of diesel per day. If the net profit from diesel is $0.5 per liter and the company's operating costs account for 30% of the total profit, what is the company's annual net profit?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (5000 * 5000 * 365 * 0.5) * (1 - 0.3) AS Annual_Net_Profit FROM company WHERE Company_ID = '指定公司ID';",
        "db_id": "gas"
    },
    {
        "id": 166,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'gas station', 'gasoline', 'carbon emissions', 'trees', 'land area'], 'relations': ['company_to_gas_station (oil company → gas station ownership)', 'daily_sales_volume (gasoline sold = 50,000,000 liters/day)', 'carbon_emission_factor (gasoline → 2.31 kg CO₂/liter)', 'tree_absorption_capacity (1 tree = 20 kg CO₂/year)', 'land_per_tree (1 tree = 10 m²)'], 'intent': 'calculate_trees_and_land_for_carbon_offset', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000000, 2.31, 20, 10], 'units': {'volume': 'liters (daily gasoline sales)', 'mass': 'kg CO₂ (per liter and per tree absorption)', 'area': 'm² (per tree) → km² (final land requirement)', 'conversion': ['Annual emissions = 50,000,000 L/day × 2.31 kg CO₂/L × 365 days', 'Total trees = Annual emissions / 20 kg CO₂/tree', 'Land km² = (Total trees × 10 m²) / 1,000,000 m²/km²']}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA common sense reasoning question is as follows:\nA gas station has a fuel inventory of 20,000 liters, with a minimum inventory level of 5,000 liters. If the station sells 2,000 liters of fuel per day and the supplier replenishes the inventory every 7 days, what is the minimum amount of fuel that needs to be replenished each time to prevent stock shortages?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (2000 * 7) + (5000 - Stock_Liters) AS Required_Refill_Liters FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 167,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline density 0.75 kg/liter', 'gasoline total capacity 100000 liters', 'gasoline heating value 45 MJ/kg'], 'relations': ['density_to_mass (0.75 kg/liter × 100000 liters)', 'mass_to_energy (75000 kg × 45 MJ/kg)'], 'intent': 'calculate_total_mass_and_energy_output_of_stored_gasoline', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.75, 100000, 45], 'units': {'density': 'kg/liter', 'volume': 'liters', 'mass': 'kg (calculated via density × volume)', 'energy': 'MJ (calculated via mass × heating value)', 'heating_value': 'MJ/kg'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station owned by a certain oil company sells 1,000,000 liters of gasoline daily, with each liter emitting 2.31 kilograms of carbon. If the company operates 10,000 such gas stations globally and all stations run without downtime throughout the year, what is the total annual carbon emissions generated by the company from gasoline sales? If the global annual carbon emission limit is 10,000,000,000 kilograms, what percentage of the global carbon emissions does this company account for?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1000000 * 2.31 * 10000 * 365) AS Total_Carbon_Emission_Kg, ((1000000 * 2.31 * 10000 * 365) / 10000000000) * 100 AS Carbon_Emission_Percentage FROM company WHERE Company_ID = '指定公司ID';",
        "db_id": "gas"
    },
    {
        "id": 168,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', '5,000 gas stations', '5,000 liters of diesel per day', '$0.5 net profit per liter', '30% operating costs'], 'relations': ['company_to_stations (ownership)', 'station_to_sales (5000 liters/day per station)', 'profit_per_liter ($0.5)', 'costs_to_profit (30% deduction)'], 'intent': 'calculate_annual_net_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 5000, 0.5, 30, 365], 'units': {'station_count': 'gas stations', 'sales_per_station': 'liters/day', 'profit_per_liter': '$/liter', 'operating_costs': '%', 'time': 'days/year', 'annual_profit': '$'}, 'foreign_keys': [{'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}]}}\nA physical knowledge question is as follows:\nA gas station has a fuel inventory of 50,000 liters, with a fuel density of 0.8 kilograms per liter. If all this fuel is completely burned, and the heat value released per kilogram of fuel is 42 MJ, what is the total energy released when all the fuel stored at the gas station is completely burned?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.8 AS Total_Mass_Kg, (Stock_Liters * 0.8) * 42 AS Total_Energy_MJ FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 169,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 20,000 liters', 'minimum inventory 5,000 liters', 'sales rate 2,000 liters/day', 'replenishment interval 7 days'], 'relations': ['inventory_to_minimum_threshold (20,000 → 5,000)', 'sales_duration (2,000 liters/day × 7 days = 14,000 liters)'], 'intent': 'calculate_minimum_replenishment_amount', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000, 5000, 2000, 7], 'units': {'volume': 'liters', 'time': 'days', 'calculation': 'replenishment = (2000 * 7) - (20000 - 5000) = -1000 liters (no deficit)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nA certain oil company owns 8,000 gas stations across the country, with each station selling an average of 4,000 liters of diesel per day. If the net profit per liter of diesel is $0.40 and the company's operating costs account for 20% of total profits, what is the company's annual net profit?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (8000 * 4000 * 365 * 0.4) * (1 - 0.2) AS Annual_Net_Profit FROM company WHERE Company_ID = '指定公司ID';",
        "db_id": "gas"
    },
    {
        "id": 170,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', '10,000 gas stations', 'gasoline', '2.31 kg/liter', '1,000,000 liters/day', 'global limit 10,000,000,000 kg/year'], 'relations': ['company_to_stations (1:10,000)', 'station_to_fuel_sales (1,000,000 liters/day)', 'fuel_to_carbon_emission (2.31 kg/liter)', 'total_emissions_to_global_limit (percentage calculation)'], 'intent': 'calculate_annual_carbon_emissions_and_percentage_of_global_limit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 2.31, 10000, 365, 10000000000], 'units': {'volume': 'liters', 'emissions': 'kg (kilograms)', 'time': 'days/year (365)', 'percentage': '%'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.company': [{'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}], 'gas.gas': [{'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}]}}\nA common sense reasoning question is as follows:\nThe fuel inventory at a gas station is 30,000 liters, with a minimum stock level of 10,000 liters. If the gas station sells 3,000 liters of fuel per day and the supplier replenishes the inventory every 5 days, how many liters of fuel must be supplied each time at a minimum to avoid stock shortages?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (3000 * 5) + (10000 - Stock_Liters) AS Required_Refill_Liters FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 171,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 50,000 liters', 'fuel density 0.8 kg/liter', 'heat value 42 MJ/kg'], 'relations': ['volume_to_mass (50,000 liters → 40,000 kg)', 'mass_to_energy (40,000 kg → 1,680,000 MJ)'], 'intent': 'calculate_total_energy_released', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50000, 0.8, 42], 'units': {'volume': 'liters', 'density': 'kg/liter', 'energy': 'MJ', 'conversion': '1 liter fuel = 0.8 kg; 1 kg fuel = 42 MJ'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station owned by an oil company sells 2,000,000 liters of gasoline daily, with each liter emitting 2.5 kilograms of carbon. If the company operates 20,000 such gas stations globally, all running non-stop throughout the year, what is the total annual carbon emissions generated by the company from gasoline sales? If the global annual carbon emission limit is 20,000,000,000 kilograms, what percentage of global emissions does this company account for?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (2000000 * 2.5 * 20000 * 365) AS Total_Carbon_Emission_Kg, ((2000000 * 2.5 * 20000 * 365) / 20000000000) * 100 AS Carbon_Emission_Percentage FROM company WHERE Company_ID = '指定公司ID';",
        "db_id": "gas"
    },
    {
        "id": 172,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'gas stations', 'diesel', '8,000 gas stations', '4,000 liters per station per day', '$0.40 net profit per liter', '20% operating costs'], 'relations': ['company_to_stations (oil company → 8,000 gas stations)', 'station_to_sales (gas station → 4,000 liters/day)', 'product_to_profit (diesel → $0.40/liter net profit)', 'profit_to_costs (20% operating costs → 80% net profit retention)'], 'intent': 'calculate_annual_net_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8000, 4000, 0.4, 20, 365], 'units': {'stations': 'count', 'sales_volume': 'liters/day', 'profit': 'dollars/liter', 'costs': 'percentage (%)', 'time': 'days/year'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}, {'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}, {'column': 'Tax_per_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的税收（美元）。', 'examples': ['0.3', '0.28', '0.35', '0.25', '0.32']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}]}}\nA physical knowledge question is as follows:\nIf a gas station has a fuel inventory of 50,000 liters and the carbon emissions of the fuel are 2.5 grams per liter, what is the total carbon emissions of the fuel currently in the station's inventory?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * Carbon_Emission AS Total_Carbon_Emission FROM gas WHERE Stock_Liters = 50000 AND Carbon_Emission = 2.5;",
        "db_id": "gas"
    },
    {
        "id": 173,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA mathematical logic question is as follows:\nThe net profit margin of an oil company is 8%, with sales of $50 billion. Calculate the company's net profit. If the company wants to increase its net profit to $5 billion, how much should the sales reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit, 50 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Sales = 500 AND Net_Profit_Margin = 8;",
        "db_id": "gas"
    },
    {
        "id": 174,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', '20,000 gas stations', 'gasoline', '2,000,000 liters/day', '2.5 kg/liter', '20,000,000,000 kg global limit'], 'relations': ['company_to_gas_stations (ownership)', 'gas_station_to_fuel_sales (daily volume)', 'fuel_type_to_carbon_emission (gasoline → 2.5 kg/liter)', 'company_emissions_to_global_limit (percentage calculation)'], 'intent': 'calculate_annual_carbon_emissions_and_global_percentage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2000000, 2.5, 20000, 365, 20000000000], 'units': {'volume': 'liters', 'mass': 'kilograms', 'time': 'days/year', 'percentage': '%'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.company': [{'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}]}}\nA common sense reasoning question is as follows:\nThe minimum inventory alert for a certain gas station is 10,000 liters, and the current inventory is 15,000 liters with a daily average sales volume of 2,000 liters. How many more days can the gas station operate normally?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters - Minimum_Stock_Liters) / 2000 AS Operational_Days FROM gas WHERE Stock_Liters = 15000 AND Minimum_Stock_Liters = 10000;",
        "db_id": "gas"
    },
    {
        "id": 175,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station inventory 50,000 liters', 'carbon emissions 2.5 grams/liter'], 'relations': ['inventory_to_emissions (50,000 liters × 2.5 grams/liter → total emissions)'], 'intent': 'calculate_total_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000, 2.5], 'units': {'volume': 'liters', 'emissions_rate': 'grams per liter', 'total_emissions': 'grams (calculated as 50,000 × 2.5 = 125,000 grams)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station has a total fuel capacity of 1,000,000 liters, with a current inventory of 999,999 liters. The price per liter of fuel is $1.5. If the gas station suddenly receives an order requesting a one-time purchase of 1,000,000 liters of fuel, can the transaction be completed? If not, what is the maximum amount that can be sold?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT LEAST(1000000, Stock_Liters) AS Available_Stock FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 1000000) AND Stock_Liters = 999999;",
        "db_id": "gas"
    },
    {
        "id": 176,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'net profit margin 8%', 'sales $50 billion', 'target net profit $5 billion'], 'relations': ['company_to_financials (oil company → financial metrics)', 'profit_margin_to_sales (8% applied to $50 billion)', 'target_profit_to_required_sales ($5 billion requires recalculating sales)'], 'intent': 'calculate_current_net_profit_and_required_sales_increase', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 50, 5], 'units': {'net_profit_margin': '% (percentage)', 'sales': '$ billion (monetary unit)', 'profit': '$ billion (monetary unit)', 'calculation': 'Profit = Sales × Net Profit Margin'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}]}}\nA physical knowledge question is as follows:\nA gas station has a fuel inventory of 80,000 liters, with a fuel density of 0.85 kg/liter and a calorific value of 45 MJ/kg. Calculate the total energy released when the current fuel inventory at the gas station is completely burned.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.85 * 45 AS Total_Energy FROM gas WHERE Stock_Liters = 80000;",
        "db_id": "gas"
    },
    {
        "id": 177,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station inventory', 'minimum inventory alert 10,000 liters', 'current inventory 15,000 liters', 'daily average sales volume 2,000 liters'], 'relations': ['inventory_threshold (10,000 liters)', 'stock_gap (5,000 liters = 15,000 - 10,000)', 'operating_days (5,000 / 2,000 = 2.5 days)'], 'intent': 'calculate_operating_days_until_min_inventory', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15000, 10000, 2000], 'units': {'inventory': 'liters', 'sales_volume': 'liters/day', 'operating_days': 'days', 'calculation': 'ΔStock = 15,000 - 10,000 = 5,000 liters; Days = 5,000 / 2,000 = 2.5 days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nA petroleum company has sales of $75 billion, a net profit margin of 12%, and total assets of $200 billion. Calculate the company's net profit and return on assets (ROA). If the company aims to increase its net profit to $10 billion, how much sales will it need to achieve?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit, (Sales * (Net_Profit_Margin / 100)) / Assets AS ROA, 100 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Sales = 750 AND Net_Profit_Margin = 12 AND Assets = 2000;",
        "db_id": "gas"
    },
    {
        "id": 178,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station capacity 1,000,000 liters', 'current inventory 999,999 liters', 'requested order 1,000,000 liters'], 'relations': ['capacity_to_inventory (1,000,000 → 999,999)', 'order_to_inventory (1,000,000 > 999,999)'], 'intent': 'check_transaction_feasibility_and_calculate_max_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 999999], 'units': {'fuel': 'liters', 'price': '$1.5/liter (not directly impacting feasibility)', 'calculation': 'max_sales = min(capacity, inventory)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nThe minimum inventory warning for a gas station is 15,000 liters, the current inventory is 25,000 liters, and the average daily sales volume is 3,000 liters. If the next fuel delivery is expected to arrive in 7 days, will the gas station trigger an inventory warning?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (Stock_Liters - (3000 * 7)) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning FROM gas WHERE Stock_Liters = 25000 AND Minimum_Stock_Liters = 15000;",
        "db_id": "gas"
    },
    {
        "id": 179,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 80,000 liters', 'fuel density 0.85 kg/liter', 'calorific value 45 MJ/kg'], 'relations': ['volume_to_mass_conversion (80,000 liters × 0.85 kg/liter)', 'mass_to_energy_conversion (68,000 kg × 45 MJ/kg)'], 'intent': 'calculate_total_energy_released', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80000, 0.85, 45], 'units': {'volume': 'liters', 'density': 'kg/liter', 'calorific_value': 'MJ/kg', 'energy': 'MJ (megajoules) = liters × kg/liter × MJ/kg'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station has a total fuel capacity of 1,500,000 liters, with a current inventory of 1,499,999 liters. The price per liter of fuel is $2. If the station suddenly receives an order requesting a one-time purchase of 1,500,001 liters of fuel, can the transaction be completed? If not, what is the maximum number of liters that can be sold?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 1500001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete, LEAST(1500001, Stock_Liters) AS Max_Sellable FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 1500000) AND Stock_Liters = 1499999;",
        "db_id": "gas"
    },
    {
        "id": 180,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', 'sales $75 billion', 'net profit margin 12%', 'total assets $200 billion', 'target net profit $10 billion'], 'relations': ['sales_to_profit (Sales × Net_Profit_Margin → Profit)', 'profit_to_roa (Profit ÷ Assets → ROA)', 'target_profit_to_required_sales (Target_Profit ÷ Net_Profit_Margin → Required_Sales)'], 'intent': 'calculate_financial_metrics_and_sales_target', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [75, 12, 200, 10], 'units': {'currency': 'billion USD', 'profit_margin': '% (percentage)', 'roa': '% (percentage, derived from profit/assets)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}]}}\nA physical knowledge question is as follows:\nA gas station's fuel inventory is 120,000 liters, with a fuel combustion efficiency of 85%. Each liter of fuel releases 35 megajoules of energy upon combustion. Calculate the total actual usable energy available after completely burning the current fuel inventory at the gas station.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 35 * 0.85 AS Available_Energy FROM gas WHERE Stock_Liters = 120000;",
        "db_id": "gas"
    },
    {
        "id": 181,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current inventory 25,000 liters', 'minimum inventory warning 15,000 liters', 'average daily sales volume 3,000 liters', 'next fuel delivery 7 days'], 'relations': ['inventory_depletion (remaining_stock = current_stock - daily_sales * delivery_days)', 'warning_condition (remaining_stock < minimum_stock)'], 'intent': 'predict_inventory_warning_status', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [25000, 15000, 3000, 7], 'units': {'stock_volume': 'liters', 'time': 'days', 'calculation': '25000 liters - (3000 liters/day * 7 days) = 4000 liters remaining'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $90 billion, a net profit margin of 15%, total assets of $300 billion, and debt of $120 billion. Calculate the company's net profit, return on assets (ROA), and debt-to-equity ratio. If the company aims to increase its net profit to $15 billion, how much must its sales reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit, (Sales * (Net_Profit_Margin / 100)) / Assets AS ROA, Debt_Equity_Ratio AS Debt_to_Equity_Ratio, 150 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Sales = 900 AND Net_Profit_Margin = 15 AND Assets = 3000 AND Debt_Equity_Ratio = 1200;",
        "db_id": "gas"
    },
    {
        "id": 182,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total fuel capacity 1,500,000 liters', 'current inventory 1,499,999 liters', 'order 1,500,001 liters', 'price per liter $2'], 'relations': ['capacity_to_inventory (1,500,000 liters - 1,499,999 liters = 1 liter unused capacity)', 'order_vs_inventory (1,500,001 liters > 1,499,999 liters)'], 'intent': 'validate_transaction_feasibility_and_calculate_max_liters', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1500000, 1499999, 1500001, 2], 'units': {'volume': 'liters', 'currency': '$ (USD)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA common sense reasoning question is as follows:\nThe minimum inventory alert for a certain gas station is 25,000 liters, with the current inventory at 40,000 liters and an average daily sales volume of 5,000 liters. If the next fuel delivery is expected to arrive in 6 days, will the gas station trigger an inventory alert? If so, how many days in advance should the inventory be replenished to avoid the alert?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (Stock_Liters - (5000 * 6)) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning, CASE WHEN (Stock_Liters - (5000 * 6)) < Minimum_Stock_Liters THEN (Stock_Liters - Minimum_Stock_Liters) / 5000 ELSE 0 END AS Days_To_Advance FROM gas WHERE Stock_Liters = 40000 AND Minimum_Stock_Liters = 25000;",
        "db_id": "gas"
    },
    {
        "id": 183,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 120,000 liters', 'combustion efficiency 85%', '35 megajoules per liter'], 'relations': ['inventory_to_energy (120,000L × 35MJ/L)', 'efficiency_adjustment (× 0.85)'], 'intent': 'calculate_total_actual_usable_energy', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120000, 85, 35], 'units': {'fuel_volume': 'liters', 'energy': 'megajoules (MJ)', 'efficiency': '% (converted to decimal 0.85)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nThe total fuel capacity of a gas station is 3,000,000 liters, with a current inventory of 2,999,999 liters, and the price per liter of fuel is $2.5. If the gas station suddenly receives an order requesting a one-time purchase of 3,000,001 liters of fuel, can the transaction be completed? If not, what is the maximum amount that can be sold? If the order requests a purchase of 5,000,000 liters of fuel, can the transaction be completed?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 3000001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_1, LEAST(3000001, Stock_Liters) AS Max_Sellable_1, CASE WHEN 5000000 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_2 FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 3000000) AND Stock_Liters = 2999999;",
        "db_id": "gas"
    },
    {
        "id": 184,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $90 billion', 'net profit margin 15%', 'total assets $300 billion', 'debt $120 billion', 'target net profit $15 billion'], 'relations': ['company_to_financials (company → financial metrics)', 'profit_calculation (sales × profit margin)', 'roa_calculation (profit ÷ assets)', 'debt_equity_ratio (debt ÷ equity)', 'target_sales (target_profit ÷ profit_margin)'], 'intent': 'calculate_financial_metrics_and_forecast_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [90, 15, 300, 120, 15], 'units': {'currency': 'billion USD', 'percentage': 'net profit margin (15%)', 'roa': 'decimal (profit ÷ assets)', 'debt_to_equity': 'ratio (debt ÷ equity)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt'}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}]}}\nA physical knowledge question is as follows:\nThe gasoline station has a fuel inventory of 200,000 liters, with a combustion efficiency of 90%. Each liter of fuel releases 38 megajoules of energy upon combustion. Calculate the total actual usable energy available when the current inventory of fuel at the gasoline station is completely burned.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 38 * 0.9 AS Available_Energy FROM gas WHERE Stock_Liters = 200000;",
        "db_id": "gas"
    },
    {
        "id": 185,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'minimum inventory 25,000 liters', 'current inventory 40,000 liters', 'average daily sales 5,000 liters', 'next delivery 6 days'], 'relations': ['inventory_depletion (40,000 - 5,000*6 = 10,000 liters)', 'alert_threshold (25,000 liters > 10,000 liters)', 'replenishment_days (d where 40,000 - 5,000*d ≥ 25,000)'], 'intent': 'predict_inventory_alert_and_replenishment_timing', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [25000, 40000, 5000, 6], 'units': {'volume': 'liters', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $150 billion, a net profit margin of 20%, total assets of $500 billion, and debt of $200 billion. Calculate the company's net profit, return on assets (ROA), and return on equity (ROE). If the company aims to increase its net profit to $30 billion, how much sales would be required?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit, (Sales * (Net_Profit_Margin / 100)) / Assets AS ROA, (Sales * (Net_Profit_Margin / 100)) / (Assets - (Assets * Debt_Equity_Ratio / (Debt_Equity_Ratio + 1))) AS ROE, 300 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Sales = 1500 AND Net_Profit_Margin = 20 AND Assets = 5000 AND Debt_Equity_Ratio = 2000;",
        "db_id": "gas"
    },
    {
        "id": 186,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station', 'gas', 'fuel_order_3000001_liters', 'fuel_order_5000000_liters'], 'relations': ['gas_station_capacity (gas_station.Capacity_Liters = 3,000,000 liters)', 'current_inventory (gas.Stock_Liters = 2,999,999 liters)', 'price_relation (gas.Price_Liter = $2.5)', 'order_capacity_check (3,000,001 > Capacity_Liters)', 'max_sale_limit (Capacity_Liters - Stock_Liters = 1 liter deficit)'], 'intent': 'determine_transaction_feasibility_and_max_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3000000, 2999999, 2.5, 3000001, 5000000], 'units': {'volume': 'liters', 'price': 'USD per liter', 'capacity_deficit': '1 liter (3,000,001 - 2,999,999)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nA gas station has a minimum inventory warning threshold of 30,000 liters, with a current inventory of 50,000 liters and an average daily sales volume of 6,000 liters. If the next fuel delivery is expected to arrive in 7 days, will this gas station trigger the inventory warning? If so, how many days in advance should they replenish inventory to avoid the warning?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (Stock_Liters - (6000 * 7)) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning, CASE WHEN (Stock_Liters - (6000 * 7)) < Minimum_Stock_Liters THEN (Stock_Liters - Minimum_Stock_Liters) / 6000 ELSE 0 END AS Days_To_Advance FROM gas WHERE Stock_Liters = 50000 AND Minimum_Stock_Liters = 30000;",
        "db_id": "gas"
    },
    {
        "id": 187,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 200,000 liters', 'combustion efficiency 90%', 'energy 38 megajoules per liter'], 'relations': ['inventory_to_energy (200,000 L × 38 MJ/L)', 'efficiency_to_total_energy (total energy × 90%)'], 'intent': 'calculate_total_usable_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200000, 38, 90], 'units': {'volume': 'liters', 'energy': 'megajoules (MJ)', 'efficiency': 'percent (%)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nA certain gas station has a total fuel capacity of 5,000,000 liters, with a current inventory of 4,999,999 liters. The price per liter of fuel is $3. If the gas station suddenly receives an order requesting a one-time purchase of 5,000,001 liters of fuel, can the transaction be completed? If not, what is the maximum number of liters that can be sold? If the order requests the purchase of 10,000,000 liters of fuel, can the transaction be completed?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 5000001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_1, LEAST(5000001, Stock_Liters) AS Max_Sellable_1, CASE WHEN 10000000 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_2 FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 5000000) AND Stock_Liters = 4999999;",
        "db_id": "gas"
    },
    {
        "id": 188,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $150 billion', 'net profit margin 20%', 'total assets $500 billion', 'debt $200 billion', 'target net profit $30 billion'], 'relations': ['sales_to_profit (Sales × Net_Profit_Margin = Net_Profit)', 'total_assets_to_debt (Total_Assets - Debt = Equity)', 'target_profit_to_required_sales (Target_Net_Profit / Net_Profit_Margin = Required_Sales)'], 'intent': 'calculate_financial_metrics', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [150, 20, 500, 200, 30], 'units': {'currency': 'billion USD', 'percentage': '% (net profit margin)', 'ratios': 'ROA = Net_Profit / Total_Assets, ROE = Net_Profit / (Total_Assets - Debt)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt'}]}}\nA physical knowledge question is as follows:\nThe fuel inventory at a gas station is 300,000 liters, with a combustion efficiency of 88%. Each liter of fuel releases 42 megajoules of energy when burned. Calculate the total actual usable energy if the current fuel inventory is completely burned.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 42 * 0.88 AS Available_Energy FROM gas WHERE Stock_Liters = 300000;",
        "db_id": "gas"
    },
    {
        "id": 189,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['minimum inventory threshold 30,000 liters', 'current inventory 50,000 liters', 'average daily sales 6,000 liters', 'next delivery in 7 days'], 'relations': ['inventory_comparison (current vs minimum)', 'time_to_depletion (sales rate × days)'], 'intent': 'predict_inventory_warning_trigger_and_replenishment_schedule', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30000, 50000, 6000, 7], 'units': {'volume': 'liters', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $200 billion, a net profit margin of 25%, total assets of $600 billion, and debt of $250 billion. Calculate the company's net profit, return on assets (ROA), and return on equity (ROE). If the company wants to increase its net profit to $50 billion, how much must its sales reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit, (Sales * (Net_Profit_Margin / 100)) / Assets AS ROA, (Sales * (Net_Profit_Margin / 100)) / (Assets - (Assets * Debt_Equity_Ratio / (Debt_Equity_Ratio + 1))) AS ROE, 500 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Sales = 2000 AND Net_Profit_Margin = 25 AND Assets = 6000 AND Debt_Equity_Ratio = 2500;",
        "db_id": "gas"
    },
    {
        "id": 190,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station capacity 5,000,000 liters', 'gas stock 4,999,999 liters', 'order 5,000,001 liters', 'order 10,000,000 liters', 'price $3/liter'], 'relations': ['capacity vs stock (available volume)', 'order_vs_stock (5,000,001 > 4,999,999)', 'order_vs_capacity (10,000,000 > 5,000,000)'], 'intent': 'determine_order_fulfillment_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000, 4999999, 5000001, 10000000, 3], 'units': {'volume': 'liters', 'price': '$ per liter', 'available_volume': '4,999,999 liters (stock)', 'max_capacity': '5,000,000 liters'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}]}}\nA common sense reasoning question is as follows:\nA gas station has a minimum inventory warning threshold of 40,000 liters, with the current inventory at 70,000 liters and an average daily sales volume of 8,000 liters. If the next fuel delivery is expected to arrive in 10 days, will this gas station trigger the inventory warning? If so, how many days in advance does the inventory need to be replenished to avoid the warning?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (Stock_Liters - (8000 * 10)) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning, CASE WHEN (Stock_Liters - (8000 * 10)) < Minimum_Stock_Liters THEN (Stock_Liters - Minimum_Stock_Liters) / 8000 ELSE 0 END AS Days_To_Advance FROM gas WHERE Stock_Liters = 70000 AND Minimum_Stock_Liters = 40000;",
        "db_id": "gas"
    },
    {
        "id": 191,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 300,000 liters', 'combustion efficiency 88%', '42 megajoules per liter'], 'relations': ['inventory_to_energy (300,000 liters → total energy)', 'efficiency_factor (88% → usable energy ratio)', 'energy_per_liter (42 MJ/liter)'], 'intent': 'calculate_total_usable_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [300000, 88, 42], 'units': {'volume': 'liters', 'energy_density': 'megajoules per liter (MJ/l)', 'efficiency': '% (unitless ratio)', 'total_energy': 'megajoules (MJ)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nThe total fuel capacity of a gas station is 10,000,000 liters, with a current inventory of 9,999,999 liters, and the price per liter of fuel is $4. If the gas station suddenly receives an order requesting a one-time purchase of 10,000,001 liters of fuel, can the transaction be completed? If not, what is the maximum amount that can be sold? If the order requests a purchase of 20,000,000 liters of fuel, can the transaction be completed?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 10000001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_1, LEAST(10000001, Stock_Liters) AS Max_Sellable_1, CASE WHEN 20000000 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_2 FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 10000000) AND Stock_Liters = 9999999;",
        "db_id": "gas"
    },
    {
        "id": 192,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['$200 billion sales', '25% net profit margin', '$600 billion total assets', '$250 billion debt', '$50 billion target net profit'], 'relations': ['sales_to_profit (Net Profit = Sales × Net Profit Margin)', 'profit_to_roa (ROA = Net Profit ÷ Total Assets)', 'equity_derivation (Equity = Total Assets - Debt)', 'profit_to_roe (ROE = Net Profit ÷ Equity)', 'target_sales_calculation (Target Sales = Target Profit ÷ Net Profit Margin)'], 'intent': 'calculate_financial_metrics_and_target_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [200, 25, 600, 250, 50], 'units': {'currency': 'billion USD', 'percentage': '%', 'roa': 'non-dimensional ratio', 'roe': 'non-dimensional ratio', 'conversion': '25% = 0.25 (decimal conversion)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt'}]}}\nA physical knowledge question is as follows:\nA gas station has a fuel inventory of 500,000 liters, with a combustion efficiency of 92%. Each liter of fuel releases 46 megajoules of energy upon combustion. Calculate the total actually available energy if all the fuel in the current inventory is completely burned. If the carbon emission of the fuel is 2.8 grams per liter, calculate the total carbon emissions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 46 * 0.92 AS Available_Energy, Stock_Liters * 2.8 AS Total_Carbon_Emission FROM gas WHERE Stock_Liters = 500000;",
        "db_id": "gas"
    },
    {
        "id": 193,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current inventory 70,000 liters', 'minimum inventory threshold 40,000 liters', 'average daily sales 8,000 liters', 'next delivery in 10 days'], 'relations': ['inventory_depletion_rate (8,000 liters/day)', 'time_to_threshold (Δt = ? days)', 'delivery_schedule (10 days vs critical days)'], 'intent': 'determine_inventory_warning_trigger_and_replenishment_timing', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [70000, 40000, 8000, 10], 'units': {'volume': 'liters', 'time': 'days', 'conversion': 'inventory depletion rate = 8,000 liters/day'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $400 billion, a net profit margin of 28%, total assets of $1,000 billion, and debt of $400 billion. Calculate the company's net profit, return on assets (ROA), return on equity (ROE), and debt-to-equity ratio. If the company wants to increase its net profit to $120 billion, how much must sales reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit, (Sales * (Net_Profit_Margin / 100)) / Assets AS ROA, (Sales * (Net_Profit_Margin / 100)) / (Assets - (Assets * Debt_Equity_Ratio / (Debt_Equity_Ratio + 1))) AS ROE, Debt_Equity_Ratio AS Debt_to_Equity_Ratio, 1200 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Sales = 4000 AND Net_Profit_Margin = 28 AND Assets = 10000 AND Debt_Equity_Ratio = 4000;",
        "db_id": "gas"
    },
    {
        "id": 194,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station', 'fuel_order_10000001_liters', 'fuel_order_20000000_liters', 'current_inventory_9999999_liters', 'total_capacity_10000000_liters', 'price_per_liter_$4'], 'relations': ['gas_station_capacity (gas_station → Capacity_Liters=10,000,000)', 'current_inventory_level (gas_station → Stock_Liters=9,999,999)', 'order_volume_comparison (10,000,001 > 9,999,999)', 'price_calculation (9,999,999 × $4)'], 'intent': 'transaction_feasibility_assessment', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000, 9999999, 10000001, 20000000, 4], 'units': {'volume': 'liters', 'currency': '$ (USD)', 'feasibility_threshold': 'capacity_vs_order_difference=1 liter shortage'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}]}}\nA common sense reasoning question is as follows:\nA gas station has a minimum inventory warning threshold of 80,000 liters, with a current inventory of 150,000 liters and a daily average sales volume of 15,000 liters. If the next fuel delivery is expected to arrive in 12 days, will the gas station trigger the inventory warning? If so, how many days in advance should the inventory be replenished to avoid the warning? What would happen if the daily sales volume increased to 20,000 liters?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (Stock_Liters - (15000 * 12)) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning, CASE WHEN (Stock_Liters - (15000 * 12)) < Minimum_Stock_Liters THEN (Stock_Liters - Minimum_Stock_Liters) / 15000 ELSE 0 END AS Days_To_Advance, CASE WHEN (Stock_Liters - (20000 * 12)) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning_New_Sales FROM gas WHERE Stock_Liters = 150000 AND Minimum_Stock_Liters = 80000;",
        "db_id": "gas"
    },
    {
        "id": 195,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 500,000 liters', 'combustion efficiency 92%', 'energy 46 megajoules/liter', 'carbon emission 2.8 grams/liter'], 'relations': ['inventory_to_energy (total_energy = 500,000 * 46 * 0.92)', 'inventory_to_emissions (total_emissions = 500,000 * 2.8)'], 'intent': 'calculate_total_available_energy_and_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500000, 0.92, 46, 2.8], 'units': {'energy': 'megajoules (MJ)', 'emissions': 'grams (g)', 'conversion': 'combustion efficiency (92%) applied to energy calculation'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station has a total fuel capacity of 20,000,000 liters, with a current inventory of 19,999,999 liters, and the price per liter of fuel is $6. If the gas station suddenly receives an order requesting a one-time purchase of 20,000,001 liters of fuel, can the transaction be completed? If not, what is the maximum amount that can be sold? If the order requests the purchase of 50,000,000 liters of fuel, can the transaction be completed? If the fuel price suddenly rises to $10 per liter, what would be the total amount of the order?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 20000001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_1, LEAST(20000001, Stock_Liters) AS Max_Sellable_1, CASE WHEN 50000000 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_2, 50000000 * 10 AS Order_Total_Amount FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 20000000) AND Stock_Liters = 19999999;",
        "db_id": "gas"
    },
    {
        "id": 196,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $400 billion', 'net profit margin 28%', 'total assets $1,000 billion', 'debt $400 billion', 'target net profit $120 billion'], 'relations': ['company_to_financials (oil company → financial metrics)', 'profit_calculation (sales × net profit margin)', 'ROA (net profit / total assets)', 'equity_derivation (total assets - debt)', 'ROE (net profit / equity)', 'debt_to_equity_ratio (debt / equity)', 'target_sales (target net profit / net profit margin)'], 'intent': 'calculate_financial_metrics_and_target_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [400, 28, 1000, 400, 120], 'units': {'currency': 'billion USD', 'percentages': '% (net profit margin)', 'ratios': 'unitless (ROA, ROE, debt-to-equity)', 'conversion': 'equity = assets - debt'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt'}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA physical knowledge question is as follows:\nA gas station has a fuel inventory of 600,000 liters, with the fuel having a density of 0.83 kg/liter and a calorific value of 47 MJ/kg. Calculate the total energy released when the current fuel inventory is completely combusted. If the sulfur content of the fuel is 50 parts per million, calculate the total sulfur content.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.83 * 47 AS Total_Energy, Stock_Liters * 50 AS Total_Sulfur_Content FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 197,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['minimum inventory warning threshold 80,000 liters', 'current inventory 150,000 liters', 'daily average sales volume 15,000 liters', 'next fuel delivery in 12 days', 'increased daily sales volume 20,000 liters'], 'relations': ['inventory_depletion_rate (15,000 liters/day)', 'time_to_delivery (12 days)', 'threshold_comparison (current inventory vs. minimum threshold)', 'scenario_change (sales increase to 20,000 liters/day)'], 'intent': 'predict_inventory_threshold_violation_and_replenishment_timing', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80000, 150000, 15000, 12, 20000], 'units': {'inventory_volume': 'liters', 'sales_rate': 'liters/day', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $550 billion, a net profit margin of 32%, total assets of $1,300 billion, and debt of $550 billion. Calculate the company's net profit, return on assets (ROA), return on equity (ROE), and debt-to-equity ratio. If the company wants to increase its net profit to $180 billion, how much must sales reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * Net_Profit_Margin / 100 AS Net_Profit, (Sales * Net_Profit_Margin / 100) / Assets AS ROA, (Sales * Net_Profit_Margin / 100) / (Assets - 550) AS ROE, 550 / (Assets - 550) AS Debt_to_Equity_Ratio, 1800 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Company_ID = '指定的公司ID';",
        "db_id": "gas"
    },
    {
        "id": 198,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station capacity 20,000,000 liters', 'current inventory 19,999,999 liters', 'order request 20,000,001 liters', 'order request 50,000,000 liters', 'fuel price $6/liter', 'fuel price $10/liter'], 'relations': ['capacity_vs_inventory (20,000,000 - 19,999,999 = 1 liter remaining)', 'order_to_inventory (20,000,001 > 19,999,999)', 'order_to_capacity (50,000,000 > 20,000,000)', 'price_impact ($10/liter × 50,000,000 liters)'], 'intent': 'evaluate_fuel_order_feasibility_and_calculate_total_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000000, 19999999, 20000001, 50000000, 6, 10], 'units': {'volume': 'liters', 'currency': '$ (USD)', 'conversion': '1 order liter = $price/liter'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}]}}\nA common sense reasoning question is as follows:\nA gas station has a minimum inventory alert threshold of 100,000 liters, with its current inventory at 200,000 liters and a daily average sales volume of 20,000 liters. If the next fuel delivery is expected to arrive in 15 days, will the gas station trigger the inventory alert? If so, how many days in advance should inventory be replenished to avoid the alert? How would the situation change if the daily sales volume increases to 25,000 liters?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Stock_Liters - (20000 * 15) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning, CASE WHEN Stock_Liters - (20000 * 15) < Minimum_Stock_Liters THEN (Stock_Liters - Minimum_Stock_Liters) / 20000 ELSE 0 END AS Days_To_Advance, CASE WHEN Stock_Liters - (25000 * 15) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning_Increase FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 199,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 600,000 liters', 'density 0.83 kg/liter', 'calorific value 47 MJ/kg', 'sulfur content 50 ppm'], 'relations': ['volume_to_mass (600,000 liters × 0.83 kg/liter = 498,000 kg)', 'mass_to_energy (498,000 kg × 47 MJ/kg = 23,406,000 MJ)', 'sulfur_content (498,000 kg × 50 ppm = 24,900 kg of sulfur)'], 'intent': 'calculate_total_energy_and_sulfur_content', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [600000, 0.83, 47, 50], 'units': {'volume': 'liters', 'density': 'kg/liter', 'energy': 'MJ (megajoules)', 'sulfur_content': 'ppm (parts per million)', 'mass': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station has a total fuel capacity of 30,000,000 liters, with current inventory at 29,999,999 liters, and the price per liter is $7. If the station suddenly receives an order requesting a one-time purchase of 30,000,001 liters of fuel, can the transaction be completed? If not, what is the maximum number of liters that can be sold? If the order requests 60,000,000 liters of fuel, can the transaction be completed? If the fuel price suddenly rises to $12 per liter, what would the total order amount be?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 30000001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_Transaction, LEAST(30000001, Stock_Liters) AS Max_Sellable_Liters, CASE WHEN 60000000 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_Large_Transaction, 60000000 * 12 AS Total_Order_Amount FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 200,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $550 billion', 'net profit margin 32%', 'total assets $1,300 billion', 'debt $550 billion', 'target net profit $180 billion'], 'relations': ['sales_to_profit (Sales × Net_Profit_Margin)', 'assets_to_debt (Total_Assets - Debt = Equity)', 'profit_to_sales (Net_Profit ÷ Net_Profit_Margin = Required_Sales)'], 'intent': 'calculate_financial_metrics_and_required_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [550, 32, 1300, 550, 180], 'units': {'currency': 'billion USD', 'ratio': 'unitless (ROA, ROE, Debt-to-Equity)', 'percentage': '% (Net Profit Margin)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt'}]}}\nA physical knowledge question is as follows:\nA certain gas station has a fuel inventory of 500,000 liters, with a fuel density of 0.85 kg/liter and a calorific value of 45 MJ/kg. Calculate the total energy released when the current inventory of fuel at the gas station is completely burned. If the sulfur content of the fuel is 40 parts per million, calculate the total sulfur content.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.85 * 45 AS Total_Energy, Stock_Liters * 40 AS Total_Sulfur_Content FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 201,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station inventory', 'minimum_inventory_alert_threshold', 'current_inventory', 'daily_average_sales_volume', 'next_delivery_days', 'increased_sales_volume'], 'relations': ['inventory_alert_threshold (minimum_inventory_alert_threshold → 100,000 liters)', 'current_inventory_level (current_inventory → 200,000 liters)', 'sales_impact_on_inventory (daily_average_sales_volume → 20,000 liters/day)', 'delivery_schedule (next_delivery_days → 15 days)', 'scenario_variation (increased_sales_volume → 25,000 liters/day)'], 'intent': 'calculate_inventory_alert_trigger_and_replenishment_timing', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 200000, 20000, 15, 25000], 'units': {'inventory': 'liters (L)', 'sales': 'liters/day (L/day)', 'delivery_time': 'days (d)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $600 billion, a net profit margin of 30%, total assets of $1,400 billion, and debt of $600 billion. Calculate the company's net profit, return on assets (ROA), return on equity (ROE), and debt-to-equity ratio. If the company wants to increase its net profit to $200 billion, how much must its sales reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * Net_Profit_Margin / 100 AS Net_Profit, (Sales * Net_Profit_Margin / 100) / Assets AS ROA, (Sales * Net_Profit_Margin / 100) / (Assets - 600) AS ROE, 600 / (Assets - 600) AS Debt_to_Equity_Ratio, 2000 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Company_ID = '指定的公司ID';",
        "db_id": "gas"
    },
    {
        "id": 202,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'total fuel capacity 30,000,000 liters', 'current inventory 29,999,999 liters', 'price per liter $7', 'order 30,000,001 liters', 'order 60,000,000 liters', 'new price $12 per liter'], 'relations': ['station_to_capacity (gas_station.Capacity_Liters)', 'inventory_to_order (Stock_Liters < Order_Quantity)', 'price_to_order_cost (Price_Liter × Quantity)', 'capacity_to_inventory (Capacity_Liters - Stock_Liters = 1 liter remaining)'], 'intent': 'assess_transaction_feasibility_and_calculate_max_volume_and_total_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30000000, 29999999, 7, 30000001, 60000000, 12], 'units': {'volume': 'liters', 'price': '$ (USD)', 'cost': '$ (USD) (volume × price)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nA gas station has a minimum inventory alert threshold of 150,000 liters, with a current inventory of 300,000 liters and a daily average sales volume of 25,000 liters. If the next fuel delivery is expected to arrive in 20 days, will the gas station trigger the inventory alert? If yes, how many days in advance should the inventory be replenished to avoid the alert? How would the situation change if the daily sales volume increases to 30,000 liters?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Stock_Liters - (25000 * 20) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning, CASE WHEN Stock_Liters - (25000 * 20) < Minimum_Stock_Liters THEN (Stock_Liters - Minimum_Stock_Liters) / 25000 ELSE 0 END AS Days_To_Advance, CASE WHEN Stock_Liters - (30000 * 20) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning_Increase FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 203,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 500000 liters', 'fuel density 0.85 kg/liter', 'calorific value 45 MJ/kg', 'sulfur content 40 ppm'], 'relations': ['volume_to_mass (500000 liters → 425000 kg)', 'total_energy (425000 kg × 45 MJ/kg = 19,125,000 MJ)', 'sulfur_total (425000 kg × 40 ppm = 17,000,000 mg = 17 kg)'], 'intent': 'calculate_total_energy_and_sulfur', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500000, 0.85, 45, 40], 'units': {'volume': 'liters', 'density': 'kg/liter', 'energy': 'MJ/kg (calorific value)', 'sulfur': 'ppm (parts per million)', 'conversion': '1 ppm = 1 mg/kg for sulfur content'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}]}}\nA hypothetical reasoning question is as follows:\nThe total fuel capacity of a gas station is 50,000,000 liters, with a current inventory of 49,999,999 liters and a fuel price of $10 per liter. If the gas station suddenly receives an order request to purchase 50,000,001 liters of fuel at once, can the transaction be completed? If not, what is the maximum amount that can be sold? If the order requests the purchase of 100,000,000 liters of fuel, can the transaction be completed? If the fuel price suddenly rises to $15 per liter, what would be the total amount of the order?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 50000001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_Transaction, LEAST(50000001, Stock_Liters) AS Max_Sellable_Liters, CASE WHEN 100000000 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_Large_Transaction, 100000000 * 15 AS Total_Order_Amount FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 204,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"company\", \"sales $600 billion\", \"net profit margin 30%\", \"total assets $1,400 billion\", \"debt $600 billion\", \"target net profit $200 billion\"],\n  \"relations\": [\n    \"financial_metric_to_formula (net_profit = sales × net_profit_margin)\",\n    \"financial_ratio_to_formula (ROA = net_profit / total_assets)\",\n    \"financial_ratio_to_formula (ROE = net_profit / equity)\",\n    \"financial_ratio_to_formula (debt_to_equity = debt / equity)\",\n    \"sales_target_to_formula (required_sales = target_net_profit / net_profit_margin)\"\n  ],\n  \"intent\": \"calculate_financial_metrics_and_sales_target\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [600, 30, 1400, 600, 200],\n  \"units\": {\n    \"currency\": \"billion USD\",\n    \"percentage\": \"% (net profit margin)\",\n    \"ratios\": \"dimensionless (ROA, ROE, debt-to-equity)\"\n  },\n  \"required_tables\": [\"company\"],\n  \"required_fields\": [\n    \"company.Sales\",\n    \"company.Net_Profit_Margin\",\n    \"company.Assets\",\n    \"company.Debt_Equity_Ratio\"  // Note: Debt value used in calculation isn't directly stored in the database schema provided, but derived from user input\n  ]\n}\nA physical knowledge question is as follows:\nA gas station has a fuel inventory of 800,000 liters, with a fuel density of 0.86 kg/liter and a calorific value of 49 megajoules/kg. Calculate the total energy released when the current fuel inventory is completely burned. If the sulfur content of the fuel is 60 parts per million, calculate the total sulfur content.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.86 * 49 AS Total_Energy, Stock_Liters * 60 AS Total_Sulfur_Content FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 205,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['minimum inventory alert threshold 150,000 liters', 'current inventory 300,000 liters', 'daily average sales volume 25,000 liters', 'next fuel delivery in 20 days', 'increased daily sales volume 30,000 liters'], 'relations': ['inventory_to_threshold (Stock_Liters vs Minimum_Stock_Liters)', 'sales_to_delivery_time (depletion rate × days until delivery)', 'scenario_comparison (25,000 vs 30,000 liters/day impact)'], 'intent': 'predict_inventory_alert_trigger_and_prevention', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [150000, 300000, 25000, 20, 30000], 'units': {'volume': 'liters', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has sales of $900 billion, a net profit margin of 22%, total assets of $1,700 billion, and debt of $900 billion. Calculate the company's net profit, return on assets (ROA), return on equity (ROE), and debt-to-equity ratio. If the company wants to increase its net profit to $350 billion, what must its sales reach?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * Net_Profit_Margin / 100 AS Net_Profit, (Sales * Net_Profit_Margin / 100) / Assets AS ROA, (Sales * Net_Profit_Margin / 100) / (Assets - 900) AS ROE, 900 / (Assets - 900) AS Debt_to_Equity_Ratio, 3500 / (Net_Profit_Margin / 100) AS Required_Sales FROM company WHERE Company_ID = '指定的公司ID';",
        "db_id": "gas"
    },
    {
        "id": 206,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station capacity 50,000,000 liters', 'current inventory 49,999,999 liters', 'order request 50,000,001 liters', 'order request 100,000,000 liters', 'fuel price $10/liter', 'new fuel price $15/liter'], 'relations': ['capacity_vs_stock (50,000,000 vs 49,999,999)', 'order_vs_stock (50,000,001 > 49,999,999)', 'order_vs_capacity (100,000,000 > 50,000,000)', 'price_change_impact ($10 → $15)'], 'intent': 'evaluate_transaction_feasibility_and_calculate_amount', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000000, 49999999, 50000001, 100000000, 10, 15], 'units': {'volume': 'liters', 'currency': 'USD ($)', 'price': '$/liter'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nThe minimum inventory alert threshold for a gas station is 140,000 liters, with the current inventory at 280,000 liters and an average daily sales volume of 24,000 liters. If the next fuel delivery is expected to arrive in 21 days, will the gas station trigger the inventory alert? If it will, how many days in advance should the inventory be replenished to avoid the alert? What would change if the daily sales volume increases to 29,000 liters?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN Stock_Liters - (24000 * 21) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning, CASE WHEN Stock_Liters - (24000 * 21) < Minimum_Stock_Liters THEN (Stock_Liters - Minimum_Stock_Liters) / 24000 ELSE 0 END AS Days_To_Advance, CASE WHEN Stock_Liters - (29000 * 21) < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Trigger_Warning_Increase FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 207,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 800,000 liters', 'fuel density 0.86 kg/liter', 'calorific value 49 MJ/kg', 'sulfur content 60 ppm'], 'relations': ['fuel_volume_to_mass (800,000 liters → 688,000 kg)', 'mass_to_total_energy (688,000 kg × 49 MJ/kg)', 'mass_to_sulfur_mass (688,000 kg × 60 ppm)'], 'intent': 'calculate_energy_released_and_sulfur_content', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [800000, 0.86, 49, 60], 'units': {'volume': 'liters', 'density': 'kg/liter', 'calorific_value': 'megajoules/kg', 'sulfur_content': 'parts per million (ppm)', 'energy_conversion': '1 MJ = 1,000,000 joules', 'mass_conversion': '1 kg = 1,000 grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}]}}\nA hypothetical reasoning question is as follows:\nA gas station has a total fuel capacity of 80,000,000 liters, with a current inventory of 79,999,999 liters. The price per liter of fuel is $13. If the gas station suddenly receives an order requesting a one-time purchase of 80,000,001 liters of fuel, can the transaction be completed? If not, what is the maximum number of liters that can be sold? If the order requests the purchase of 160,000,000 liters of fuel, can the transaction be completed? If the fuel price suddenly rises to $25 per liter, what would be the total amount of the order?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 80000001 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_Transaction, LEAST(80000001, Stock_Liters) AS Max_Sellable_Liters, CASE WHEN 160000000 <= Stock_Liters THEN 'Yes' ELSE 'No' END AS Can_Complete_Large_Transaction, 160000000 * 25 AS Total_Order_Amount FROM gas WHERE Station_ID = '指定的加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 208,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"oil company with $900B sales\", \"22% net profit margin\", \"$1,700B total assets\", \"$900B debt\", \"$350B target net profit\"],\n  \"relations\": [\n    \"sales_to_profit (Sales × Net_Profit_Margin → Net_Profit)\", \n    \"asset_utilization (Net_Profit / Total_Assets → ROA)\",\n    \"equity_leverage (Debt / (Total_Assets - Debt) → Debt_to_Equity)\",\n    \"profit_projection (Target_Net_Profit / Net_Profit_Margin → Required_Sales)\"\n  ],\n  \"intent\": \"calculate_financial_ratios_and_sales_projection\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [900, 22, 1700, 900, 350],\n  \"units\": {\n    \"currency\": \"billion USD\",\n    \"margin_ratio\": \"% (percentage)\",\n    \"leverage_ratio\": \"unitless (debt-to-equity)\",\n    \"conversion\": \"Net_Profit_Margin = 22% → 0.22 in decimal\"\n  },\n  \"required_tables\": [\"company\"],\n  \"required_fields\": [\n    \"company.Sales\", \n    \"company.Net_Profit_Margin\",\n    \"company.Assets\",\n    \"company.Debt_Equity_Ratio\",  // For debt-to-equity verification\n    \"company.Profits\"  // For ROE calculation (requires equity = assets - debt)\n  ]\n}\nA physical knowledge question is as follows:\nIf a gas station has a total capacity of 100,000 liters, with a current inventory of 80,000 liters, and the fuel density is 0.75 kg/L, what is the total mass of the current fuel inventory?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.75 AS Total_Mass_Kg FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 100000 AND Stock_Liters = 80000);",
        "db_id": "gas"
    },
    {
        "id": 209,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['minimum inventory alert threshold 140,000 liters', 'current inventory 280,000 liters', 'average daily sales volume 24,000 liters', 'next fuel delivery in 21 days', 'increased daily sales volume 29,000 liters'], 'relations': ['inventory_depletion_rate (24,000 liters/day)', 'remaining_inventory_before_alert (140,000 liters)', 'time_until_alert ((280,000 - 140,000)/24,000 = 5.83 days)', 'delivery_time_vs_alert (21 days vs 5.83 days → alert triggered)', 'replenishment_lead_time (5.83 days before alert)', 'time_until_alert_with_increased_sales ((280,000 - 140,000)/29,000 = 4.83 days)'], 'intent': 'predict_inventory_alert_status_and_replenishment_timing', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [140000, 280000, 24000, 21, 29000], 'units': {'volume': 'liters', 'time': 'days', 'sales_rate': 'liters/day', 'comparison': 'alert triggered (5.83 days < 21 days)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}]}}\nA mathematical logic question is as follows:\nIf an oil company has a net profit margin of 15% and sales of $50 billion, what is its net profit? If the company wants to increase its net profit to $10 billion, what level of sales would be required?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * (Net_Profit_Margin / 100) AS Net_Profit FROM company WHERE Sales = 500 AND Net_Profit_Margin = 15;",
        "db_id": "gas"
    },
    {
        "id": 210,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station capacity 80,000,000 liters', 'current inventory 79,999,999 liters', 'order 80,000,001 liters', 'order 160,000,000 liters', 'price $13/liter', 'price $25/liter'], 'relations': ['capacity_limitation (capacity ≥ order volume)', 'inventory_availability (stock ≥ order volume)', 'price_change_impact (new price × transaction volume)'], 'intent': 'evaluate_transaction_feasibility_and_calculate_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80000000, 79999999, 80000001, 160000000, 13, 25], 'units': {'volume': 'liters', 'price': '$ per liter', 'amount': '$ (total transaction value)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station's fuel inventory falls below the minimum stock level and the next fuel delivery is scheduled in a week, what measures should the gas station manager take to ensure uninterrupted fuel supply?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Station_ID, Manager_Name FROM gas_station WHERE Station_ID IN (SELECT Station_ID FROM gas WHERE Stock_Liters < Minimum_Stock_Liters AND Next_Delivery_Date > DATE_ADD(CURDATE(), INTERVAL 7 DAY));",
        "db_id": "gas"
    },
    {
        "id": 211,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station total capacity 100000 liters', 'current inventory 80000 liters', 'fuel density 0.75 kg/L'], 'relations': ['inventory_to_mass (80000 L × 0.75 kg/L → 60000 kg)'], 'intent': 'calculate_total_mass_of_current_fuel_inventory', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80000, 0.75], 'units': {'volume': 'liters (L)', 'density': 'kg/L (kilograms per liter)', 'mass': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station's fuel inventory suddenly increases to 1,000,000,000 liters, and the carbon emissions per liter of fuel are 2.5 grams, what will be the carbon emissions of this gas station? If the carbon emissions of all gas stations worldwide reach this level, how much will global carbon emissions increase?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * Carbon_Emission AS Total_Carbon_Emission FROM gas WHERE Stock_Liters = 1000000000 AND Carbon_Emission = 2.5;",
        "db_id": "gas"
    },
    {
        "id": 212,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'net profit margin 15%', 'sales $50 billion', 'target net profit $10 billion'], 'relations': ['company_to_financials (oil company → company table records)', 'profit_calculation (Sales × Net_Profit_Margin)', 'target_sales_calculation (Target_Profit / Net_Profit_Margin)'], 'intent': 'calculate_net_profit_and_required_sales', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15, 50, 10], 'units': {'currency': 'USD (billion)', 'percentage': '% (net profit margin)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}]}}\nA physical knowledge question is as follows:\nIf a gas station's total fuel capacity is 150,000 liters, with a current inventory of 120,000 liters and a fuel calorific value of 35 MJ/L, what is the total energy of the current fuel inventory?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 35 AS Total_Energy_MJ FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 150000 AND Stock_Liters = 120000);",
        "db_id": "gas"
    },
    {
        "id": 213,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'fuel inventory', 'minimum stock level', 'next fuel delivery', 'one week'], 'relations': ['inventory_vs_min_stock (current_stock < minimum_stock)', 'delivery_schedule (next_delivery_date = current_date + 7 days)'], 'intent': 'recommend_manager_actions_for_stock_shortage', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [7], 'units': {'stock': 'liters', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}, {'column': 'Supplier', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油供应商（例如：本地供应商、国际供应商）。', 'examples': ['国际供应商', '本地供应商', 'TestSupplier', '示例供应商', '测试供应商']}], 'gas.gas_station': [{'column': 'Manager_Name', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '加油站的经理姓名', 'examples': ['张伟', '李强', '刘一', '张三', '王十']}, {'column': 'Location', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '加油站的位置（例如：城市、街道）', 'examples': ['北京市朝阳区建国路88号', '上海市浦东新区世纪大道100号', '指定加油站位置', '测试地点', '测试位置']}]}}\nA mathematical logic question is as follows:\nIf a petroleum company has total assets of $150 billion and a debt-to-equity ratio of 0.6, what is its total debt? If the company wishes to reduce its total debt to $50 billion, to what level does the debt-to-equity ratio need to be adjusted?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Assets * (Debt_Equity_Ratio / (1 + Debt_Equity_Ratio)) AS Total_Liabilities FROM company WHERE Assets = 1500 AND Debt_Equity_Ratio = 0.6;",
        "db_id": "gas"
    },
    {
        "id": 214,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel_inventory_1,000,000,000_liters', 'carbon_emission_per_liter_2.5_grams', 'all_global_gas_stations'], 'relations': ['fuel_inventory_to_carbon_emission (1,000,000,000 liters × 2.5 grams/liter)', 'single_station_to_global_total (aggregation across all gas stations)'], 'intent': 'calculate_carbon_emissions_for_single_and_global_gas_stations', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000, 2.5], 'units': {'volume': 'liters', 'carbon_emission': 'grams/liter', 'total_emission_conversion': 'grams → metric tons (for global scale, 1,000,000,000 liters × 2.5 grams = 2,500,000,000 grams = 2,500 metric tons per station)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}]}}\nA common sense reasoning question is as follows:\nIf a gas station's fuel inventory is approaching the minimum stock level, and the next fuel delivery date is in 5 days, but the weather forecast indicates an approaching snowstorm in the coming days, how should the gas station manager adjust the inventory management strategy?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Station_ID, Manager_Name FROM gas_station WHERE Station_ID IN (SELECT Station_ID FROM gas WHERE Stock_Liters < Minimum_Stock_Liters * 1.1 AND Next_Delivery_Date = DATE_ADD(CURDATE(), INTERVAL 5 DAY));",
        "db_id": "gas"
    },
    {
        "id": 215,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 120000 liters', 'calorific value 35 MJ/L'], 'relations': ['inventory_to_energy (120000 liters * 35 MJ/L → total energy 4200000 MJ)'], 'intent': 'calculate_total_energy', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120000, 35], 'units': {'volume': 'liters', 'calorific_value': 'MJ/L (megajoules per liter)', 'energy': 'MJ (megajoules)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station's fuel inventory suddenly increases to 50,000,000,000 litres, and the sulfur content per litre of fuel is 50 ppm, what is the total sulfur content in this fuel? If all gas stations worldwide reach this sulfur level, how much would global sulfur emissions increase?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * Sulfur_Content AS Total_Sulfur_Content FROM gas WHERE Stock_Liters = 50000000000 AND Sulfur_Content = 50;",
        "db_id": "gas"
    },
    {
        "id": 216,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['petroleum company', 'total assets $150 billion', 'debt-to-equity ratio 0.6', 'target total debt $50 billion'], 'relations': ['asset_debt_equity_relation (Assets = Debt + Equity)', 'debt_equity_ratio (Debt/Equity)'], 'intent': 'calculate_total_debt_and_adjusted_debt_to_equity_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [150, 0.6, 50], 'units': {'currency': 'billion USD', 'ratio': 'unitless (Debt/Equity)', 'calculation': 'Debt = (Debt-Equity-Ratio / (1 + Debt-Equity-Ratio)) * Assets'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA physical knowledge question is as follows:\nIf a gas station has a total fuel capacity of 200,000 liters, a current inventory of 180,000 liters, a fuel combustion efficiency of 85%, and a fuel calorific value of 40 MJ/L, what is the effective energy of the current fuel inventory?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 40 * 0.85 AS Effective_Energy_MJ FROM gas WHERE Station_ID = (SELECT Station_ID FROM gas_station WHERE Capacity_Liters = 200000 AND Stock_Liters = 180000);",
        "db_id": "gas"
    },
    {
        "id": 217,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station fuel inventory approaching minimum stock level', 'next fuel delivery in 5 days', 'approaching snowstorm'], 'relations': ['inventory_to_delivery (current stock approaching minimum vs 5-day delivery window)', 'weather_impact (snowstorm → increased fuel demand/panic buying)', 'storage_capacity (inventory level vs station capacity)'], 'intent': 'adjust_inventory_management_strategy', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5], 'units': {'time': 'days (until delivery)', 'volume': 'Liters (from Stock_Liters/Minimum_Stock_Liters fields)', 'capacity': 'Capacity_Liters (from gas_station table)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '加油站 ID，引用 gas_station 表的 Station_ID 字段。', 'examples': ['1001', '2001', '3001', '4001', '5001']}, {'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}, {'column': 'Next_Delivery_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下一次燃油交付的日期。', 'examples': ['2023-02-15', '2023-03-01', '2023-04-10', '2023-05-05', '2023-06-20']}], 'gas.gas_station': [{'column': 'Location', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '加油站的位置（例如：城市、街道）', 'examples': ['北京市朝阳区建国路88号', '上海市浦东新区世纪大道100号', '指定加油站位置', '测试地点', '测试位置']}, {'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}, {'column': 'Manager_Name', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '加油站的经理姓名', 'examples': ['张伟', '李强', '刘一', '张三', '王十']}]}}\nA mathematical logic question is as follows:\nIf an oil company has sales of $120 billion, a net profit margin of 18%, and operates 500 branches, what is the average net profit per branch? If the company aims to increase the average net profit per branch to $500 million, what should the net profit margin be adjusted to?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (5 * 500) / Sales * 100 AS Target_Net_Profit_Margin FROM company WHERE Sales = 1200;",
        "db_id": "gas"
    },
    {
        "id": 218,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station fuel inventory 50,000,000,000 litres', 'sulfur content per litre 50 ppm', 'global gas stations sulfur level'], 'relations': ['inventory_to_sulfur_mass (50B liters * 50 ppm)', 'global_stations_scaling (number_of_stations * per_station_sulfur)'], 'intent': 'calculate_total_sulfur_content_and_global_emissions_increase', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50000000000, 50], 'units': {'volume': 'litres', 'sulfur_concentration': 'ppm (parts per million)', 'sulfur_mass_conversion': '1 ppm = 1 mg/L (assuming density equivalence)', 'total_sulfur': 'kg (calculated via unit conversion)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Sulfur_Content', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的硫含量（百万分之一）。', 'examples': ['50.0', '45.0', '55.0', '40.0', '60.0']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}]}}\nA common sense reasoning question is as follows:\nIf a gas station's fuel inventory is nearing the minimum stock level, and the next fuel delivery is scheduled for 3 days later, but the station is located in a high-traffic area with a daily fuel consumption of 10,000 liters, how should the station manager adjust the inventory management strategy?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Station_ID, Manager_Name FROM gas_station WHERE Station_ID IN (SELECT Station_ID FROM gas WHERE Stock_Liters < Minimum_Stock_Liters * 1.1 AND Next_Delivery_Date = DATE_ADD(CURDATE(), INTERVAL 3 DAY));",
        "db_id": "gas"
    },
    {
        "id": 219,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current fuel inventory 180,000 liters', 'fuel combustion efficiency 85%', 'fuel calorific value 40 MJ/L'], 'relations': ['inventory_to_energy (current inventory × calorific value × efficiency)'], 'intent': 'calculate_effective_energy_of_fuel_inventory', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [180000, 85, 40], 'units': {'volume': 'liters', 'efficiency': '% (combustion efficiency)', 'calorific_value': 'MJ/L (megajoules per liter)', 'effective_energy': 'MJ (megajoules)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station's fuel inventory suddenly increases to 100,000,000,000 liters, and the carbon emissions per liter of fuel is 5 grams, what is the total carbon emissions of these fuels? If the carbon emissions of all gas stations worldwide reach this level, how much will global carbon emissions increase?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * Carbon_Emission AS Total_Carbon_Emission FROM gas WHERE Stock_Liters = 100000000000 AND Carbon_Emission = 5;",
        "db_id": "gas"
    },
    {
        "id": 220,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', '$120 billion sales', '18% net profit margin', '500 branches', '$500 million target average net profit per branch'], 'relations': ['company_to_sales (oil company → $120 billion)', 'profit_calculation (sales × margin → total net profit)', 'per_branch_distribution (total net profit ÷ 500 branches)', 'target_inverse_calculation (required margin to achieve $500M per branch)'], 'intent': 'calculate_average_net_profit_per_branch_and_required_margin_adjustment', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [120, 18, 500, 500], 'units': {'sales': 'billion USD', 'net_profit_margin': '% (percentage)', 'branches': 'count', 'target_profit': 'million USD per branch', 'unit_conversion': '1 billion = 1,000 million'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}, {'column': 'Profits', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的利润（十亿美元）', 'examples': ['36.0', '38.4', '33.6', '42.0', '34.8']}]}}\nA physical knowledge question is as follows:\nIf an oil company has sales of $50 billion and a net profit margin of 5%, what is the total amount of heat generated by the sale of its petroleum products in one year? The heat produced by burning each liter of oil is 35 megajoules.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (c.Sales * 10) / g.Price_Liter * 35 AS Total_Heat FROM company c JOIN station_company sc ON c.Company_ID = sc.Company_ID JOIN gas g ON sc.Station_ID = g.Station_ID WHERE c.Sales = 500 AND c.Net_Profit_Margin = 5;",
        "db_id": "gas"
    },
    {
        "id": 221,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"gas station\", \"fuel inventory\", \"minimum stock level\", \"next fuel delivery\", \"3 days\", \"high-traffic area\", \"daily fuel consumption 10,000 liters\"],\n  \"relations\": [\n    \"station_to_inventory (gas_station.Station_ID → gas.Station_ID)\",\n    \"stock_consumption_rate (10,000 liters/day)\",\n    \"delivery_timeframe (3 days until delivery)\",\n    \"capacity_constraint (Station capacity vs. required stock)\"\n  ],\n  \"intent\": \"adjust_inventory_management_strategy\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [10000, 3],\n  \"units\": {\n    \"consumption_rate\": \"liters/day\",\n    \"timeframe\": \"days\",\n    \"stock_volume\": \"liters\",\n    \"capacity\": \"liters\"\n  },\n  \"required_tables\": [\"gas\", \"gas_station\"],\n  \"required_fields\": [\n    \"gas.Station_ID\",\n    \"gas.Stock_Liters\",\n    \"gas.Minimum_Stock_Liters\",\n    \"gas.Next_Delivery_Date\",\n    \"gas_station.Capacity_Liters\"\n  ]\n}\n```\nA mathematical logic question is as follows:\nAn oil company has total assets of $100 billion, with a debt-to-equity ratio of 2:1. If the company decides to increase its assets by $50 billion while maintaining the same debt-to-equity ratio, how much additional debt and equity does the company need to raise?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 500 * (2 / 3) AS New_Debt, 500 * (1 / 3) AS New_Equity FROM company WHERE Assets = 1000 AND Debt_Equity_Ratio = 2;",
        "db_id": "gas"
    },
    {
        "id": 222,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 100,000,000,000 liters', 'carbon emissions per liter 5 grams'], 'relations': ['inventory_to_emissions (total emissions = 100,000,000,000 liters × 5 grams/liter)', 'global_scaling (global emissions = total emissions × number of global gas stations)'], 'intent': 'calculate_total_and_global_catiob_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000000000, 5], 'units': {'volume': 'liters', 'carbon_per_volume': 'grams/liter', 'total_carbon': 'grams (conversion to metric tons: 1,000,000 grams = 1 metric ton)', 'global_scaling': 'unitless multiplier (number of gas stations)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站的唯一标识符（主键）', 'examples': ['1001', '2001', '3001', '3002', '3011']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters and a current inventory of 80,000 liters, how many more liters of fuel can the station receive for delivery without exceeding its total capacity?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity_Liters - (SELECT Stock_Liters FROM gas WHERE Station_ID = gas_station.Station_ID) AS Available_Capacity FROM gas_station WHERE Capacity_Liters = 100000 AND (SELECT Stock_Liters FROM gas WHERE Station_ID = gas_station.Station_ID) = 80000;",
        "db_id": "gas"
    },
    {
        "id": 223,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'sales $50 billion', 'net profit margin 5%', 'heat per liter 35 megajoules'], 'relations': ['company_to_sales (oil company → $50 billion)', 'margin_to_profit (5% → net profit)', 'volume_to_heat (liters × 35 MJ/liter)'], 'intent': 'calculate_total_heat_generated', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 5, 35], 'units': {'sales': '$ (USD)', 'profit': '% (percentage)', 'heat': 'megajoules (MJ)', 'conversion': 'MJ = liters × 35 MJ/liter'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters and the carbon emissions per liter of fuel is 2.5 grams, what would be the total carbon emissions if the station received 1,000,000 liters of fuel in one go? Could this scenario realistically happen?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 * Carbon_Emission AS Total_Carbon_Emission FROM gas_station JOIN gas ON gas_station.Station_ID = gas.Station_ID WHERE gas_station.Capacity_Liters = 100000;",
        "db_id": "gas"
    },
    {
        "id": 224,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'total assets $100 billion', 'debt-to-equity ratio 2:1', 'asset increase $50 billion'], 'relations': ['company_to_assets (oil company → total assets $100 billion)', 'debt_equity_ratio_to_assets (2:1 ratio → asset allocation)', 'asset_increase_to_new_total ($50B increase → total assets $150B)'], 'intent': 'calculate_additional_debt_equity_required', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 2, 1, 50], 'units': {'currency': 'billion USD', 'ratio': 'debt-to-equity (2:1)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA physical knowledge question is as follows:\nIf an oil company has sales of $50 billion and a net profit margin of 5%, what is the total amount of heat generated by the sale of its petroleum products in one year? The heat generated per liter of oil combusted is 35 megajoules.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (c.Sales * 10) / g.Price_Liter * 35 AS Total_Heat FROM company c JOIN station_company sc ON c.Company_ID = sc.Company_ID JOIN gas g ON sc.Station_ID = g.Station_ID WHERE c.Sales = 500 AND c.Net_Profit_Margin = 5;",
        "db_id": "gas"
    },
    {
        "id": 225,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station total fuel capacity 100,000 liters', 'current inventory 80,000 liters'], 'relations': ['station_capacity (gas_station.Capacity_Liters)', 'current_stock (gas.Stock_Liters)', 'available_capacity (100,000 - 80,000 = 20,000 liters)'], 'intent': 'calculate_available_capacity_for_delivery', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 80000], 'units': {'capacity': 'liters', 'stock': 'liters', 'calculation': '100,000 liters - 80,000 liters = 20,000 liters'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has total assets of $100 billion, with a debt-to-equity ratio of 2:1. If the company decides to increase its assets by $50 billion while maintaining the same debt-to-equity ratio, how much additional debt and shareholder equity will the company need to raise?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 500 * (2 / 3) AS New_Debt, 500 * (1 / 3) AS New_Equity FROM company WHERE Assets = 1000 AND Debt_Equity_Ratio = 2;",
        "db_id": "gas"
    },
    {
        "id": 226,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station capacity 100,000 liters', 'fuel received 1,000,000 liters', 'carbon emissions per liter 2.5 grams'], 'relations': ['capacity_vs_delivery (1,000,000 liters > 100,000 liters capacity)', 'emission_factor_application (2.5 grams/liter)'], 'intent': 'calculate_total_carbon_emissions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 2.5], 'units': {'fuel_volume': 'liters', 'carbon_emission_rate': 'grams per liter', 'total_emission': 'grams (calculated as 250,000 grams or 250 kg)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters and a current inventory level of 80,000 liters, how many more liters of fuel can the station receive without exceeding its total capacity?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity_Liters - (SELECT Stock_Liters FROM gas WHERE Station_ID = gas_station.Station_ID) AS Available_Capacity FROM gas_station WHERE Capacity_Liters = 100000 AND (SELECT Stock_Liters FROM gas WHERE Station_ID = gas_station.Station_ID) = 80000;",
        "db_id": "gas"
    },
    {
        "id": 227,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company with $50 billion sales', '5% net profit margin', '35 megajoules per liter'], 'relations': ['sales_to_volume_conversion (Sales → liters sold via Price_Liter)', 'volume_to_heat (liters sold × 35 MJ/liter)'], 'intent': 'calculate_total_heat_generated_from_sales', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50000000000, 5, 35], 'units': {'sales': '$ (USD)', 'price_per_liter': '$ (USD)/liter (from gas.Price_Liter)', 'heat_per_liter': 'MJ/liter (given)', 'total_heat': 'MJ (megajoules)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}], 'gas.gas': [{'column': 'Price_Liter', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的价格（美元）。', 'examples': ['1.5', '1.45', '1.6', '1.4', '1.55']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters, and the carbon emission per liter of fuel is 2.5 grams, then if the station receives 1,000,000 liters of fuel at once, what will be its carbon emission? Is this situation possible in reality?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 * Carbon_Emission AS Total_Carbon_Emission FROM gas_station JOIN gas ON gas_station.Station_ID = gas.Station_ID WHERE gas_station.Capacity_Liters = 100000;",
        "db_id": "gas"
    },
    {
        "id": 228,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['company total assets $100 billion', 'debt-to-equity ratio 2:1', 'planned asset increase $50 billion'], 'relations': ['assets_to_debt_equity_ratio (total assets → debt-to-equity ratio)', 'financial_proportions (debt:equity = 2:1)'], 'intent': 'calculate_additional_debt_and_equity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 50, 2, 1], 'units': {'currency': 'billion USD', 'ratio': 'dimensionless (2:1 debt-to-equity)', 'calculation': 'total_assets = debt + equity'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA physical knowledge question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters, and each liter of fuel emits 2.5 grams of carbon, what is the total annual carbon emissions of the gas station when operating at full capacity? The gas station operates at full capacity every day.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity_Liters * Carbon_Emission * 365 AS Annual_Carbon_Emission FROM gas_station JOIN gas ON gas_station.Station_ID = gas.Station_ID WHERE gas_station.Capacity_Liters = 100000;",
        "db_id": "gas"
    },
    {
        "id": 229,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station total fuel capacity 100000 liters', 'current inventory level 80000 liters'], 'relations': ['capacity_to_inventory (100000 - 80000 = 20000 liters)'], 'intent': 'calculate_remaining_fuel_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 80000], 'units': {'fuel_volume': 'liters (L)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has total assets of $100 billion and a debt-to-equity ratio of 2:1. If the company decides to increase its assets by $50 billion while maintaining the same debt-to-equity ratio, how much additional debt and equity would the company need to raise?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 500 * (2 / 3) AS New_Debt, 500 * (1 / 3) AS New_Equity FROM company WHERE Assets = 1000 AND Debt_Equity_Ratio = 2;",
        "db_id": "gas"
    },
    {
        "id": 230,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station capacity 100,000 liters', 'fuel received 1,000,000 liters', 'carbon emission 2.5 grams/liter'], 'relations': ['fuel_received_to_capacity_comparison (1,000,000 > 100,000)', 'carbon_emission_total (2,500,000 grams = 1,000,000 * 2.5)'], 'intent': 'calculate_total_carbon_emission_and_assess_feasibility', 'reasoning_type': 'mathematical logic reasoning + common sense understanding reasoning', 'numerical_values': [100000, 1000000, 2.5], 'units': {'capacity': 'liters', 'emission_rate': 'grams/liter', 'total_emission': 'grams (or 2,500 kg)', 'conversion': '1 kg = 1000 grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters and the current inventory is 80,000 liters, how many more liters of fuel can the station receive without exceeding its total capacity?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Capacity_Liters - (SELECT Stock_Liters FROM gas WHERE Station_ID = gas_station.Station_ID) AS Available_Capacity FROM gas_station WHERE Capacity_Liters = 100000 AND (SELECT Stock_Liters FROM gas WHERE Station_ID = gas_station.Station_ID) = 80000;",
        "db_id": "gas"
    },
    {
        "id": 231,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station with capacity 100,000 liters', '2.5 grams per liter carbon emission factor'], 'relations': ['station_to_capacity (gas_station.Capacity_Liters)', 'emission_factor_to_total (2.5g/L × annual_volume)'], 'intent': 'calculate_annual_carbon_emissions_at_full_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 2.5], 'units': {'capacity': 'liters', 'emission_factor': 'grams/liter', 'annual_emissions': 'grams/year (convertible to metric tons)', 'conversion': 'ΔT = 365 days/year'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters, and the carbon emission per liter of fuel is 2.5 grams, then if the station receives 1,000,000 liters of fuel at once, what would be its carbon emissions? Is this scenario possible in reality?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 * Carbon_Emission AS Total_Carbon_Emission FROM gas_station JOIN gas ON gas_station.Station_ID = gas.Station_ID WHERE gas_station.Capacity_Liters = 100000;",
        "db_id": "gas"
    },
    {
        "id": 232,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company with $100 billion assets', 'debt-to-equity ratio 2:1', '$50 billion asset increase'], 'relations': ['company_to_financials (company → assets/debt-equity ratio)', 'proportional_split (2:1 ratio → debt:equity allocation)'], 'intent': 'calculate_additional_debt_and_equity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 2, 1, 50], 'units': {'currency': 'billion USD', 'ratio': 'unitless (2:1 proportionality)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}]}}\nA physical knowledge question is as follows:\nIf a gas station has stored 100,000 liters of diesel with a density of 0.85 kg/liter, what is the total mass of this diesel? And how much heat will be generated if all this diesel is completely burned? (The known calorific value of diesel is 45.5 MJ/kg)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.85 AS Total_Mass_kg, (Stock_Liters * 0.85) * 45.5 AS Total_Heat_MJ FROM gas WHERE Fuel_Type = '柴油' AND Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 233,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station total capacity 100,000 liters', 'current inventory 80,000 liters'], 'relations': ['station_capacity (gas_station.Capacity_Liters = 100,000)', 'current_stock (gas.Stock_Liters = 80,000)'], 'intent': 'calculate_remaining_fuel_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 80000], 'units': {'capacity': 'liters', 'calculation': '100,000 liters - 80,000 liters = 20,000 liters'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has a revenue growth rate of 8%, with last year's sales amounting to $30 billion. What is this year's projected sales? If the net profit margin is 12%, what is this year's projected net profit?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * 1.08 AS Projected_Sales, (Sales * 1.08) * 0.12 AS Projected_Profits FROM company WHERE Company_ID = '指定公司ID';",
        "db_id": "gas"
    },
    {
        "id": 234,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas station', 'total fuel capacity 100,000 liters', 'fuel delivery 1,000,000 liters', 'carbon emission per liter 2.5 grams'], 'relations': ['station_to_capacity (gas station → 100,000 liters)', 'delivery_to_emission (1,000,000 liters × 2.5 g/L = 2,500,000 grams)', 'capacity_comparison (1,000,000 liters > 100,000 liters)'], 'intent': 'calculate_carbon_emissions_and_assess_feasibility', 'reasoning_type': ['mathematical logic reasoning', 'common sense understanding reasoning'], 'numerical_values': [100000, 1000000, 2.5], 'units': {'volume': 'liters', 'emission_rate': 'grams/liter', 'total_emission': 'kilograms (2,500,000 grams = 2,500 kg)', 'conversion': '1 kg = 1000 grams'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a fuel inventory of 20,000 liters, a minimum stock level of 5,000 liters, and sells 2,000 liters of fuel per day, how many more days can the gas station sustain sales?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters - Minimum_Stock_Liters) / 2000 AS Days_Remaining FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 235,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['100,000 liters of diesel', '0.85 kg/liter density', '45.5 MJ/kg calorific value'], 'relations': ['volume_to_mass_conversion (density × volume)', 'mass_to_heat_conversion (calorific value × mass)'], 'intent': 'calculate_total_mass_and_heat_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 0.85, 45.5], 'units': {'volume': 'liters', 'density': 'kg/liter', 'mass': 'kg (calculated from 100,000L × 0.85kg/L = 85,000kg)', 'calorific_value': 'MJ/kg', 'energy': 'MJ (calculated from 85,000kg × 45.5MJ/kg = 3,867,500MJ)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Fuel_Type', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '燃油类型（例如：汽油、柴油、液化天然气）。', 'examples': ['柴油', '汽油', '液化天然气']}, {'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a petroleum company's gas station sells 5,000,000 liters of gasoline per day, with each liter emitting 2.31 kilograms of carbon, what is the total annual carbon emissions generated by this company through gasoline sales? If all gas stations worldwide operate with this level of carbon emissions, what would be the global annual total carbon emissions? (There are 1 million gas stations globally.)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 5000000 * 2.31 * 365 AS Annual_Carbon_Emission, 5000000 * 2.31 * 365 * 1000000 AS Global_Annual_Carbon_Emission FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 236,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'last year sales $30 billion', 'revenue growth rate 8%', 'net profit margin 12%'], 'relations': ['company_to_financials (company → Sales/Revenue_Growth_Rate/Net_Profit_Margin)', 'growth_projection (8% increase on $30B)', 'profit_calculation (12% of projected sales)'], 'intent': 'calculate_projected_sales_and_net_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 8, 12], 'units': {'sales': 'billion USD (original value)', 'growth_rate': '% (percent)', 'profit_margin': '% (percent)', 'calculation_units': ['projected_sales = 30B * 1.08', 'net_profit = projected_sales * 0.12']}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}]}}\nA physical knowledge question is as follows:\nIf a gas station has a total fuel capacity of 100,000 liters and a current inventory of 80,000 liters, with the fuel density being 0.75 kg/liter, what is the total mass of this fuel? If this fuel is completely burned, how much heat will be generated? (Given that the fuel's calorific value is 42 MJ/kg)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Stock_Liters * 0.75 AS Total_Mass_kg, (Stock_Liters * 0.75) * 42 AS Total_Heat_MJ FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 237,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['fuel inventory 20,000 liters', 'minimum stock level 5,000 liters', 'daily sales 2,000 liters/day'], 'relations': ['stock_difference (15,000 liters)', 'daily_consumption_rate (2,000 liters/day)'], 'intent': 'calculate_days_until_minimum_stock_reached', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20000, 5000, 2000], 'units': {'stock_volume': 'liters', 'minimum_volume': 'liters', 'daily_sales_rate': 'liters/day', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}]}}\nA mathematical logic question is as follows:\nAn oil company has a revenue growth rate of 10%, with last year's sales reaching $40 billion. What is the projected sales for this year? If the net profit margin is 15%, what is the expected net profit for this year? If the company's debt-to-equity ratio is 1.5:1, what is its total debt?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sales * 1.10 AS Projected_Sales, (Sales * 1.10) * 0.15 AS Projected_Profits, ((Sales * 1.10) * 0.15) * 1.5 AS Total_Debt FROM company WHERE Company_ID = '指定公司ID';",
        "db_id": "gas"
    },
    {
        "id": 238,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline sales volume (5,000,000 liters/day)', 'carbon emission factor (2.31 kg/liter)', 'annual period (365 days)', 'global gas stations (1,000,000)'], 'relations': ['daily_sales_to_annual (5,000,000 L/day × 365 days = 1,825,000,000 L/year)', 'carbon_emission_per_liter (2.31 kg/L)', 'company_annual_emissions (1,825,000,000 L/year × 2.31 kg/L)', 'global_annual_emissions (company_annual_emissions × 1,000,000)'], 'intent': 'calculate_company_and_global_annual_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000, 2.31, 365, 1000000], 'units': {'volume': 'liters', 'mass': 'kilograms', 'time': 'years', 'conversion': 'kg CO2 per liter (2.31 kg/L)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.company': [{'column': 'Number_Branches', 'type': 'INTEGER', 'primary_key': False, 'comment': '公司的分支机构数量。', 'examples': ['500', '300', '200', '400', '250']}]}}\nA common sense reasoning question is as follows:\nIf a gas station has a fuel inventory of 30,000 liters, a minimum inventory of 10,000 liters, and sells 2,500 liters of fuel per day, how many more days can the gas station sustain sales? If the total capacity of the gas station is 50,000 liters, is it necessary to replenish fuel immediately?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Stock_Liters - Minimum_Stock_Liters) / 2500 AS Days_Remaining, CASE WHEN Stock_Liters < Minimum_Stock_Liters THEN 'Yes' ELSE 'No' END AS Need_Refill FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 239,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current inventory 80,000 liters', 'fuel density 0.75 kg/liter', 'calorific value 42 MJ/kg'], 'relations': ['volume_to_mass (mass = 80,000 L × 0.75 kg/L)', 'mass_to_heat (heat = 60,000 kg × 42 MJ/kg)'], 'intent': 'calculate_total_mass_and_heat_output', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80000, 0.75, 42], 'units': {'volume': 'liters (L)', 'density': 'kg/liter', 'mass': 'kg (calculated via m=ρV)', 'calorific_value': 'MJ/kg', 'energy': 'MJ (calculated via Q=m×CV)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA hypothetical reasoning question is as follows:\nIf an oil company's gas stations sell 10,000,000 liters of gasoline per day, with each liter of gasoline emitting 2.5 kilograms of carbon, what is the total annual carbon emissions generated by this company through gasoline sales? If all gas stations worldwide operate at this emission level, what would be the global total annual carbon emissions? (There are 2 million gas stations worldwide.)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 10000000 * 2.5 * 365 AS Annual_Carbon_Emission, 10000000 * 2.5 * 365 * 2000000 AS Global_Annual_Carbon_Emission FROM gas WHERE Station_ID = '指定加油站ID';",
        "db_id": "gas"
    },
    {
        "id": 240,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'last_year_sales $40 billion', 'revenue_growth_rate 10%', 'net_profit_margin 15%', 'debt_equity_ratio 1.5:1'], 'relations': ['company_to_metrics (oil company → revenue_growth_rate, net_profit_margin, debt_equity_ratio)', 'sales_projection (last_year_sales × (1 + revenue_growth_rate) = $44 billion)', 'net_profit (projected_sales × net_profit_margin = $6.6 billion)', 'debt_calculation (debt_equity_ratio = 1.5:1 → total_debt = 1.5 × equity)'], 'intent': 'calculate_projected_sales_net_profit_total_debt', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [40, 10, 15, 1.5], 'units': {'sales': 'billion USD', 'growth_rate': '% (percentage)', 'net_profit': 'billion USD', 'debt_equity_ratio': 'dimensionless (ratio)', 'total_debt': 'billion USD (implied by assets database field)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}, {'column': 'Revenue_Growth_Rate', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的收入增长率（百分比）。', 'examples': ['8.0', '10.0', '7.5', '9.0', '5.0']}, {'column': 'Net_Profit_Margin', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的净利润率（百分比）。', 'examples': ['5.0', '12.0', '10.0', '11.0', '8.0']}, {'column': 'Debt_Equity_Ratio', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的债务与股东权益比率。', 'examples': ['0.6', '0.7', '0.5', '0.65', '0.8']}, {'column': 'Assets', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的总资产（十亿美元）', 'examples': ['5000.0', '4800.0', '4500.0', '5200.0', '4600.0']}]}}\nA physical knowledge question is as follows:\nCalculate the efficiency of generator with ID 1001, which has a rated power of 1000 KW, an actual output power of 950 KW, and an input power of 1050 KW.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (950.0 / 1050.0) * 100 AS Efficiency FROM generators WHERE GeneratorID = 1001;",
        "db_id": "generators"
    },
    {
        "id": 241,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gas_station', 'current_inventory 30,000 liters', 'minimum_inventory 10,000 liters', 'daily_sales 2,500 liters/day', 'total_capacity 50,000 liters'], 'relations': ['current_inventory_to_sales (30,000 - 10,000 = 20,000 usable inventory)', 'capacity_comparison (30,000 < 50,000 → requires replenishment)'], 'intent': 'calculate_sustainability_days_and_replenishment_necessity', 'reasoning_type': 'mathematical_logic_reasoning', 'numerical_values': [30000, 10000, 2500, 50000], 'units': {'inventory': 'liters', 'daily_sales': 'liters/day', 'capacity': 'liters'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}], 'primary_keys': [{'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}], 'tableinfo': {'gas.gas': [{'column': 'Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的库存量（升）。', 'examples': ['100000.0', '120000.0', '80000.0', '150000.0', '90000.0']}, {'column': 'Minimum_Stock_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '燃油的最低库存量（升），用于预警。', 'examples': ['10000.0', '12000.0', '8000.0', '15000.0', '9000.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total power output of all generators produced by manufacturer ID 2001, which has 10 generators with rated powers of 500 KW, 600 KW, 700 KW, 800 KW, 900 KW, 1000 KW, 1100 KW, 1200 KW, 1300 KW, and 1400 KW respectively.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(RatedPower) AS TotalPower FROM generators WHERE ManufacturerID = 2001;",
        "db_id": "generators"
    },
    {
        "id": 242,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oil company', 'gasoline sales volume', 'carbon emission per liter', 'global gas stations'], 'relations': ['company_to_sales_volume', 'sales_volume_to_emissions (10,000,000 liters × 2.5 kg/liter)', 'annual_emission_scaling (×365 days)', 'global_total_scaling (×2,000,000 gas stations)'], 'intent': 'calculate_annual_carbon_emissions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000, 2.5, 2000000], 'units': {'volume': 'liters', 'emission_factor': 'kg/liter', 'time': 'annual (365 days)', 'total_emission': 'metric tons (kg → 10^6 conversion implied)'}, 'foreign_keys': [{'fk_table': 'gas', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Station_ID', 'ref_table': 'gas_station', 'ref_column': 'Station_ID'}, {'fk_table': 'station_company', 'fk_column': 'Company_ID', 'ref_table': 'company', 'ref_column': 'Company_ID'}], 'primary_keys': [{'pk_table': 'company', 'pk_column': 'Company_ID'}, {'pk_table': 'gas', 'pk_column': 'Gas_ID'}, {'pk_table': 'gas_station', 'pk_column': 'Station_ID'}, {'pk_table': 'station_company', 'pk_column': 'Company_ID'}], 'tableinfo': {'gas.company': [{'column': 'Sales', 'type': 'FLOAT', 'primary_key': False, 'comment': '公司的销售额（十亿美元）', 'examples': ['500.0', '320.0', '280.0', '350.0', '290.0']}], 'gas.gas': [{'column': 'Carbon_Emission', 'type': 'FLOAT', 'primary_key': False, 'comment': '每升燃油的碳排放量（克/升）。', 'examples': ['2700.0', '2720.0', '2680.0', '2710.0', '2690.0']}], 'gas.gas_station': [{'column': 'Capacity_Liters', 'type': 'FLOAT', 'primary_key': False, 'comment': '加油站的燃油总容量（升）', 'examples': ['600000.0', '50000.0', '70000.0', '100000.0', '1500000.0']}], 'gas.station_company': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '加油站ID，外键', 'examples': ['1001', '2001', '3011']}]}}\nA common sense reasoning question is as follows:\nDetermine whether motor 1002 requires maintenance, as its continuous operating time has exceeded 1000 hours and its status is \"running.\"\nyour response just have a SQL without anything.\n",
        "solution": "SELECT GeneratorID, GeneratorName, CASE WHEN ContinualTime > 1000 AND Status = 1 THEN '需要维护' ELSE '无需维护' END AS MaintenanceStatus FROM generators WHERE GeneratorID = 1002;",
        "db_id": "generators"
    },
    {
        "id": 243,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['generator ID 1001', 'rated power 1000 KW', 'actual output power 950 KW', 'input power 1050 KW'], 'relations': ['generator_to_rated_power (ID 1001 → RatedPower)', 'output_input_ratio (Efficiency = 950/1050)'], 'intent': 'calculate_efficiency_of_generator', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 950, 1050], 'units': {'power': 'KW (Kilowatts)', 'efficiency': 'unitless (percentage implied)'}, 'foreign_keys': [{'fk_table': 'generators', 'fk_column': 'ManufacturerID', 'ref_table': 'manufacturers', 'ref_column': 'ManufacturerID'}, {'fk_table': 'operationrecords', 'fk_column': 'GeneratorID', 'ref_table': 'generators', 'ref_column': 'GeneratorID'}, {'fk_table': 'sensordata', 'fk_column': 'SensorID', 'ref_table': 'sensors', 'ref_column': 'SensorID'}], 'primary_keys': [{'pk_table': 'generators', 'pk_column': 'GeneratorID'}, {'pk_table': 'operationrecords', 'pk_column': 'RecordID'}, {'pk_table': 'sensordata', 'pk_column': 'DataID'}], 'tableinfo': {'generators.generators': [{'column': 'RatedPower', 'type': 'INTEGER', 'primary_key': False, 'comment': '额定功率（单位：KW）', 'examples': ['150000']}], 'generators.operationrecords': [{'column': 'PowerGenerated', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '本次运行的发电量（单位：千瓦时）', 'examples': ['2880000', '2580000']}], 'generators.sensordata': [{'column': 'DataValue', 'type': 'DOUBLE', 'primary_key': False, 'comment': '传感器采集的数据值', 'examples': ['700.0', '13.0', '1399.0', '0.0', '670.0']}]}}\nA hypothetical reasoning question is as follows:\nThe rated speed of the 1003 generator is 3000 RPM, but its actual speed has reached 10000 RPM. Determine whether this speed exceeds the safe range.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT GeneratorID, GeneratorName, CASE WHEN 10000 > RatedRotationSpeed * 1.2 THEN '超出安全范围' ELSE '在安全范围内' END AS RotationSafetyStatus FROM generators WHERE GeneratorID = 1003;",
        "db_id": "generators"
    },
    {
        "id": 244,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer ID 2001', 'generator'], 'relations': ['manufacturer_to_generators (ManufacturerID 2001 → generators)', 'rated_power_sum (total=9500 KW)'], 'intent': 'calculate_total_power_output', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2001, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400], 'units': {'power': 'KW (Kilowatts)', 'total_power': 'KW (Kilowatts)'}, 'foreign_keys': [{'fk_table': 'generators', 'fk_column': 'ManufacturerID', 'ref_table': 'manufacturers', 'ref_column': 'ManufacturerID'}], 'primary_keys': [{'pk_table': 'generators', 'pk_column': 'GeneratorID'}], 'tableinfo': {'generators.generators': [{'column': 'ManufacturerID', 'type': 'INTEGER', 'primary_key': False, 'comment': '外键，关联厂家表', 'examples': ['2001', '2002']}, {'column': 'RatedPower', 'type': 'INTEGER', 'primary_key': False, 'comment': '额定功率（单位：KW）', 'examples': ['150000']}]}}\nA physical knowledge question is as follows:\nCalculate the power factor of generator 1001, with a rated power of 1000 kW, rated voltage of 400 V, and rated current of 1500 A.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT RatedPower / (RatedVoltage * 1500) AS PowerFactor FROM generators WHERE GeneratorID = 1001;",
        "db_id": "generators"
    },
    {
        "id": 245,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['GeneratorID 1002', 'continuous operating time 1000 hours', \"status 'running'\"], 'relations': ['generator_to_continual_time (1002 → ContinualTime)', 'generator_to_status (1002 → Status)'], 'intent': 'determine_maintenance_requirement', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1000], 'units': {'time': 'hours'}, 'foreign_keys': [{'fk_table': 'generators', 'fk_column': 'ManufacturerID', 'ref_table': 'manufacturers', 'ref_column': 'ManufacturerID'}], 'primary_keys': [{'pk_table': 'generators', 'pk_column': 'GeneratorID'}], 'tableinfo': {'generators.generators': [{'column': 'GeneratorID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，唯一标识发电机', 'examples': ['1001', '1002', '1005', '1003', '1004']}, {'column': 'ContinualTime', 'type': 'INTEGER', 'primary_key': False, 'comment': '连续工作时间（单位：h）', 'examples': ['12']}, {'column': 'Status', 'type': 'INTEGER', 'primary_key': False, 'comment': '当前状态（运行、停机、维修等）1表示运行，0表示停机，2表示维修', 'examples': ['0', '1']}]}}\nA physical knowledge question is as follows:\nAssuming the customer's purchased lawn mower is operating at full load, calculate the total energy consumption per hour (including fuel and electricity), and list the top 5 customers in descending order of energy efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Customer_ID, c.Name, CASE WHEN l.Power_Source = 'Gasoline' THEN (l.Engine_Power * 745.7 * 3600 / 1000) + (pm.Fuel_Consumption * 34.2 * 1000) WHEN l.Power_Source IN ('Electric', 'Battery') THEN (l.Battery_Capacity * 12 * 3.6 * 60) / NULLIF(l.Run_Time, 0) ELSE 0 END AS Total_Energy_kJh FROM customers c JOIN sales s ON c.Customer_ID = s.Customer_ID JOIN lawn_mowers l ON s.Mower_ID = l.Mower_ID JOIN performance_metrics pm ON l.Mower_ID = pm.Mower_ID ORDER BY pm.Energy_Efficiency DESC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 246,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['generator 1003', 'rated speed 3000 RPM', 'actual speed 10000 RPM'], 'relations': ['generator_to_rated_speed (generator 1003 → RatedRotationSpeed)', 'generator_to_actual_speed (generator 1003 → sensordata RPM reading)'], 'intent': 'determine_exceeding_safe_range', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3000, 10000], 'units': {'speed': 'RPM (revolutions per minute)'}, 'foreign_keys': [{'fk_table': 'generators', 'fk_column': 'ManufacturerID', 'ref_table': 'manufacturers', 'ref_column': 'ManufacturerID'}, {'fk_table': 'sensordata', 'fk_column': 'SensorID', 'ref_table': 'sensors', 'ref_column': 'SensorID'}, {'fk_table': 'sensors', 'fk_column': 'GeneratorID', 'ref_table': 'generators', 'ref_column': 'GeneratorID'}], 'primary_keys': [{'pk_table': 'generators', 'pk_column': 'GeneratorID'}, {'pk_table': 'sensordata', 'pk_column': 'DataID'}, {'pk_table': 'sensors', 'pk_column': 'SensorID'}], 'tableinfo': {'generators.generators': [{'column': 'RatedRotationSpeed', 'type': 'INTEGER', 'primary_key': False, 'comment': '额定转速（单位：转/分钟）', 'examples': ['900', '800']}], 'generators.sensors': [{'column': 'SensorType', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '传感器类型\\r\\n温度传感器器（单位，摄氏度）\\r\\n压力传感器（单位，Mpa）\\r\\n震动传感器（单位，Hz）\\r\\n流量传感器（单位，立方米/S）', 'examples': ['温度传感器', '流量传感器', '振动传感器', '压力传感器']}], 'generators.sensordata': [{'column': 'DataValue', 'type': 'DOUBLE', 'primary_key': False, 'comment': '传感器采集的数据值', 'examples': ['700.0', '13.0', '1399.0', '0.0', '670.0']}]}}\nA mathematical logic question is as follows:\nCalculate the purchasing power index for each customer (logarithm of the ratio between annual purchase amount and the average purchase amount in their state), filter for customers with an index >1.5, and sort them in descending order by index value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Customer_ID, Name, Purchase_Power_Index FROM (SELECT c.Customer_ID, c.Name, LOG10(c.Annual_Purchase_Volume / AVG(c.Annual_Purchase_Volume) OVER (PARTITION BY c.State)) AS Purchase_Power_Index FROM customers c) AS sub WHERE Purchase_Power_Index > 1.5 ORDER BY Purchase_Power_Index DESC;",
        "db_id": "lawnmower"
    },
    {
        "id": 247,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['generator 1001', 'rated power 1000 kW', 'rated voltage 400 V', 'rated current 1500 A'], 'relations': ['generator_to_specs (generator 1001 → generators table fields)', 'power_factor_formula (PF = kW / (V*A/1000))'], 'intent': 'calculate_power_factor', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 400, 1500], 'units': {'power': 'kW (kilowatts)', 'voltage': 'V (volts)', 'current': 'A (amperes)', 'power_factor': 'unitless ratio', 'conversion': 'kVA = (V × A) / 1000'}, 'foreign_keys': [{'fk_table': 'generators', 'fk_column': 'ManufacturerID', 'ref_table': 'manufacturers', 'ref_column': 'ManufacturerID'}], 'primary_keys': [{'pk_table': 'generators', 'pk_column': 'GeneratorID'}], 'tableinfo': {'generators.generators': [{'column': 'GeneratorID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，唯一标识发电机', 'examples': ['1001', '1002', '1005', '1003', '1004']}, {'column': 'RatedPower', 'type': 'INTEGER', 'primary_key': False, 'comment': '额定功率（单位：KW）', 'examples': ['150000']}, {'column': 'RatedVoltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '额定电压', 'examples': ['14400', '12400']}, {'column': 'RatedCurrent'}]}}\nA common sense reasoning question is as follows:\nFind customers with annual purchasing amounts exceeding $500,000 who opted for manual lawn mowers, sorted by purchase amount in descending order, and explain the contradictions.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT c.Customer_ID, c.Name, c.Annual_Purchase_Volume FROM customers c JOIN sales s ON c.Customer_ID = s.Customer_ID JOIN lawn_mowers l ON s.Mower_ID = l.Mower_ID WHERE c.Annual_Purchase_Volume > 500000 AND l.Power_Source = 'Manual' ORDER BY c.Annual_Purchase_Volume DESC;",
        "db_id": "lawnmower"
    },
    {
        "id": 248,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower', 'fuel consumption', 'battery capacity', 'customer energy efficiency'], 'relations': ['lawn_mower_to_performance (Mower_ID → performance_metrics)', 'customer_to_sales (Customer_ID → sales)', 'power_source_to_energy (Power_Source → energy calculation)', 'energy_efficiency_ranking (Energy_Efficiency → customer ranking)'], 'intent': 'calculate_total_energy_consumption_and_rank_customers', 'reasoning_type': 'physical knowledge reasoning and common sense understanding reasoning', 'numerical_values': [8.8, 3600], 'units': {'fuel_energy_conversion': '1 liter gasoline = 8.8 kWh', 'battery_capacity': 'kWh (lawn_mowers.Battery_Capacity)', 'fuel_consumption_rate': 'liters/hour (performance_metrics.Fuel_Consumption)', 'energy_efficiency': 'kWh/hour (calculated)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}], 'lawnmower.performance_metrics': [{'column': 'Fuel_Consumption'}, {'column': 'Energy_Efficiency'}], 'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}], 'lawnmower.customers': [{'column': 'Name'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a customer's annual purchasing volume reaches $999 million (exceeding the annual sales of lawn machinery across the entire United States), calculate the percentage of their purchases relative to the manufacturer's total output, then rank the top three manufacturers in descending order of this percentage.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Name AS Manufacturer_Name, (SUM(s.Quantity) * 100.0 / m.Production_Volume_Total) AS Percentage FROM customers c JOIN sales s ON c.Customer_ID = s.Customer_ID JOIN lawn_mowers l ON s.Mower_ID = l.Mower_ID JOIN manufacturers m ON l.Manufacturer_ID = m.Manufacturer_ID WHERE c.Annual_Purchase_Volume = 999000000 GROUP BY m.Manufacturer_ID, m.Production_Volume_Total ORDER BY Percentage DESC LIMIT 3;",
        "db_id": "lawnmower"
    },
    {
        "id": 249,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customers', 'annual_purchase_volume', 'state_average_purchase', 'purchasing_power_index'], 'relations': ['customer_to_state (Customer_ID → State)', 'customer_to_purchase_ratio (Annual_Purchase_Volume / State_Average_Purchase)', 'logarithmic_transformation (log(ratio) → index)'], 'intent': 'calculate_purchasing_power_index_with_filter_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.5], 'units': {'purchasing_power_index': 'unitless (logarithmic scale)', 'annual_purchase_volume': 'monetary unit (implied by column name)'}, 'foreign_keys': [{'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'State'}, {'column': 'Annual_Purchase_Volume'}]}}\nA physical knowledge question is as follows:\nGroup customers by their country and calculate the total weight of banknotes corresponding to the annual purchase total for each country. Assume all transactions use $100 denomination banknotes, with each note weighing 1 gram.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, (SUM(Annual_Purchase_Volume) / 100) * 0.001 AS Total_Mass_kg FROM customers GROUP BY Country;",
        "db_id": "lawnmower"
    },
    {
        "id": 250,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customers with Annual_Purchase_Volume > $500,000', \"manual lawn mowers (Power_Source = 'Manual')\"], 'relations': ['customer_to_sales (Customer_ID → Sale_ID)', 'sales_to_lawnmower (Sale_ID → Mower_ID)', \"power_source_filter (Power_Source = 'Manual')\"], 'intent': 'identify_high_spending_manual_lawnmower_customers_and_analyze_contradictions', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [500000], 'units': {'currency': '$ (USD)', 'purchase_amount_source': 'Annual_Purchase_Volume (customers table) vs Total_Price (sales table)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Annual_Purchase_Volume'}], 'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}]}}\nA mathematical logic question is as follows:\nGroup by customer type and state, calculate the annual purchase amount of each group as a percentage of the total purchase amount for that state, and filter out groups where the percentage exceeds 50%.\nyour response just have a SQL without anything.\n",
        "solution": "WITH StateTotal AS (SELECT State, SUM(Annual_Purchase_Volume) AS State_Total FROM customers GROUP BY State) SELECT c.State, c.Customer_Type, (SUM(c.Annual_Purchase_Volume) / st.State_Total) * 100 AS Percentage FROM customers c JOIN StateTotal st ON c.State = st.State GROUP BY c.State, c.Customer_Type HAVING Percentage > 50;",
        "db_id": "lawnmower"
    },
    {
        "id": 251,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customer with $999 million annual purchases', 'manufacturers', \"manufacturer's total output\"], 'relations': ['customer_to_sales (Customer_ID)', 'sales_to_lawn_mowers (Mower_ID → Manufacturer_ID)', 'manufacturer_production (Production_Volume_Total)'], 'intent': 'calculate_purchase_percentage_relative_to_manufacturer_output_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [999000000], 'units': {'purchase_volume': '$ (USD)', 'production_volume': 'implied USD (from Production_Volume_Total)', 'percentage': '%'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Annual_Purchase_Volume'}], 'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}], 'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.manufacturers': [{'column': 'Manufacturer_ID'}, {'column': 'Production_Volume_Total'}]}}\nA common sense reasoning question is as follows:\nGroup by the year of customer registration, count the number of new customers added each year, and infer which years had the best marketing effectiveness.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT YEAR(Registration_Date) AS Reg_Year, COUNT(Customer_ID) AS New_Customers FROM customers GROUP BY Reg_Year ORDER BY New_Customers DESC;",
        "db_id": "lawnmower"
    },
    {
        "id": 252,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customers', 'country', 'annual purchase total', '$100 banknotes'], 'relations': ['customer_to_country (Customer_ID → Country)', 'purchase_to_banknotes (Total_Price / 100)', 'country_to_total_weight (summed grams per country)'], 'intent': 'group_customers_by_country_and_calculate_total_banknote_weight', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 1], 'units': {'currency': 'USD (implied by $100 denomination)', 'banknote_weight': '1 gram per $100 note', 'conversion': 'Total_Purchase_USD / 100 = number_of_notes → grams'}, 'foreign_keys': [{'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Country'}, {'column': 'Customer_ID'}], 'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there is a customer with an annual purchase amount of 1e18 dollars, calculate the average purchase amount grouped by country and analyze its impact on the result set.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, AVG(Annual_Purchase_Volume) AS Avg_Purchase FROM customers GROUP BY Country ORDER BY Avg_Purchase DESC;",
        "db_id": "lawnmower"
    },
    {
        "id": 253,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customer_type', 'state', 'annual_purchase_amount', 'percentage', 'total_purchase_amount', '50% threshold'], 'relations': ['customer_type_to_state_grouping', 'purchase_amount_to_percentage_calculation', 'group_percentage_comparison', 'state_total_normalization'], 'intent': 'analyze_customer_purchase_distribution_by_type_and_state', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'percentage': '% (relative proportion)', 'purchase_amount': 'currency (USD implied by Total_Price field)', 'calculation': 'percentage = (group_amount / state_total) * 100'}, 'foreign_keys': [{'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Customer_Type'}, {'column': 'State'}], 'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}]}}\nA physical knowledge question is as follows:\nWhich customers have an annual purchasing amount sufficient to buy enough lawn mowers such that the total torque generated by these lawn mowers at full load exceeds 1000 Nm?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Customer_ID, c.Name FROM customers c WHERE EXISTS (SELECT 1 FROM lawn_mowers lm INNER JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source = 'Gasoline' AND pm.Torque * (c.Annual_Purchase_Volume / lm.Price) > 1000);",
        "db_id": "lawnmower"
    },
    {
        "id": 254,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customers', 'Registration_Date', 'new customers count', 'marketing effectiveness'], 'relations': ['customer_to_registration_year (Customer_ID → Registration_Date)', 'year_to_customer_count (Year → COUNT(Customer_ID))'], 'intent': 'analyze_customer_growth_and_marketing_effectiveness', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'date': 'Year (extracted from Registration_Date)', 'count': 'Number of customers (unitless)', 'marketing_metric': 'Relative growth rate (unitless comparison)'}, 'foreign_keys': [{'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Registration_Date'}]}}\nA mathematical logic question is as follows:\nFind individual customers whose annual purchase amount exceeds 3 times the average annual purchase amount of corporate customers, and whose state has fewer than 50 total customers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Customer_ID, c.Name FROM customers c WHERE c.Customer_Type = 'Individual' AND c.Annual_Purchase_Volume > 3 * (SELECT AVG(Annual_Purchase_Volume) FROM customers WHERE Customer_Type = 'Business') AND (SELECT COUNT(*) FROM customers c2 WHERE c2.State = c.State) < 50;",
        "db_id": "lawnmower"
    },
    {
        "id": 255,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customer with annual purchase amount 1e18 dollars', 'country', 'average purchase amount'], 'relations': ['customer_to_country (Customer_ID → Country)', 'purchase_grouping (Group by Country)', 'statistical_aggregation (AVG(Annual_Purchase_Volume))'], 'intent': 'calculate_average_purchase_amount_by_country_with_outlier_analysis', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1e+18], 'units': {'currency': 'dollars', 'aggregation_unit': 'dollars/country', 'scaling': '1e18 (exa-scale value requiring precision handling)'}, 'foreign_keys': [{'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Country'}, {'column': 'Annual_Purchase_Volume'}]}}\nA common sense reasoning question is as follows:\nWhich corporate customers have an annual purchase amount lower than the average annual purchase amount of individual customers in their respective countries?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Customer_ID, c.Name FROM customers c WHERE c.Customer_Type = 'Business' AND c.Annual_Purchase_Volume < (SELECT AVG(Annual_Purchase_Volume) FROM customers c2 WHERE c2.Customer_Type = 'Individual' AND c2.Country = c.Country);",
        "db_id": "lawnmower"
    },
    {
        "id": 256,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customers', 'lawn mowers', 'performance metrics', 'torque', 'annual purchasing amount'], 'relations': ['customer_to_purchase_capacity (customers.Annual_Purchase_Volume)', 'mower_to_torque (performance_metrics.Torque)', 'price_to_affordability (lawn_mowers.Price)'], 'intent': 'identify_customers_with_sufficient_purchasing_power_for_torque_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'torque': 'Nm (Newton-meters)', 'currency': 'USD (implied by database schema)', 'conversion': 'Total_Torque = Σ(Mower_Quantity × Torque_Per_Mower)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Annual_Purchase_Volume'}], 'lawnmower.lawn_mowers': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}], 'lawnmower.performance_metrics': [{'column': 'Torque'}]}}\nA hypothetical reasoning question is as follows:\nFind customers whose annual purchase volume exceeds 10 times the sum of the table's total Annual_Purchase_Volume, and whose registration date is before the database creation time by 100 years.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Customer_ID, Name FROM lawnmower.customers WHERE Annual_Purchase_Volume > (SELECT 10 * SUM(Annual_Purchase_Volume) FROM lawnmower.customers) AND Registration_Date < DATE_SUB(CURRENT_DATE, INTERVAL 100 YEAR);",
        "db_id": "lawnmower"
    },
    {
        "id": 257,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['individual customers', 'corporate customers', 'annual purchase amount', 'state'], 'relations': ['customer_to_purchase_amount (customers → Annual_Purchase_Volume)', 'state_to_customer_count (customers → State → total_customers)', 'threshold_comparison (individual_purchase > 3 * corporate_avg_purchase)'], 'intent': 'filter_individual_customers_with_purchase_threshold_and_state_density', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3, 50], 'units': {'purchase_amount': 'currency (implied by column Annual_Purchase_Volume)', 'customer_count': 'unitless'}, 'foreign_keys': [{'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Customer_Type'}, {'column': 'Annual_Purchase_Volume'}, {'column': 'State'}]}}\nA physical knowledge question is as follows:\nAn enterprise customer has an annual procurement amount of $1,000,000. Assuming each lawn mower costs $2,000 and weighs 50kg, calculate the total work required to vertically lift all the lawn mowers onto a 2-meter-high shelf (ignoring mechanical efficiency losses).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (c.Annual_Purchase_Volume/lm.Price)*lm.Weight*9.8*2 AS Total_Work_Joules FROM customers c JOIN lawn_mowers lm ON lm.Price=2000 AND lm.Weight=50 WHERE c.Customer_Type='Business' AND c.Annual_Purchase_Volume=1000000;",
        "db_id": "lawnmower"
    },
    {
        "id": 258,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['corporate customers', 'individual customers', 'countries', 'annual purchase amounts'], 'relations': ['customer_to_country (Customer_ID → Country)', 'customer_type_classification (Corporate vs Individual)', 'comparison_within_country (Corporate purchase < Individual average)'], 'intent': 'identify_corporate_customers_below_individual_average_purchase', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'currency': 'USD (implied by Annual_Purchase_Volume column in customers table)'}, 'foreign_keys': [{'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Customer_Type'}, {'column': 'Country'}, {'column': 'Annual_Purchase_Volume'}]}}\nA mathematical logic question is as follows:\nA customer's procurement amounts from 2020 to 2022 were $200,000, $300,000, and $450,000 respectively. Calculate their Compound Annual Growth Rate (CAGR) and forecast the procurement amount for 2025.\nyour response just have a SQL without anything.\n",
        "solution": "WITH SalesCTE AS (SELECT EXTRACT(YEAR FROM Sale_Date) AS yr, SUM(Total_Price) AS vol FROM sales WHERE Customer_ID='指定客户ID' AND EXTRACT(YEAR FROM Sale_Date) BETWEEN 2020 AND 2022 GROUP BY 1), CAGRData AS (SELECT (MAX(CASE WHEN yr=2022 THEN vol END)/MAX(CASE WHEN yr=2020 THEN vol END))^(1/2.0)-1 AS cagr, MAX(CASE WHEN yr=2022 THEN vol END) AS end_val FROM SalesCTE) SELECT cagr*100||'%' AS CAGR, end_val*POWER(1+cagr,3) AS Projection_2025 FROM CAGRData;",
        "db_id": "lawnmower"
    },
    {
        "id": 259,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customers', 'Annual_Purchase_Volume', 'Registration_Date', 'database creation time'], 'relations': ['customer_to_purchase_volume (customers → Annual_Purchase_Volume)', 'volume_threshold_comparison (Annual_Purchase_Volume > 10 × total_Annual_Purchase_Volume_sum)', 'registration_date_comparison (Registration_Date < database_creation_time - 100 years)'], 'intent': 'filter_customers_by_purchase_and_registration_criteria', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 100], 'units': {'purchase_volume': 'currency (assumed unit from Annual_Purchase_Volume column)', 'date_interval': 'years', 'threshold': '10× multiplier (dimensionless)'}, 'foreign_keys': [{'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Annual_Purchase_Volume'}, {'column': 'Registration_Date'}]}}\nA common sense reasoning question is as follows:\nA customer's address is in Anchorage, Alaska (with extremely cold winters). What is the most likely power type of the lawn mower they purchased? Explain the reasoning.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Power_Source, COUNT(*) AS purchase_count FROM sales s JOIN customers c USING(Customer_ID) JOIN lawn_mowers lm USING(Mower_ID) WHERE c.State='AK' GROUP BY 1 ORDER BY 2 DESC LIMIT 1;",
        "db_id": "lawnmower"
    },
    {
        "id": 260,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['enterprise customer', 'annual procurement amount $1,000,000', 'lawn mower cost $2,000', 'lawn mower weight 50kg', '2-meter-high shelf'], 'relations': ['procurement_to_price (quantity = $1,000,000 / $2,000)', 'quantity_to_total_weight (50kg * 500 units = 25,000kg)', 'work_calculation (force = 25,000kg * 9.8m/s², distance = 2m)'], 'intent': 'calculate_total_work_required_to_lift_mowers', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 2000, 50, 2], 'units': {'currency': '$ (USD)', 'weight': 'kg (kilograms)', 'height': 'm (meters)', 'work': 'J (joules, calculated as kg·m²/s²)', 'gravity': '9.8 m/s² (standard gravity, implied by physics)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Annual_Purchase_Volume'}], 'lawnmower.lawn_mowers': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}, {'column': 'Weight', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.5', '20.0', '22.0', '24.0', '26.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a customer's annual purchasing amount reaches $10^{12}$ (exceeding global GDP), and each lawnmower costs $1 with a weight of $10^{6}kg$, calculate the energy required to transport them to Mars (Mars is $5.4 \\times 10^{10}m$ away from Earth, ignoring orbital mechanics).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5*(c.Annual_Purchase_Volume/lm.Price)*lm.Weight*POWER(11186,2) AS Energy_Joules FROM customers c JOIN lawn_mowers lm ON lm.Price=1 AND lm.Weight=1000000 WHERE c.Annual_Purchase_Volume=1000000000000;",
        "db_id": "lawnmower"
    },
    {
        "id": 261,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['procurement_amounts_2020 ($200,000)', 'procurement_amounts_2021 ($300,000)', 'procurement_amounts_2022 ($450,000)', 'forecast_year_2025'], 'relations': ['time_series_data (2020→2021→2022)', 'forecast_projection (2022→2025)'], 'intent': 'calculate_CAGR_and_forecast_procurement_amount', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [200000, 300000, 450000, 2020, 2022, 2025], 'units': {'currency': 'USD', 'time': 'years', 'CAGR': 'percentage (% per year)', 'projection': '3-year growth period (2022-2025)'}, 'foreign_keys': [{'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Sale_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '销售日期', 'examples': ['2023-06-15', '2023-10-01', '2023-05-10', '2023-07-20', '2023-09-01']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}], 'lawnmower.customers': [{'column': 'Customer_ID'}]}}\nA physical knowledge question is as follows:\nAssuming the engine power (HP) and blade rotation speed (RPM) of the gasoline-powered lawn mowers are known, how do we calculate their torque (Nm)? Please list all eligible lawn mower models, sorted by torque in descending order, and retrieve the top three.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Model, ROUND(lm.Engine_Power / (pm.Blade_Speed * PI()/30), 2) AS Torque FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source = 'Gasoline' ORDER BY Torque DESC LIMIT 3;",
        "db_id": "lawnmower"
    },
    {
        "id": 262,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customer in Anchorage, Alaska', 'lawn mower power type'], 'relations': ['location_to_climate (Anchorage, Alaska → extremely cold winters)', 'purchase_pattern_to_power_type (customer location → lawn mower power source preference)'], 'intent': 'predict_power_source_preference_based_on_climate', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Address'}, {'column': 'City'}, {'column': 'State'}], 'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}]}}\nA mathematical logic question is as follows:\nThe annual procurement cost for corporate customers (Customer_Type=Business) must include shipping costs, discounts, and taxes. Please calculate their actual total cost (Total_Price + Shipping_Cost - Discount + Tax) and list the top five in ascending order by annual procurement amount.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Customer_ID, c.Name, ROUND((s.Total_Price + s.Shipping_Cost - (s.Total_Price * s.Discount/100) + (s.Total_Price * s.Tax_Rate/100)), 2) AS Total_Cost FROM sales s JOIN customers c ON s.Customer_ID = c.Customer_ID WHERE c.Customer_Type = 'Business' ORDER BY c.Annual_Purchase_Volume ASC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 263,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"customer's annual purchasing amount $10^{12}$\", 'lawnmower cost $1', 'lawnmower weight $10^{6}kg$', 'distance to Mars $5.4 \\times 10^{10}m$'], 'relations': ['purchasing_to_count (customer_purchase_volume → number_of_lawnmowers)', 'count_to_total_weight (number_of_lawnmowers × lawnmower_weight → total_weight)', 'distance_to_energy (total_weight × distance × gravitational_constant → energy)'], 'intent': 'calculate_energy_required_for_interplanetary_transport', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000000000.0, 1, 1000000.0, 54000000000.0], 'units': {'cost': 'USD', 'weight': 'kg', 'distance': 'meters', 'energy': 'Joules (implied)', 'gravitational_constant': \"m/s² (assumed Earth's gravity = 9.81)\"}, 'warnings': ['Database lacks fields for gravitational constants or space transportation energy calculation', 'No table contains orbital mechanics parameters or propulsion efficiency metrics', 'Calculation requires physical knowledge beyond provided database schema'], 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Annual_Purchase_Volume'}], 'lawnmower.lawn_mowers': [{'column': 'Weight', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.5', '20.0', '22.0', '24.0', '26.0']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}]}}\nA common sense reasoning question is as follows:\nIs the maintenance cost of manual lawn mowers (Power_Source=Manual) generally lower than other power types? Please calculate the average maintenance cost (Cost) by maintenance type (Maintenance_Type) and sort in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT mt.Maintenance_Type, ROUND(AVG(mt.Cost), 2) AS Avg_Cost FROM lawnmower.maintenance mt JOIN lawnmower.lawn_mowers m ON mt.Mower_ID = m.Mower_ID WHERE m.Power_Source = 'Manual' GROUP BY mt.Maintenance_Type ORDER BY Avg_Cost ASC;",
        "db_id": "lawnmower"
    },
    {
        "id": 264,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['engine power (HP)', 'blade rotation speed (RPM)', 'torque (Nm)', 'gasoline-powered lawn mowers'], 'relations': ['power_to_torque (HP → torque via RPM)', 'speed_to_torque (RPM → torque via HP)', 'filter_by_power_source (gasoline-powered → eligible models)'], 'intent': 'calculate_torque_and_rank_models', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5252, 1.3558], 'units': {'power': 'HP (horsepower)', 'rotation_speed': 'RPM (revolutions per minute)', 'torque': 'Nm (newton-meters)', 'conversion_formula': 'Torque (Nm) = (HP * 5252 / RPM) * 1.3558'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}, {'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}], 'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}]}}\nA hypothetical reasoning question is as follows:\nIf a lawn mower's cutting efficiency is 1000 square meters/hour, but its battery capacity is only 1Ah, will its single-charge runtime be sufficient to cover a standard football field (7140 square meters)? List all eligible models and rank the top 1 by coverage area in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Model, pm.Cutting_Efficiency * (lm.Run_Time/60) AS Coverage_Area FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Battery_Capacity = 1 AND pm.Cutting_Efficiency * (lm.Run_Time/60) >= 7140 ORDER BY Coverage_Area DESC LIMIT 1;",
        "db_id": "lawnmower"
    },
    {
        "id": 265,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['corporate customers', 'procurement cost', 'shipping costs', 'discounts', 'taxes', 'total price'], 'relations': ['customer_type_filter (Customer_Type=Business)', 'cost_component_formula (Total_Price + Shipping_Cost - Discount + Tax_Rate*Total_Price)', 'aggregation_by_customer (SUM(per-customer total costs))', 'ranking_order (ascending procurement amount)'], 'intent': 'calculate_and_rank_annual_procurement_costs', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'currency': 'USD (implied by monetary fields)', 'calculation': 'Total_Price (base) + Shipping_Cost - Discount + (Total_Price × Tax_Rate)'}, 'foreign_keys': [{'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Customer_Type'}], 'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}, {'column': 'Discount', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '折扣（%）', 'examples': ['5.0', '0.0', '3.0', '2.0']}, {'column': 'Tax_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '税率（%）', 'examples': ['7.5', '8.5', '9.0', '8.0', '0.0']}, {'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}]}}\nA physical knowledge question is as follows:\nPhysics Knowledge Question 1: A certain electric grass trimmer has a battery capacity of 5Ah and a runtime of 60 minutes. Assuming the operating voltage is 12V, calculate the total energy stored (in joules) and the average power consumption during operation?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Battery_Capacity*12*3600 AS Total_Energy_J, (Battery_Capacity*12*3600)/(Run_Time*60) AS Avg_Power_W FROM lawn_mowers WHERE Power_Source IN ('Electric','Battery') AND Battery_Capacity=5 AND Run_Time=60;",
        "db_id": "lawnmower"
    },
    {
        "id": 266,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manual lawn mowers (Power_Source=Manual)', 'maintenance cost', 'maintenance type'], 'relations': ['lawn_mowers_to_maintenance (Mower_ID → foreign key relationship)', 'maintenance_cost_by_type (Maintenance_Type → AVG(Cost))', 'power_source_comparison (Manual vs Other power types)'], 'intent': 'compare_maintenance_costs_and_calculate_average', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['AVG(Cost)'], 'units': {'cost': 'USD (presumed currency from Total_Price in sales table)', 'aggregation': 'average cost per maintenance type'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}], 'lawnmower.maintenance': [{'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}]}}\nA mathematical logic question is as follows:\nMathematics Logic Problem 2: A gasoline weed cutter's engine has a power of 5HP and weighs 50kg. If it operates continuously for 1 hour at maximum efficiency, find its unit weight power density (W/kg) and total mechanical work (MJ)?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Engine_Power*745.7)/Weight AS Power_Density, (Engine_Power*745.7*3600)/1e6 AS Total_Work_MJ FROM lawn_mowers WHERE Power_Source='Gasoline' AND Engine_Power=5 AND Weight=50;",
        "db_id": "lawnmower"
    },
    {
        "id": 267,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower', 'cutting efficiency 1000 square meters/hour', 'battery capacity 1Ah', 'standard football field 7140 square meters'], 'relations': ['mower_to_performance (lawn_mowers.Mower_ID → performance_metrics.Mower_ID)', 'coverage_area (Cutting_Efficiency * Run_Time)'], 'intent': 'determine_runtime_sufficiency_for_coverage_and_rank_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 1, 7140], 'units': {'cutting_efficiency': 'square meters/hour', 'battery_capacity': 'Ah (Ampere-hour)', 'area': 'square meters', 'runtime': 'hours', 'conversion': 'coverage_area = Cutting_Efficiency (m²/h) * Run_Time (h)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}], 'lawnmower.performance_metrics': [{'column': 'Cutting_Efficiency'}]}}\nA common sense reasoning question is as follows:\nCommon sense reasoning question 3: Why is a 10-inch-wheeled lawn mower more suitable for sloped terrain than a 6-inch one?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Wheel_Size, AVG(pm.Slope_Handling) AS Avg_Slope_Handling FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID=pm.Mower_ID WHERE lm.Wheel_Size IN (6,10) GROUP BY lm.Wheel_Size ORDER BY Wheel_Size DESC;",
        "db_id": "lawnmower"
    },
    {
        "id": 268,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric grass trimmer', 'battery capacity 5Ah', 'runtime 60 minutes', 'operating voltage 12V'], 'relations': ['capacity_to_energy (E = V × C)', 'runtime_to_power (P = E / t)'], 'intent': 'calculate_total_energy_stored_and_average_power_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5, 60, 12], 'units': {'battery_capacity': 'Ah (Ampere-hour)', 'runtime': 'minutes (converted to hours for calculation)', 'voltage': 'V (Volts)', 'energy': 'J (Joules, derived from 12V × 5Ah × 3600s/h)', 'power': 'W (Watts, derived from energy / time)', 'conversion': '1Wh = 3600J, 60 minutes = 1 hour'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}]}}\nA hypothetical reasoning question is as follows:\nHypothetical Reasoning Question 4: Given a lawnmower weighing 2000kg with a blade rotation speed of 100000 RPM, calculate its rotational kinetic energy (in joules) and the equivalent TNT yield (where 1 gram of TNT ≈ 4184 joules), disregarding the material's strength limit.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5*(0.5*lm.Blade_Weight*POW(lm.Blade_Length/200,2))*POW(2*PI()*pm.Blade_Speed/60,2) AS Rotational_Energy_J, (0.5*(0.5*lm.Blade_Weight*POW(lm.Blade_Length/200,2))*POW(2*PI()*pm.Blade_Speed/60,2))/4184 AS TNT_Equivalent_g FROM lawnmower.lawn_mowers lm JOIN lawnmower.performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Weight=2000 AND pm.Blade_Speed=100000;",
        "db_id": "lawnmower"
    },
    {
        "id": 269,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline weed cutter engine', 'power 5HP', 'weight 50kg', 'operation time 1 hour'], 'relations': ['power_to_weight_ratio (5HP/50kg)', 'work_energy_calculation (power × time)'], 'intent': 'calculate_unit_weight_power_density_and_total_mechanical_work', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 50, 1], 'units': {'power': 'HP → W (1 HP = 745.7 W)', 'weight': 'kg', 'time': 'hour → seconds (3600 s)', 'energy': 'MJ (1 MJ = 10^6 J)', 'conversion_formulas': ['Power (W) = HP × 745.7', 'Power Density (W/kg) = Power (W) / Weight (kg)', 'Work (J) = Power (W) × Time (s)', 'Work (MJ) = Work (J) / 10^6']}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}, {'column': 'Weight', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.5', '20.0', '22.0', '24.0', '26.0']}]}}\nA physical knowledge question is as follows:\nCalculate the hourly energy consumption (in megajoules) of each gasoline-powered lawn mower when operating at maximum power, and find the average by group of Power_Source.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Power_Source, AVG(Engine_Power * 745.7 * 3600 / 1000000) AS Avg_Energy_Consumption_MJ FROM lawn_mowers WHERE Power_Source = 'Gasoline' GROUP BY Power_Source;",
        "db_id": "lawnmower"
    },
    {
        "id": 270,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['10-inch wheeled lawn mower', '6-inch wheeled lawn mower', 'sloped terrain'], 'relations': ['wheel_size_to_suitability (10-inch → better slope handling)', 'terrain_type_to_mower_requirement (slope → stability requirement)'], 'intent': 'explain_suitability_based_on_wheel_size', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [10, 6], 'units': {'wheel_size': 'inch', 'slope_handling': 'percentage (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Wheel_Size', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '轮子尺寸（英寸）', 'examples': ['10.0', '8.0', '8.5', '9.0', '9.5']}], 'lawnmower.performance_metrics': [{'column': 'Slope_Handling'}]}}\nA mathematical logic question is as follows:\nCalculate the total mowing area (in square meters) for each electric lawn mower model when fully charged, grouped by Model. The calculation should combine operating time, mowing efficiency, and battery lifespan (number of charge cycles).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Model, SUM(pm.Cutting_Efficiency * (lm.Run_Time / 60) * pm.Battery_Life) AS Total_Area FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source = 'Electric' GROUP BY lm.Model;",
        "db_id": "lawnmower"
    },
    {
        "id": 271,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawnmower weight 2000kg', 'blade rotation speed 100000 RPM', 'TNT equivalence 1g=4184J'], 'relations': ['mass_to_kinetic_energy (2000kg → rotational KE calculation)', 'speed_to_angular_velocity (100000 RPM → rad/s conversion)', 'energy_to_TNT (J → gram conversion)'], 'intent': 'calculate_rotational_kinetic_energy_and_tnt_equivalent', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2000, 100000, 4184], 'units': {'mass': 'kg (direct input)', 'rotational_speed': 'RPM (converted to rad/s for formula)', 'energy': 'joules (J)', 'TNT_conversion': '1 gram TNT ≈ 4184 joules'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Blade_Weight', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片重量（kg）', 'examples': ['2.5', '1.5', '1.8', '2.0', '2.2']}], 'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}]}}\nA common sense reasoning question is as follows:\nFind which type of power source (Power_Source) for lawn mowers can cover the largest lawn area on a single full charge/full tank of fuel, grouped by Power_Source.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Power_Source, MAX(pm.Cutting_Efficiency * (lm.Run_Time / 60)) AS Max_Area FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID GROUP BY lm.Power_Source ORDER BY Max_Area DESC LIMIT 1;",
        "db_id": "lawnmower"
    },
    {
        "id": 272,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline-powered lawn mower', 'hourly energy consumption', 'Power_Source group', 'maximum power'], 'relations': [\"Power_Source (filter to 'Gasoline')\", 'Engine_Power → Energy_Consumption (unit conversion)'], 'intent': 'calculate_hourly_energy_consumption_and_average_by_power_source', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['Engine_Power values from lawn_mowers table'], 'units': {'power': 'kW (assumed from database schema)', 'energy': 'megajoules (MJ)', 'conversion': '1 kW × 1 hour = 3.6 MJ (via 1 kWh = 3.6 MJ)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a certain lawn mower has a Battery_Capacity of 10000Ah, a Run_Time of 10000 minutes, and a Cutting_Efficiency of 1000㎡/h, calculate the lawn area (in square kilometers) it can cover on a single charge, grouped by Power_Source.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 'Electric' AS Power_Source, (1000 * 10000 / 60 / 1000000) AS Area_km2;",
        "db_id": "lawnmower"
    },
    {
        "id": 273,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric lawn mower model', 'operating time', 'mowing efficiency', 'battery lifespan', 'charge cycles'], 'relations': ['mower_model_to_specs (Model → lawn_mowers table)', 'mower_model_to_performance (Model → performance_metrics table)', 'calculation_factor_combination (Run_Time × Cutting_Efficiency × Battery_Life)'], 'intent': 'calculate_total_mowing_area', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'area': 'square meters', 'time': 'minutes/hours (from Run_Time)', 'efficiency': 'square meters/minute (derived from Cutting_Efficiency)', 'battery_lifespan': 'charge cycles (from Battery_Life)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}], 'lawnmower.performance_metrics': [{'column': 'Cutting_Efficiency'}, {'column': 'Battery_Life'}]}}\nA physical knowledge question is as follows:\nCalculate the theoretical maximum runtime (in minutes) of an electric lawn mower when fully charged, with the blade rotating at maximum speed, assuming the battery energy is entirely converted into mechanical energy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, (lm.Battery_Capacity * 24 * 3600) / (0.5 * 0.5 * lm.Blade_Weight * POWER(lm.Blade_Length/200, 2) * POWER(2 * PI() * pm.Blade_Speed/60, 2) * 60) AS Theoretical_Run_Time_Minutes FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source IN ('Electric', 'Battery');",
        "db_id": "lawnmower"
    },
    {
        "id": 274,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Power_Source', 'lawn_mower', 'lawn_area'], 'relations': ['lawn_mower_to_power_source (lawn_mower → Power_Source)', 'lawn_mower_to_area (lawn_mower → lawn_area)'], 'intent': 'determine_max_lawn_area_by_power_source', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Cutting_Width', 'Run_Time'], 'units': {'Cutting_Width': 'inches', 'Run_Time': 'minutes', 'lawn_area': 'square_feet (calculated as Cutting_Width_inches * Run_Time_minutes * 0.125)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Cutting_Width', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '割草宽度（cm）', 'examples': ['50.0', '45.0', '48.0', '52.0', '60.0']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}]}}\nA mathematical logic question is as follows:\nStatistics on the total annual energy cost of all gasoline-powered lawn mowers, assuming 2 hours of operation per day, gasoline price at $3.5/L, incorporating engine power and fuel consumption metrics.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, 2 * 365 * pm.Fuel_Consumption * 3.5 AS Annual_Fuel_Cost FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source = 'Gasoline';",
        "db_id": "lawnmower"
    },
    {
        "id": 275,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Battery_Capacity 10000Ah', 'Run_Time 10000 minutes', 'Cutting_Efficiency 1000㎡/h', 'Power_Source'], 'relations': ['lawn_mowers_to_performance_metrics (Mower_ID → Performance_ID)', 'run_time_to_hours (10000 minutes = 166.67 hours)', 'cutting_efficiency_to_area (1000㎡/h × 166.67h = 166,666.67㎡)', 'area_unit_conversion (166,666.67㎡ → 0.16666667 km²)'], 'intent': 'calculate_lawn_area_coverage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 10000, 1000], 'units': {'battery_capacity': 'Ah (Ampere-hour)', 'time': 'minutes → hours (conversion: ÷60)', 'area': '㎡ → km² (conversion: ÷1,000,000)', 'efficiency': '㎡/h (square meters per hour)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}], 'lawnmower.performance_metrics': [{'column': 'Cutting_Efficiency'}]}}\nA common sense reasoning question is as follows:\nIdentify records where battery capacity and operating time are clearly contradictory, such as a high-capacity battery paired with extremely short operating time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, lm.Run_Time AS Recorded_Run_Time, (lm.Battery_Capacity * 24 * 0.8) / (pm.Torque * pm.Blade_Speed / 9549 * 0.001) AS Theoretical_Run_Time FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source IN ('Electric', 'Battery') AND ABS((lm.Battery_Capacity * 24 * 0.8) / (pm.Torque * pm.Blade_Speed / 9549 * 0.001) - lm.Run_Time) / lm.Run_Time > 0.5;",
        "db_id": "lawnmower"
    },
    {
        "id": 276,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric lawn mower', 'battery capacity', 'engine power', 'maximum blade speed'], 'relations': ['mower_to_battery_capacity (lawn_mowers.Mower_ID → Battery_Capacity)', 'power_to_runtime (Engine_Power → Runtime calculation)'], 'intent': 'calculate_theoretical_max_runtime', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'battery_capacity': 'Wh (Watt-hours)', 'engine_power': 'W (Watts)', 'runtime_conversion': '1 hour = 60 minutes (Runtime = Battery_Capacity / Engine_Power * 60)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}, {'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}], 'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}]}}\nA hypothetical reasoning question is as follows:\nIdentify records with physical inconsistencies where lawn mowers weigh over 1000kg but are labeled as manually operated, or have a turning radius smaller than the blade length.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Mower_ID, Model, Weight, Power_Source, Turning_Radius, Blade_Length FROM lawn_mowers WHERE (Power_Source = 'Manual' AND Weight > 1000) OR (Turning_Radius < Blade_Length / 200);",
        "db_id": "lawnmower"
    },
    {
        "id": 277,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline-powered lawn mowers', '2 hours/day operation', 'gasoline price $3.5/L', 'engine power', 'fuel consumption metrics'], 'relations': ['mower_to_metrics (Mower_ID → performance_metrics)', 'fuel_consumption_to_cost (Fuel_Consumption × operational_hours × price)'], 'intent': 'calculate_annual_energy_cost', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2, 3.5], 'units': {'time': 'hours/day (operational duration)', 'price': '$/L (gasoline price)', 'fuel_consumption': 'L/hour (from performance_metrics)', 'cost': '$/year (calculated output)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}], 'lawnmower.performance_metrics': [{'column': 'Mower_ID'}, {'column': 'Fuel_Consumption'}]}}\nA physical knowledge question is as follows:\nAssuming the mower blade needs to be lifted to the ground clearance height for replacement during maintenance, given that the weight of the mower blade during a certain maintenance is 2.5kg and the gravitational acceleration is 9.8m/s², calculate the work done to overcome gravity (unit: joules).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 2.5 * 9.8 * (AVG(Ground_Clearance)/100) AS Work_Joules FROM lawn_mowers;",
        "db_id": "lawnmower"
    },
    {
        "id": 278,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity', 'operating time', 'lawn mowers'], 'relations': ['battery_capacity_to_run_time (inverse correlation)', 'contradictory_spec_pair (Battery_Capacity vs Run_Time)'], 'intent': 'identify_inconsistent_product_specs', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_capacity': 'Ah (Ampere-hours) or Wh (Watt-hours)', 'operating_time': 'minutes or hours', 'thresholds': 'undefined (requires dynamic calculation of outliers)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}]}}\nA mathematical logic question is as follows:\nCount the total cost of parts (Parts_Cost) for all maintenance of the 'Replacement' type, and calculate its proportion (rounded to two decimal places) to the total cost of all maintenance types.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND((SELECT SUM(Parts_Cost) FROM maintenance WHERE Maintenance_Type='Replacement') / SUM(Parts_Cost) * 100, 2) AS Cost_Percentage FROM maintenance;",
        "db_id": "lawnmower"
    },
    {
        "id": 279,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn_mowers', 'Weight', 'Power_Source', 'Turning_Radius', 'Blade_Length'], 'relations': [\"weight_to_power_source (Weight > 1000kg AND Power_Source = 'Manual')\", 'turning_radius_to_blade_length (Turning_Radius < Blade_Length)'], 'intent': 'identify_physical_inconsistencies', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [1000], 'units': {'weight': 'kg', 'length': 'unit (assumed consistent between Turning_Radius and Blade_Length)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Weight', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.5', '20.0', '22.0', '24.0', '26.0']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Turning_Radius', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '转弯半径（m）', 'examples': ['0.8', '0.5', '0.6', '0.7', '1.2']}, {'column': 'Blade_Length', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片长度（cm）', 'examples': ['55.0', '40.0', '42.0', '45.0', '48.0']}]}}\nA common sense reasoning question is as follows:\nAccording to maintenance records, is the average cost of 'Routine' type maintenance necessarily lower than that of 'Repair' type? Please explain the reason by combining the definition of maintenance types and cost composition.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (SELECT AVG(Cost) FROM maintenance WHERE Maintenance_Type='Routine') < (SELECT AVG(Cost) FROM maintenance WHERE Maintenance_Type='Repair') THEN '符合常识' ELSE '异常' END AS Cost_Comparison;",
        "db_id": "lawnmower"
    },
    {
        "id": 280,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mower blade', 'blade weight 2.5kg', 'gravitational acceleration 9.8m/s²', 'ground clearance height'], 'relations': ['blade_weight_to_mower (mower blade → lawn_mowers.Blade_Weight)', 'ground_clearance_to_mower (lawn_mowers → lawn_mowers.Ground_Clearance)', 'work_done_relation (Work = mgh)'], 'intent': 'calculate_work_done_to_lift_blade_against_gravity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [2.5, 9.8], 'units': {'mass': 'kg', 'acceleration': 'm/s²', 'distance': 'meters (assumed unit for Ground_Clearance)', 'work': 'joules (J = kg·m²/s²)', 'conversion': 'Work = mass × gravity × height'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Blade_Weight', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片重量（kg）', 'examples': ['2.5', '1.5', '1.8', '2.0', '2.2']}, {'column': 'Ground_Clearance', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '离地间隙（cm）', 'examples': ['4.5', '5.0', '6.0', '5.5', '8.0']}]}}\nA hypothetical reasoning question is as follows:\nAssume a lawn mower underwent 1 million maintenance instances in one year, with each instance having a Labor_Cost of $50,000 and a Parts_Cost of $1,000,000. Determine whether its total maintenance cost exceeds 10 times the maximum annual Revenue in the manufacturer table.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN 1000000*(50000+1000000) > (SELECT MAX(Revenue)*10 FROM manufacturers) THEN '是' ELSE '否' END AS Is_Exceed;",
        "db_id": "lawnmower"
    },
    {
        "id": 281,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance_type.Replacement', 'Parts_Cost', 'Total_Maintenance_Cost'], 'relations': ['maintenance_type_to_cost (Replacement → Parts_Cost)', 'proportion_comparison (Parts_Cost_Replacement / Total_Cost_All_Types)'], 'intent': 'calculate_proportion_of_replacement_parts_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2], 'units': {'cost': 'currency (implied by database schema)', 'proportion': 'percentage (rounded to two decimal places)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}, {'column': 'Parts_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '零件成本（美元）', 'examples': ['50.0', '20.0', '10000.0', '1000000.0', '1000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the daily average cost for each maintenance (total cost divided by the number of days until the next maintenance), and identify the top five maintenance records with the highest daily average cost, sorted in descending order of daily average cost.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_ID, (Labor_Cost + Parts_Cost) / DATEDIFF(Next_Maintenance_Date, Maintenance_Date) AS Daily_Cost FROM maintenance WHERE Next_Maintenance_Date IS NOT NULL ORDER BY Daily_Cost DESC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 282,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Routine maintenance', 'Repair maintenance'], 'relations': ['maintenance_type_comparison', 'cost_composition_breakdown'], 'intent': 'compare_average_costs_between_maintenance_types', 'reasoning_type': 'common_sense_understanding_reasoning + mathematical_logic_reasoning', 'numerical_values': [], 'units': {'cost': \"USD (inferred from 'Cost', 'Labor_Cost', and 'Parts_Cost' fields)\", 'calculation': 'average cost comparison between groups'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}, {'column': 'Labor_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '人工成本（美元）', 'examples': ['100.0', '30.0', '5000.0', '500000.0', '4000.0']}, {'column': 'Parts_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '零件成本（美元）', 'examples': ['50.0', '20.0', '10000.0', '1000000.0', '1000.0']}]}}\nA mathematical logic question is as follows:\nStatistics the average proportion of parts cost to total cost for each maintenance type, sorted in descending order by proportion.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_Type, AVG(Parts_Cost / (Labor_Cost + Parts_Cost) * 100) AS Avg_Parts_Percentage FROM maintenance GROUP BY Maintenance_Type ORDER BY Avg_Parts_Percentage DESC;",
        "db_id": "lawnmower"
    },
    {
        "id": 283,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['1 million maintenance instances', 'Labor_Cost $50,000', 'Parts_Cost $1,000,000', 'maximum annual Revenue in manufacturers table'], 'relations': ['maintenance_to_cost (Labor_Cost + Parts_Cost)', 'mower_to_manufacturer (via Manufacturer_ID)', 'revenue_comparison (10x multiplier)'], 'intent': 'compare_total_maintenance_cost_to_10x_max_revenue', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 50000, 1000000, 10], 'units': {'cost': '$ (USD)', 'revenue': '$ (USD)', 'count': 'unitless (maintenance instances)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Labor_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '人工成本（美元）', 'examples': ['100.0', '30.0', '5000.0', '500000.0', '4000.0']}, {'column': 'Parts_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '零件成本（美元）', 'examples': ['50.0', '20.0', '10000.0', '1000000.0', '1000.0']}], 'lawnmower.manufacturers': [{'column': 'Revenue'}]}}\nA common sense reasoning question is as follows:\nQuery records with maintenance type as 'Replacement', sorted by total cost in descending order, and retrieve the top five records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM maintenance WHERE Maintenance_Type = 'Replacement' ORDER BY (Labor_Cost + Parts_Cost) DESC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 284,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance record', 'daily average cost', 'next maintenance date', 'maintenance cost'], 'relations': ['maintenance_record_to_date_range (Maintenance_Date → Next_Maintenance_Date)', 'daily_average_cost_formula (Cost ÷ Date_Difference)'], 'intent': 'calculate_and_rank_daily_average_maintenance_costs', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'cost': 'currency (implied by Cost field)', 'duration': 'days (date difference calculation)', 'daily_average_cost': 'currency_per_day (Cost / Days)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '维护记录唯一标识', 'examples': ['1', '200', '201', '202', '203']}, {'column': 'Maintenance_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-07-01', '2023-09-01', '2023-11-15', '2023-12-25', '2024-01-20']}, {'column': 'Next_Maintenance_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下次维护日期', 'examples': ['2024-07-01', '2024-09-01', '2024-11-15', '2024-12-25', '2025-01-20']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there are abnormal records with maintenance costs exceeding $1 million, sort them in descending order by cost and extract the top three.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM maintenance WHERE Cost > 1000000 ORDER BY Cost DESC LIMIT 3;",
        "db_id": "lawnmower"
    },
    {
        "id": 285,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"maintenance_type\", \"parts_cost\", \"total_cost\", \"proportion\"],\n  \"relations\": [\"maintenance_type_to_cost_ratio (Maintenance_Type → Parts_Cost/Total_Cost)\", \"statistical_aggregation (average per Maintenance_Type)\"],\n  \"intent\": \"calculate_average_cost_ratio_by_category\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"currency\": \"USD (assumed)\",\n    \"proportion\": \"dimensionless ratio (Parts_Cost / Total_Cost)\"\n  },\n  \"required_tables\": [\"maintenance\"],\n  \"required_fields\": [\n    \"maintenance.Maintenance_Type\",\n    \"maintenance.Cost\",\n    \"maintenance.Parts_Cost\"\n  ]\n}\n```\nA physical knowledge question is as follows:\nAssuming the vibration level of the lawn mower is reduced to 80% of its original value after each maintenance, calculate the percentage reduction in vibration energy, and display the average reduction percentage grouped by service center.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Service_Center, AVG((1 - POWER(0.8, 2)) * 100) AS Avg_Energy_Reduction_Percent FROM maintenance m JOIN performance_metrics pm ON m.Mower_ID = pm.Mower_ID GROUP BY m.Service_Center",
        "db_id": "lawnmower"
    },
    {
        "id": 286,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"maintenance type 'Replacement'\", 'total cost'], 'relations': [\"filter_by_maintenance_type (Maintenance_Type = 'Replacement')\", 'sort_by_cost_descending (ORDER BY Cost DESC)', 'top_n_records (LIMIT 5)'], 'intent': 'retrieve_records_with_filter_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'cost': 'currency (assumed dollars based on context)', 'record_limit': 'unitless count (5 records)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}, {'column': 'Maintenance_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '维护记录唯一标识', 'examples': ['1', '200', '201', '202', '203']}]}}\nA mathematical logic question is as follows:\nCalculate the structural ratio of maintenance costs for each service center, displaying only records where the ratio of labor costs to parts costs exceeds 2:1, and group them a second time by maintenance type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Service_Center, Maintenance_Type, SUM(Labor_Cost)/NULLIF(SUM(Parts_Cost),0) AS Labor_Parts_Ratio FROM maintenance GROUP BY Service_Center, Maintenance_Type HAVING SUM(Labor_Cost)/NULLIF(SUM(Parts_Cost),0) > 2",
        "db_id": "lawnmower"
    },
    {
        "id": 287,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance records', 'maintenance cost exceeding $1 million'], 'relations': ['record_to_cost (Maintenance_ID → Cost)', 'filter_by_threshold (Cost > 1000000)'], 'intent': 'retrieve_top_expensive_maintenance_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000], 'units': {'currency': 'USD', 'threshold': '1000000 USD'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '维护记录唯一标识', 'examples': ['1', '200', '201', '202', '203']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '9', '14']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}, {'column': 'Maintenance_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-07-01', '2023-09-01', '2023-11-15', '2023-12-25', '2024-01-20']}, {'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}]}}\nA common sense reasoning question is as follows:\nFind maintenance records where the total maintenance cost exceeds 50% of the price of a new lawn mower of the same model, and group statistics by customer type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Customer_Type, COUNT(*) AS Overpriced_Count FROM maintenance m JOIN lawn_mowers lm ON m.Mower_ID = lm.Mower_ID JOIN sales s ON m.Mower_ID = s.Mower_ID JOIN customers c ON s.Customer_ID = c.Customer_ID WHERE m.Cost > 0.5 * lm.Price GROUP BY c.Customer_Type",
        "db_id": "lawnmower"
    },
    {
        "id": 288,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower', 'maintenance', 'vibration level reduction to 80%', 'service center'], 'relations': ['lawn_mower_to_maintenance (Mower_ID)', 'maintenance_to_service_center (Service_Center)'], 'intent': 'calculate_percentage_reduction_in_vibration_energy_and_average_by_service_center', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80], 'units': {'vibration_level': 'arbitrary unit (implied by database)', 'percentage_reduction': '% (calculated via energy relationship)', 'conversion': 'Energy ∝ Vibration_Level² → 36% reduction in energy (1 - (0.8)^2)*100'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Service_Center', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '服务中心名称', 'examples': ['Lawn Care Center', 'LawnCare Hub', 'HeavyDuty Service Center', 'Quantum Repair Hub', 'Premium Service Center']}], 'lawnmower.performance_metrics': [{'column': 'Vibration_Level'}]}}\nA hypothetical reasoning question is as follows:\nAssuming there are 100 consecutive maintenance records, with each maintenance interval being 1 minute, and the maintenance cost growing exponentially (initial cost $100, growth rate 10%), calculate the cumulative cost at the 100th maintenance, and validate the limit value grouped by maintenance type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_Type, 100*(POWER(1.1,100)-1)/0.1 AS Cumulative_Cost FROM maintenance GROUP BY Maintenance_Type",
        "db_id": "lawnmower"
    },
    {
        "id": 289,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['service center', 'labor costs', 'parts costs', 'maintenance type'], 'relations': ['service_center_to_costs (service center → labor/parts costs)', 'maintenance_type_to_ratio (maintenance type → cost ratio grouping)'], 'intent': 'calculate_and_filter_cost_ratio_by_service_center', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2], 'units': {'currency': 'USD (assumed from Cost/Labor_Cost/Parts_Cost columns in maintenance table)', 'ratio': '2:1 (labor to parts cost ratio threshold)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Service_Center', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '服务中心名称', 'examples': ['Lawn Care Center', 'LawnCare Hub', 'HeavyDuty Service Center', 'Quantum Repair Hub', 'Premium Service Center']}, {'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Labor_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '人工成本（美元）', 'examples': ['100.0', '30.0', '5000.0', '500000.0', '4000.0']}, {'column': 'Parts_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '零件成本（美元）', 'examples': ['50.0', '20.0', '10000.0', '1000000.0', '1000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the change in kinetic energy of a lawn mower blade at maximum speed after a blade replacement during a certain maintenance, assuming the blade is a uniform rectangular sheet and only the weight and length of the blade change before and after maintenance.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m_new.Maintenance_ID, m_new.Mower_ID, (1.0/6) * lm_new.Blade_Weight * POWER(lm_new.Blade_Length, 2) * POWER((pm.Blade_Speed * PI() / 30), 2) AS new_kinetic, (1.0/6) * lm_prev.Blade_Weight * POWER(lm_prev.Blade_Length, 2) * POWER((pm_prev.Blade_Speed * PI() / 30), 2) AS old_kinetic, (1.0/6) * (lm_new.Blade_Weight * POWER(lm_new.Blade_Length, 2) * POWER((pm.Blade_Speed * PI() / 30), 2) - lm_prev.Blade_Weight * POWER(lm_prev.Blade_Length, 2) * POWER((pm_prev.Blade_Speed * PI() / 30), 2)) AS energy_diff FROM lawnmower.maintenance m_new JOIN lawnmower.maintenance m_prev ON m_new.Mower_ID = m_prev.Mower_ID AND m_prev.Maintenance_Date = (SELECT MAX(Maintenance_Date) FROM lawnmower.maintenance WHERE Mower_ID = m_new.Mower_ID AND Maintenance_Date < m_new.Maintenance_Date) JOIN lawnmower.lawn_mowers lm_new ON m_new.Mower_ID = lm_new.Mower_ID JOIN lawnmower.lawn_mowers lm_prev ON m_prev.Mower_ID = lm_prev.Mower_ID JOIN lawnmower.performance_metrics pm ON m_new.Mower_ID = pm.Mower_ID JOIN lawnmower.performance_metrics pm_prev ON m_prev.Mower_ID = pm_prev.Mower_ID WHERE m_new.Maintenance_Type = 'Replacement';",
        "db_id": "lawnmower"
    },
    {
        "id": 290,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance records', 'lawn mower model price', 'customer type', '50% threshold'], 'relations': ['maintenance_to_mower (Maintenance.Mower_ID → Lawnmower.Mower_ID)', 'mower_to_price (Lawnmower.Mower_ID → Lawnmower.Price)', 'maintenance_cost_comparison (Maintenance.Cost > 0.5 * Lawnmower.Price)', 'maintenance_to_customer (Maintenance.Mower_ID → Sales.Mower_ID → Customers.Customer_ID → Customers.Customer_Type)'], 'intent': 'filter_maintenance_by_cost_ratio_and_group_by_customer_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5], 'units': {'currency': 'USD (implied by context for Price and Cost)', 'percentage': '50% threshold calculation'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '9', '14']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}], 'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}], 'lawnmower.sales': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}], 'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Customer_Type'}]}}\nA mathematical logic question is as follows:\nCount the abnormal records in the maintenance logs of each service center where the difference between the total cost of repair-type maintenance and the cost of parts exceeds the average of the entire table.\nyour response just have a SQL without anything.\n",
        "solution": "WITH Stats AS (SELECT AVG((Cost - Parts_Cost)/Cost*100) AS avg_ratio, STDDEV((Cost - Parts_Cost)/Cost*100) AS std_ratio FROM maintenance WHERE Maintenance_Type = 'Repair') SELECT Service_Center, Maintenance_ID, (Cost - Parts_Cost)/Cost*100 AS cost_ratio FROM maintenance CROSS JOIN Stats WHERE Maintenance_Type = 'Repair' AND (Cost - Parts_Cost)/Cost*100 > (avg_ratio + 3 * std_ratio);",
        "db_id": "lawnmower"
    },
    {
        "id": 291,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['100 consecutive maintenance records', 'initial cost $100', 'growth rate 10%', '100th maintenance'], 'relations': ['exponential_growth (initial cost → growth rate → cumulative cost)', 'group_by_maintenance_type (validation criterion)'], 'intent': 'calculate_cumulative_cost_and_validate_grouped_by_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 0.1, 100], 'units': {'cost': '$ (dollars)', 'growth_rate': '% (percentage)', 'interval': 'minutes (provided but not directly used in calculation)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}]}}\nA common sense reasoning question is as follows:\nIdentify records in replacement-type maintenance where the Next_Maintenance_Date was not updated synchronously.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_ID, Mower_ID, Maintenance_Date, Next_Maintenance_Date FROM maintenance WHERE Maintenance_Type = 'Replacement' AND TIMESTAMPDIFF(MONTH, Maintenance_Date, Next_Maintenance_Date) < 6;",
        "db_id": "lawnmower"
    },
    {
        "id": 292,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower blade before replacement', 'lawn mower blade after replacement', 'maximum blade speed'], 'relations': ['blade_replacement (before → after replacement)', 'moment_of_inertia_pre (pre-blade: I_pre = 1/3 * m_pre * L_pre²)', 'moment_of_inertia_post (post-blade: I_post = 1/3 * m_post * L_post²)', 'kinetic_energy_change (ΔKE = 1/2 * (I_post - I_pre) * ω²)'], 'intent': 'calculate_kinetic_energy_change_after_blade_replacement', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'mass': 'kg (assuming Blade_Weight in database is in kg)', 'length': 'm (assuming Blade_Length in database is in meters)', 'angular_velocity': 'rad/s (derived from Blade_Speed in RPM via ω = 2πRPM/60)', 'energy': 'Joules (calculated via KE = 1/2 * I * ω²)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Blade_Weight', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片重量（kg）', 'examples': ['2.5', '1.5', '1.8', '2.0', '2.2']}, {'column': 'Blade_Length', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片长度（cm）', 'examples': ['55.0', '40.0', '42.0', '45.0', '48.0']}], 'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}]}}\nA hypothetical reasoning question is as follows:\nIdentify records where the single maintenance labor cost exceeds 10 times the annual maintenance budget limit for that lawn mower (assuming budget = total annual maintenance count * historical average cost * 1000).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m1.Maintenance_ID, m1.Mower_ID, m1.Labor_Cost FROM maintenance m1 WHERE m1.Labor_Cost > 10 * (SELECT AVG(Cost) * COUNT(*) * 1000 FROM maintenance m2 WHERE m2.Mower_ID = m1.Mower_ID);",
        "db_id": "lawnmower"
    },
    {
        "id": 293,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['service center', 'repair-type maintenance', 'total cost', 'parts cost', 'average difference'], 'relations': ['maintenance_record_to_service_center (Service_Center field)', 'cost_difference (Cost - Parts_Cost = Labor_Cost)', 'comparison_to_average (individual difference > global average)'], 'intent': 'count_abnormal_maintenance_records_by_service_center', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'cost': '$ (USD, inferred from Cost and Parts_Cost columns)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Service_Center', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '服务中心名称', 'examples': ['Lawn Care Center', 'LawnCare Hub', 'HeavyDuty Service Center', 'Quantum Repair Hub', 'Premium Service Center']}, {'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}, {'column': 'Parts_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '零件成本（美元）', 'examples': ['50.0', '20.0', '10000.0', '1000000.0', '1000.0']}]}}\nA physical knowledge question is as follows:\nA gasoline-powered lawn mower produced by a certain manufacturer has an average engine power of 5 HP. If the average torque is 10 Nm, what blade rotation speed in RPM is needed?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (lm.Engine_Power * 5252) / pm.Torque AS Blade_Speed_RPM FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source = 'Gasoline' AND lm.Engine_Power = 5 AND pm.Torque = 10;",
        "db_id": "lawnmower"
    },
    {
        "id": 294,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['replacement-type maintenance', 'Next_Maintenance_Date', 'synchronous update'], 'relations': [\"maintenance_type_to_records (filter by 'replacement')\", 'date_update_discrepancy (Next_Maintenance_Date ≠ expected schedule)'], 'intent': 'identify_inconsistent_maintenance_records', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'date': 'YYYY-MM-DD (date format)'}, 'foreign_keys': [{'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '维护类型', 'examples': ['Routine', 'Replacement', 'Repair']}, {'column': 'Maintenance_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-07-01', '2023-09-01', '2023-11-15', '2023-12-25', '2024-01-20']}, {'column': 'Next_Maintenance_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '下次维护日期', 'examples': ['2024-07-01', '2024-09-01', '2024-11-15', '2024-12-25', '2025-01-20']}]}}\nA mathematical logic question is as follows:\nA manufacturer has an annual revenue of $1 billion, a profit margin of 5%, R&D expenses of $50 million, and 5,000 employees. Calculate the net profit per employee (after deducting R&D costs).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((m.Revenue * (m.Profit_Margin / 100)) - m.`R&D_Spending`) / m.Employee_Count AS Net_Profit_Per_Employee FROM manufacturers m WHERE m.Revenue = 1000000000 AND m.Profit_Margin = 5 AND m.`R&D_Spending` = 50000000 AND m.Employee_Count = 5000;",
        "db_id": "lawnmower"
    },
    {
        "id": 295,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Maintenance record', 'Lawn mower', 'Labor cost', 'Annual maintenance budget'], 'relations': ['maintenance_to_lawnmower (Maintenance.Mower_ID → Lawn_mowers.Mower_ID)', 'annual_maintenance_count (per Mower_ID per Year)', 'historical_average_cost (average Maintenance.Cost per Mower_ID)', 'budget_formula (budget = annual_count * historical_avg_cost * 1000)', 'threshold_comparison (Labor_Cost > 10 * budget)'], 'intent': 'identify_high_cost_maintenance_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 1000], 'units': {'cost': '$ (USD, implied by Cost/Labor_Cost fields)', 'budget': '$ (derived via formula)', 'count': 'unitless (maintenance instances)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'lawnmower.maintenance': [{'column': 'Maintenance_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '维护记录唯一标识', 'examples': ['1', '200', '201', '202', '203']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '9', '14']}, {'column': 'Maintenance_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-07-01', '2023-09-01', '2023-11-15', '2023-12-25', '2024-01-20']}, {'column': 'Labor_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '人工成本（美元）', 'examples': ['100.0', '30.0', '5000.0', '500000.0', '4000.0']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}], 'lawnmower.lawn_mowers': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}]}}\nA common sense reasoning question is as follows:\nA manufacturer has only been in operation for 1 year but has already produced a total of 1 million lawn mowers. Is this reasonable?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN m.Production_Volume_Total > 500000 AND (YEAR(CURDATE()) - m.Founded_Year) = 1 THEN '不合理' ELSE '合理' END AS Production_Feasibility FROM manufacturers m WHERE m.Production_Volume_Total = 1000000 AND (YEAR(CURDATE()) - m.Founded_Year) = 1;",
        "db_id": "lawnmower"
    },
    {
        "id": 296,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline-powered lawn mower', 'engine power 5 HP', 'average torque 10 Nm', 'blade rotation speed RPM'], 'relations': ['engine_power_to_torque (5 HP → 10 Nm)', 'torque_power_to_rpm (5 HP & 10 Nm → RPM)'], 'intent': 'calculate_blade_rotation_speed_from_power_and_torque', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5, 10], 'units': {'power': 'HP (converted to Watts: 1 HP = 745.7 W)', 'torque': 'Nm (Newton-meters)', 'rotation_speed': 'RPM (revolutions per minute)', 'conversion': 'RPM = (Power[W] × 60) / (Torque[Nm] × 2π)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}], 'lawnmower.performance_metrics': [{'column': 'Torque'}]}}\nA hypothetical reasoning question is as follows:\nIf a manufacturer's profit margin suddenly surges to 10,000%, while its annual revenue remains at $100 million and R&D expenditure is $100 million, how will its net profit change?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (m.Revenue * (m.Profit_Margin / 100)) - m.`R&D_Spending` AS New_Net_Profit FROM manufacturers m WHERE m.Revenue = 100000000 AND m.Profit_Margin = 10000 AND m.`R&D_Spending` = 100000000;",
        "db_id": "lawnmower"
    },
    {
        "id": 297,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'annual revenue $1 billion', 'profit margin 5%', 'R&D expenses $50 million', '5,000 employees'], 'relations': ['revenue_to_profit (revenue × profit margin)', 'net_profit_after_RnD (profit - R&D)', 'net_profit_per_employee (net profit ÷ employees)'], 'intent': 'calculate_net_profit_per_employee_after_RnD', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000, 5, 50000000, 5000], 'units': {'revenue': '$ (USD)', 'profit': '$ (USD)', 'R&D': '$ (USD)', 'employees': 'unitless count', 'profit_per_employee': '$ USD per employee'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Revenue'}, {'column': 'Profit_Margin'}, {'column': 'R&D_Spending'}, {'column': 'Employee_Count'}]}}\nA physical knowledge question is as follows:\nWhich manufacturers perform best in terms of the ratio of R&D expenditure to total production volume? Please list the top 5 ranked in descending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, (Production_Volume_Total / `R&D_Spending`) AS RD_Efficiency FROM manufacturers WHERE `R&D_Spending` > 0 ORDER BY RD_Efficiency DESC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 298,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', '1 year operation', '1 million lawn mowers'], 'relations': ['manufacturer_production_volume (manufacturer → production_volume_total)', 'operation_duration (1 year)', 'production_rate (1,000,000 units/year)'], 'intent': 'validate_production_volume_feasibility', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [1, 1000000], 'units': {'time': 'years', 'production_volume': 'units (lawn mowers)', 'production_rate': 'units/year (implied by context)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Name'}, {'column': 'Founded_Year'}, {'column': 'Production_Volume_Total'}]}}\nA mathematical logic question is as follows:\nCalculate the per capita output value (annual revenue/number of employees) for each manufacturer, and list the top 5 manufacturers with the highest per capita output value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, (Revenue / NULLIF(Employee_Count, 0)) AS Per_Capita_Output FROM manufacturers WHERE Employee_Count > 0 ORDER BY Per_Capita_Output DESC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 299,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'profit_margin 10,000%', 'annual_revenue $100 million', 'R&D_expenditure $100 million', 'net_profit'], 'relations': ['manufacturer_to_financials (manufacturer → profit_margin, revenue, R&D)', 'profit_margin_to_revenue (10,000% → $100 million)'], 'intent': 'calculate_change_in_net_profit', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 100000000, 100000000], 'units': {'profit_margin': '% (percentage)', 'revenue': '$ (USD)', 'R&D_expenditure': '$ (USD)', 'net_profit': '$ (USD)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Profit_Margin'}, {'column': 'Revenue'}, {'column': 'R&D_Spending'}]}}\nA common sense reasoning question is as follows:\nWhich countries have manufacturers with the oldest average establishment year? List the top 3 countries with the highest average establishment year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, AVG(2024 - Founded_Year) AS Avg_Years FROM manufacturers GROUP BY Country ORDER BY Avg_Years DESC LIMIT 3;",
        "db_id": "lawnmower"
    },
    {
        "id": 300,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'R&D expenditure', 'total production volume', 'ratio of R&D to production volume'], 'relations': ['manufacturer_to_R&D_spending', 'manufacturer_to_production_volume', 'ratio_calculation (R&D_spending / production_volume_total)'], 'intent': 'rank_manufacturers_by_R&D_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'R&D_spending': 'currency unit (implied by database schema, e.g., USD)', 'production_volume': 'units (implied by database schema)', 'ratio': 'unitless (dimensionless ratio)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Name'}, {'column': 'R&D_Spending'}, {'column': 'Production_Volume_Total'}]}}\nA hypothetical reasoning question is as follows:\nAssuming there are manufacturers whose R&D expenditures exceed 100 times their annual revenue, please list such manufacturers and rank the top 5 in descending order of R&D expenditures.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Name, `R&D_Spending`, Revenue FROM manufacturers WHERE `R&D_Spending` > Revenue * 100 ORDER BY `R&D_Spending` DESC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 301,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'annual revenue', 'number of employees'], 'relations': ['manufacturer_to_financials (manufacturer → revenue/employee_count)', 'per_capita_output_value (revenue ÷ employee_count)'], 'intent': 'calculate_per_capita_output_value_and_rank_top_5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'revenue': \"currency unit (implied by column name 'Revenue')\", 'employee_count': 'unitless count', 'per_capita_output_value': 'currency per employee (calculated field)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Revenue'}, {'column': 'Employee_Count'}]}}\nA physical knowledge question is as follows:\nCalculate the R&D expenditure density (in USD per person) for manufacturers in each country, grouped by country, and sort the results in descending order of R&D expenditure density.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, SUM(`R&D_Spending`) / SUM(Employee_Count) AS R_D_Density FROM manufacturers GROUP BY Country ORDER BY R_D_Density DESC;",
        "db_id": "lawnmower"
    },
    {
        "id": 302,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'countries', 'establishment year'], 'relations': ['manufacturer_to_country (Manufacturer_ID → Country)', 'country_to_avg_establishment_year (Country → AVG(Founded_Year))'], 'intent': 'calculate_and_rank_average_establishment_year_by_country', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'year': 'YYYY (four-digit year)', 'ranking': 'top N value (N=3)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Country'}, {'column': 'Founded_Year'}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total profit (Revenue * Profit Margin%) to total R&D expenditure for each country's manufacturers, and group statistics by country count based on this ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROIRatio, COUNT(Country) AS CountryCount FROM (SELECT Country, SUM(Revenue * Profit_Margin / 100) / SUM(`R&D_Spending`) AS ROIRatio FROM manufacturers GROUP BY Country) AS SubQuery GROUP BY ROIRatio;",
        "db_id": "lawnmower"
    },
    {
        "id": 303,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'R&D expenditures', 'annual revenue', '100 times'], 'relations': ['manufacturer_to_R&D (Manufacturer → R&D_Spending)', 'R&D_to_revenue_ratio (R&D_Spending > 100 * Revenue)'], 'intent': 'identify_manufacturers_with_high_R&D_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'R&D_Spending': 'monetary unit (assumed currency from Revenue column)', 'Revenue': 'monetary unit (assumed currency from manufacturers table)', 'ratio': 'dimensionless (R&D_Spending / Revenue)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Name'}, {'column': 'R&D_Spending'}, {'column': 'Revenue'}]}}\nA common sense reasoning question is as follows:\nGrouping by country, calculate the average founding year and average number of employees of manufacturers to verify the common assumption that 'companies established longer tend to have larger scales'.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, AVG(Founded_Year) AS AvgFoundedYear, AVG(Employee_Count) AS AvgEmployeeCount FROM manufacturers GROUP BY Country;",
        "db_id": "lawnmower"
    },
    {
        "id": 304,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['R&D expenditure', 'employee count', 'country'], 'relations': ['manufacturer_to_country (Manufacturer_ID → Country)', 'R&D_density (R&D_Spending / Employee_Count)'], 'intent': 'calculate_expenditure_density_per_person_by_country', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'R&D_expenditure': 'USD', 'employee_count': 'person', 'density': 'USD per person'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Country'}, {'column': 'R&D_Spending'}, {'column': 'Employee_Count'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a manufacturer's R&D expenditure is 1000 times its annual revenue, calculate its profit margin (with other costs being zero), and group these manufacturers by country to calculate their average profit margin.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Country, AVG((1 - `R&D_Spending` / Revenue) * 100) AS AvgProfitMargin FROM manufacturers WHERE `R&D_Spending` = Revenue * 1000 GROUP BY Country;",
        "db_id": "lawnmower"
    },
    {
        "id": 305,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'countries', 'profit', 'R&D expenditure'], 'relations': ['manufacturer_to_country (Manufacturer_ID → Country)', 'profit_calculation (Revenue × Profit_Margin%)', 'ratio_calculation (Total_Profit ÷ Total_R&D_Expenditure)'], 'intent': 'calculate_profit_to_rnd_ratio_by_country', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Revenue', 'Profit_Margin', 'R&D_Spending'], 'units': {'currency': '$ (USD, implied by database schema)', 'percentage': '% (Profit_Margin unit)', 'ratio': 'unitless (Profit/R&D ratio)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Manufacturer_ID'}, {'column': 'Country'}, {'column': 'Revenue'}, {'column': 'Profit_Margin'}, {'column': 'R&D_Spending'}]}}\nA physical knowledge question is as follows:\nPhysics-related question 1: Find manufacturers with an average annual profit power ranging between $1/s and $10/s.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_ID, Name FROM manufacturers WHERE ((Revenue * Profit_Margin / 100) / (2023 - Founded_Year)) / 31536000 BETWEEN 1 AND 10;",
        "db_id": "lawnmower"
    },
    {
        "id": 306,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'country', 'founding year', 'employee count'], 'relations': ['country_to_manufacturer (country → manufacturers)', 'founding_year_to_manufacturer (founding_year → manufacturers)', 'employee_count_to_manufacturer (employee_count → manufacturers)'], 'intent': 'verify_common_business_assumption', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'founding_year': 'years (e.g., 1995)', 'employee_count': 'number of employees (unitless)', 'average': 'statistical average (unitless)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Country'}, {'column': 'Founded_Year'}, {'column': 'Employee_Count'}]}}\nA mathematical logic question is as follows:\nMath Logic Problem 2: Identify manufacturers with R&D intensity exceeding 5% and per capita output value exceeding $1,000,000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_ID, Name FROM manufacturers WHERE (`R&D_Spending` / Revenue * 100) > 5 AND (Revenue / Employee_Count) > 1000000;",
        "db_id": "lawnmower"
    },
    {
        "id": 307,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturer', 'R&D Expenditure', 'Annual Revenue', 'Profit Margin', 'Country'], 'relations': ['R&D_Expenditure = 1000 * Annual_Revenue', 'Profit = Annual_Revenue - R&D_Expenditure', 'Profit_Margin = (Profit / Annual_Revenue) * 100', 'Manufacturer_to_Country (Manufacturer.Country)'], 'intent': 'calculate_profit_margin_and_average_by_country', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100], 'units': {'currency': 'USD (implied by database schema)', 'percentage': '% (unitless derived value)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Country'}, {'column': 'Revenue'}, {'column': 'R&D_Spending'}]}}\nA common sense reasoning question is as follows:\nCommon sense reasoning question 3: Find manufacturers that have been established for more than 30 years but have a profit margin below 15%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_ID, Name FROM manufacturers WHERE Founded_Year <= 1993 AND Profit_Margin < 15;",
        "db_id": "lawnmower"
    },
    {
        "id": 308,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'profit power $1/s', 'profit power $10/s'], 'relations': ['manufacturer_to_profit (Manufacturer_ID → Revenue and Profit_Margin)', 'profit_range_filter ($1/s to $10/s)'], 'intent': 'find_manufacturers_by_profit_power', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1, 10], 'units': {'profit_power': '$/s (dollars per second)', 'conversion': 'Annual_Profit = Revenue * (Profit_Margin / 100), Profit_Power = Annual_Profit / 31536000 (seconds in a year)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Revenue'}, {'column': 'Profit_Margin'}]}}\nA hypothetical reasoning question is as follows:\nHypothetical reasoning question 4: Find manufacturers whose R&D expenditure exceeds 10 times their market value\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_ID, Name FROM manufacturers WHERE `R&D_Spending` > Market_Cap * 10;",
        "db_id": "lawnmower"
    },
    {
        "id": 309,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'R&D intensity', 'per capita output value'], 'relations': ['manufacturer_to_metrics (Manufacturer_ID → R&D_Spending, Revenue, Employee_Count)', 'metric_calculations (R&D_Intensity = R&D_Spending/Revenue, Per_Capita_Output = Revenue/Employee_Count)'], 'intent': 'filter_manufacturers_by_financial_metrics', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.05, 1000000], 'units': {'R&D_intensity': '% (R&D_Spending/Revenue)', 'per_capita_output': '$ (Revenue per employee)', 'thresholds': '5%, $1,000,000'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Manufacturer_ID'}, {'column': 'Name'}, {'column': 'R&D_Spending'}, {'column': 'Revenue'}, {'column': 'Employee_Count'}]}}\nA physical knowledge question is as follows:\nThe blade of a certain gasoline-powered lawn mower rotates at 3000 RPM with a torque of 10 Nm. What is the engine power (HP)? How does this power support an efficiency of 500 square meters per hour?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, (pm.Torque * (2 * PI() * pm.Blade_Speed / 60) / 745.7) AS Engine_Power_HP, pm.Cutting_Efficiency FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source = 'Gasoline' AND pm.Cutting_Efficiency = 500;",
        "db_id": "lawnmower"
    },
    {
        "id": 310,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'establishment_year', 'profit_margin'], 'relations': ['company_age (current_year - founded_year > 30)', 'profit_threshold (profit_margin < 15%)'], 'intent': 'filter_manufacturers_by_age_and_profitability', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [30, 15], 'units': {'age': 'years', 'profit': '% (percentage)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Founded_Year'}, {'column': 'Profit_Margin'}]}}\nA mathematical logic question is as follows:\nAn electric lawn mower has a battery capacity of 5 Ah, an energy efficiency of 85%, and a nominal runtime of 60 minutes. Given a voltage of 24V, calculate the actual usable energy per charge (Wh) and the average power (W) during continuous operation of the lawn mower. If the user operates it for 2 hours per day, how many years can the battery (with 500 charge cycles) last?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, (24 * lm.Battery_Capacity * pm.Energy_Efficiency / 100) AS Actual_Energy_Wh, (24 * lm.Battery_Capacity * pm.Energy_Efficiency / 100) / (lm.Run_Time / 60) AS Avg_Power_W, ROUND(pm.Battery_Life / ((2 * 60) / lm.Run_Time) / 365, 1) AS Battery_Life_Years FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source IN ('Electric', 'Battery') AND lm.Battery_Capacity = 5 AND pm.Energy_Efficiency = 85 AND lm.Run_Time = 60;",
        "db_id": "lawnmower"
    },
    {
        "id": 311,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'R&D expenditure', 'market value'], 'relations': ['manufacturer_to_financials (Manufacturer → R&D_Spending, Market_Cap)', 'exceeds_threshold (R&D_Spending > 10 × Market_Cap)'], 'intent': 'identify_high_rd_manufacturers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'R&D_expenditure': 'monetary unit (assumed same as Market_Cap)', 'market_value': 'monetary unit (assumed same as R&D_Spending)', 'threshold': '10× multiplier'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Manufacturer_ID'}, {'column': 'Name'}, {'column': 'R&D_Spending'}, {'column': 'Market_Cap'}]}}\nA common sense reasoning question is as follows:\nIf an electric lawn mower has a noise level of 95 decibels, does it comply with daytime noise regulations in residential areas (typically limited to 55-65 decibels)? Explain the basis and potential consequences.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, pm.Noise_Level, CASE WHEN pm.Noise_Level BETWEEN 55 AND 65 THEN '符合' ELSE '不符合' END AS Compliance_Status FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source IN ('Electric', 'Battery') AND pm.Noise_Level = 95;",
        "db_id": "lawnmower"
    },
    {
        "id": 312,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['blade speed 3000 RPM', 'torque 10 Nm', 'engine power (HP)', 'efficiency 500 square meters/hour'], 'relations': ['RPM_to_rad_s (3000 RPM → 314.16 rad/s)', 'torque_to_power (10 Nm × 314.16 rad/s → 3141.6 W)', 'power_to_HP (3141.6 W → 4.21 HP)', 'power_to_efficiency (4.21 HP supports 500 m²/h)'], 'intent': 'calculate_engine_power_and_relate_to_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3000, 10, 500], 'units': {'RPM': 'revolutions per minute', 'torque': 'Nm (Newton-meter)', 'power': 'W (watts) → HP (horsepower) [1 HP = 745.7 W]', 'efficiency': 'square meters/hour (m²/h)', 'angular_velocity': 'rad/s (conversion factor: 1 RPM = 0.10472 rad/s)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}, {'column': 'Torque'}, {'column': 'Cutting_Efficiency'}], 'lawnmower.lawn_mowers': [{'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a certain lawn mower has a claimed maximum slope handling capacity of 90 degrees (vertical wall), with its own weight of 50 kg and a ground clearance of 20 cm. Calculate the minimum required friction coefficient μ between the tires and the wall when the mower is stationary on a 90-degree slope. If the mower has an acceleration of 10 m/s², how much torque (in Nm) is needed for it to climb vertically upward?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, '∞' AS Min_Friction_Coefficient, (lm.Wheel_Size * 0.0254 / 2) * lm.Weight * (9.8 + pm.Acceleration) AS Required_Torque_Nm FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE pm.Slope_Handling = 90 AND lm.Weight = 50 AND lm.Ground_Clearance = 20 AND pm.Acceleration = 10;",
        "db_id": "lawnmower"
    },
    {
        "id": 313,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric lawn mower', 'battery capacity 5 Ah', 'energy efficiency 85%', 'nominal runtime 60 minutes', 'voltage 24V', '2 hours daily operation', '500 charge cycles'], 'relations': ['battery_capacity_to_energy (24V × 5 Ah × 85% → usable_energy 102 Wh)', 'runtime_to_power (102 Wh / 1 hour → power 102 W)', 'charge_cycles_to_lifespan (500 cycles × 60 minutes per cycle / 120 minutes per day → 250 days ≈ 0.68 years)'], 'intent': 'calculate_actual_energy_output_and_battery_lifespan', 'reasoning_type': 'physical knowledge reasoning, mathematical logic reasoning', 'numerical_values': [5, 85, 60, 24, 2, 500], 'units': {'battery_capacity': 'Ah (Ampere-hour)', 'voltage': 'V (Volts)', 'energy': 'Wh (Watt-hour) = 24V × 5 Ah × 0.85', 'power': 'W (Watts) = 102 Wh / 1 hour', 'runtime_conversion': '60 minutes = 1 hour', 'daily_usage': '2 hours/day = 120 minutes/day', 'lifespan_conversion': '500 cycles × 60 minutes / 120 minutes/day = 250 days'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}], 'lawnmower.performance_metrics': [{'column': 'Energy_Efficiency'}]}}\nA physical knowledge question is as follows:\nFind the top 5 lawn mowers with the highest ratio of torque to acceleration, sorted in descending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT pm.Mower_ID, (pm.Torque / (lm.Weight * 0.2)) AS Torque_Acceleration_Ratio FROM performance_metrics pm JOIN lawn_mowers lm ON pm.Mower_ID = lm.Mower_ID ORDER BY Torque_Acceleration_Ratio DESC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 314,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric lawn mower', 'noise level 95 decibels', 'residential noise regulations (55-65 decibels)'], 'relations': ['mower_to_noise_level (electric lawn mower → noise level 95 dB)', 'regulation_comparison (95 dB vs 55-65 dB)'], 'intent': 'check_compliance_with_noise_regulations', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [95, 55, 65], 'units': {'noise_level': 'decibels (dB)', 'regulation_range': '55-65 decibels (daytime residential limit)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.performance_metrics': [{'column': 'Noise_Level'}]}}\nA mathematical logic question is as follows:\nCalculate the total effective working time (in hours) of all electric lawn mowers, sorted in descending order by total time and taking the top three.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, (pm.Battery_Life * lm.Run_Time * pm.Energy_Efficiency) / (60 * 100) AS Total_Hours FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source IN ('Electric', 'Battery') ORDER BY Total_Hours DESC LIMIT 3;",
        "db_id": "lawnmower"
    },
    {
        "id": 315,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA common sense reasoning question is as follows:\nQuery the top 5 lawn mowers with a noise level (Noise_Level) below 75 decibels and cutting efficiency (Cutting_Efficiency) above 200 square meters per hour, sorted by noise level in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Mower_ID, Noise_Level, Cutting_Efficiency FROM performance_metrics WHERE Noise_Level < 75 AND Cutting_Efficiency > 200 ORDER BY Noise_Level ASC LIMIT 5;",
        "db_id": "lawnmower"
    },
    {
        "id": 316,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mowers', 'torque', 'acceleration', 'torque-to-acceleration ratio'], 'relations': ['lawn_mower_to_performance (mower → torque/acceleration data)', 'ratio_calculation (torque ÷ acceleration)'], 'intent': 'rank_lawn_mowers_by_torque_acceleration_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'torque': 'N·m (Newton-meters)', 'acceleration': 'm/s² (meters per second squared)', 'ratio_unit': 'N·m/(m/s²) → kg (derived unit)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.performance_metrics': [{'column': 'Torque'}, {'column': 'Acceleration'}], 'lawnmower.lawn_mowers': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}]}}\nA hypothetical reasoning question is as follows:\nAssuming there exists a lawn mower with an acceleration equal to ten times Earth's gravitational acceleration (i.e., 98 m/s²), query the devices with acceleration ≥ 98 m/s² and deceleration ≥ 98 m/s², then sort them in descending order by acceleration and take the top three.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Mower_ID, Acceleration, Deceleration FROM performance_metrics WHERE Acceleration >= 98 AND Deceleration >= 98 ORDER BY Acceleration DESC LIMIT 3;",
        "db_id": "lawnmower"
    },
    {
        "id": 317,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric lawn mowers', 'total effective working time', 'sales quantity'], 'relations': ['lawn_mowers_to_sales (Mower_ID → Sale records)', 'power_source_filter (Electric)'], 'intent': 'calculate_total_effective_working_time_for_electric_mowers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'time': 'hours (Run_Time in lawn_mowers)', 'quantity': 'units sold (Quantity in sales)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}], 'lawnmower.sales': [{'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nSuppose the blade speed of a certain lawn mower is 3500 RPM, and the blade length is 45 cm. Please calculate the linear velocity at the blade tip (in m/s) and determine whether this speed exceeds the steel safety threshold (300 m/s). Group the results by manufacturer and report the highest value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Name AS Manufacturer, MAX((2 * 3.1416 * (l.Blade_Length / 100) * p.Blade_Speed) / 60) AS Max_Velocity, CASE WHEN MAX((2 * 3.1416 * (l.Blade_Length / 100) * p.Blade_Speed) / 60) > 300 THEN 'Yes' ELSE 'No' END AS Safety_Status FROM lawn_mowers l JOIN performance_metrics p ON l.Mower_ID = p.Mower_ID JOIN manufacturers m ON l.Manufacturer_ID = m.Manufacturer_ID GROUP BY m.Name;",
        "db_id": "lawnmower"
    },
    {
        "id": 318,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mowers', 'noise level 75 decibels', 'cutting efficiency 200 square meters per hour'], 'relations': ['lawn_mower_to_performance (Mower_ID → performance_metrics)', 'filter_criteria (Noise_Level < 75 dB, Cutting_Efficiency > 200 m²/h)'], 'intent': 'retrieve_top_5_lawn_mowers_with_performance_filters', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [75, 200], 'units': {'noise_level': 'decibels (dB)', 'cutting_efficiency': 'square meters per hour (m²/h)', 'sorting': 'ascending order by noise level'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.performance_metrics': [{'column': 'Mower_ID'}, {'column': 'Noise_Level'}, {'column': 'Cutting_Efficiency'}], 'lawnmower.lawn_mowers': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption cost for all gasoline-powered lawn mowers running continuously for 8 hours, given a gasoline density of 0.74 kg/L, a calorific value of 44 MJ/kg, and an energy conversion efficiency of 22%. The results should be displayed grouped by fuel consumption rate.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p.Fuel_Consumption, SUM(p.Fuel_Consumption * 8 * 0.74 * 44 * 1000000 * 0.22) AS Total_Energy_J FROM lawn_mowers l JOIN performance_metrics p ON l.Mower_ID = p.Mower_ID WHERE l.Power_Source = 'Gasoline' GROUP BY p.Fuel_Consumption;",
        "db_id": "lawnmower"
    },
    {
        "id": 319,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower', 'acceleration 98 m/s²', 'deceleration 98 m/s²'], 'relations': ['device_performance_metrics (lawn mower → performance_metrics)', 'acceleration_threshold (≥98 m/s²)', 'deceleration_threshold (≥98 m/s²)'], 'intent': 'query_high_performance_devices_and_rank_top_three', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [98], 'units': {'acceleration_deceleration': 'm/s² (meters per second squared)', 'gravitational_acceleration': \"Earth's gravity (9.8 m/s²)\"}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.performance_metrics': [{'column': 'Mower_ID'}, {'column': 'Acceleration'}, {'column': 'Deceleration'}], 'lawnmower.lawn_mowers': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}]}}\nA common sense reasoning question is as follows:\nFind all lawn mowers with a noise level exceeding 75 decibels and support for mulching function, grouped by power type and counted by quantity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT l.Power_Source, COUNT(*) AS Machine_Count FROM lawn_mowers l JOIN performance_metrics p ON l.Mower_ID = p.Mower_ID WHERE p.Noise_Level > 75 AND p.Mulching_Capability = 1 GROUP BY l.Power_Source;",
        "db_id": "lawnmower"
    },
    {
        "id": 320,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Blade Speed (3500 RPM)', 'Blade Length (45 cm)', 'Steel Safety Threshold (300 m/s)'], 'relations': ['blade_speed_to_angular_velocity (RPM → rad/s)', 'blade_length_to_radius (45 cm → 0.225 m)', 'angular_velocity_to_linear_velocity (rad/s × radius = m/s)'], 'intent': 'calculate_linear_velocity_and_compare_with_threshold', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3500, 45, 300], 'units': {'blade_speed': 'RPM (revolutions per minute)', 'blade_length': 'cm (converted to meters: 0.45 m)', 'linear_velocity': 'm/s', 'threshold': '300 m/s', 'conversion': '1 RPM = 2π/60 rad/s, radius = blade_length/2 = 0.225 m'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}], 'lawnmower.lawn_mowers': [{'column': 'Blade_Length', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片长度（cm）', 'examples': ['55.0', '40.0', '42.0', '45.0', '48.0']}], 'lawnmower.manufacturers': [{'column': 'Name'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a lawn mower has an acceleration reaching 1000 m/s², a self-weight of 200 kg, and blades weighing 50 kg, calculate whether the inertial force of the blades during an emergency stop exceeds the yield strength of titanium alloy (880 MPa), given the cross-sectional area of the blades is 5 cm². Group the results by acceleration intervals.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN p.Acceleration <= 500 THEN '0-500 m/s²' WHEN p.Acceleration <= 1000 THEN '501-1000 m/s²' ELSE '>1000 m/s²' END AS Acceleration_Range, CASE WHEN (l.Blade_Weight * p.Acceleration) / (5 * 0.0001) > 880000000 THEN 'Exceeded' ELSE 'Safe' END AS Strength_Status, COUNT(*) AS Case_Count FROM lawn_mowers l JOIN performance_metrics p ON l.Mower_ID = p.Mower_ID GROUP BY Acceleration_Range, Strength_Status;",
        "db_id": "lawnmower"
    },
    {
        "id": 321,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline-powered lawn mowers', 'gasoline density 0.74 kg/L', 'calorific value 44 MJ/kg', 'energy conversion efficiency 22%', '8-hour runtime'], 'relations': ['mower_to_fuel_consumption (lawn_mowers → performance_metrics)', 'energy_conversion_formula (gasoline_mass × calorific_value × efficiency)'], 'intent': 'calculate_energy_consumption_cost_based_on_fuel_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.74, 44, 22, 8], 'units': {'density': 'kg/L', 'calorific_value': 'MJ/kg', 'efficiency': '% (converted to 0.22 decimal)', 'runtime': 'hours', 'energy_conversion_factor': '1 MJ = 0.2778 kWh'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}], 'lawnmower.performance_metrics': [{'column': 'Fuel_Consumption'}, {'column': 'Mower_ID'}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of an electric lawn mower at its maximum blade speed and filter out the models where the kinetic energy exceeds 1000 joules but the energy efficiency is below 80%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model, 0.5 * lm.Blade_Weight * POW((lm.Blade_Length/100 * PI() * pm.Blade_Speed/60), 2) AS Kinetic_Energy FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source IN ('Electric', 'Battery') AND 0.5 * lm.Blade_Weight * POW((lm.Blade_Length/100 * PI() * pm.Blade_Speed/60), 2) > 1000 AND pm.Energy_Efficiency < 80;",
        "db_id": "lawnmower"
    },
    {
        "id": 322,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mowers', 'noise level 75 decibels', 'mulching function'], 'relations': ['lawnmowers_to_performance (lawn_mowers.Mower_ID → performance_metrics.Mower_ID)', 'noise_level_filter (Noise_Level > 75 dB)', 'mulching_capability_filter (Mulching_Capability = TRUE)'], 'intent': 'filter_and_group_by_power_type', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [75], 'units': {'noise_level': 'dB (decibels)', 'grouping_quantity': 'COUNT(Mower_ID)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}], 'lawnmower.performance_metrics': [{'column': 'Noise_Level'}, {'column': 'Mulching_Capability'}]}}\nA mathematical logic question is as follows:\nFind models with a total energy output over the battery's lifecycle that exceeds the total fuel energy output of a gasoline engine over 10 years, comparing the energy conversion efficiency between electric and gasoline models throughout their lifecycles.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source IN ('Electric', 'Battery') AND ((pm.Battery_Life * lm.Battery_Capacity * lm.Run_Time / 60 * 48 / 1000) * (pm.Energy_Efficiency / 100) > (SELECT MAX(pm_gas.Fuel_Consumption * 10 * 200 * 34.2 * 0.3) FROM performance_metrics pm_gas JOIN lawn_mowers lm_gas ON pm_gas.Mower_ID = lm_gas.Mower_ID WHERE lm_gas.Power_Source = 'Gasoline'));",
        "db_id": "lawnmower"
    },
    {
        "id": 323,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower', 'blade_weight 50 kg', 'acceleration 1000 m/s²', 'titanium alloy yield strength 880 MPa', 'cross-sectional area 5 cm²'], 'relations': ['mass_acceleration_force (blade_weight × acceleration)', 'stress_comparison (inertial force / cross-sectional area vs yield strength)'], 'intent': 'calculate_inertial_stress_and_compare_to_material_strength', 'reasoning_type': 'physical knowledge reasoning with mathematical logic', 'numerical_values': [1000, 200, 50, 880, 5], 'units': {'acceleration': 'm/s²', 'mass': 'kg', 'force': 'N (Newtons) = kg·m/s²', 'area': 'cm² → m² (5 cm² = 0.0005 m²)', 'pressure': 'MPa → Pa (880 MPa = 880,000,000 Pa)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Blade_Weight', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片重量（kg）', 'examples': ['2.5', '1.5', '1.8', '2.0', '2.2']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}], 'lawnmower.performance_metrics': [{'column': 'Acceleration'}]}}\nA common sense reasoning question is as follows:\nFilter the legally permitted models for residential areas, with the requirement that they must simultaneously meet daytime noise levels ≤65 decibels, nighttime levels ≤55 decibels, and vibration levels below 2.5 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE pm.Noise_Level <= 55 AND pm.Vibration_Level < 2.5;",
        "db_id": "lawnmower"
    },
    {
        "id": 324,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric lawn mower', 'maximum blade speed', 'kinetic energy', 'energy efficiency', '1000 joules', '80%'], 'relations': ['mower_to_blade (mower → blade_weight, blade_speed)', 'kinetic_energy_formula (KE = 0.5 * mass * velocity²)', 'filter_condition_1 (KE > 1000 J)', 'filter_condition_2 (Energy Efficiency < 80%)'], 'intent': 'calculate_kinetic_energy_and_filter_models', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 80], 'units': {'kinetic_energy': 'joules (J = kg·m²/s²)', 'blade_weight': 'kg (implied by lawn_mowers.Blade_Weight field)', 'blade_speed': 'm/s (implied by performance_metrics.Blade_Speed field)', 'energy_efficiency': '% (percentage from performance_metrics.Energy_Efficiency)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Blade_Weight', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片重量（kg）', 'examples': ['2.5', '1.5', '1.8', '2.0', '2.2']}], 'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}, {'column': 'Energy_Efficiency'}]}}\nA hypothetical reasoning question is as follows:\nFind battery-powered lawn mowers that can operate continuously for 100 years without charging, requiring a single runtime of at least 10^6 minutes and battery capacity exceeding the energy storage system of the International Space Station.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT lm.Mower_ID, lm.Model FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Power_Source = 'Battery' AND pm.Battery_Life >= 109500 AND lm.Run_Time >= 1000000 AND lm.Battery_Capacity >= 2500 AND pm.Energy_Efficiency >= 100;",
        "db_id": "lawnmower"
    },
    {
        "id": 325,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric lawnmower battery lifecycle energy output', 'gasoline engine fuel energy output over 10 years', 'energy conversion efficiency comparison'], 'relations': ['mower_power_source (electric/gasoline classification)', 'battery_lifecycle_duration (battery life expectancy)', 'fuel_energy_total (10-year gasoline consumption)', 'energy_conversion_efficiency (electric vs gasoline comparison)'], 'intent': 'compare_energy_efficiency_between_electric_and_gasoline_lawnmowers_over_lifecycle', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10], 'units': {'battery_capacity': 'kWh (battery energy capacity)', 'fuel_consumption': 'gallons/year (gasoline usage rate)', 'energy_conversion': 'percentage efficiency (electric motor vs engine)', 'lifecycle_duration': 'years (battery lifespan vs 10-year benchmark)', 'energy_equivalence': 'gasoline energy content: ~34.2 MJ/liter or 125,000 BTU/gallon'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}, {'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}], 'lawnmower.performance_metrics': [{'column': 'Battery_Life'}, {'column': 'Fuel_Consumption'}, {'column': 'Energy_Efficiency'}]}}\nA physical knowledge question is as follows:\nAssuming all the lawn mowers sold in a certain sales campaign need to be transported to a mountaintop warehouse where the average altitude increases by 1,000 meters, calculate the total work done against gravity during the transportation (ignoring friction and route curvature).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(s.Quantity * lm.Weight) * 9.8 * 1000 AS Total_Work FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID;",
        "db_id": "lawnmower"
    },
    {
        "id": 326,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawnmower models', 'daytime noise level ≤65 dB', 'nighttime noise level ≤55 dB', 'vibration level <2.5 m/s²'], 'relations': ['model_to_performance (lawnmowers.Model → performance_metrics)', 'noise_level_filter (65 dB & 55 dB)', 'vibration_level_filter (<2.5 m/s²)'], 'intent': 'filter_legally_permitted_residential_models', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [65, 55, 2.5], 'units': {'noise_level': 'dB (decibels)', 'vibration_level': 'm/s² (meters per square second)', 'threshold_comparison': '≤ (less than or equal to), < (less than)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}], 'lawnmower.performance_metrics': [{'column': 'Noise_Level'}, {'column': 'Vibration_Level'}]}}\nA mathematical logic question is as follows:\nAn enterprise customer purchases 500 lawn mowers in one go, enjoying a 15% bulk discount. The state tax rate is 8.5%, and choosing air freight incurs a transportation cost of $50 per unit. Please calculate the total final payment for the order (the calculation should include step-by-step processes such as determining the pre-tax amount, adding transportation costs, applying taxes, and rounding).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND( ( (SELECT SUM(lm.Price * 500 * 0.85) FROM lawn_mowers lm) * 1.085 ) + (50 * 500), 2 ) AS Total_Payment FROM DUAL;",
        "db_id": "lawnmower"
    },
    {
        "id": 327,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery-powered lawn mowers', '100 years continuous operation', '10^6 minutes runtime', 'ISS energy storage system'], 'relations': ['power_source (battery)', 'runtime_requirement (10^6 minutes)', 'battery_capacity_requirement (ISS scale)'], 'intent': 'filter_lawnmowers_by_battery_specs', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 1000000, 180000], 'units': {'runtime': 'minutes (converted from 10^6 minutes)', 'battery_capacity': 'kWh (ISS equivalent: 180,000 kWh for comparison)', 'conversion': '100 years = 52,560,000 minutes (conflict with 10^6 minutes)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}, {'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}]}}\nA common sense reasoning question is as follows:\nA customer purchases 3 lawn mowers priced at $500 each, enjoys a 10% promotional discount, with a local sales tax rate of 6%, and opts for in-store pickup to save on shipping fees. What is the reasonable total amount the customer should actually pay?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ROUND( (500 * 3 * 0.9 * 1.06), 2 ) AS Actual_Payment FROM DUAL;",
        "db_id": "lawnmower"
    },
    {
        "id": 328,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mowers sold', 'altitude increase of 1,000 meters'], 'relations': ['sales_to_lawn_mowers (Mower_ID)', 'quantity_sold_per_mower', 'weight_per_lawn_mower'], 'intent': 'calculate_total_work_against_gravity', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000], 'units': {'altitude': 'meters', 'weight': 'kg (assumed from database)', 'work': 'Joules (J)', 'conversion': 'Work = mass (kg) × gravity (9.8 m/s²) × height (meters)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}], 'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Weight', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.5', '20.0', '22.0', '24.0', '26.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a transaction involves selling 1,000,000 units with a discount rate of 120%, a tax rate of 250%, and a shipping cost of $0.01 per unit. Calculate the theoretically generated Total_Price by the system (negative values are allowed).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( ( (SELECT lm.Price FROM lawn_mowers lm LIMIT 1) * 1000000 * (1 - 120/100) ) * (1 + 250/100) ) + (0.01 * 1000000) AS Theoretical_Total_Price FROM DUAL;",
        "db_id": "lawnmower"
    },
    {
        "id": 329,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower', 'bulk discount 15%', 'state tax rate 8.5%', 'air freight $50 per unit', 'quantity 500 units'], 'relations': ['quantity_to_discount (500 → 15% discount calculation)', 'discount_to_price (15% → applied to base price)', 'tax_to_subtotal (8.5% → applied to pre-tax + shipping)', 'shipping_to_quantity ($50 × 500 → total shipping cost)'], 'intent': 'calculate_total_final_payment_with_discount_tax_shipping', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 15, 8.5, 50], 'units': {'currency': '$ (USD)', 'percentage': '% (applied as decimal)', 'shipping': '$50 per unit → total $25,000'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}], 'lawnmower.sales': [{'column': 'Discount', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '折扣（%）', 'examples': ['5.0', '0.0', '3.0', '2.0']}, {'column': 'Tax_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '税率（%）', 'examples': ['7.5', '8.5', '9.0', '8.0', '0.0']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}]}}\nA physical knowledge question is as follows:\nPlease list the top 5 sales records with the highest total kinetic energy, where the kinetic energy calculation is based on the grass cutter blade rotation speed (RPM) and blade weight (kg), and sort them in descending order by kinetic energy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.Sale_ID, 0.5 * 0.5 * lm.Blade_Weight * POWER((lm.Blade_Length/200),2) * POWER(2*PI()*pm.Blade_Speed/60,2) * s.Quantity AS Kinetic_Energy FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID ORDER BY Kinetic_Energy DESC LIMIT 5",
        "db_id": "lawnmower"
    },
    {
        "id": 330,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['3 lawn mowers', '$500 each', '10% promotional discount', '6% sales tax rate', 'in-store pickup'], 'relations': ['quantity_to_price (3 × $500)', 'discount_application (10% off total)', 'tax_application (6% on discounted total)'], 'intent': 'calculate_total_payment', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3, 500, 10, 6], 'units': {'price': '$ (USD)', 'percentage': '%'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}], 'lawnmower.sales': [{'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Discount', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '折扣（%）', 'examples': ['5.0', '0.0', '3.0', '2.0']}, {'column': 'Tax_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '税率（%）', 'examples': ['7.5', '8.5', '9.0', '8.0', '0.0']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the actual payment amount for each customer (taking into account discounts, taxes, shipping costs) and list the top 10 customers with the highest payment amounts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Customer_ID, SUM( (Sale_Price * Quantity * (1 - Discount/100) * (1 + Tax_Rate/100)) + Shipping_Cost ) AS Total_Payment FROM sales GROUP BY Customer_ID ORDER BY Total_Payment DESC LIMIT 10",
        "db_id": "lawnmower"
    },
    {
        "id": 331,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['1,000,000 units', 'discount rate 120%', 'tax rate 250%', 'shipping cost $0.01 per unit'], 'relations': ['units_to_quantity (1e6 → sales.Quantity)', 'discount_to_total_price (120% → sales.Discount)', 'tax_to_total_price (250% → sales.Tax_Rate)', 'shipping_to_total_price ($0.01 → sales.Shipping_Cost)'], 'intent': 'calculate_total_price_with_discount_tax_shipping', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 120, 250, 0.01], 'units': {'quantity': 'unitless (count)', 'discount': 'percentage (120%)', 'tax': 'percentage (250%)', 'shipping': 'USD per unit ($0.01)'}, 'foreign_keys': [{'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Sale_Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '销售价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}, {'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Discount', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '折扣（%）', 'examples': ['5.0', '0.0', '3.0', '2.0']}, {'column': 'Tax_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '税率（%）', 'examples': ['7.5', '8.5', '9.0', '8.0', '0.0']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}]}}\nA common sense reasoning question is as follows:\nFind the top 3 best-selling lawn mower models and verify whether their prices are at least 20% lower than the average price of similar products.\nyour response just have a SQL without anything.\n",
        "solution": "WITH Manufacturer_Avg AS ( SELECT Manufacturer_ID, AVG(Price) * 0.8 AS Threshold FROM lawn_mowers GROUP BY Manufacturer_ID ) SELECT lm.Model, SUM(s.Quantity) AS Total_Sales, CASE WHEN lm.Price < ma.Threshold THEN '符合' ELSE '不符合' END AS Price_Status FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID JOIN Manufacturer_Avg ma ON lm.Manufacturer_ID = ma.Manufacturer_ID GROUP BY lm.Model, lm.Price, ma.Threshold ORDER BY Total_Sales DESC LIMIT 3",
        "db_id": "lawnmower"
    },
    {
        "id": 332,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['sales records', 'grass cutter blade rotation speed (RPM)', 'blade weight (kg)'], 'relations': ['sales_to_lawnmowers (sales.Mower_ID → lawn_mowers.Mower_ID)', 'lawnmowers_to_performance_metrics (lawn_mowers.Mower_ID → performance_metrics.Mower_ID)'], 'intent': 'calculate_kinetic_energy_and_rank_sales_records', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'rotation_speed': 'RPM (revolutions per minute)', 'blade_weight': 'kg (kilograms)', 'kinetic_energy': 'J (joules, derived from KE = 0.5 * mass * velocity²)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Sale_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '销售记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.lawn_mowers': [{'column': 'Blade_Weight', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片重量（kg）', 'examples': ['2.5', '1.5', '1.8', '2.0', '2.2']}], 'lawnmower.performance_metrics': [{'column': 'Blade_Speed'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the purchase quantity of all sales records increases by 10,000 times and the shipping cost grows proportionally, calculate the top 5 sales records where the total shipping cost exceeds the manufacturer's market value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.Sale_ID, s.Shipping_Cost * 10000 AS Scaled_Shipping, m.Market_Cap FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID JOIN manufacturers m ON lm.Manufacturer_ID = m.Manufacturer_ID WHERE s.Shipping_Cost * 10000 > m.Market_Cap ORDER BY Scaled_Shipping DESC LIMIT 5",
        "db_id": "lawnmower"
    },
    {
        "id": 333,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customers', 'sales transactions'], 'relations': ['customer_to_sales (Customer_ID → Sale records)', 'payment_components (Discount, Tax_Rate, Shipping_Cost)'], 'intent': 'calculate_actual_customer_payments_with_charges_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'currency': 'USD (assumed unit for monetary values)', 'percentage': 'Discount and Tax_Rate percentages'}, 'foreign_keys': [{'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}, {'column': 'Sale_Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '销售价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}, {'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Discount', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '折扣（%）', 'examples': ['5.0', '0.0', '3.0', '2.0']}, {'column': 'Tax_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '税率（%）', 'examples': ['7.5', '8.5', '9.0', '8.0', '0.0']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}], 'lawnmower.customers': [{'column': 'Name'}]}}\nA physical knowledge question is as follows:\nCalculate the total weight of lawn mowers purchased by each customer and the work required to lift them vertically by 1 meter (grouped by customer).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.Customer_ID, SUM(s.Quantity * lm.Weight) * 9.8 * 1 AS Work_Joules FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID GROUP BY s.Customer_ID",
        "db_id": "lawnmower"
    },
    {
        "id": 334,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['top 3 best-selling lawn mower models', 'average price of similar products', '20% lower threshold'], 'relations': ['sales_to_lawnmowers (sales.Mower_ID → lawn_mowers.Mower_ID)', 'price_comparison (Model_Price ≤ Average_Price * 0.8)'], 'intent': 'retrieve_top_selling_models_and_validate_price_discount', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3, 20], 'units': {'price': 'currency (assumed USD from Price column in lawn_mowers)', 'percentage': '20% discount threshold', 'quantity': 'units sold (Quantity column in sales)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}], 'lawnmower.lawn_mowers': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['GT-X1000', 'ManualPro', 'GlobalManualX', 'EcoManualPro', 'PrecisionManual']}, {'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}]}}\nA mathematical logic question is as follows:\nCalculate the gross profit margin for each payment method (grouped by payment method).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Payment_Method, (SUM(sale_price * quantity * (1 - discount/100) * (1 + tax_rate/100)) - SUM(sale_price * quantity * 0.6)) / SUM(sale_price * quantity * (1 - discount/100) * (1 + tax_rate/100)) * 100 AS Gross_Profit_Margin FROM sales GROUP BY Payment_Method",
        "db_id": "lawnmower"
    },
    {
        "id": 335,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['sales records', 'shipping cost', \"manufacturer's market value\", 'purchase quantity'], 'relations': ['sales_to_manufacturer (sales.Mower_ID → lawn_mowers.Mower_ID → manufacturers.Manufacturer_ID)', 'proportional_growth (Quantity ×10,000 → Shipping_Cost ×10,000)'], 'intent': 'calculate_top_5_sales_records_with_scaled_shipping_cost_exceeding_market_cap', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 5], 'units': {'quantity': 'unitless multiplier (×10,000)', 'shipping_cost': 'currency (USD, implied by database schema)', 'market_value': 'currency (USD, from manufacturers.Market_Cap)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}, {'column': 'Sale_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '销售记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.lawn_mowers': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.manufacturers': [{'column': 'Market_Cap'}]}}\nA common sense reasoning question is as follows:\nIdentify irrational transactions (grouped by customer) where transport costs exceed 10% of the machine price\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Customer_ID, COUNT(Sale_ID) AS Abnormal_Transactions FROM sales WHERE shipping_cost > (sale_price * quantity * 0.1) GROUP BY Customer_ID",
        "db_id": "lawnmower"
    },
    {
        "id": 336,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['customer', 'lawn mower', 'weight', 'work', '1 meter'], 'relations': ['customer_to_sales (Customer_ID → Sale records)', 'sales_to_lawn_mowers (Mower_ID → Weight specification)', 'weight_to_work (Weight × Distance = Work)'], 'intent': 'calculate_total_weight_and_work_per_customer', 'reasoning_type': 'physical knowledge reasoning & mathematical logic reasoning', 'numerical_values': [1], 'units': {'weight': 'unit specified in lawn_mowers.Weight column (e.g., kg)', 'distance': 'meter (1m)', 'work': 'Joules (if weight is force: N·m; if weight is mass: kg·m²/s²)', 'conversion': 'Work = Total_Weight × 1m'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}], 'lawnmower.sales': [{'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}], 'lawnmower.lawn_mowers': [{'column': 'Weight', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.5', '20.0', '22.0', '24.0', '26.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the enterprise customer's purchase quantity reaches the upper limit of the INT type (2147483647), verify whether the system can correctly calculate the total price including tax.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Sale_Price * 2147483647 * (1 + Tax_Rate/100) AS Total_Price_Validation FROM sales WHERE Customer_ID IN (SELECT Customer_ID FROM customers WHERE Customer_Type = 'Business') LIMIT 1",
        "db_id": "lawnmower"
    },
    {
        "id": 337,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['payment method', 'gross profit margin'], 'relations': ['payment_method_to_sales (grouping)', 'profit_margin_calculation (revenue - COGS)'], 'intent': 'calculate_profit_margin_grouped_by_payment_method', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Sale_Price', 'Quantity', 'Total_Price', 'lawn_mowers.Price'], 'units': {'revenue': 'currency (assumed USD)', 'cost_of_goods_sold': 'currency (assumed USD)', 'profit_margin': 'percentage (%)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Payment_Method', 'type': 'ENUM', 'primary_key': False, 'comment': '支付方式', 'examples': ['Credit Card', 'Bank Transfer']}, {'column': 'Sale_Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '销售价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}, {'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}], 'lawnmower.lawn_mowers': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}]}}\nA physical knowledge question is as follows:\nPhysics Knowledge Question 1: Find all sales records of gasoline-powered lawn mowers where the kinetic energy generated by the engine power is greater than or equal to 1000 joules, and these lawn mowers do not have vibration levels exceeding 5 m/s² recorded in the performance metrics table.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.* FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID WHERE lm.Power_Source = 'Gasoline' AND (lm.Engine_Power * 745.7) * (lm.Run_Time * 60) >= 1000 AND NOT EXISTS (SELECT 1 FROM performance_metrics pm WHERE pm.Mower_ID = lm.Mower_ID AND pm.Vibration_Level > 5);",
        "db_id": "lawnmower"
    },
    {
        "id": 338,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['transport costs', 'machine price', 'customer', '10% threshold'], 'relations': ['customer_transaction_link (sales.Customer_ID → customers.Customer_ID)', 'machine_price_link (sales.Mower_ID → lawn_mowers.Mower_ID)', 'cost_ratio_check (Shipping_Cost > 0.1 * Price)'], 'intent': 'identify_irrational_transactions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'percentage': '% (implied by 10% threshold)', 'currency': 'monetary units (implied by Shipping_Cost and Price fields)', 'conversion': '10% = 0.1 (threshold multiplier)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '100', '200', '600', '700']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.lawn_mowers': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}], 'lawnmower.customers': [{'column': 'Name'}]}}\nA mathematical logic question is as follows:\nMathematical Logic Problem 2: Calculate the theoretical maintenance cost ratio (maintenance cost divided by total sales price) for each lawn mower within the warranty period among orders where corporate clients' annual average purchase amount exceeds $50,000, and filter out clients with a ratio below 15%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Customer_ID, (SUM(m.Cost)/SUM(s.Total_Price))*100 AS maintenance_percentage FROM customers c JOIN sales s ON c.Customer_ID = s.Customer_ID JOIN maintenance m ON s.Mower_ID = m.Mower_ID WHERE c.Customer_Type = 'Business' AND c.Annual_Purchase_Volume > 50000 AND m.Maintenance_Date BETWEEN s.Sale_Date AND DATE_ADD(s.Sale_Date, INTERVAL s.Warranty_Period MONTH) GROUP BY c.Customer_ID HAVING maintenance_percentage < 15;",
        "db_id": "lawnmower"
    },
    {
        "id": 339,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['purchase_quantity_maxint (2147483647)', 'total_price_with_tax'], 'relations': ['quantity_to_price (2147483647 × (Sale_Price × (1 + Tax_Rate)))', 'sales_table_fields (Quantity, Tax_Rate, Total_Price)'], 'intent': 'verify_tax_inclusive_total_price_calculation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2147483647], 'units': {'quantity': 'unitless (count of items)', 'price': 'USD (implied by Sale_Price field)', 'tax_rate': '% (decimal multiplier)', 'calculation': 'Total_Price = Quantity × Sale_Price × (1 + Tax_Rate)'}, 'foreign_keys': [{'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Tax_Rate', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '税率（%）', 'examples': ['7.5', '8.5', '9.0', '8.0', '0.0']}, {'column': 'Sale_Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '销售价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}]}}\nA common sense reasoning question is as follows:\nCommon sense reasoning question 3: Filter all sales records of manually powered lawn mowers with blade angles greater than 35 degrees and mechanical grass-cutting height adjustment mechanisms, but only for orders where customer addresses are located in rainy cities (such as Seattle).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.* FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID JOIN customers c ON s.Customer_ID = c.Customer_ID WHERE lm.Power_Source = 'Manual' AND lm.Blade_Angle > 35 AND lm.Cutting_Height_Adjustment = 'Mechanical' AND c.City = 'Seattle';",
        "db_id": "lawnmower"
    },
    {
        "id": 340,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline-powered lawn mowers', 'kinetic energy ≥1000 joules', 'vibration levels ≤5 m/s²'], 'relations': ['lawnmower_to_engine_power (lawn_mowers → Engine_Power)', 'performance_to_vibration (performance_metrics → Vibration_Level)', 'sales_to_lawnmower (sales → Mower_ID)'], 'intent': 'retrieve_sales_records_with_physical_constraints', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 5], 'units': {'energy': 'joules (J)', 'vibration': 'meters per second squared (m/s²)', 'conversion': 'Kinetic Energy (J) = 0.5 * mass * velocity² (assumed physical formula application)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Engine_Power', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '发动机功率（HP，适用于汽油机）', 'examples': ['7.5', '10.0', '12.0', '5.0']}], 'lawnmower.performance_metrics': [{'column': 'Vibration_Level'}], 'lawnmower.sales': [{'column': 'Sale_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '销售记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Sale_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '销售日期', 'examples': ['2023-06-15', '2023-10-01', '2023-05-10', '2023-07-20', '2023-09-01']}, {'column': 'Sale_Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '销售价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}]}}\nA hypothetical reasoning question is as follows:\nHypothetical Reasoning Question 4: Identify extreme anomalous transaction records where the sales quantity exceeds 500% of the total production of that model's lawnmowers, and the shipping cost is lower than 0.1% of the product price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.* FROM sales s JOIN lawn_mowers lm ON s.Mower_ID = lm.Mower_ID JOIN manufacturers mf ON lm.Manufacturer_ID = mf.Manufacturer_ID WHERE s.Quantity > mf.Production_Volume_Total *5 AND s.Shipping_Cost < lm.Price *0.001;",
        "db_id": "lawnmower"
    },
    {
        "id": 341,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['corporate clients', 'lawn mowers', 'maintenance cost', 'total sales price', 'warranty period', '$50,000 annual purchase threshold', '15% ratio threshold'], 'relations': ['customer_to_sales (Customer_ID)', 'sales_to_mower (Mower_ID)', 'maintenance_to_mower (Mower_ID)', 'client_to_purchase_volume (Annual_Purchase_Volume > $50,000)', 'maintenance_within_warranty (Maintenance_Date ≤ Warranty_Period after Sale_Date)', 'cost_to_sales_ratio (Maintenance_Cost / Total_Sales_Price)'], 'intent': 'calculate_and_filter_maintenance_cost_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50000, 15], 'units': {'currency': '$ (USD)', 'ratio': '% (percentage)', 'time': 'warranty period (months/years from sales table)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'maintenance', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'maintenance', 'pk_column': 'Maintenance_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'Customer_Type'}, {'column': 'Annual_Purchase_Volume'}], 'lawnmower.sales': [{'column': 'Sale_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '销售日期', 'examples': ['2023-06-15', '2023-10-01', '2023-05-10', '2023-07-20', '2023-09-01']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['24', '12', '18', '36', '48']}, {'column': 'Total_Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['2457.0', '325.5', '3500000.0', '6000000.0', '11250000.0']}, {'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.maintenance': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '除草机ID', 'examples': ['1', '2', '3', '9', '14']}, {'column': 'Maintenance_Date', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-07-01', '2023-09-01', '2023-11-15', '2023-12-25', '2024-01-20']}, {'column': 'Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '维护成本（美元）', 'examples': ['150.0', '50.0', '15000.0', '1500000.0', '5000.0']}], 'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}]}}\nA physical knowledge question is as follows:\nAssuming an electric lawn mower has a battery capacity of 10Ah, an energy efficiency of 85%, a blade speed of 3000 RPM, a torque of 15 Nm, and a runtime of 60 minutes. If the user needs to work continuously for 3 hours, how many batteries of the same specifications are required?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CEIL( (pm.Torque * pm.Blade_Speed * 3) / ((pm.Energy_Efficiency / 100) * 9549) / (lm.Battery_Capacity * 12) ) AS Batteries_Needed FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Battery_Capacity = 10 AND pm.Energy_Efficiency = 85 AND pm.Blade_Speed = 3000 AND pm.Torque = 15;",
        "db_id": "lawnmower"
    },
    {
        "id": 342,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manually powered lawn mowers', 'blade angles > 35 degrees', 'mechanical grass-cutting height adjustment', 'rainy cities (e.g., Seattle)'], 'relations': ['sales_to_lawn_mowers (Sales.Mower_ID → Lawn_Mowers.Mower_ID)', 'sales_to_customers (Sales.Customer_ID → Customers.Customer_ID)', \"filter_conditions (blade_angle > 35° AND power_source = 'manual' AND cutting_height_adjustment = 'mechanical' AND customer_city = 'Seattle')\"], 'intent': 'filter_sales_records_with_spatial_and_product_conditions', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [35], 'units': {'angle': 'degrees', 'location': 'city names (categorical)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}, {'fk_table': 'customers', 'fk_column': 'Customer_ID', 'ref_table': 'sales', 'ref_column': 'Customer_ID'}], 'primary_keys': [{'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Mower_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '除草机唯一标识', 'examples': ['1', '19', '20', '999999', '2']}, {'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}, {'column': 'Blade_Angle', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '刀片角度（度）', 'examples': ['30.0', '35.0', '40.0', '45.0', '38.0']}, {'column': 'Cutting_Height_Adjustment', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '割草高度调节方式', 'examples': ['Manual', 'Fixed', 'Adjustable', 'Hydraulic', 'Stepless']}], 'lawnmower.customers': [{'column': 'Customer_ID'}, {'column': 'City'}], 'lawnmower.sales': [{'column': 'Sale_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '销售记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCompute the average profit margin for lawn mowers produced by each manufacturer in 2023, including only manufacturers whose R&D expenditure accounts for more than 5% of total revenue and counting only companies with annual revenues exceeding $100 million.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Manufacturer_ID, m.Name, SUM(s.Total_Price * (m.Profit_Margin / 100)) / SUM(s.Total_Price) AS Avg_Profit_Margin FROM manufacturers m JOIN lawn_mowers lm ON m.Manufacturer_ID = lm.Manufacturer_ID JOIN sales s ON lm.Mower_ID = s.Mower_ID WHERE m.`R&D_Spending`/ m.Revenue > 0.05 AND m.Revenue > 100000000 AND YEAR(s.Sale_Date) = 2023 GROUP BY m.Manufacturer_ID, m.Name;",
        "db_id": "lawnmower"
    },
    {
        "id": 343,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['sales transaction', 'lawnmower model', 'manufacturer production volume', 'product price', 'shipping cost'], 'relations': ['sales_to_model (sales.Mower_ID → lawn_mowers.Mower_ID)', 'model_to_manufacturer (lawn_mowers.Manufacturer_ID → manufacturers.Manufacturer_ID)', 'quantity_to_production (sales.Quantity > 5 × manufacturers.Production_Volume_Total)', 'shipping_to_price (sales.Shipping_Cost < 0.001 × lawn_mowers.Price)'], 'intent': 'identify_extreme_anomalous_transactions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 0.001], 'units': {'quantity': 'units (sales quantity vs production volume)', 'price': 'monetary unit (e.g., USD) for product price and shipping cost', 'percentage': '500% (5× multiplier) and 0.1% (0.001× multiplier)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'sales', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'sales', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}, {'pk_table': 'sales', 'pk_column': 'Sale_ID'}], 'tableinfo': {'lawnmower.sales': [{'column': 'Quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '销售数量', 'examples': ['2', '1', '10000', '15000', '25000']}, {'column': 'Shipping_Cost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '运输成本（美元）', 'examples': ['25.0', '20.0', '5000.0', '7500.0', '10000.0']}], 'lawnmower.lawn_mowers': [{'column': 'Price', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['1200.0', '300.0', '350.0', '400.0', '450.0']}, {'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}], 'lawnmower.manufacturers': [{'column': 'Production_Volume_Total'}]}}\nA common sense reasoning question is as follows:\nA gasoline-powered weed trimmer is labeled with a fuel consumption rate of 1.5L/hour. The user operates it 4 times a week, for 2 hours each time. Based on the current gasoline price (1.2 USD/L), is it possible for the quarterly fuel cost to exceed 200 USD?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (1.5 * 2 * 4 * 13 * 1.2) > 200 THEN 'Yes' ELSE 'No' END AS Exceeds_200;",
        "db_id": "lawnmower"
    },
    {
        "id": 344,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 10Ah', 'energy efficiency 85%', 'runtime 60 minutes', 'required runtime 3 hours'], 'relations': ['battery_capacity_to_runtime (10Ah → 60 minutes)', 'runtime_extension (3 hours / 1 hour)'], 'intent': 'calculate_required_batteries_for_extended_runtime', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 85, 60, 3], 'units': {'battery_capacity': 'Ah (Ampere-hour)', 'energy_efficiency': '% (percentage)', 'runtime': 'minutes/hours', 'conversion': '3 hours = 180 minutes'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Battery_Capacity', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '电池容量（Ah，适用于电动或电池驱动）', 'examples': ['1.0', '50.0', '5.0', '4.5']}, {'column': 'Run_Time', 'type': 'INTEGER', 'primary_key': False, 'comment': '运行时间（分钟，适用于电动或电池驱动）', 'examples': ['430', '30', '60', '45']}], 'lawnmower.performance_metrics': [{'column': 'Energy_Efficiency'}]}}\nA hypothetical reasoning question is as follows:\nIf a lawn mower weighs 1000 kg and has wheels of only 2 inches in size, when operating on a 30-degree slope, does the ground pressure it exerts exceed the standard load-bearing capacity of building foundations (typically ≥200 kPa)?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN (lm.Weight * 9.8) / (4 * PI() * POWER((lm.Wheel_Size * 0.0254 / 2), 2)) > 200000 THEN 'Yes' ELSE 'No' END AS Exceeds_Pressure FROM lawn_mowers lm JOIN performance_metrics pm ON lm.Mower_ID = pm.Mower_ID WHERE lm.Weight = 1000 AND lm.Wheel_Size = 2 AND pm.Slope_Handling >= 30;",
        "db_id": "lawnmower"
    },
    {
        "id": 345,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mowers', 'manufacturers', 'R&D expenditure', 'total revenue', 'profit margin', '2023', '$100 million', '5%'], 'relations': ['manufacturer_to_lawn_mowers (Manufacturer_ID → Mower_ID)', 'filter_by_year (lawn_mowers.Year = 2023)', 'rd_expenditure_to_revenue (R&D_Spending > 0.05 * Revenue)', 'revenue_threshold (Revenue > 100000000)'], 'intent': 'calculate_average_profit_margin_per_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 100000000], 'units': {'percentage': '% (R&D expenditure ratio)', 'revenue': '$ (USD)', 'profit_margin': '% (profit margin)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_ID'}], 'tableinfo': {'lawnmower.manufacturers': [{'column': 'Manufacturer_ID'}, {'column': 'Revenue'}, {'column': 'R&D_Spending'}, {'column': 'Profit_Margin'}], 'lawnmower.lawn_mowers': [{'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Year', 'type': 'INTEGER', 'primary_key': False, 'comment': '生产年份', 'examples': ['2022', '2023']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy efficiency (total movement distance/total energy consumption) for each wireless mouse model, and return the models with efficiency <5 meters/kJ and weight >100g. Formula: efficiency=(Σ movement distance × weight)/(Σ energy/1000)\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model FROM mice m JOIN (SELECT Mouse_ID, SUM(Distance_Moved_Meters) AS total_dist, SUM(Energy_Consumed_Joules) AS total_energy FROM usage_records GROUP BY Mouse_ID) u ON m.Mouse_Id = u.Mouse_ID WHERE m.Is_Wireless = 1 AND (u.total_dist * m.Weight_Grams)/(u.total_energy/1000) < 5 AND m.Weight_Grams > 100;",
        "db_id": "mouse"
    },
    {
        "id": 346,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['gasoline-powered weed trimmer', 'fuel consumption rate 1.5L/hour', 'operating frequency 4 times/week', 'operating duration 2 hours/session', 'gasoline price 1.2 USD/L', 'quarterly fuel cost threshold 200 USD'], 'relations': ['trimmer_to_fuel_consumption (weed trimmer → performance_metrics.Fuel_Consumption)', 'usage_pattern (4 times/week × 2 hours/session → 8 hours/week)', 'cost_calculation (fuel_consumption × operating_hours × gasoline_price)'], 'intent': 'determine_if_quarterly_fuel_cost_exceeds_threshold', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.5, 4, 2, 1.2, 200], 'units': {'fuel_consumption': 'L/hour', 'operating_time': 'hours/week', 'fuel_price': 'USD/L', 'cost_threshold': 'USD', 'quarter_duration': '13 weeks (assumed quarter length)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Mower_ID', 'ref_table': 'lawn_mowers', 'ref_column': 'Mower_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Power_Source', 'type': 'ENUM', 'primary_key': False, 'comment': '动力来源', 'examples': ['Gasoline', 'Manual', 'Battery', 'Electric']}], 'lawnmower.performance_metrics': [{'column': 'Fuel_Consumption'}]}}\nA mathematical logic question is as follows:\nIdentify sensors exhibiting 'high-frequency calibration' (total number of calibrations > 5 and interval between adjacent calibrations < 30 days), and return the mouse model and manufacturer market share for these sensors.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CalibrationData AS (SELECT Sensor_Id, Last_Calibration_Date, LAG(Last_Calibration_Date) OVER (PARTITION BY Sensor_Id ORDER BY Last_Calibration_Date) AS prev_date FROM sensor_data) SELECT m.Model, ma.Market_Share_Percent FROM CalibrationData cd JOIN sensor_data sd ON cd.Sensor_Id = sd.Sensor_Id JOIN mice m ON sd.Mouse_Id = m.Mouse_Id JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE DATEDIFF(cd.Last_Calibration_Date, cd.prev_date) < 30 GROUP BY m.Model, ma.Market_Share_Percent HAVING COUNT(*) > 5;",
        "db_id": "mouse"
    },
    {
        "id": 347,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lawn mower weight 1000 kg', 'wheel size 2 inches', '30-degree slope', 'standard load-bearing capacity 200 kPa'], 'relations': ['weight_to_ground_pressure (direct correlation)', 'wheel_size_to_contact_area (inverse correlation)', 'slope_to_normal_force (cosine relationship)', 'ground_pressure_to_capacity (comparative threshold)'], 'intent': 'evaluate_ground_pressure_exceedance_on_sloped_surface', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 2, 30, 200], 'units': {'mass': 'kg', 'length': 'inches (wheel diameter), converted to meters for pressure calculation', 'angle': 'degrees (converted to radians for cosine function)', 'pressure': 'kPa (standard capacity), Pascals (calculated pressure)'}, 'foreign_keys': [{'fk_table': 'lawn_mowers', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'lawn_mowers', 'pk_column': 'Mower_ID'}], 'tableinfo': {'lawnmower.lawn_mowers': [{'column': 'Weight', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '', 'examples': ['35.5', '20.0', '22.0', '24.0', '26.0']}, {'column': 'Wheel_Size', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '轮子尺寸（英寸）', 'examples': ['10.0', '8.0', '8.5', '9.0', '9.5']}]}}\nA common sense reasoning question is as follows:\nFind records with single usage DPI > 16,000 and duration of use > 2 hours, return user ID and mouse weight\nyour response just have a SQL without anything.\n",
        "solution": "SELECT u.User_ID, m.Weight_Grams FROM usage_records u JOIN mice m ON u.Mouse_ID = m.Mouse_Id WHERE u.Max_Dpi > 16000 AND u.Usage_Duration_Minutes > 120;",
        "db_id": "mouse"
    },
    {
        "id": 348,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mouse model', 'efficiency <5 meters/kJ', 'weight >100g'], 'relations': ['mouse_to_usage (mice.Mouse_Id → usage_records.Mouse_Id)', 'efficiency_formula (Σdistance × weight / (Σenergy / 1000))', 'filter_conditions (efficiency <5, weight >100g)'], 'intent': 'calculate_and_filter_energy_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5, 100], 'units': {'efficiency': 'meters/kJ (calculated via formula)', 'distance': 'meters (usage_records.Distance_Moved_Meters)', 'weight': 'grams (mice.Weight_Grams)', 'energy': 'joules (usage_records.Energy_Consumed_Joules)', 'conversion': 'Σenergy / 1000 (converts joules to kilojoules)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}], 'mouse.usage_records': [{'column': 'Mouse_Id'}, {'column': 'Distance_Moved_Meters'}, {'column': 'Energy_Consumed_Joules'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the G502 HERO (with an acceleration of 40G) is used on the surface of Jupiter (gravity 24.79 m/s²), calculate the theoretical clicking force (coefficient of friction μ=0.62).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.62 * (Weight_Grams/1000) * (24.79 + (Acceleration_G * 9.81)) AS Force_Newtons FROM mice WHERE Model = 'G502 HERO';",
        "db_id": "mouse"
    },
    {
        "id": 349,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['sensors', 'mouse model', 'manufacturer market share', 'calibration count > 5', 'calibration interval < 30 days'], 'relations': ['sensor_to_mouse (Sensor_Id → Mouse_Id)', 'mouse_to_manufacturer (Manufacturer_Id → Manufacturer_Name)', 'calibration_conditions (Calibration_Count > 5 ∧ interval < 30 days)'], 'intent': 'filter_sensors_with_high_calibration_frequency_and_get_mouse_model_market_share', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5, 30], 'units': {'calibration_count': 'unitless (count)', 'calibration_interval': 'days', 'market_share': 'percent (%)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.sensor_data': [{'column': 'Calibration_Count'}, {'column': 'Last_Calibration_Date'}, {'column': 'Mouse_Id'}], 'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}], 'mouse.manufacturers': [{'column': 'Market_Share_Percent'}]}}\nA physical knowledge question is as follows:\nCalculate the energy efficiency attenuation rate ((normal temperature efficiency - extreme efficiency) / normal temperature efficiency × 100%) for each wireless mouse in extreme usage scenarios (acceleration >50G), and return models with an attenuation rate >30% and weight >100g. Formula: The normal temperature efficiency is the average value of records with acceleration <10G.\nyour response just have a SQL without anything.\n",
        "solution": "WITH EfficiencyData AS (SELECT m.Mouse_Id, m.Model, m.Weight_Grams, AVG((u.Distance_Moved_Meters * m.Weight_Grams)/(u.Energy_Consumed_Joules/1000)) AS normal_efficiency FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Is_Wireless = 1 AND m.Acceleration_G < 10 GROUP BY m.Mouse_Id, m.Model, m.Weight_Grams), ExtremeEfficiency AS (SELECT m.Mouse_Id, (u.Distance_Moved_Meters * m.Weight_Grams)/(u.Energy_Consumed_Joules/1000) AS extreme_efficiency FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Is_Wireless = 1 AND m.Acceleration_G > 50) SELECT e.Model FROM EfficiencyData e JOIN ExtremeEfficiency ex ON e.Mouse_Id = ex.Mouse_Id WHERE (e.normal_efficiency - ex.extreme_efficiency) / e.normal_efficiency * 100 > 30 AND e.Weight_Grams > 100;",
        "db_id": "mouse"
    },
    {
        "id": 350,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'DPI > 16,000', 'duration > 2 hours'], 'relations': ['usage_records.Mouse_Id → mice.Mouse_Id', 'DPI_filter (Max_Dpi > 16000)', 'duration_filter (Usage_Duration_Minutes > 120)'], 'intent': 'filter_records_with_high_dpi_and_duration', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [16000, 120], 'units': {'dpi': 'DPI (dots per inch)', 'duration': 'minutes (converted from 2 hours)', 'weight': 'grams (from mice table)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.usage_records': [{'column': 'Max_Dpi'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'User_ID'}], 'mouse.mice': [{'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}]}}\nA mathematical logic question is as follows:\nIdentify users exhibiting 'abnormal click patterns' (click frequency > 10 times per second sustained for over 5 minutes), return the IDs of these users along with their mouse models. Window functions must be used to calculate click frequency per minute.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ClickFrequency AS (SELECT User_ID, Mouse_ID, Clicks, Usage_Duration_Minutes, Clicks / (Usage_Duration_Minutes / 60) AS click_freq, SUM(Clicks) OVER (PARTITION BY User_ID, Mouse_ID ORDER BY Start_Time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS total_clicks, SUM(Usage_Duration_Minutes) OVER (PARTITION BY User_ID, Mouse_ID ORDER BY Start_Time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS total_duration FROM usage_records) SELECT DISTINCT cf.User_ID, m.Model FROM ClickFrequency cf JOIN mice m ON cf.Mouse_ID = m.Mouse_Id WHERE cf.click_freq > 600 AND cf.total_duration > 5;",
        "db_id": "mouse"
    },
    {
        "id": 351,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['G502 HERO mouse', 'Jupiter gravity 24.79 m/s²', 'coefficient of friction μ=0.62'], 'relations': ['mouse_to_weight (G502 HERO → mice.Weight_Grams)', 'friction_force_formula (μ × mass × gravity)'], 'intent': 'calculate_theoretical_clicking_force', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [24.79, 0.62], 'units': {'gravity': \"m/s² (Jupiter's surface gravity)\", 'weight': 'grams (converted to kg for calculation)', 'force': 'Newtons (N) derived from calculation', 'conversion': 'grams_to_kg (÷1000), force = μ × m × g'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}]}}\nA common sense reasoning question is as follows:\nFind records where the equipment was used in high-temperature environments (assuming sensor temperature >45°C) with a calibration interval of less than 7 days (common knowledge: high temperatures accelerate sensor aging). Return the mouse models and manufacturer profits for these records.  \nCommon knowledge basis: The upper temperature limit for CMOS sensors is typically 70°C.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CalibrationIntervals AS (SELECT Sensor_Id, Last_Calibration_Date, LAG(Last_Calibration_Date) OVER (PARTITION BY Sensor_Id ORDER BY Last_Calibration_Date) AS prev_date FROM sensor_data) SELECT m.Model, ma.Profit_Usd FROM CalibrationIntervals ci JOIN sensor_data sd ON ci.Sensor_Id = sd.Sensor_Id JOIN mice m ON sd.Mouse_Id = m.Mouse_Id JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE DATEDIFF(ci.Last_Calibration_Date, ci.prev_date) < 7;",
        "db_id": "mouse"
    },
    {
        "id": 352,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['abnormal click patterns', 'click frequency >10/s', 'sustained for >5 minutes', 'User_ID', 'Mouse model'], 'relations': ['user_to_mouse (User_ID → Mouse_ID via usage_records)', 'mouse_to_model (Mouse_ID → mice.Model)'], 'intent': 'identify_users_with_abnormal_click_behavior', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 5], 'units': {'click_frequency': 'clicks per second (converted to 600 clicks/minute threshold)', 'duration': 'minutes (threshold: >5 minutes sustained)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Mouse_ID'}, {'column': 'Start_Time'}, {'column': 'End_Time'}, {'column': 'Clicks'}, {'column': 'Usage_Duration_Minutes'}], 'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the use of DeathAdder V2 (acceleration 50G) on the surface of the Sun (temperature 5500°C, gravity 28G), calculate the theoretical click force required to move 1 meter (assuming the mouse pad is plasma, friction coefficient μ=0.0001). Formula: F=μ×m×(g_sun + a_mouse), where g_sun=274m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.0001 * (Weight_Grams/1000) * (274 + (Acceleration_G * 9.81)) AS Force_Newtons FROM mice WHERE Model = 'DeathAdder V2';",
        "db_id": "mouse"
    },
    {
        "id": 353,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"high-temperature environments (sensor temperature >45°C)\", \"calibration interval <7 days\", \"mouse models\", \"manufacturer profits\"],\n  \"relations\": [\n    \"mouse_to_sensor_data (Mouse_Id → sensor_data)\",\n    \"mouse_to_manufacturer (Manufacturer_Id → manufacturers)\",\n    \"temperature_condition (sensor_temperature >45°C)\",\n    \"calibration_interval_condition (interval <7 days)\"\n  ],\n  \"intent\": \"retrieve_mouse_models_and_manufacturer_profits_for_high_temp_and_frequent_calibration\",\n  \"reasoning_type\": \"common sense understanding reasoning\",\n  \"numerical_values\": [45, 7],\n  \"units\": {\n    \"temperature\": \"°C (Celsius)\",\n    \"calibration_interval\": \"days\"\n  },\n  \"required_tables\": [\"manufacturers\", \"mice\", \"sensor_data\"],\n  \"required_fields\": [\n    \"sensor_data.Sensor_Temperature\",  // Assumed field (not in schema but implied by question)\n    \"sensor_data.Last_Calibration_Date\",\n    \"sensor_data.Calibration_Count\",\n    \"mice.Model\",\n    \"manufacturers.Profit_Usd\",\n    \"mice.Manufacturer_Id\",\n    \"sensor_data.Mouse_Id\"\n  ]\n}\nA physical knowledge question is as follows:\nCalculate the dynamic energy efficiency (effective movement energy/total energy consumption) of each wireless mouse during high-speed movement (Tracking_Speed_Ips > 400), returning the models with efficiency <60% and polling rate >1000Hz. Formula: effective energy = Distance_Moved_Meters × Weight_Grams × 9.8, total energy consumption = Energy_Consumed_Joules.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Tracking_Speed_Ips > 400 AND m.Polling_Rate_Hz > 1000 AND (u.Distance_Moved_Meters * m.Weight_Grams * 9.8) / u.Energy_Consumed_Joules * 100 < 60;",
        "db_id": "mouse"
    },
    {
        "id": 354,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['DeathAdder V2', 'Sun surface gravity 28G (274m/s²)', 'mouse acceleration 50G', 'friction coefficient μ=0.0001'], 'relations': ['mouse_model_to_specs (DeathAdder V2 → mice table)', 'acceleration_conversion (G → m/s²)', 'force_components (μ, m, g_sun, a_mouse)'], 'intent': 'calculate_theoretical_click_force', 'reasoning_type': 'physical knowledge reasoning & unit conversion', 'numerical_values': [50, 274, 0.0001], 'units': {'acceleration': 'G (mouse) → m/s² (for calculation)', 'gravity': 'm/s² (Sun surface)', 'mass': 'grams → kilograms (mouse weight conversion)', 'force': 'Newtons (N = kg·m/s²)', 'friction_coefficient': 'unitless (μ=0.0001)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Acceleration_G', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '加速度（重力加速度 g）', 'examples': ['10.0', '50.0', '40.0', '20.0', '35.0']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}]}}\nA mathematical logic question is as follows:\nIdentify users exhibiting the 'instant high-frequency click' pattern (peaking at over 1200 clicks per minute and lasting for 3 cycles), returning their user IDs and mouse acceleration. Use window functions to calculate the sliding window click frequency.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ClickFrequency AS (SELECT User_ID, Mouse_ID, Start_Time, Clicks, SUM(Clicks) OVER (PARTITION BY User_ID, Mouse_ID ORDER BY Start_Time ROWS BETWEEN 4 PRECEDING AND CURRENT ROW) / 5 AS window_freq FROM usage_records), ConsecutiveHighFreq AS (SELECT User_ID, Mouse_ID, window_freq, LAG(window_freq, 1) OVER (PARTITION BY User_ID, Mouse_ID ORDER BY Start_Time) AS prev_freq1, LAG(window_freq, 2) OVER (PARTITION BY User_ID, Mouse_ID ORDER BY Start_Time) AS prev_freq2 FROM ClickFrequency WHERE window_freq > 1200) SELECT DISTINCT chf.User_ID, m.Acceleration_G FROM ConsecutiveHighFreq chf JOIN mice m ON chf.Mouse_ID = m.Mouse_Id WHERE chf.window_freq > 1200 AND chf.prev_freq1 > 1200 AND chf.prev_freq2 > 1200;",
        "db_id": "mouse"
    },
    {
        "id": 355,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mouse', 'high-speed movement (Tracking_Speed_Ips > 400)', 'dynamic energy efficiency (<60%)', 'polling rate (>1000Hz)'], 'relations': ['mouse_to_usage (mice.Mouse_Id → usage_records.Mouse_Id)', 'mouse_to_weight (mice.Mouse_Id → mice.Weight_Grams)', 'efficiency_formula (effective_energy = Distance_Moved_Meters × Weight_Grams × 9.8)', 'filter_condition (efficiency < 60% ∧ Polling_Rate_Hz > 1000)'], 'intent': 'calculate_dynamic_energy_efficiency_with_filters', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [400, 60, 1000, 9.8], 'units': {'distance': 'Meters', 'weight': 'Grams', 'energy': 'Joules', 'speed': 'Ips (Inches per Second)', 'polling_rate': 'Hz', 'efficiency': '% (percentage)', 'gravity_constant': '9.8 m/s²'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Polling_Rate_Hz', 'type': 'INTEGER', 'primary_key': False, 'comment': '轮询率（Hz）', 'examples': ['1000', '2000', '500', '4000', '1001']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}], 'mouse.usage_records': [{'column': 'Mouse_Id'}, {'column': 'Distance_Moved_Meters'}, {'column': 'Energy_Consumed_Joules'}]}}\nA common sense reasoning question is as follows:\nFind mice with lift-off distance <1.5mm and DPI >18000 (common sense: low lift-off distance + high DPI can easily cause cursor jitter), and return the model along with the manufacturer's founding year. Based on the cursor stability requirements of ISO 9241-411 standard.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, ma.Founded_year FROM mice m JOIN sensor_data sd ON m.Mouse_Id = sd.Mouse_Id JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE sd.Lift_Off_Distance_Mm < 1.5 AND sd.Max_Dpi > 18000;",
        "db_id": "mouse"
    },
    {
        "id": 356,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['users', 'click frequency', 'mouse acceleration', 'sliding window'], 'relations': ['user_to_click_data (User_ID → usage_records)', 'click_frequency_to_window (sliding window calculation)', 'mouse_to_acceleration (Mouse_ID → sensor_data.Acceleration_G)'], 'intent': 'identify_users_with_high_frequency_click_pattern', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1200, 3], 'units': {'click_frequency': 'clicks per minute', 'cycles': 'duration of 3 consecutive sliding windows'}, 'foreign_keys': [{'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Clicks'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Start_Time'}], 'mouse.sensor_data': [{'column': 'Acceleration_G'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Dark Core RGB Pro (weight 133g) is used at the Mercury terminator (diurnal temperature variation ±300°C, gravity 0.38g), calculate the sensor's precision error under extreme thermal expansion and contraction (assuming material thermal expansion coefficient α=2.3e-5/°C, Δt=600°C). Formula: ΔL=α×L0×Δt, precision error=ΔL/(Sensor_Area)^0.5×100%.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (2.3e-5 * 10 * 600) / SQRT(10 * 5) * 100 AS precision_error FROM mice WHERE Model = 'Dark Core RGB Pro';",
        "db_id": "mouse"
    },
    {
        "id": 357,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mice', 'lift-off distance <1.5mm', 'DPI >18000', \"manufacturer's founding year\"], 'relations': ['mice_to_manufacturer (mice.Manufacturer_Id → manufacturers.Manufacturer_Id)', 'mice_to_sensor_data (mice.Mouse_Id → sensor_data.Mouse_Id)', 'parameter_filter (Lift_Off_Distance_Mm < 1.5mm, Max_Dpi >18000)'], 'intent': 'filter_mice_by_sensor_parameters_and_return_manufacturer_info', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1.5, 18000], 'units': {'lift-off_distance': 'mm (millimeters)', 'dpi': 'DPI (dots per inch)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}], 'mouse.manufacturers': [{'column': 'Founded_year'}], 'mouse.sensor_data': [{'column': 'Lift_Off_Distance_Mm'}, {'column': 'Max_Dpi'}]}}\nA physical knowledge question is as follows:\nCalculate the effective mechanical power (effective work/time) for each mouse under dynamic acceleration, returning models with power >10W and an efficiency ratio <40%. Formula: Effective work = Distance_Moved × Weight × a_avg (average acceleration), a_avg = Δv/Δt, Δv = Tracking_Speed × Distance_Moved/1000.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE ( (u.Distance_Moved_Meters * m.Weight_Grams * POWER((m.Tracking_Speed_Ips * 0.0254), 2)) / (u.Distance_Moved_Meters / 1000) ) / (u.Usage_Duration_Minutes * 60) > 10 AND (u.Distance_Moved_Meters * m.Weight_Grams * POWER((m.Tracking_Speed_Ips * 0.0254), 2)) / (u.Energy_Consumed_Joules * 1000) * 100 < 40;",
        "db_id": "mouse"
    },
    {
        "id": 358,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Dark Core RGB Pro', 'Mercury terminator', '±300°C diurnal temperature variation', 'α=2.3e-5/°C thermal expansion coefficient', 'Δt=600°C'], 'relations': ['mouse_model_to_specs (Dark Core RGB Pro → mice table specs)', 'thermal_stress_to_precision_error (Δt → ΔL → precision error)'], 'intent': 'calculate_sensor_precision_error_under_thermal_stress', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [133, 300, 600, 2.3e-05], 'units': {'temperature': '°C (Celsius)', 'weight': 'grams', 'thermal_expansion_coefficient': 'per °C', 'precision_error': 'percentage (%)', 'conversion': 'Δt = 600°C (total temperature swing)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}], 'mouse.sensor_data': [{'column': 'Sensor_Type'}, {'column': 'Max_Dpi'}, {'column': 'Sensor_Life_Hours'}]}}\nA mathematical logic question is as follows:\nIdentify users exhibiting 'quantized clicking' anomalies (where the click count follows a 2^n distribution and the standard deviation of intervals is less than 0.1 seconds), return their user IDs and mouse polling rates. Fast Fourier Transform must be used to analyze frequency domain characteristics of click sequences.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ClickPatterns AS (SELECT User_ID, Mouse_ID, Clicks, (LOG2(Clicks)) AS log2_clicks FROM usage_records WHERE Clicks > 0 AND MOD(LOG2(Clicks), 1) = 0) SELECT cp.User_ID, m.Polling_Rate_Hz FROM ClickPatterns cp JOIN mice m ON cp.Mouse_ID = m.Mouse_Id;",
        "db_id": "mouse"
    },
    {
        "id": 359,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mouse', 'effective mechanical power', 'dynamic acceleration', 'efficiency ratio', 'Tracking_Speed', 'Weight', 'Distance_Moved', 'usage duration'], 'relations': ['mouse_to_weight (mice.Mouse_Id → mice.Weight_Grams)', 'mouse_to_tracking_speed (mice.Mouse_Id → mice.Tracking_Speed_Ips)', 'mouse_to_usage_data (mice.Mouse_Id → usage_records.Mouse_Id)', 'work_components (Distance_Moved × Weight × a_avg)', 'acceleration_components (Δv = Tracking_Speed × Distance_Moved/1000; a_avg = Δv/Δt)', 'power_threshold (power > 10W)', 'efficiency_threshold (efficiency ratio < 40%)'], 'intent': 'calculate_mechanical_power_and_efficiency_for_mice', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 40, 1000], 'units': {'power': 'W (Watts)', 'weight': 'kg (converted from grams)', 'distance': 'meters', 'acceleration': 'm/s²', 'velocity': 'm/s (derived from inches/sec → meters/sec)', 'time': 'seconds (converted from minutes)', 'energy_consumed': 'Joules', 'unit_conversions': ['Weight_Grams → kg (divide by 1000)', 'Usage_Duration_Minutes → seconds (multiply by 60)', 'Tracking_Speed_Ips → m/s (1 inch = 0.0254 meters)', 'Δv = Tracking_Speed_Ips × Distance_Moved_Meters / 1000']}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}], 'mouse.usage_records': [{'column': 'Mouse_Id'}, {'column': 'Distance_Moved_Meters'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Energy_Consumed_Joules'}]}}\nA common sense reasoning question is as follows:\nFind records where weight >150g and average daily usage >8 hours (ISO 9241-300 recommends long-term use should be <120g), return user ID and manufacturer market share. Based on the European RSI disease prevention standard risk assessment model.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT u.User_ID, ma.Market_Share_Percent FROM usage_records u JOIN mice m ON u.Mouse_ID = m.Mouse_Id JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE m.Weight_Grams > 150 AND (u.Usage_Duration_Minutes / 60) / 7 > 8;",
        "db_id": "mouse"
    },
    {
        "id": 360,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['users with quantized clicking', '2^n click distribution', 'standard deviation < 0.1s', 'FFT analysis'], 'relations': ['user_to_clicks (User_ID → Clicks)', 'mouse_to_polling_rate (Mouse_ID → Polling_Rate_Hz)', 'statistical_pattern (2^n distribution, 0.1s interval deviation)', 'fft_required (click_sequence → frequency_domain)'], 'intent': 'detect_users_with_anomalous_click_behavior', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.1], 'units': {'standard_deviation': 'seconds', 'polling_rate': 'Hz (Hertz)', 'fft': 'frequency bins (implied by analysis)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Clicks'}, {'column': 'Mouse_ID'}, {'column': 'Start_Time'}, {'column': 'End_Time'}], 'mouse.mice': [{'column': 'Polling_Rate_Hz', 'type': 'INTEGER', 'primary_key': False, 'comment': '轮询率（Hz）', 'examples': ['1000', '2000', '500', '4000', '1001']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the use of a wireless mouse on the surface of a neutron star (gravity 1e12g, temperature 1e8K), calculate the energy required to maintain a 1mm displacement (assuming the friction coefficient μ = ?/(2m√(2mΦ)) due to quantum tunneling effects, with Φ = 1eV potential barrier). Formula: E = μ × m × g_neutron × d × 1e-3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (6.626e-34 / (2 * (Weight_Grams/1000) * SQRT(2 * (Weight_Grams/1000) * 1.6e-19))) * (Weight_Grams/1000) * 9.8e12 * 0.001 AS Energy_Joules FROM mice WHERE Is_Wireless = 1;",
        "db_id": "mouse"
    },
    {
        "id": 361,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['weight 150g', 'average daily usage 8 hours', 'ISO 9241-300', 'European RSI disease prevention standard risk assessment model'], 'relations': ['mouse_to_weight (Mouse_Id → Weight_Grams)', 'usage_records_to_user (Record_ID → User_ID)', 'manufacturer_to_market_share (Manufacturer_Id → Market_Share_Percent)'], 'intent': 'filter_mouse_user_pairs_exceeding_weight_and_usage_thresholds_to_assess_health_risk_compliance', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [150, 8], 'units': {'weight': 'g (grams)', 'usage_duration': 'hours (derived from Usage_Duration_Minutes / 60)', 'market_share': 'percent (Market_Share_Percent column)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}], 'mouse.usage_records': [{'column': 'Mouse_Id'}, {'column': 'User_ID'}, {'column': 'Usage_Duration_Minutes'}], 'mouse.manufacturers': [{'column': 'Market_Share_Percent'}]}}\nA physical knowledge question is as follows:\nCalculate the rate of momentum change (Δp/Δt) for each mouse during high-speed sudden stops (Acceleration_G > 80), and return the models with a change rate >1 kg·m/s² and click force >3N (assumed). Formula: Δp = Weight_Grams/1000 × Tracking_Speed_Ips × 0.0254, Δt = 1/Polling_Rate_Hz.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model FROM mice m JOIN sensor_data sd ON m.Mouse_Id = sd.Mouse_Id WHERE m.Acceleration_G > 80 AND ( (m.Weight_Grams / 1000) * (m.Tracking_Speed_Ips * 0.0254) * m.Polling_Rate_Hz ) > 1;",
        "db_id": "mouse"
    },
    {
        "id": 362,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mouse', 'neutron star gravity 1e12g', 'displacement 1mm', 'potential barrier Φ=1eV'], 'relations': ['mouse_to_weight (wireless mouse → Weight_Grams)', 'gravity_to_energy (g_neutron → E)', 'quantum_tunneling (μ → Φ)'], 'intent': 'calculate_energy_required', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000000000.0, 1, 100000000.0, 1000000.0, 0.001, 1.0], 'units': {'gravity': \"g (1e12 times Earth's gravity)\", 'displacement': 'mm (converted to meters via 1e-3)', 'potential_barrier': 'eV (electronvolt)', 'mass': 'grams (from mice.Weight_Grams)', 'energy': 'joules (implied by formula)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}]}}\nA mathematical logic question is as follows:\nIdentify users exhibiting the 'Hidden Markov Click Pattern' (click sequence state transition probability entropy <0.5 sustained over 6 cycles), returning user IDs and mouse sensor lifespan. Requires using the Viterbi algorithm to decode hidden states and calculate KL divergence.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ClickSequences AS (SELECT User_ID, Mouse_ID, Start_Time, Clicks, LAG(Clicks) OVER (PARTITION BY User_ID, Mouse_ID ORDER BY Start_Time) AS prev_clicks FROM usage_records), TransitionMatrix AS (SELECT User_ID, Mouse_ID, COUNT(*) AS total_transitions, SUM(CASE WHEN Clicks = prev_clicks THEN 1 ELSE 0 END) AS same_state_count FROM ClickSequences GROUP BY User_ID, Mouse_ID) SELECT tm.User_ID, sd.Sensor_Life_Hours FROM TransitionMatrix tm JOIN sensor_data sd ON tm.Mouse_ID = sd.Mouse_Id WHERE (same_state_count / total_transitions) > 0.5;",
        "db_id": "mouse"
    },
    {
        "id": 363,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mouse models', 'Weight_Grams', 'Tracking_Speed_Ips', 'Polling_Rate_Hz', 'Acceleration_G', 'Δp/Δt >1 kg·m/s²', 'click force >3N'], 'relations': ['mouse_to_specs (Model → physical parameters)', 'momentum_change_formula (Δp = Weight_Grams/1000 × Tracking_Speed_Ips × 0.0254)', 'time_interval_formula (Δt = 1/Polling_Rate_Hz)', 'acceleration_filter (Acceleration_G > 80)'], 'intent': 'calculate_momentum_change_rate_and_filter_models', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [80, 1, 3, 1000, 0.0254], 'units': {'mass': 'kg (grams-to-kilograms conversion: /1000)', 'velocity': 'm/s (ips-to-m/s conversion: ×0.0254)', 'force': 'N (newtons, threshold value: >3N)', 'momentum_rate': 'kg·m/s² (Δp/Δt >1)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}, {'column': 'Polling_Rate_Hz', 'type': 'INTEGER', 'primary_key': False, 'comment': '轮询率（Hz）', 'examples': ['1000', '2000', '500', '4000', '1001']}, {'column': 'Acceleration_G', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '加速度（重力加速度 g）', 'examples': ['10.0', '50.0', '40.0', '20.0', '35.0']}]}}\nA common sense reasoning question is as follows:\nFind records of wireless mice used in environments with excessive electromagnetic radiation (assuming the sensor_data has a new EMI_Level field >30dBμV/m) and with a calibration interval of less than 3 days, returning the model and the manufacturer's founding year. Based on FCC Part 15B electromagnetic compatibility standards.\nyour response just have a SQL without anything.\n",
        "solution": "WITH CalibrationIntervals AS (SELECT Sensor_Id, Last_Calibration_Date, LAG(Last_Calibration_Date) OVER (PARTITION BY Sensor_Id ORDER BY Last_Calibration_Date) AS prev_date FROM sensor_data) SELECT m.Model, ma.Founded_year FROM CalibrationIntervals ci JOIN sensor_data sd ON ci.Sensor_Id = sd.Sensor_Id JOIN mice m ON sd.Mouse_Id = m.Mouse_Id JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE DATEDIFF(ci.Last_Calibration_Date, ci.prev_date) < 3;",
        "db_id": "mouse"
    },
    {
        "id": 364,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['usage_records', 'sensor_data', 'Hidden Markov Click Pattern', 'user IDs', 'mouse sensor lifespan'], 'relations': ['usage_records.Mouse_ID → mice.Mouse_ID', 'mice.Mouse_ID → sensor_data.Mouse_ID', 'click_sequence_state_transition_probability_entropy < 0.5', 'KL_divergence_calculation'], 'intent': 'identify_users_with_hidden_markov_click_pattern', 'reasoning_type': 'mathematical_logic_reinforcement', 'numerical_values': [0.5, 6], 'units': {'entropy': 'dimensionless (bits)', 'cycles': 'count', 'sensor_lifespan': 'hours (from sensor_data.Sensor_Life_Hours)'}, 'foreign_keys': [{'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Mouse_ID'}, {'column': 'Clicks'}], 'mouse.sensor_data': [{'column': 'Sensor_Life_Hours'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the use of a wireless mouse in the photosphere of the red supergiant star Betelgeuse (radiation pressure 1e8Pa, gravity 10^-4 g), calculate the required photon propulsion force to maintain cursor movement (given surface albedo 0.8, laser wavelength 500nm). Formula: F= (2E/c)×(1+cosθ), E=P×t×A×R/λ.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (2 * 1e8 * 0.01) AS Photon_Force_N FROM mice WHERE Is_Wireless = 1;",
        "db_id": "mouse"
    },
    {
        "id": 365,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mice', 'excessive electromagnetic radiation (EMI_Level >30dBμV/m)', 'calibration interval <3 days', 'FCC Part 15B standards'], 'relations': ['mice_to_sensor_data (Mouse_Id)', 'mice_to_manufacturer (Manufacturer_Id)', 'emi_condition (EMI_Level >30dBμV/m)', 'calibration_condition (Last_Calibration_Date within 3 days)'], 'intent': 'find_records_of_wireless_mice_under_emi_and_calibration_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30, 3], 'units': {'emi_level': 'dBμV/m (FCC Part 15B threshold)', 'calibration_interval': 'days (time since last calibration)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}, {'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}], 'mouse.sensor_data': [{'column': 'Mouse_Id'}, {'column': 'EMI_Level'}, {'column': 'Last_Calibration_Date'}], 'mouse.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Founded_year'}]}}\nA physical knowledge question is as follows:\nCalculate the energy loss rate (ineffective energy consumption / total energy consumption) for each wireless mouse during dynamic DPI switching (ΔDPI > 8000), returning models with a loss rate > 25% and acceleration > 50G. Formula: ineffective energy consumption = Energy_Consumed_Joules - (ΔDistance × Weight × 9.8) / Sensor_Efficiency. The query needs to join the mice, sensor_data, and usage_records tables.\nyour response just have a SQL without anything.\n",
        "solution": "WITH EnergyAnalysis AS (SELECT m.Mouse_Id, m.Model, m.Acceleration_G, m.Weight_Grams, u.Energy_Consumed_Joules, u.Distance_Moved_Meters FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID JOIN sensor_data sd ON m.Mouse_Id = sd.Mouse_Id WHERE ABS(u.Max_Dpi - u.Average_Dpi) > 8000) SELECT ea.Model FROM EnergyAnalysis ea WHERE (1 - ( (ea.Distance_Moved_Meters * ea.Weight_Grams * 9.8) / ea.Energy_Consumed_Joules )) * 100 > 25 AND ea.Acceleration_G > 50;",
        "db_id": "mouse"
    },
    {
        "id": 366,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mouse', 'Betelgeuse photosphere', 'radiation pressure 1e8Pa', 'gravity 10^-4g', 'surface albedo 0.8', 'laser wavelength 500nm'], 'relations': ['mouse_to_physics_parameters (wireless_mouse → F calculation)', 'radiation_pressure_to_force (1e8Pa → E in formula)', 'albedo_effect (0.8 → R in E formula)', 'wavelength_to_energy (500nm → λ in E formula)'], 'intent': 'calculate_photon_propulsion_force', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000000.0, 0.0001, 0.8, 500], 'units': {'pressure': 'Pa (Pascals)', 'gravity': 'g (grams-force)', 'length': 'nm (nanometers)', 'force': 'N (Newtons, derived from formula)', 'conversion': 'θ=cos(0°)=1 for direct reflection'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}], 'mouse.sensor_data': [{'column': 'Sensor_Type'}, {'column': 'Max_Dpi'}, {'column': 'Lift_Off_Distance_Mm'}]}}\nA mathematical logic question is as follows:\nIdentify users exhibiting 'fractal click patterns' (Hurst exponent > 0.8 for click intervals persisting over 10 cycles), returning user IDs and manufacturer market share. The Hurst exponent must be calculated using the rescaled range method, with persistence verified via window functions.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ClickIntervals AS (SELECT User_ID, Mouse_ID, Start_Time, LAG(Start_Time) OVER (PARTITION BY User_ID, Mouse_ID ORDER BY Start_Time) AS prev_time FROM usage_records), RS_Analysis AS (SELECT User_ID, Mouse_ID, LOG(MAX(Start_Time) - MIN(Start_Time)) / LOG(COUNT(*)) AS Hurst_Index FROM ClickIntervals GROUP BY User_ID, Mouse_ID) SELECT rs.User_ID, ma.Market_Share_Percent FROM RS_Analysis rs JOIN mice m ON rs.Mouse_ID = m.Mouse_Id JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE rs.Hurst_Index > 0.8;",
        "db_id": "mouse"
    },
    {
        "id": 367,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"wireless mouse\", \"dynamic DPI switching\", \"energy loss rate\", \"sensor efficiency\"],\n  \"relations\": [\n    \"mice_to_sensor_data (mice.Mouse_Id → sensor_data.Mouse_Id)\",\n    \"mice_to_usage_records (mice.Mouse_Id → usage_records.Mouse_ID)\",\n    \"delta_dpi_condition (ΔDPI > 8000, computed from usage_records.Max_Dpi - usage_records.Average_Dpi)\",\n    \"loss_rate_condition (loss_rate > 25%)\",\n    \"acceleration_condition (mice.Acceleration_G > 50)\"\n  ],\n  \"intent\": \"calculate_energy_loss_rate_with_filters\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [8000, 25, 50],\n  \"units\": {\n    \"energy\": \"Joules (J)\",\n    \"distance\": \"Meters (m)\",\n    \"weight\": \"Grams (g)\",\n    \"dpi_diff\": \"DPI units (ΔDPI)\",\n    \"acceleration\": \"Gravitational acceleration (G)\",\n    \"efficiency\": \"unitless (Sensor_Efficiency ratio)\"\n  },\n  \"required_tables\": [\"mice\", \"sensor_data\", \"usage_records\"],\n  \"required_fields\": [\n    \"mice.Mouse_Id\",\n    \"mice.Model\",\n    \"mice.Is_Wireless\",\n    \"mice.Acceleration_G\",\n    \"mice.Weight_Grams\",\n    \"sensor_data.Sensor_Efficiency\",  // Assumed to exist based on problem statement\n    \"usage_records.Mouse_ID\",\n    \"usage_records.Energy_Consumed_Joules\",\n    \"usage_records.Distance_Moved_Meters\",\n    \"usage_records.Max_Dpi\",\n    \"usage_records.Average_Dpi\"\n  ]\n}\nA common sense reasoning question is as follows:\nRetrieve wireless mouse models and their manufacturers' complaint rates (assuming the manufacturers table has a new Complaint_Rate field) that are being used in areas with altitude > 3000m (determined via IP geolocation) while showing battery life below 50% of the nominal value (common knowledge: low atmospheric pressure affects lithium battery performance). Based on IEC 61960-3 altitude performance specifications.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, ma.Founded_year FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE (u.Usage_Duration_Minutes / 60) / m.Battery_Life_Hours < 0.5 AND m.Is_Wireless = 1;",
        "db_id": "mouse"
    },
    {
        "id": 368,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['users with Hurst exponent > 0.8', 'fractal click patterns', 'manufacturer market share'], 'relations': ['usage_records.User_ID → sensor_data.Mouse_Id (via mice table)', 'users_to_manufacturers (User_ID → Manufacturer_Id)', 'hurst_requirement (H > 0.8 with 10-cycle persistence)'], 'intent': 'identify_users_with_fractal_click_patterns_and_market_share', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.8, 10], 'units': {'hurst_exponent': 'dimensionless (H > 0.8)', 'persistence_cycles': 'cycles (n=10)', 'market_share': 'percent (%)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Mouse_ID'}, {'column': 'Start_Time'}, {'column': 'End_Time'}, {'column': 'Clicks'}], 'mouse.mice': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}], 'mouse.manufacturers': [{'column': 'Market_Share_Percent'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the use of a laser sensor mouse (Sensor_Type='Laser') in the radiation field of the Crab Pulsar (magnetic field 1e12 T, radiation flux 1e15 W/m²), calculate the required thickness of the electromagnetic shielding layer to maintain cursor positioning accuracy (given that the shielding effectiveness SE of μ-metal is SE=20log(f/1e6)+50, where f=pulsar radiation frequency 160 Hz). Formula: Thickness = (SE - 10log(σ/(2πfμ)))/ (4π√(πfμσ)), where σ=1.6e6 S/m and μ=1e-4 H/m.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ( (20 * LOG10(160 / 1e6) + 50) - 10 * LOG10(1.6e6 / (2 * PI() * 160 * 1e-4)) ) / (4 * PI() * SQRT(PI() * 160 * 1e-4 * 1.6e6)) AS Shield_Thickness_m FROM mice WHERE Sensor_Type = 'Laser';",
        "db_id": "mouse"
    },
    {
        "id": 369,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mouse models', \"manufacturers' complaint rates\", 'altitude > 3000m', 'battery life < 50% of nominal value', 'IEC 61960-3 standard'], 'relations': ['manufacturer_to_mouse (manufacturers.Manufacturer_Id → mice.Manufacturer_Id)', 'mouse_to_usage_records (mice.Mouse_Id → usage_records.Mouse_ID)', 'altitude_condition (IP geolocation → altitude > 3000m)', 'battery_performance_impact (low pressure → lithium battery performance degradation)'], 'intent': 'retrieve_wireless_mouse_complaint_rates_with_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3000, 50], 'units': {'altitude': 'meters', 'battery_life': 'percentage of nominal value (%)', 'complaint_rate': 'manufacturer-specific metric (implied by Complaint_Rate field)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.manufacturers': [{'column': 'Manufacturer_Name'}, {'column': 'Complaint_Rate'}], 'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['50', '60', '80', '70']}], 'mouse.usage_records': [{'column': 'Mouse_ID'}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy change generated by the Corsair Dark Core RGB Pro mouse at 40G acceleration when used by user 103 (assuming the mouse mass is 0.133kg, initial velocity is 0, and usage time is 2 hours).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 0.133 * POWER((40 * 9.8 * 7200), 2) AS Kinetic_Energy_J FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Model = 'Dark Core RGB Pro' AND u.User_ID = 103;",
        "db_id": "mouse"
    },
    {
        "id": 370,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"laser sensor mouse\", \"Crab Pulsar\", \"μ-metal\", \"magnetic field 1e12 T\", \"radiation flux 1e15 W/m²\", \"shielding effectiveness SE\", \"pulsar radiation frequency 160 Hz\"],\n  \"relations\": [\"mouse_sensor_type (Laser)\", \"environmental_conditions (Crab Pulsar magnetic field → radiation flux)\", \"shielding_material_property (μ-metal → SE formula)\", \"frequency_property (160 Hz → SE calculation)\"],\n  \"intent\": \"calculate_electromagnetic_shielding_thickness\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [1e12, 1e15, 160, 1.6e6, 1e-4],\n  \"units\": {\n    \"magnetic_field\": \"T (Tesla)\",\n    \"radiation_flux\": \"W/m² (Watts per square meter)\",\n    \"frequency\": \"Hz (Hertz)\",\n    \"conductivity\": \"S/m (Siemens per meter)\",\n    \"permeability\": \"H/m (Henrys per meter)\",\n    \"shielding_effectiveness\": \"dB (decibels)\"\n  },\n  \"required_tables\": [\"mice\", \"sensor_data\"],\n  \"required_fields\": [\n    \"mice.Sensor_Type\",\n    \"sensor_data.Sensor_Type\"\n  ]\n}\n// Note: While the question contains detailed physical parameters and formulas, the database schema lacks fields containing σ (conductivity), μ (permeability), f (frequency), or any shielding-related properties. The required_fields list reflects only the database elements that can be mapped to the question (sensor type), but the actual shielding calculation cannot be performed with the available database schema.\nA mathematical logic question is as follows:\nCalculate the ratio of the average price of wireless mice to the average price of wired mice for each manufacturer, then sort the results in descending order by this ratio and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ma.Manufacturer_Name, AVG(CASE WHEN m.Is_Wireless = 1 THEN m.Price_Usd END) / AVG(CASE WHEN m.Is_Wireless = 0 THEN m.Price_Usd END) AS Wireless_Wired_Ratio FROM mice m JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id GROUP BY ma.Manufacturer_Name ORDER BY Wireless_Wired_Ratio DESC LIMIT 5;",
        "db_id": "mouse"
    },
    {
        "id": 371,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Corsair Dark Core RGB Pro mouse', 'user 103', '40G acceleration', 'mouse mass 0.133kg', 'usage time 2 hours'], 'relations': ['mouse_to_specifications (Corsair Dark Core RGB Pro → mice table data)', 'user_usage_record (user 103 → usage_records duration)', 'acceleration_to_kinetic_energy (40G acceleration → velocity calculation)'], 'intent': 'calculate_kinetic_energy_change', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [40, 0.133, 2], 'units': {'acceleration': 'G (converted to m/s² via 1G = 9.8m/s²)', 'mass': 'kg (converted from mice.Weight_Grams = 133g)', 'time': 'hours → seconds (2 hours = 7200s)', 'velocity': 'm/s (calculated as v = a*t)', 'energy': 'Joules (J) via KE = 0.5*m*v²'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Acceleration_G', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '加速度（重力加速度 g）', 'examples': ['10.0', '50.0', '40.0', '20.0', '35.0']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}], 'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Usage_Duration_Minutes'}]}}\nA common sense reasoning question is as follows:\nIdentify which mice have a tracking speed (IPS) that exceeds 90% of their sensor's maximum tracking speed, and flag them as high-risk devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT m.Model, 'High Risk' AS Risk_Level FROM mice m JOIN sensor_data sd ON m.Mouse_Id = sd.Mouse_Id WHERE m.Tracking_Speed_Ips > 0.9 * sd.Tracking_Speed_Ips;",
        "db_id": "mouse"
    },
    {
        "id": 372,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mice', 'wired mice', 'manufacturers'], 'relations': ['manufacturer_to_mice (Manufacturer_Id → mice.Manufacturer_Id)', 'mouse_type_to_price (Is_Wireless → Price_Usd)'], 'intent': 'calculate_average_price_ratio_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'price': 'USD (United States Dollar)', 'ratio': 'dimensionless (wireless_avg_price / wired_avg_price)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Manufacturer_Name'}], 'mouse.mice': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['79.99', '69.99', '99.99', '89.99', '129.99']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a user continuously uses the Logitech G502 HERO mouse at a speed of 1000 IPS for 100 years, calculate the total DPI data generated (assuming 8 hours of use per day).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000 * m.Dpi * (100 * 365 * 8 * 3600) AS Total_DPI_Data FROM mice m WHERE m.Model = 'G502 HERO';",
        "db_id": "mouse"
    },
    {
        "id": 373,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mouse tracking speed', 'sensor maximum tracking speed', '90% threshold'], 'relations': ['mouse_to_sensor (Mouse_Id → Sensor_Id)', 'speed_comparison (mouse.Tracking_Speed_Ips > 0.9 * sensor.Tracking_Speed_Ips)'], 'intent': 'identify_high_risk_mice_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [90], 'units': {'tracking_speed': 'IPS (Inches Per Second)', 'threshold': '90% (0.9 multiplier)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}], 'mouse.sensor_data': [{'column': 'Tracking_Speed_Ips'}]}}\nA physical knowledge question is as follows:\nCalculate the power generated by the Razer DeathAdder V2 mouse under 50G acceleration when used by user 102, assuming a usage time of 150 minutes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Weight_Grams / 1000 * (50 * 9.8) * (50 * 9.8 * 150 * 60) AS Power_W FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Model = 'DeathAdder V2' AND u.User_ID = 102;",
        "db_id": "mouse"
    },
    {
        "id": 374,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Logitech G502 HERO mouse', 'speed 1000 IPS', '100 years', '8 hours per day'], 'relations': ['mouse_to_dpi (Logitech G502 HERO → Dpi value from mice table)', 'time_calculation (total_seconds = 100 years × 365 days/year × 8 hours/day × 3600 seconds/hour)', 'total_distance (inches_moved = 1000 IPS × total_seconds)', 'total_dpi_data (total_dots = Dpi × inches_moved)'], 'intent': 'calculate_total_dpi_data', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100, 8], 'units': {'speed': 'IPS (inches per second)', 'time': 'years, hours per day', 'distance': 'inches', 'dpi': 'dots per inch (dots/inch)', 'conversion': {'years_to_seconds': '1 year = 31536000 seconds (365 days × 86400 seconds/day)', 'total_seconds': '100 years × 31536000 seconds/year = 3.1536e9 seconds', 'inches_moved': '1000 inches/second × 3.1536e9 seconds = 3.1536e12 inches'}}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}]}}\nA mathematical logic question is as follows:\nIdentify the top 3 models from manufacturers with annual turnover exceeding $1 billion and market share greater than 10%, where the ratio of average price to average DPI (USD/DPI) is the lowest for their produced mice.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, (m.Price_Usd / m.Dpi) AS Usd_Per_Dpi FROM mice m JOIN manufacturers ma ON m.Manufacturer_Id = ma.Manufacturer_Id WHERE ma.Revenue_Usd > 1000000000 AND ma.Market_Share_Percent > 10 ORDER BY Usd_Per_Dpi ASC LIMIT 3;",
        "db_id": "mouse"
    },
    {
        "id": 375,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Razer DeathAdder V2', 'user 102', '50G acceleration', '150 minutes'], 'relations': ['mouse_to_sensor (Razer DeathAdder V2 → sensor_data)', 'user_to_usage (user 102 → usage_records)', 'time_to_power (150 minutes → power calculation)'], 'intent': 'calculate_power_under_acceleration', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50, 150], 'units': {'acceleration': 'G (gravitational units)', 'time': 'minutes (converted to seconds for power calculation)', 'energy': 'Joules (from database)', 'power': 'Watts (Joules/second)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}], 'mouse.sensor_data': [{'column': 'Acceleration_G'}], 'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Usage_Duration_Minutes'}, {'column': 'Energy_Consumed_Joules'}]}}\nA common sense reasoning question is as follows:\nIdentify which mice have a battery life (in hours) that is insufficient to support the user's single longest usage duration (in minutes), and calculate the proportion of the insufficient time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, (u.Usage_Duration_Minutes - m.Battery_Life_Hours * 60) / u.Usage_Duration_Minutes AS Shortage_Ratio FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Is_Wireless = 1 AND u.Usage_Duration_Minutes > m.Battery_Life_Hours * 60;",
        "db_id": "mouse"
    },
    {
        "id": 376,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'mice', 'annual turnover', 'market share', 'average price', 'average DPI'], 'relations': ['manufacturers_to_mice (Manufacturer_Id → Mouse_Id)', 'manufacturer_filter (Revenue_Usd > 1e9 ∧ Market_Share_Percent > 10%)', 'ratio_calculation (Price_Usd / Dpi)', 'ranking (top 3 lowest ratios)'], 'intent': 'identify_top_3_mice_models_with_optimal_price_dpi_ratio_from_high_turnover_manufacturers', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000000, 10, 3], 'units': {'revenue': 'USD (1e9)', 'market_share': 'percent (%)', 'price': 'USD', 'dpi': 'Dots Per Inch (DPI)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Revenue_Usd'}, {'column': 'Market_Share_Percent'}], 'mouse.mice': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['79.99', '69.99', '99.99', '89.99', '129.99']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a user continuously uses the Corsair Dark Core RGB Pro mouse at a speed of 1000 IPS for 100 years, calculate the total amount of DPI data generated (assuming 8 hours of usage per day).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000 * m.Dpi * (100 * 365 * 8 * 3600) AS Total_DPI_Data FROM mice m WHERE m.Model = 'Dark Core RGB Pro';",
        "db_id": "mouse"
    },
    {
        "id": 377,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mice.Battery_Life_Hours', 'usage_records.Usage_Duration_Minutes', 'max_usage_duration'], 'relations': ['battery_life_minutes_conversion (Battery_Life_Hours → minutes via ×60)', 'usage_duration_max (Usage_Duration_Minutes → maximum value)', 'battery_vs_usage_comparision (battery_life_minutes < max_usage_duration)', 'insufficient_time (max_usage_duration - battery_life_minutes)', 'proportion_calculation (insufficient_time / max_usage_duration)'], 'intent': 'identify_insufficient_battery_life_and_calculate_proportion', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_life': 'hours → minutes (×60)', 'usage_duration': 'minutes (native unit)', 'proportion': 'unitless (ratio)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['50', '60', '80', '70']}], 'mouse.usage_records': [{'column': 'Usage_Duration_Minutes'}]}}\nA physical knowledge question is as follows:\nCalculate the mechanical work generated by the Corsair Dark Core RGB Pro mouse at a maximum acceleration of 40G during user 103's single usage (combining movement distance and acceleration, using actual weight data).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (m.Weight_Grams / 1000) * (m.Acceleration_G * 9.8) * u.Distance_Moved_Meters AS Mechanical_Work_J FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Model = 'Dark Core RGB Pro' AND u.User_ID = 103;",
        "db_id": "mouse"
    },
    {
        "id": 378,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Corsair Dark Core RGB Pro', '1000 IPS tracking speed', '100 years usage', '8 hours/day usage'], 'relations': ['mouse_model_to_dpi (Corsair Dark Core RGB Pro → mice.Dpi)', 'usage_time_calculation (100 years × 8 hours/day → total_seconds)'], 'intent': 'calculate_total_dpi_data_generated', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100, 8, 365, 3600], 'units': {'tracking_speed': 'IPS (Inches Per Second)', 'time': 'years → seconds (100 × 365 × 8 × 3600)', 'dpi': 'Dots Per Inch (retrieved from mice.Dpi)', 'data': 'Total_dots = DPI × (IPS × total_seconds)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}], 'mouse.usage_records': [{'column': 'Usage_Duration_Minutes'}]}}\nA mathematical logic question is as follows:\nIdentify the manufacturer with the highest profit per employee ratio (profit/number of employees) among the top 3 countries by market share, and calculate the square ratio of average DPI to price (DPI²/USD) for the mice it produces.\nyour response just have a SQL without anything.\n",
        "solution": "WITH MarketShare AS (SELECT Country, SUM(Market_Share_Percent) AS Total_Market_Share FROM manufacturers GROUP BY Country ORDER BY Total_Market_Share DESC LIMIT 3), TopManufacturers AS (SELECT ma.Manufacturer_Id, ma.Manufacturer_Name FROM manufacturers ma JOIN MarketShare ms ON ma.Country = ms.Country ORDER BY (ma.Profit_Usd / ma.Employees) DESC LIMIT 1) SELECT m.Model, POWER(m.Dpi, 2)/m.Price_Usd AS Dpi2_Per_Usd FROM mice m JOIN TopManufacturers tm ON m.Manufacturer_Id = tm.Manufacturer_Id;",
        "db_id": "mouse"
    },
    {
        "id": 379,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Corsair Dark Core RGB Pro mouse', 'User 103', 'maximum acceleration 40G', 'movement distance', 'actual weight data'], 'relations': ['mouse_to_specifications (Corsair Dark Core RGB Pro → mice table)', 'user_to_usage (User 103 → usage_records)', 'mechanical_work_formula (Work = mass × acceleration × distance)'], 'intent': 'calculate_mechanical_work_output', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [40, 103], 'units': {'acceleration': 'G (1G = 9.81 m/s²)', 'weight': 'Grams → converted to Kilograms (mice.Weight_Grams)', 'distance': 'Meters (usage_records.Distance_Moved_Meters)', 'work': 'Joules (N·m) derived from calculation'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Acceleration_G', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '加速度（重力加速度 g）', 'examples': ['10.0', '50.0', '40.0', '20.0', '35.0']}], 'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Distance_Moved_Meters'}]}}\nA common sense reasoning question is as follows:\nIdentify which mice have sensor calibration intervals exceeding industry standards (30 days) and calculate their average daily click outliers (exceeding twice the standard deviation of similar products).\nyour response just have a SQL without anything.\n",
        "solution": "WITH CalibrationIntervals AS (SELECT Sensor_Id, DATEDIFF(Last_Calibration_Date, LAG(Last_Calibration_Date) OVER (PARTITION BY Sensor_Id ORDER BY Last_Calibration_Date)) AS Calibration_Interval FROM sensor_data), ClickStats AS (SELECT Mouse_ID, AVG(Clicks / DATEDIFF(End_Time, Start_Time)) AS Avg_Clicks_Per_Day, STDDEV(Clicks / DATEDIFF(End_Time, Start_Time)) AS Std_Clicks_Per_Day FROM usage_records GROUP BY Mouse_ID) SELECT m.Model FROM mice m JOIN CalibrationIntervals ci ON m.Mouse_Id = ci.Sensor_Id JOIN ClickStats cs ON m.Mouse_Id = cs.Mouse_ID WHERE ci.Calibration_Interval > 30 AND (cs.Avg_Clicks_Per_Day > (SELECT AVG(Avg_Clicks_Per_Day) + 2 * STDDEV(Avg_Clicks_Per_Day) FROM ClickStats));",
        "db_id": "mouse"
    },
    {
        "id": 380,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers in top 3 countries by market share', 'manufacturer with highest profit/employee ratio', 'mice produced by selected manufacturer', 'DPI²/USD ratio'], 'relations': ['country_to_market_share (country → total market share)', 'manufacturer_to_profit_per_employee (manufacturer → profit/employees)', 'manufacturer_to_mice (manufacturer → mice models)', 'dpi_to_price_ratio (DPI²/USD for mice)'], 'intent': 'identify_top_manufacturer_and_calculate_dpi_price_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'market_share': '% (percent)', 'profit': 'USD', 'employees': 'count', 'dpi': 'unitless (dots per inch)', 'price': 'USD (US Dollars)', 'dpi_squared_ratio': 'unitless²/USD'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.manufacturers': [{'column': 'Country'}, {'column': 'Market_Share_Percent'}, {'column': 'Profit_Usd'}, {'column': 'Employees'}, {'column': 'Manufacturer_Name'}], 'mouse.mice': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['79.99', '69.99', '99.99', '89.99', '129.99']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a competitive gamer uses a Logitech G502 HERO (tracking speed 400 IPS/polling rate 1000Hz), calculate the interrupt request data volume per second.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Tracking_Speed_Ips * Polling_Rate_Hz AS Interrupts_Per_Second FROM mice WHERE Model = 'G502 HERO';",
        "db_id": "mouse"
    },
    {
        "id": 381,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mice with calibration intervals >30 days', 'click outliers >2σ', 'industry standard 30-day calibration', 'standard deviation (σ) of similar mice'], 'relations': ['mouse_to_sensor_calibration (mice → sensor_data.Last_Calibration_Date)', 'clicks_to_usage_records (mice → usage_records.Clicks)', 'similarity_criteria (mice → manufacturers.Manufacturer_Id)', 'outlier_definition (2 × σ)'], 'intent': 'identify_calibration_noncompliance_and_analyze_click_outliers', 'reasoning_type': 'mathematical logic reasoning & common sense understanding', 'numerical_values': [30, 2], 'units': {'calibration_interval': 'days (threshold: 30 days)', 'click_outlier_threshold': '2 × standard deviation (σ) of similar products', 'time': 'Start_Time/End_Time in usage_records'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.sensor_data': [{'column': 'Last_Calibration_Date'}, {'column': 'Calibration_Count'}], 'mouse.usage_records': [{'column': 'Mouse_ID'}, {'column': 'Start_Time'}, {'column': 'Clicks'}], 'mouse.mice': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}], 'mouse.manufacturers': [{'column': 'Manufacturer_Id'}]}}\nA physical knowledge question is as follows:\nCalculate the energy conversion efficiency (ratio of actual mechanical work to consumed electrical energy) of the Logitech G502 HERO mouse during usage by user101, given a movement distance of 1500.5 meters and an energy consumption of 5000 joules.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ((m.Weight_Grams / 1000) * m.Acceleration_G * 9.8 * u.Distance_Moved_Meters) / u.Energy_Consumed_Joules AS Efficiency FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Model = 'G502 HERO' AND u.User_ID = 101;",
        "db_id": "mouse"
    },
    {
        "id": 382,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Logitech G502 HERO', 'tracking speed 400 IPS', 'polling rate 1000Hz'], 'relations': ['mouse_model_to_specs (Logitech G502 HERO → mice table specs)', 'polling_rate_to_irq_frequency (1000Hz → 1000 interrupts/second)'], 'intent': 'calculate_interrupt_request_data_volume_per_second', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [400, 1000], 'units': {'tracking_speed': 'IPS (inches per second)', 'polling_rate': 'Hz (cycles per second)', 'data_volume': 'interrupts/second (derived from polling rate)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}, {'column': 'Polling_Rate_Hz', 'type': 'INTEGER', 'primary_key': False, 'comment': '轮询率（Hz）', 'examples': ['1000', '2000', '500', '4000', '1001']}]}}\nA mathematical logic question is as follows:\nCalculate the composite metric of each manufacturer's market share and profit per employee (Market_Share_Percent * (Profit_Usd/Employees)), filter out manufacturers with a metric value greater than 100 and established for more than 20 years, and select the top 5 ranked by the metric value in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_Name, Market_Share_Percent * (Profit_Usd / Employees) AS Composite_Index FROM manufacturers WHERE Market_Share_Percent * (Profit_Usd / Employees) > 100 AND Founded_year < YEAR(CURDATE()) - 20 ORDER BY Composite_Index DESC LIMIT 5;",
        "db_id": "mouse"
    },
    {
        "id": 383,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Logitech G502 HERO mouse', 'user101', 'movement distance 1500.5 meters', 'energy consumption 5000 joules'], 'relations': ['mouse_to_usage (Logitech G502 HERO → usage_records)', 'user_to_usage (user101 → usage_records.Record_ID)', 'work_energy_ratio (mechanical_work/distance_related_to_energy_conversion)'], 'intent': 'calculate_energy_conversion_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1500.5, 5000], 'units': {'distance': 'meters', 'energy': 'joules (J)', 'efficiency': 'unitless ratio (calculated as distance/energy)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}], 'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Distance_Moved_Meters'}, {'column': 'Energy_Consumed_Joules'}]}}\nA common sense reasoning question is as follows:\nIdentify wireless mice that require daily charging (battery life shorter than average daily usage duration), and calculate their theoretical maximum usage days (accurate to two decimal places).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, ROUND(m.Battery_Life_Hours / (AVG(u.Usage_Duration_Minutes) / 60), 2) AS Max_Usage_Days FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Is_Wireless = 1 GROUP BY m.Model, m.Battery_Life_Hours HAVING m.Battery_Life_Hours < AVG(u.Usage_Duration_Minutes) / 60;",
        "db_id": "mouse"
    },
    {
        "id": 384,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'Market_Share_Percent', 'Profit_Usd', 'Employees', 'Established_Years'], 'relations': ['manufacturer_to_metric (manufacturer → composite_metric)', 'composite_metric (Market_Share_Percent * (Profit_Usd/Employees))', 'established_years (2023 - Founded_Year)'], 'intent': 'calculate_composite_metric_filter_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 20], 'units': {'market_share': '% (percent)', 'profit': 'USD', 'employees': 'count', 'established_years': 'years (calculated from Founded_Year)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}], 'tableinfo': {'mouse.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Manufacturer_Name'}, {'column': 'Market_Share_Percent'}, {'column': 'Profit_Usd'}, {'column': 'Employees'}, {'column': 'Founded_Year'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a laboratory operates a mouse continuously at a maximum acceleration of 50G and a polling rate of 2000Hz, calculate the number of data packets generated per second (each acceleration change generates a 32-byte data packet).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Polling_Rate_Hz * Acceleration_G AS Packets_Per_Second FROM mice WHERE Polling_Rate_Hz = 2000 AND Acceleration_G = 50;",
        "db_id": "mouse"
    },
    {
        "id": 385,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wireless mice', 'battery life', 'average daily usage duration', 'theoretical maximum usage days'], 'relations': ['mice_to_battery_life (Mouse_Id → Battery_Life_Hours)', 'battery_life_vs_usage (Battery_Life_Hours < average_daily_usage_hours)', 'maximum_usage_days_calculation (Battery_Life_Hours / average_daily_usage_hours)'], 'intent': 'identify_wireless_mice_requiring_daily_charging_and_calculate_theoretical_usage_days', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'battery_life': 'hours (Battery_Life_Hours)', 'average_daily_usage': 'minutes → hours (Usage_Duration_Minutes / 60)', 'maximum_usage_days': 'days (calculated as Battery_Life_Hours / average_daily_usage_hours)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}, {'column': 'Battery_Life_Hours', 'type': 'INTEGER', 'primary_key': False, 'comment': '电池续航时间（小时）', 'examples': ['50', '60', '80', '70']}, {'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}], 'mouse.usage_records': [{'column': 'Usage_Duration_Minutes'}, {'column': 'Mouse_Id'}]}}\nA physical knowledge question is as follows:\nBased on the Lift_Off_Distance_Mm field from the sensor_data table and the Distance_Moved_Meters field from the usage_records table, calculate the sensor hovering energy loss for the Logitech G502 HERO mouse during usage by user 101 (assuming each lift consumes 0.5mJ of energy).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (u.Distance_Moved_Meters / (sd.Lift_Off_Distance_Mm / 1000)) * 0.5 * POWER(10, -3) AS Total_Energy_Loss_J FROM mice m JOIN sensor_data sd ON m.Mouse_Id = sd.Mouse_Id JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Model = 'G502 HERO' AND u.User_ID = 101;",
        "db_id": "mouse"
    },
    {
        "id": 386,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maximum acceleration 50G', 'polling rate 2000Hz', '32-byte data packet'], 'relations': ['polling_rate_to_packets (2000Hz → 2000 packets/sec)'], 'intent': 'calculate_data_packets_per_second', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 2000, 32], 'units': {'acceleration': 'G (gravitational force)', 'polling_rate': 'Hz (Hertz)', 'data_packets': 'packets/sec (derived from Hz)', 'packet_size': 'bytes (32 bytes/packet)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Polling_Rate_Hz', 'type': 'INTEGER', 'primary_key': False, 'comment': '轮询率（Hz）', 'examples': ['1000', '2000', '500', '4000', '1001']}, {'column': 'Acceleration_G', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '加速度（重力加速度 g）', 'examples': ['10.0', '50.0', '40.0', '20.0', '35.0']}], 'mouse.sensor_data': [{'column': 'Polling_Rate_Hz'}, {'column': 'Acceleration_G'}]}}\nA mathematical logic question is as follows:\nCalculate the covariance between the price variation coefficient (standard deviation/mean) of wireless mouse product lines and market share among manufacturers established for over 25 years, sorted in descending order by the absolute value of covariance.\nyour response just have a SQL without anything.\n",
        "solution": "WITH ManufacturerStats AS (SELECT ma.Manufacturer_Id, STDDEV(m.Price_Usd) / AVG(m.Price_Usd) AS Price_CV, ma.Market_Share_Percent FROM manufacturers ma JOIN mice m ON ma.Manufacturer_Id = m.Manufacturer_Id WHERE YEAR(CURDATE()) - ma.Founded_year > 25 AND m.Is_Wireless = 1 GROUP BY ma.Manufacturer_Id, ma.Market_Share_Percent) SELECT Manufacturer_Id, (SUM(Price_CV * Market_Share_Percent) - SUM(Price_CV) * SUM(Market_Share_Percent) / COUNT(*)) / COUNT(*) AS Covariance FROM ManufacturerStats GROUP BY Manufacturer_Id ORDER BY ABS(Covariance) DESC;",
        "db_id": "mouse"
    },
    {
        "id": 387,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Logitech G502 HERO mouse', 'sensor_data', 'usage_records', 'user 101'], 'relations': ['mouse_to_sensor_data (Mouse_Id → Sensor_Id)', 'mouse_to_usage_records (Mouse_Id → Record_ID)', 'user_to_usage_records (User_ID → Record_ID)'], 'intent': 'calculate_sensor_hovering_energy_loss', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5], 'units': {'lift_off_distance': 'mm (millimeters) → meters (conversion factor: 1/1000)', 'distance_moved': 'meters', 'energy_per_lift': 'mJ (millijoules)', 'total_energy': 'mJ (implied by calculation)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}], 'mouse.sensor_data': [{'column': 'Mouse_Id'}, {'column': 'Lift_Off_Distance_Mm'}], 'mouse.usage_records': [{'column': 'Mouse_ID'}, {'column': 'User_ID'}, {'column': 'Distance_Moved_Meters'}]}}\nA common sense reasoning question is as follows:\nIdentify wired mouse models that violate industrial design standards (weight >100 grams and cable length <1.5 meters), and calculate their average user click efficiency (number of clicks / minutes of usage).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, SUM(u.Clicks) / SUM(u.Usage_Duration_Minutes) AS Click_Efficiency FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Is_Wireless = 0 AND m.Weight_Grams > 100 AND m.Cable_Length_Meters < 1.5 GROUP BY m.Model;",
        "db_id": "mouse"
    },
    {
        "id": 388,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers established over 25 years', 'wireless mouse product lines', 'price variation coefficient', 'market share'], 'relations': ['manufacturer_to_mice (Manufacturer_Id → mice)', 'price_variation_coefficient (standard_deviation(Price_Usd)/mean(Price_Usd))', 'covariance_relationship (price_variation_coefficient ↔ Market_Share_Percent)'], 'intent': 'calculate_covariance_between_price_variation_and_market_share', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [25], 'units': {'age': 'years (for company establishment)', 'price': 'USD (Price_Usd)', 'market_share': 'percentage (Market_Share_Percent)', 'covariance': 'unitless (covariance between normalized price variation and percentage market share)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.manufacturers': [{'column': 'Manufacturer_Id'}, {'column': 'Founded_Year'}, {'column': 'Market_Share_Percent'}], 'mouse.mice': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['79.99', '69.99', '99.99', '89.99', '129.99']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a quantum computer polls the mouse position at intervals of Planck time (5.39×10^{-44} seconds), calculate the universe-scale data volume generated per second by the Dark Core RGB Pro at its maximum 18000 DPI (1 YB = 10^{24} GB).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1 / 5.39e-44) * (18000 / 25.4) * 8 / POWER(10, 24) AS Data_Volume_YB FROM mice WHERE Model = 'Dark Core RGB Pro';",
        "db_id": "mouse"
    },
    {
        "id": 389,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['wired mouse models', 'weight >100 grams', 'cable length <1.5 meters'], 'relations': ['mouse_to_usage (Mouse_Id → usage_records)', 'design_violation (weight > 100g ∧ cable < 1.5m)'], 'intent': 'identify_design_violation_mice_and_calculate_click_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 1.5], 'units': {'weight': 'grams', 'cable_length': 'meters', 'click_efficiency': 'clicks/minute (calculated as clicks ÷ usage_duration_minutes)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Cable_Length_Meters', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '线缆长度（米）', 'examples': ['2.1', '1.8', '0.0', '2.0']}, {'column': 'Is_Wireless', 'type': 'TINYINT', 'primary_key': False, 'comment': '是否无线', 'examples': ['0', '1']}], 'mouse.usage_records': [{'column': 'Clicks'}, {'column': 'Usage_Duration_Minutes'}]}}\nA physical knowledge question is as follows:\nCalculate the energy efficiency (effective movement energy / total energy consumption) of the Logitech G502 HERO mouse when used by user 101, formula: efficiency = (distance × weight × 9.8) / energy consumption\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (u.Distance_Moved_Meters * m.Weight_Grams * 9.8) / u.Energy_Consumed_Joules AS Efficiency FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Model = 'G502 HERO' AND u.User_ID = 101;",
        "db_id": "mouse"
    },
    {
        "id": 390,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Dark Core RGB Pro', 'Planck time interval 5.39×10^-44 s', 'maximum DPI 18000', '1 YB = 10^24 GB'], 'relations': ['mouse_model_to_dpi (Dark Core RGB Pro → 18000 DPI)', 'time_interval_to_polling_rate (5.39×10^-44 s → 1.85×10^43 Hz)'], 'intent': 'calculate_universe_scale_data_volume_per_second', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [18000, 5.39e-44, 1e+24], 'units': {'dpi': 'dots per inch', 'time': 'seconds', 'polling_rate': 'Hz (1/s)', 'data_volume': 'Yottabytes (YB)', 'conversion': '1 YB = 10^24 GB = 10^33 bytes'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}, {'column': 'Polling_Rate_Hz', 'type': 'INTEGER', 'primary_key': False, 'comment': '轮询率（Hz）', 'examples': ['1000', '2000', '500', '4000', '1001']}]}}\nA mathematical logic question is as follows:\nFind manufacturers that have been in operation for more than 20 years (current year is 2023) with a profit per employee (profit/number of employees) exceeding $200,000, and calculate the average DPI-to-price ratio of their mice.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ma.Manufacturer_Name, AVG(m.Dpi/m.Price_Usd) AS Dpi_Per_Usd FROM manufacturers ma JOIN mice m ON ma.Manufacturer_Id = m.Manufacturer_Id WHERE 2023 - ma.Founded_year > 20 AND (ma.Profit_Usd/ma.Employees) > 200000 GROUP BY ma.Manufacturer_Name;",
        "db_id": "mouse"
    },
    {
        "id": 391,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Logitech G502 HERO mouse', 'user 101'], 'relations': ['mouse_to_weight (G502 HERO → Weight_Grams)', \"usage_to_distance_energy (user 101's usage records → Distance_Moved_Meters, Energy_Consumed_Joules)\", 'efficiency_calculation (distance × weight × 9.8 / energy)'], 'intent': 'calculate_energy_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [9.8], 'units': {'distance': 'meters', 'weight': 'grams (converted to kg via /1000)', 'gravity': 'm/s² (9.8)', 'energy': 'joules', 'efficiency': 'unitless (ratio)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}], 'mouse.usage_records': [{'column': 'Mouse_ID'}, {'column': 'User_ID'}, {'column': 'Distance_Moved_Meters'}, {'column': 'Energy_Consumed_Joules'}]}}\nA common sense reasoning question is as follows:\nIdentify wireless mouse models with excessively high daily click intensity (daily > 8,000 clicks) and weight > 120g, marking the risk level according to WHO occupational health standards.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, SUM(u.Clicks)/COUNT(DISTINCT DATE(u.Start_Time)) AS Daily_Clicks, CASE WHEN SUM(u.Clicks)/COUNT(DISTINCT DATE(u.Start_Time)) > 8000 AND m.Weight_Grams > 120 THEN '高危' ELSE '正常' END AS Risk_Level FROM mice m JOIN usage_records u ON m.Mouse_Id = u.Mouse_ID WHERE m.Is_Wireless = 1 GROUP BY m.Model, m.Weight_Grams;",
        "db_id": "mouse"
    },
    {
        "id": 392,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'profit_per_employee', 'DPI-to-price_ratio', 'mice'], 'relations': ['manufacturer_to_mice (Manufacturer_Id → Manufacturer_Id)', 'operation_duration (2023 - Founded_year > 20)', 'profit_per_employee (Profit_Usd/Employees > $200,000)', 'dpi_to_price_ratio (Dpi/Price_Usd)'], 'intent': 'filter_manufacturers_by_operation_duration_and_profit_per_employee_then_calculate_average_dpi_price_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2023, 20, 200000], 'units': {'operation_duration': 'years (2023 - Founded_year)', 'profit_per_employee': 'USD per employee (Profit_Usd/Employees)', 'dpi_to_price_ratio': 'DPI per USD (Dpi/Price_Usd)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'manufacturers', 'pk_column': 'Manufacturer_Id'}, {'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.manufacturers': [{'column': 'Founded_year'}, {'column': 'Profit_Usd'}, {'column': 'Employees'}, {'column': 'Manufacturer_Id'}], 'mouse.mice': [{'column': 'Manufacturer_Id', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID（外键）', 'examples': ['1', '2', '3', '4', '6']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}, {'column': 'Price_Usd', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['79.99', '69.99', '99.99', '89.99', '129.99']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the Dark Core RGB Pro is operating at 100% load (tracking speed = maximum sensor speed), calculate its theoretical maximum data generation rate (coordinates per second = IPS × DPI).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT sd.Tracking_Speed_Ips * sd.Max_Dpi AS Data_Points_Per_Second FROM mice m JOIN sensor_data sd ON m.Mouse_Id = sd.Mouse_Id WHERE m.Model = 'Dark Core RGB Pro';",
        "db_id": "mouse"
    },
    {
        "id": 393,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"wireless mouse models\", \"daily click intensity > 8000 clicks\", \"weight > 120g\", \"WHO occupational health standards\"],\n  \"relations\": [\"mouse_to_usage_records (Mouse_Id → Record_ID)\", \"mouse_to_specifications (Mouse_Id → Weight_Grams, Is_Wireless)\", \"risk_level_to_criteria (click_intensity + weight → WHO standards)\"],\n  \"intent\": \"identify_risky_wireless_mouse_models_and_assign_risk_level\",\n  \"reasoning_type\": \"mathematical logic reasoning + common sense understanding reasoning\",\n  \"numerical_values\": [8000, 120],\n  \"units\": {\n    \"click_intensity\": \"clicks/day (threshold >8000)\",\n    \"weight\": \"grams (threshold >120g)\",\n    \"risk_level\": \"WHO categorical scale (e.g., low/medium/high)\"\n  },\n  \"required_tables\": [\"mice\", \"usage_records\"],\n  \"required_fields\": [\n    \"mice.Model\",\n    \"mice.Is_Wireless\",\n    \"mice.Weight_Grams\",\n    \"usage_records.Mouse_ID\",\n    \"usage_records.Start_Time\",\n    \"usage_records.Clicks\"\n  ]\n}\n```\nA physical knowledge question is as follows:\nBased on the Polling_Rate_Hz and Acceleration_G values from the sensor_data table, calculate the amplitude of inertial force fluctuations for the Logitech G502 HERO mouse while being used by user 101 (incorporating Weight_Grams and Tracking_Speed_Ips).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (m.Weight_Grams/1000.0) * POWER(2 * PI() * sd.Polling_Rate_Hz, 2) * (sd.Acceleration_G * 9.8 / SQRT(2)) AS Inertial_Force FROM sensor_data sd JOIN mice m ON sd.Mouse_Id = m.Mouse_Id JOIN usage_records ur ON m.Mouse_Id = ur.Mouse_Id WHERE m.Model = 'G502 HERO' AND ur.User_ID = 101 AND m.Manufacturer_Id = (SELECT Manufacturer_Id FROM manufacturers WHERE Manufacturer_Name = 'Logitech');",
        "db_id": "mouse"
    },
    {
        "id": 394,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Dark Core RGB Pro', 'Tracking Speed (IPS)', 'DPI'], 'relations': ['model_to_ips (Dark Core RGB Pro → Tracking_Speed_Ips)', 'model_to_dpi (Dark Core RGB Pro → Dpi)'], 'intent': 'calculate_theoretical_max_data_rate', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['<extracted Tracking_Speed_Ips value>', '<extracted Dpi value>'], 'units': {'tracking_speed': 'IPS (inches per second)', 'dpi': 'DPI (dots per inch)', 'data_rate': 'coordinates per second (IPS × DPI)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}]}}\nA mathematical logic question is as follows:\nCalculate the Herfindahl-Hirschman Index (HHI = Σ(Market_Share_Percent²)) for each manufacturer, and establish a Pearson correlation coefficient matrix with the entropy value of mouse parameters (-Σ(p_i log p_i), where p_i is the proportion of each DPI model).\nyour response just have a SQL without anything.\n",
        "solution": "WITH Market_HHI AS (SELECT SUM(POWER(Market_Share_Percent, 2)) AS HHI FROM manufacturers), Manufacturer_DPI AS (SELECT Manufacturer_Id, Dpi, COUNT(*) / SUM(COUNT(*)) OVER(PARTITION BY Manufacturer_Id) AS ratio FROM mice GROUP BY Manufacturer_Id, Dpi), Entropy_Calc AS (SELECT Manufacturer_Id, -SUM(ratio * LN(ratio)) AS entropy FROM Manufacturer_DPI GROUP BY Manufacturer_Id) SELECT (AVG(mh.HHI * ec.entropy) - AVG(mh.HHI) * AVG(ec.entropy)) / (STDDEV(mh.HHI) * STDDEV(ec.entropy)) AS Pearson_Correlation FROM Market_HHI mh, Entropy_Calc ec;",
        "db_id": "mouse"
    },
    {
        "id": 395,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Logitech G502 HERO mouse', 'user 101', 'Polling_Rate_Hz', 'Acceleration_G', 'Weight_Grams', 'Tracking_Speed_Ips'], 'relations': ['mouse_to_user (usage_records.Mouse_ID → usage_records.User_ID)', 'mouse_to_weight (mice.Mouse_Id → mice.Weight_Grams)', 'mouse_to_tracking_speed (mice.Mouse_Id → mice.Tracking_Speed_Ips)', 'mouse_to_sensor_data (sensor_data.Mouse_Id → mice.Mouse_Id)'], 'intent': 'calculate_amplitude_of_inertial_force_fluctuations', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [101], 'units': {'mass': 'grams to kilograms (Weight_Grams ÷ 1000)', 'acceleration': 'G to m/s² (Acceleration_G × 9.80665)', 'frequency': 'Hz (Polling_Rate_Hz)', 'velocity': 'IPS (inches per second)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Tracking_Speed_Ips', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '追踪速度（英寸/秒）', 'examples': ['400.0', '450.0', '200.0', '350.0', '420.0']}], 'mouse.sensor_data': [{'column': 'Polling_Rate_Hz'}, {'column': 'Acceleration_G'}], 'mouse.usage_records': [{'column': 'User_ID'}]}}\nA common sense reasoning question is as follows:\nIdentify mouse models that violate the ISO 9241-411 ergonomic standards (weight >100g and buttons <6) and calculate their user operation efficiency degradation rate (Δ efficiency = MAX(click efficiency) - current click efficiency).\nyour response just have a SQL without anything.\n",
        "solution": "WITH Efficiency_Data AS (SELECT m.Model, ur.Clicks/ur.Usage_Duration_Minutes AS current_efficiency, MAX(ur.Clicks/ur.Usage_Duration_Minutes) OVER() AS max_efficiency FROM mice m JOIN usage_records ur ON m.Mouse_Id = ur.Mouse_Id WHERE m.Weight_Grams > 100 AND m.Buttons < 6) SELECT Model, ROUND(max_efficiency - current_efficiency, 4) AS efficiency_decay FROM Efficiency_Data;",
        "db_id": "mouse"
    },
    {
        "id": 396,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"Herfindahl-Hirschman Index (HHI)\", \"Market_Share_Percent\", \"entropy of mouse parameters\", \"DPI model proportions\"],\n  \"relations\": [\"manufacturer_to_market_share (manufacturers → Market_Share_Percent)\", \"mouse_to_dpi (mice → DPI)\", \"proportion_to_entropy (p_i → entropy)\"],\n  \"intent\": \"calculate_HHI_and_entropy_and_correlate\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [2], // Squaring in HHI and logarithmic operations in entropy\n  \"units\": {\n    \"market_share\": \"% (percent)\",\n    \"hhi\": \"unitless (percentage squared)\",\n    \"entropy\": \"unitless (logarithmic scale)\"\n  },\n  \"required_tables\": [\"manufacturers\", \"mice\"],\n  \"required_fields\": [\n    \"manufacturers.Manufacturer_Id\",\n    \"manufacturers.Market_Share_Percent\",\n    \"mice.Manufacturer_Id\",\n    \"mice.Dpi\"\n  ]\n}\nA hypothetical reasoning question is as follows:\nAssuming the use of a Razer DeathAdder V2 near the event horizon of a Kerr black hole (angular velocity Ω=ac/(2r_+), r_+=M+√(M^2-a^2)), calculate the DPI measurement error caused by relativistic Doppler effects (with black hole parameter a=0.9M).\nyour response just have a SQL without anything.\n",
        "solution": "WITH constants AS ( SELECT 6.67430e-11 AS G, 1.989e30 AS M, 299792458 AS c, 0.9 AS factor ),sqrt_part AS ( SELECT SQRT( POWER( M, 2 ) - POWER( factor * M, 2 )) AS sqrt_value FROM constants ),numerator AS (SELECT 1 - SQRT(1 - ( 2 * G * M ) / (POWER( c, 2 ) * ( M + sqrt_value )))AS num FROM constants,sqrt_part ),denominator AS (SELECT 1 + (factor * c * POWER( M + sqrt_value, 3 )) / POWER( c, 3 ) AS denom FROM constants,sqrt_part ) SELECT m.Dpi * ( num / denom ) AS DPI_Error FROM mice m,numerator,denominator WHERE m.Model = 'DeathAdder V2'  AND m.Manufacturer_Id = ( SELECT Manufacturer_Id FROM manufacturers WHERE Manufacturer_Name = 'Razer' );",
        "db_id": "mouse"
    },
    {
        "id": 397,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['mouse models', 'ISO 9241-411 ergonomic standards', 'weight >100g', 'buttons <6', 'user operation efficiency degradation rate'], 'relations': ['mouse_to_manufacturer (mice.Manufacturer_Id → manufacturers.Manufacturer_Id)', 'mouse_to_usage (mice.Mouse_Id → usage_records.Mouse_ID)', 'violation_criteria (weight >100g ∧ buttons <6)', 'efficiency_degradation (Δ efficiency = MAX(click efficiency) - current click efficiency)'], 'intent': 'identify_non_compliant_mice_and_calculate_efficiency_degradation', 'reasoning_type': 'combined(mathematical_logic_reasoning, physical_knowledge_reasoning)', 'numerical_values': [100, 6], 'units': {'weight': 'grams (direct from Weight_Grams column)', 'buttons': 'count (unitless)', 'click_efficiency': 'clicks/minute (derived from usage_records.Clicks / usage_records.Usage_Duration_Minutes)', 'efficiency_degradation': 'clicks/minute (unit of Δ efficiency)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}, {'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Weight_Grams', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（克）', 'examples': ['121.0', '82.0', '133.0', '101.0', '105.0']}, {'column': 'Buttons', 'type': 'INTEGER', 'primary_key': False, 'comment': '按键数量', 'examples': ['11', '8', '6', '12', '10']}], 'mouse.usage_records': [{'column': 'Mouse_ID'}, {'column': 'Clicks'}, {'column': 'Usage_Duration_Minutes'}]}}\nA physical knowledge question is as follows:\nBased on the Lift_Off_Distance_Mm from the sensor_data table and Clicks from the usage_records table, calculate the mechanical energy loss caused by click actions (0.2mJ energy consumed per click with a lift height of 3mm) for the Razer DeathAdder V2 mouse when used by user 102.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (ur.Clicks * 0.0002) + (m.Weight_Grams/1000 * 9.8 * 0.003 * ur.Clicks) AS Total_Energy_J FROM usage_records ur JOIN mice m ON ur.Mouse_Id = m.Mouse_Id JOIN sensor_data sd ON m.Mouse_Id = sd.Mouse_Id WHERE m.Model = 'DeathAdder V2' AND ur.User_ID = 102 AND m.Manufacturer_Id = (SELECT Manufacturer_Id FROM manufacturers WHERE Manufacturer_Name = 'Razer');",
        "db_id": "mouse"
    },
    {
        "id": 398,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Razer DeathAdder V2', 'Kerr black hole (a=0.9M)', 'angular velocity Ω', 'event horizon radius r_+'], 'relations': ['mouse_to_sensor (Razer DeathAdder V2 → sensor specifications)', 'black_hole_geometry (Ω=ac/(2r_+), r_+=M+√(M²-a²))', 'relativistic_effect (Doppler-induced DPI error)'], 'intent': 'calculate_dpi_measurement_error_under_relativistic_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.9], 'units': {'angular_velocity': 'rad/s (derived from Ω=ac/(2r_+))', 'radius': 'meters (r_+ = M + √(M² - a²))', 'a_parameter': 'dimensionless (a=0.9M)', 'dpi_error': 'unitless ratio (Doppler shift factor)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Dpi', 'type': 'INTEGER', 'primary_key': False, 'comment': 'DPI（每英寸点数）', 'examples': ['16000', '20000', '18000', '8000', '12000']}], 'mouse.sensor_data': [{'column': 'Sensor_Type'}, {'column': 'Max_Dpi'}, {'column': 'Tracking_Speed_Ips'}]}}\nA mathematical logic question is as follows:\nConstruct a Markov transition matrix for manufacturers' market share (based on share changes over the past three years) and calculate both the steady-state distribution and the Kullback-Leibler divergence of the mouse parameter entropy (-Σp_i log p_i).\nyour response just have a SQL without anything.\n",
        "solution": "WITH YearSeries AS (SELECT 0 AS year UNION SELECT 1 UNION SELECT 2), MarketData AS ( SELECT m.Manufacturer_Id, YEAR(CURDATE()) - ys.year AS Year, COALESCE(m.Market_Share_Percent,0) AS Share FROM manufacturers m CROSS JOIN YearSeries ys WHERE m.Founded_year <= YEAR(CURDATE()) - ys.year ), TransProb AS ( SELECT curr.Manufacturer_Id, (curr.Share - prev.Share)/NULLIF(prev.Share,0) AS Prob FROM MarketData curr JOIN MarketData prev ON curr.Manufacturer_Id = prev.Manufacturer_Id AND curr.Year = prev.Year + 1 ), Entropy AS ( SELECT Manufacturer_Id, -SUM((cnt/total)*LN(NULLIF(cnt/total,0))) AS entropy FROM ( SELECT Manufacturer_Id, Dpi, COUNT(*) AS cnt, SUM(COUNT(*)) OVER (PARTITION BY Manufacturer_Id) AS total FROM mice GROUP BY Manufacturer_Id, Dpi ) t GROUP BY Manufacturer_Id ) SELECT t.Manufacturer_Id, SUM(t.Prob * LN(NULLIF(t.Prob/e.entropy,0))) AS KL_Divergence FROM TransProb t JOIN Entropy e ON t.Manufacturer_Id = e.Manufacturer_Id GROUP BY t.Manufacturer_Id;",
        "db_id": "mouse"
    },
    {
        "id": 399,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Razer DeathAdder V2', 'user 102', 'Lift_Off_Distance_Mm', 'Clicks', '0.2mJ', '3mm'], 'relations': ['model_to_mouse_id (Razer DeathAdder V2 → Mouse_Id)', 'mouse_id_to_sensor_data (Mouse_Id → sensor_data)', 'mouse_id_to_usage_records (Mouse_Id → usage_records)', 'user_filter (User_ID = 102)', 'click_energy (0.2mJ per click)', 'lift_distance_reference (3mm)'], 'intent': 'calculate_mechanical_energy_loss_from_clicks', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.2, 3], 'units': {'energy': 'mJ (millijoules)', 'distance': 'mm (millimeters)', 'conversion': '1 mJ = 0.001 J (joules)'}, 'foreign_keys': [{'fk_table': 'mice', 'fk_column': 'Manufacturer_Id', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_Id'}, {'fk_table': 'sensor_data', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}, {'fk_table': 'usage_records', 'fk_column': 'Mouse_Id', 'ref_table': 'mice', 'ref_column': 'Mouse_Id'}], 'primary_keys': [{'pk_table': 'mice', 'pk_column': 'Mouse_Id'}, {'pk_table': 'sensor_data', 'pk_column': 'Sensor_Id'}, {'pk_table': 'usage_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'mouse.mice': [{'column': 'Model', 'type': 'VARCHAR(255) COLLATE \"utf8mb4_0900_ai_ci\"', 'primary_key': False, 'comment': '鼠标型号', 'examples': ['G502 HERO', 'DeathAdder V2', 'Dark Core RGB Pro', 'Wireless Eco', 'Rival 800X']}, {'column': 'Mouse_Id', 'type': 'INTEGER', 'primary_key': True, 'comment': '鼠标唯一标识', 'examples': ['1', '2', '4', '6', '7']}], 'mouse.sensor_data': [{'column': 'Lift_Off_Distance_Mm'}], 'mouse.usage_records': [{'column': 'User_ID'}, {'column': 'Clicks'}]}}\nA common sense reasoning question is as follows:\nIdentify mouse models that violate the EN 60950 safety standard (weight >150g when cable length <1m) and calculate their user fatigue factor (scrolls per minute × weight²/cable length).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Model, (ur.Scrolls/ur.Usage_Duration_Minutes) * POW(m.Weight_Grams/1000,2)/NULLIF(m.Cable_Length_Meters,0) AS Fatigue_Factor FROM mice m JOIN usage_records ur ON m.Mouse_Id = ur.Mouse_Id WHERE m.Cable_Length_Meters < 1 AND m.Weight_Grams > 150;",
        "db_id": "mouse"
    }
]