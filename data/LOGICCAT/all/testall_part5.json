[
    {
        "id": 0,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['purchase date January 1, 2020', 'warranty period 24 months'], 'relations': ['addition_of_warranty_period_to_purchase_date (January 1, 2020 + 24 months)'], 'intent': 'determine_warranty_expiration_date', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [24], 'units': {'warranty_period': 'months', 'date_format': 'Gregorian calendar (YYYY-MM-DD)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.pumps': [{'column': 'Purchase_Date', 'type': 'DATE', 'primary_key': False, 'comment': '购买日期', 'examples': ['2023-01-15']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['12', '24', '18', '6', '36']}]}}\nA common sense reasoning question is as follows:\nIf a water pump has a warranty period of 24 months and was purchased on January 1, 2020, when does its warranty expire?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Flow_Rate * Head * 9.81 * (Efficiency / 100)) / 3600 AS Output_Power FROM pump_specifications WHERE Flow_Rate = 1000 AND Head = 1000 AND Efficiency = 200;",
        "db_id": "waterPump"
    },
    {
        "id": 1,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 10,000 m³/h', 'head 1,000 meters', 'power 1,000 kW', 'efficiency'], 'relations': ['pump_to_specifications (water pump → pump_specifications)', 'efficiency_formula (flow rate × head ÷ power)'], 'intent': 'calculate_pump_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 1000, 1000], 'units': {'flow_rate': 'cubic meters per hour (m³/h)', 'head': 'meters (m)', 'power': 'kilowatts (kW)', 'efficiency': 'percentage (%)', 'density': '1000 kg/m³ (assumed for water)', 'gravity': '9.81 m/s² (standard gravity)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a water pump has a flow rate of 10,000 cubic meters per hour, a head of 1,000 meters, and a power of 1,000 kilowatts, what is its efficiency? Assuming the efficiency of this pump exceeds 100%, is this possible?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Efficiency FROM pump_specifications WHERE Flow_Rate = 100 AND Head = 50 AND Power = 10;",
        "db_id": "waterPump"
    },
    {
        "id": 2,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pump', 'flow rate 100 cubic meters per hour', 'head 50 meters', 'power 10 kilowatts'], 'relations': ['flow_rate_to_efficiency (100 m³/h, 50 m, 10 kW → efficiency calculation)'], 'intent': 'calculate_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 50, 10], 'units': {'flow_rate': 'm³/h (cubic meters per hour)', 'head': 'm (meters)', 'power': 'kW (kilowatts)', 'conversion': 'gravity constant 9.81 m/s²; efficiency formula: η = (Q * H * g) / P * 100'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA physical knowledge question is as follows:\nIf a pump has a flow rate of 100 cubic meters per hour, a head of 50 meters, and a power of 10 kilowatts, what is its efficiency?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH) AS Warranty_End_Date FROM pumps WHERE Purchase_date = '2020-01-01' AND Warranty_Period = 24;",
        "db_id": "waterPump"
    },
    {
        "id": 3,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 1,000,000 m³/h', 'head 10,000 m', 'power 1,000,000 kW', 'gravitational acceleration 9.81 m/s²'], 'relations': ['pump_to_specs (water pump → pump_specifications)', 'efficiency_formula (η = (ρgQH / P) × 100%)'], 'intent': 'calculate_pump_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 10000, 1000000, 9.81], 'units': {'flow_rate': 'm³/h → m³/s (1000000/3600 ≈ 277.78 m³/s)', 'head': 'm', 'power': 'kW → W (1000000 × 1000 = 1,000,000,000 W)', 'gravitational_acceleration': 'm/s²', 'efficiency_formula': 'η = (ρgQH / P) × 100% where ρ_water = 1000 kg/m³'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a water pump has a flow rate of 1,000,000 cubic meters per hour, a head of 10,000 meters, and a power of 1,000,000 kilowatts, what is its efficiency? Assume the gravitational acceleration is 9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Efficiency FROM pump_specifications WHERE Flow_Rate = 10000 AND Head = 1000 AND Power = 1000;",
        "db_id": "waterPump"
    },
    {
        "id": 4,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'annual maintenance cost', 'usage frequency', '1 year time frame'], 'relations': ['pump_to_maintenance_records (Pump_ID → maintenance_records)', 'pump_to_usage_records (Pump_ID → usage_records)', 'cost_accumulation (ΣMaintenance_Cost over 1 year)', 'correlation_analysis (Cost ↔ Usage_Frequency)'], 'intent': 'calculate_total_maintenance_cost & analyze_relationship_with_usage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1], 'units': {'time': 'year (365 days)', 'cost': 'currency (USD/implied by Cost column)', 'usage_frequency': 'hours/year (from Usage_Hours)'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.maintenance_records': [{'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['11', '34', '35', '37', '39']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护成本', 'examples': ['500.0', '200.0', '800.0', '600.0', '750.0']}, {'column': 'Maintenance_Date', 'type': 'DATE', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-12-15']}], 'waterPump.usage_records': [{'column': 'pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total maintenance cost of a water pump within a year and analyze its relationship with usage frequency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Efficiency FROM pump_specifications WHERE Flow_Rate = 100 AND Head = 50 AND Power = 10;",
        "db_id": "waterPump"
    },
    {
        "id": 5,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pump 11', 'maintenance_records', 'usage_records'], 'relations': ['pump_to_maintenance (Pump_ID=11 → maintenance_records)', 'pump_to_usage (Pump_ID=11 → usage_records)'], 'intent': 'determine_part_replacement_necessity', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [11], 'units': {'maintenance_frequency': 'count (of maintenance entries)', 'usage_frequency': 'hours (from usage_records)', 'thresholds': 'manufacturer_recommendations (implied)'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pumps': [{'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，水泵的唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Status', 'type': 'ENUM', 'primary_key': False, 'comment': '水泵状态', 'examples': ['active', 'inactive', 'under_maintenance']}], 'waterPump.maintenance_records': [{'column': 'Maintenance_Type', 'type': 'VARCHAR(100) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '维护类型（如：清洁、更换零件等）', 'examples': ['Emergency', 'Routine', '紧急维修', '紧急检修', '预防性维护']}, {'column': 'Description', 'type': 'TEXT COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '维护描述', 'examples': ['High current issue', 'Regular check', '处理高电流问题', '异常电流处理', '高电流问题']}, {'column': 'Maintenance_Date', 'type': 'DATE', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-12-15']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA common sense reasoning question is as follows:\nDetermine whether pump 11 requires part replacement based on its maintenance records and usage frequency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Flow_Rate * Head * 9.81) / (Power * 3600) * 100 AS Efficiency FROM pump_specifications WHERE Flow_Rate = 1000000 AND Head = 10000 AND Power = 1000000;",
        "db_id": "waterPump"
    },
    {
        "id": 6,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'maintenance cost', 'system impact'], 'relations': ['pump_to_maintenance_records (Pump_ID → maintenance_records)', 'pump_to_specifications (Pump_ID → pump_specifications)', 'maintenance_cost_spike (Cost = 100× normal value)', 'usage_pattern_impact (Usage_Hours → maintenance needs)'], 'intent': 'analyze_abnormal_maintenance_cost_and_system_impact', 'reasoning_type': 'physical knowledge reasoning + mathematical logic reasoning', 'numerical_values': [100], 'units': {'cost': 'currency unit (implied by Cost column)', 'multiplication_factor': '100× (abnormal increase)', 'time': 'hours (from Usage_Hours field)'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}, {'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}, {'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.maintenance_records': [{'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护成本', 'examples': ['500.0', '200.0', '800.0', '600.0', '750.0']}, {'column': 'Maintenance_Type', 'type': 'VARCHAR(100) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '维护类型（如：清洁、更换零件等）', 'examples': ['Emergency', 'Routine', '紧急维修', '紧急检修', '预防性维护']}, {'column': 'Description', 'type': 'TEXT COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '维护描述', 'examples': ['High current issue', 'Regular check', '处理高电流问题', '异常电流处理', '高电流问题']}], 'waterPump.pumps': [{'column': 'Model_Number', 'type': 'VARCHAR(50) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '水泵型号', 'examples': ['P-1001', 'P-1002', 'P-1003', 'P-1004', 'P-1005']}, {'column': 'Location', 'type': 'VARCHAR(200) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '安装位置', 'examples': ['工厂A', '工厂B', '工厂C', '工厂D', '工厂E']}], 'waterPump.pump_specifications': [{'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}, {'column': 'Start_Time', 'type': 'DATETIME', 'primary_key': False, 'comment': '使用开始时间', 'examples': ['2023-01-01 08:00:00']}, {'column': 'End_Time', 'type': 'DATETIME', 'primary_key': False, 'comment': '使用结束时间', 'examples': ['2023-01-01 12:00:00']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance cost of a certain water pump suddenly increases to 100 times its normal value, analyze the possible reasons and their impact on the system.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p.Pump_ID, p.Model_Number, SUM(mr.Cost) AS Total_Maintenance_Cost, SUM(ur.Usage_Hours) AS Total_Usage_Hours FROM pumps p JOIN maintenance_records mr ON p.Pump_ID = mr.Pump_ID JOIN usage_records ur ON p.Pump_ID = ur.Pump_ID WHERE mr.Maintenance_Date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND ur.Start_Time >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY p.Pump_ID, p.Model_Number ORDER BY Total_Maintenance_Cost DESC, Total_Usage_Hours DESC;",
        "db_id": "waterPump"
    },
    {
        "id": 7,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pump 11', 'Power', 'Usage_Hours'], 'relations': ['pump_to_specifications (Pump_ID 11 → pump_specifications)', 'pump_to_usage_records (Pump_ID 11 → usage_records)'], 'intent': 'calculate_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [11], 'units': {'Power': 'W (Watts) or kW (Kilowatts)', 'Usage_Hours': 'hours', 'Energy': 'kWh (Kilowatt-hour)', 'conversion': 'If Power is in Watts: (Power * Usage_Hours) / 1000'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of pump 11 over one year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p.Pump_ID, p.Model_Number, p.Status, COUNT(mr.record_ID) AS Maintenance_Count, SUM(u.Usage_Hours) AS Total_Usage_Hours FROM pumps p LEFT JOIN maintenance_records mr ON p.Pump_ID = mr.pump_ID LEFT JOIN usage_records u ON p.Pump_ID = u.pump_ID WHERE p.Pump_ID = '11' GROUP BY p.Pump_ID, p.Model_Number, p.Status HAVING Maintenance_Count > 5 OR Total_Usage_Hours > 1000;",
        "db_id": "waterPump"
    },
    {
        "id": 8,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'usage time threshold (1000 hours)', 'warranty period expiration'], 'relations': ['pump_to_usage_records (Pump_ID)', 'pump_to_warranty (Purchase_Date + Warranty_Period)'], 'intent': 'determine_maintenance_requirement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'usage_time': 'hours', 'warranty_period': 'months (assumed unit based on typical database storage)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pumps', 'pk_column': 'Pump_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pumps': [{'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，水泵的唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Purchase_Date', 'type': 'DATE', 'primary_key': False, 'comment': '购买日期', 'examples': ['2023-01-15']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['12', '24', '18', '6', '36']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA common sense reasoning question is as follows:\nDetermine whether a certain water pump requires maintenance. The maintenance conditions are assumed to be: the pump's usage time exceeds 1000 hours, or the pump's warranty period has expired.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p.Pump_ID, p.Model_Number, p.Manufacturer, p.Location, p.Status, ps.Flow_Rate, ps.Head, ps.Power, ps.Voltage, ps.Current, ps.Efficiency, mr.Maintenance_Date, mr.Maintenance_Type, mr.Description, mr.Technician, mr.Cost, ur.Start_Time, ur.End_Time, ur.Usage_Hours, ur.Notes FROM pumps p JOIN pump_specifications ps ON p.Pump_ID = ps.Pump_ID JOIN maintenance_records mr ON p.Pump_ID = mr.Pump_ID JOIN usage_records ur ON p.Pump_ID = ur.Pump_ID WHERE mr.Cost > (SELECT AVG(Cost) * 100 FROM maintenance_records WHERE Pump_ID = p.Pump_ID) ORDER BY mr.Maintenance_Date DESC;",
        "db_id": "waterPump"
    },
    {
        "id": 9,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 10,000 m³/h', 'head 1,000 m'], 'relations': ['flow_rate_to_power', 'head_to_power'], 'intent': 'calculate_power_required', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 1000], 'units': {'flow_rate': 'cubic meters per hour (m³/h)', 'head': 'meters (m)', 'power': 'kilowatts (kW) (implied by physical formula)', 'conversion': 'flow rate conversion from m³/h to m³/s (10,000/3600 ≈ 2.7778 m³/s)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a water pump has a flow rate of 10,000 cubic meters per hour and a head of 1,000 meters, calculate the power required.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ps.Power * u.Usage_Hours) AS Total_Energy_Consumption FROM pumps p JOIN pump_specifications ps ON p.Pump_ID = ps.Pump_ID JOIN usage_records u ON p.Pump_ID = u.pump_ID WHERE p.Pump_ID = '11' AND YEAR(u.Start_Time) = YEAR(CURDATE());",
        "db_id": "waterPump"
    },
    {
        "id": 10,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"pump's flow rate 10,000 m³/h\", \"pump's head 1,000 m\"], 'relations': ['flow_to_head (Q=10,000 m³/h → H=1,000 m)', 'spec_to_power (Q+H → hydraulic power calculation)'], 'intent': 'calculate_required_power_under_new_operating_conditions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 1000], 'units': {'flow_rate': 'm³/h (cubic meters per hour)', 'head': 'm (meters)', 'power': 'kW (kilowatts, calculated via hydraulic power formula)', 'conversion': 'Q (m³/s) = 10,000/3600; Power = (Q * H * 9.81 * 1000) / (Efficiency * 1000)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the pump's flow rate increases to 10,000 cubic meters per hour and the head increases to 1,000 meters, calculate the required power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p.Pump_ID, p.Model_Number, p.Status, p.Purchase_date, p.Warranty_Period, SUM(u.Usage_Hours) AS Total_Usage_Hours, CASE WHEN SUM(u.Usage_Hours) > 1000 OR DATE_ADD(p.Purchase_date, INTERVAL p.Warranty_Period MONTH) < CURDATE() THEN '需要维护' ELSE '无需维护' END AS Maintenance_Status FROM pumps p LEFT JOIN usage_records u ON p.Pump_ID = u.pump_ID GROUP BY p.Pump_ID, p.Model_Number, p.Status, p.Purchase_date, p.Warranty_Period;",
        "db_id": "waterPump"
    },
    {
        "id": 11,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'specific time period'], 'relations': ['pump_to_specifications (Pump_ID → pump_specifications)', 'pump_to_usage (Pump_ID → usage_records)'], 'intent': 'calculate_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'Watts (from pump_specifications.Power)', 'time': 'hours (from usage_records.Usage_Hours)', 'conversion': '1 kWh = 1000 Watt-hours (W·h)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['1', '2', '3', '4', '5']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}, {'column': 'pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy consumption of the water pump during a specific time period (unit: kilowatt-hour).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Flow_Rate * Head * 9.81) / (Efficiency / 100) AS Required_Power FROM pump_specifications WHERE Flow_Rate = 10000 AND Head = 1000;",
        "db_id": "waterPump"
    },
    {
        "id": 12,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'maintenance cost', 'one year'], 'relations': ['pump_to_maintenance_records (Pump_ID)', 'time_period_to_costs'], 'intent': 'calculate_average_monthly_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [12], 'units': {'cost': 'currency (implied by maintenance_records.Cost)', 'time': 'months', 'calculation': 'average = total_annual_cost / 12'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}], 'tableinfo': {'waterPump.maintenance_records': [{'column': 'Maintenance_Date', 'type': 'DATE', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-12-15']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护成本', 'examples': ['500.0', '200.0', '800.0', '600.0', '750.0']}]}}\nA mathematical logic question is as follows:\nCalculate the average monthly maintenance cost of the water pump over one year.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (10000 * 1000 * 9.81) / (3600 * Efficiency) AS Required_Power FROM pump_specifications WHERE Flow_Rate = 10000 AND Head = 1000;",
        "db_id": "waterPump"
    },
    {
        "id": 13,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"pump's flow rate increases to 10,000 cubic meters per hour\"], 'relations': ['flow_rate_to_power (Flow_Rate → Power)'], 'intent': 'calculate_power_demand', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000], 'units': {'flow_rate': 'cubic meters per hour (m³/h)', 'power': 'kW (implied by database schema)', 'conversion': 'power ∝ flow_rate (assuming constant head and efficiency)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the pump's flow rate increases to 10,000 cubic meters per hour, calculate its new power demand.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ps.Power * u.Usage_Hours) AS Total_Energy_Consumption_kWh FROM pumps p JOIN pump_specifications ps ON p.Pump_ID = ps.Pump_ID JOIN usage_records u ON p.Pump_ID = u.pump_ID WHERE u.Start_Time >= '2023-01-01 00:00:00' AND u.End_Time <= '2023-12-31 23:59:59';",
        "db_id": "waterPump"
    },
    {
        "id": 14,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pump', 'flow rate 100 cubic meters per hour', 'head 50 meters', 'power 10 kilowatts', 'efficiency'], 'relations': ['flow_rate_to_hydraulic_power (Q → ρgQH)', 'head_to_hydraulic_power (H → ρgQH)', 'power_to_efficiency (P_input → η = (P_hydraulic / P_input)*100)'], 'intent': 'calculate_pump_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100, 50, 10], 'units': {'flow_rate': 'cubic meters per hour (m³/h)', 'head': 'meters (m)', 'power': 'kilowatts (kW)', 'conversion': 'flow rate converted to m³/s (divide by 3600), gravitational acceleration (9.81 m/s²), water density (1000 kg/m³)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA physical knowledge question is as follows:\nIf a pump has a flow rate of 100 cubic meters per hour, a head of 50 meters, and a power of 10 kilowatts, what is its efficiency?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(monthly_cost) AS average_monthly_maintenance_cost FROM (SELECT SUM(Cost) / 12 AS monthly_cost FROM maintenance_records WHERE Maintenance_Date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY YEAR(Maintenance_Date), MONTH(Maintenance_Date)) AS monthly_costs;",
        "db_id": "waterPump"
    },
    {
        "id": 15,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pump', 'flow rate 200 cubic meters per hour', 'head 30 meters', 'power 15 kilowatts', '24 hours'], 'relations': ['pump_to_specifications', 'power_to_usage_time', 'energy_consumption = power × time'], 'intent': 'calculate_total_electrical_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [200, 30, 15, 24], 'units': {'flow_rate': 'cubic meters per hour (m³/h)', 'head': 'meters (m)', 'power': 'kilowatts (kW)', 'time': 'hours (h)', 'energy': 'kilowatt-hours (kWh) (calculated as kW × h)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA mathematical logic question is as follows:\nIf a pump operates continuously for 24 hours with a flow rate of 200 cubic meters per hour, a head of 30 meters, and a power of 15 kilowatts, how much total electrical energy does it consume during these 24 hours?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Pump_ID, (10000 * Head * 9.81) / (Efficiency / 100) / 3600 AS New_Power FROM pump_specifications;",
        "db_id": "waterPump"
    },
    {
        "id": 16,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'warranty period', 'operating duration', 'usage records'], 'relations': ['pump_to_warranty (water pump → warranty period)', 'usage_to_duration (usage records → operating duration)', 'duration_comparison (operating duration > warranty period)'], 'intent': 'determine_warranty_status_based_on_usage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['warranty period duration', 'total operating duration'], 'units': {'duration': 'hours (hours)', 'comparison': 'operating duration (hours) > warranty period (hours)'}, 'foreign_keys': [{'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pumps', 'pk_column': 'Pump_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pumps': [{'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，水泵的唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['12', '24', '18', '6', '36']}], 'waterPump.usage_records': [{'column': 'pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA common sense reasoning question is as follows:\nIf the usage records of a water pump show that its operating duration has exceeded the warranty period, is this water pump still under warranty?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Efficiency FROM pump_specifications WHERE Flow_Rate = 100 AND Head = 50 AND Power = 10;",
        "db_id": "waterPump"
    },
    {
        "id": 17,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 1000 m³/h', 'head 1000 m', 'power 1000 kW', 'efficiency >100%'], 'relations': ['pump_to_specs (pump → pump_specifications)', 'efficiency_formula (flow_rate × head × density / (power × 1000))'], 'intent': 'validate_physically_possible_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 1000, 1000], 'units': {'flow_rate': 'm³/h (cubic meters per hour)', 'head': 'm (meters)', 'power': 'kW (kilowatts)', 'density': '1000 kg/m³ (water density)', 'gravity': '9.81 m/s²', 'efficiency_formula': '(flow_rate/3600 × head × 1000 × 9.81 / 1000) / power'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a water pump has a flow rate of 1000 cubic meters per hour, a head of 1000 meters, and a power of 1000 kilowatts, is it possible for its efficiency to exceed 100%?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Power * 24 AS Total_Energy_Consumed FROM pump_specifications WHERE Flow_Rate = 200 AND Head = 30 AND Power = 15;",
        "db_id": "waterPump"
    },
    {
        "id": 18,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pump', 'power 15 kilowatts', 'operating time 8 hours per day', '1 year'], 'relations': ['pump_to_power (pump → 15 kW)', 'time_duration (8 hours/day for 365 days)'], 'intent': 'calculate_electrical_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [15, 8], 'units': {'power': 'kW (kilowatts)', 'time': 'hours', 'energy': 'kWh (kilowatt-hours)', 'conversion': '1 year = 365 days; total hours = 8 * 365 = 2920 hours'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA mathematical logic question is as follows:\nIf a pump operates 8 hours a day for a year with a flow rate of 200 cubic meters per hour, a head of 30 meters, and a power of 15 kilowatts, how much electrical energy does it consume in total over the year?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Pump_ID, Model_Number, Manufacturer, Purchase_date, Warranty_Period, Location, Status, CASE WHEN DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH) < NOW() THEN 'Out of Warranty' ELSE 'Under Warranty' END AS Warranty_Status FROM pumps WHERE Pump_ID IN (SELECT Pump_ID FROM usage_records WHERE Usage_Hours > (Warranty_Period * 30 * 24));",
        "db_id": "waterPump"
    },
    {
        "id": 19,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 1000 cubic meters per hour', 'head 1000 meters', 'power 1000 kilowatts', 'gravitational acceleration 10 meters per second squared'], 'relations': ['pump_to_specifications (water pump → pump_specifications)', 'parameters_to_efficiency (flow rate, head, power, gravity → efficiency calculation)'], 'intent': 'calculate_pump_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 1000, 1000, 10], 'units': {'flow_rate': 'cubic meters per hour (converted to m³/s: 1000/3600)', 'head': 'meters', 'power': 'kilowatts (converted to watts: 1000*1000)', 'gravity': 'meters per second squared', 'efficiency': 'unitless (percentage)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a water pump has a flow rate of 1000 cubic meters per hour, a head of 1000 meters, and a power of 1000 kilowatts, what is its efficiency? Assume the gravitational acceleration is 10 meters per second squared.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Efficiency FROM pump_specifications WHERE Flow_Rate = 1000 AND Head = 1000 AND Power = 1000;",
        "db_id": "waterPump"
    },
    {
        "id": 20,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'specific period of time'], 'relations': ['pump_to_specifications (pump_id → pump_specifications)', 'pump_to_usage (pump_id → usage_records)', 'time_period_to_usage (usage_records.start_time/end_time)'], 'intent': 'calculate_total_energy_delivered', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Power', 'Usage_Hours'], 'units': {'power': 'kW (kilowatts)', 'time': 'hours', 'energy': 'kWh (kilowatt-hours = power * time)', 'conversion': 'Energy = Power × Usage_Hours'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['1', '2', '3', '4', '5']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}, {'column': 'pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['1', '2', '3', '4', '5']}], 'waterPump.pumps': [{'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，水泵的唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nCalculate the total energy delivered by a water pump within a specific period of time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Power * Usage_Hours) AS Total_Energy_Consumption FROM usage_records JOIN pump_specifications ON usage_records.pump_ID = pump_specifications.Pump_ID WHERE pump_specifications.Flow_Rate = 200 AND pump_specifications.Head = 30 AND pump_specifications.Power = 15 AND usage_records.Usage_Hours = 8 * 365;",
        "db_id": "waterPump"
    },
    {
        "id": 21,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'purchase date', 'warranty period'], 'relations': ['pump_to_purchase_date (Pump_ID → Purchase_Date)', 'warranty_duration (Warranty_Period months)'], 'intent': 'validate_warranty_status', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': ['Warranty_Period (e.g., 12 months)'], 'units': {'warranty_period': 'months (implied from column definition)', 'date': 'YYYY-MM-DD (standard date format)', 'calculation': 'Warranty_Expiry_Date = Purchase_Date + Warranty_Period months'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.pumps': [{'column': 'Purchase_Date', 'type': 'DATE', 'primary_key': False, 'comment': '购买日期', 'examples': ['2023-01-15']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['12', '24', '18', '6', '36']}]}}\nA common sense reasoning question is as follows:\nDetermine whether the water pump is within the warranty period.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Flow_Rate * Head * 10 * 1000) / (Power * 3600 * 1000) * 100 AS Efficiency FROM pump_specifications WHERE Flow_Rate = 1000 AND Head = 1000 AND Power = 1000;",
        "db_id": "waterPump"
    },
    {
        "id": 22,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'power 1000 kilowatts', 'duration 100 years'], 'relations': ['power_to_energy_conversion (1000 kW × 876000 hours = 876,000,000 kWh)'], 'intent': 'calculate_electricity_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100], 'units': {'power': 'kW (kilowatts)', 'time': 'years (converted to hours: 100 × 365 × 24 = 876,000 hours)', 'energy': 'kWh (kilowatt-hours = kW × hours)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a water pump has a power of 1000 kilowatts and runs continuously for 100 years, calculate its total electricity consumption.\nyour response just have a SQL without anything.\n",
        "solution": "",
        "db_id": "waterPump"
    },
    {
        "id": 23,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', '8 hours per day', '1 year'], 'relations': ['pump_to_specifications (Pump_ID → pump_specifications)', 'power_to_energy (Power × Time)'], 'intent': 'calculate_annual_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [8, 365], 'units': {'time': 'hours/day, days/year', 'power': 'kW (implied by database schema)', 'energy': 'kWh', 'conversion': 'Total Hours = 8 hours/day × 365 days/year = 2920 hours/year'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption of the water pump within one year, assuming the pump operates 8 hours per day with constant power.\nyour response just have a SQL without anything.\n",
        "solution": "",
        "db_id": "waterPump"
    },
    {
        "id": 24,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', '5 years'], 'relations': ['pump_to_maintenance_costs (pump → maintenance_records.Cost)', 'time_period_for_prediction (5 years)'], 'intent': 'calculate_average_and_predict_total_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'cost': 'currency (e.g., USD, based on maintenance_records.Cost column)', 'time': 'years'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.maintenance_records': [{'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护成本', 'examples': ['500.0', '200.0', '800.0', '600.0', '750.0']}, {'column': 'Maintenance_Date', 'type': 'DATE', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-12-15']}], 'waterPump.pumps': [{'column': 'Purchase_Date', 'type': 'DATE', 'primary_key': False, 'comment': '购买日期', 'examples': ['2023-01-15']}, {'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，水泵的唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCalculate the average maintenance cost of this water pump and predict the total maintenance cost for the next 5 years.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000 * 24 * 365 * 100 AS Total_Energy_Consumption;",
        "db_id": "waterPump"
    },
    {
        "id": 25,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'purchase date January 1, 2021', 'warranty period 24 months', 'current date January 1, 2023'], 'relations': ['purchase_date_to_warranty_end (2021-01-01 + 24 months = 2023-01-01)', 'current_date_vs_warranty_end (2023-01-01 vs 2023-01-01)'], 'intent': 'determine_warranty_status', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [24], 'units': {'warranty_period': 'months', 'date_comparison': 'YYYY-MM-DD format'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.pumps': [{'column': 'Purchase_Date', 'type': 'DATE', 'primary_key': False, 'comment': '购买日期', 'examples': ['2023-01-15']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['12', '24', '18', '6', '36']}]}}\nA common sense reasoning question is as follows:\nIf a water pump has a warranty period of 24 months, the purchase date is January 1, 2021, and the current date is January 1, 2023, please determine whether the water pump is still under warranty and explain the basis for your judgment.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ps.Pump_ID, SUM(ps.Power * 8 * 365) AS Total_Energy_Consumption FROM pump_specifications ps JOIN pumps p ON ps.Pump_ID = p.Pump_ID WHERE p.Status = 'active' GROUP BY ps.Pump_ID;",
        "db_id": "waterPump"
    },
    {
        "id": 26,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 10,000 m³/h', 'head 1,000 m', 'power 1,000 kW', 'voltage 10,000 V', 'current 1,000 A', 'efficiency 200%'], 'relations': ['pump_to_specs (water pump → pump_specifications)', 'theoretical_power_calculation (Flow_Rate, Head → hydraulic power)', 'actual_power_calculation (Power, Efficiency → shaft power)', 'efficiency_analysis (Efficiency → reasonableness check)'], 'intent': 'calculate_actual_and_theoretical_output_power_and_analyze_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 1000, 1000, 10000, 1000, 200], 'units': {'flow_rate': 'm³/h (cubic meters per hour)', 'head': 'm (meters)', 'power': 'kW (kilowatts)', 'voltage': 'V (volts)', 'current': 'A (amperes)', 'efficiency': '% (percentage)', 'conversion': {'gravity': '9.81 m/s² (standard gravity)', 'water_density': '1000 kg/m³ (water density)', 'unit_time_conversion': '3600 seconds/hour for flow rate conversion'}}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}], 'waterPump.pumps': [{'column': 'Model_Number', 'type': 'VARCHAR(50) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '水泵型号', 'examples': ['P-1001', 'P-1002', 'P-1003', 'P-1004', 'P-1005']}, {'column': 'Manufacturer', 'type': 'VARCHAR(100) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['上海水泵厂', '北京水泵厂', '广州水泵厂', '深圳水泵厂', '杭州水泵厂']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a water pump has a flow rate of 10,000 cubic meters per hour, a head of 1,000 meters, a power of 1,000 kilowatts, a voltage of 10,000 volts, a current of 1,000 amperes, and an efficiency of 200%, please calculate the actual output power and theoretical output power of the pump, and analyze whether its efficiency is reasonable?\nyour response just have a SQL without anything.\n",
        "solution": "WITH MaintenanceCosts AS (SELECT Cost FROM maintenance_records WHERE pump_ID = '指定的水泵ID' ORDER BY Maintenance_Date DESC LIMIT 10) SELECT AVG(Cost) AS Average_Maintenance_Cost, AVG(Cost) * 5 * 10 AS Predicted_Total_Maintenance_Cost_Next_5_Years FROM MaintenanceCosts;",
        "db_id": "waterPump"
    },
    {
        "id": 27,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pump', 'flow rate 500 m³/h', 'head 80 m', 'power 100 kW', 'voltage 380 V', 'current 150 A', 'efficiency 85%'], 'relations': ['spec_to_pump (pump_specifications.Pump_ID → pumps.Pump_ID)', 'efficiency_relation (Output Power = Efficiency * Input Power)'], 'intent': 'calculate_output_power', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 80, 100, 380, 150, 85], 'units': {'flow_rate': 'm³/h (cubic meters per hour)', 'head': 'm (meters)', 'power': 'kW (kilowatts)', 'voltage': 'V (volts)', 'current': 'A (amperes)', 'efficiency': '% (percentage)', 'conversion': 'Output Power = (Efficiency / 100) * Input Power'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA physical knowledge question is as follows:\nIf a pump has a flow rate of 500 cubic meters per hour, a head of 80 meters, a power of 100 kilowatts, a voltage of 380 volts, a current of 150 amperes, and an efficiency of 85%, what is the actual output power of this pump?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Pump_ID, Model_Number, Purchase_date, Warranty_Period, CASE WHEN DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH) >= '2023-01-01' THEN '在保修期内' ELSE '不在保修期内' END AS Warranty_Status FROM pumps WHERE Purchase_date = '2021-01-01' AND Warranty_Period = 24;",
        "db_id": "waterPump"
    },
    {
        "id": 28,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 300 cubic meters per hour', 'head 50 meters', 'power 75 kilowatts', 'voltage 400 volts', 'current 120 amperes', 'efficiency 90%', '10 hours per day', '0.8 yuan per kilowatt-hour'], 'relations': ['pump_to_specifications', 'power_to_efficiency (input_power = 75 kW / 0.9)', 'daily_energy_consumption (83.33 kW * 10 hours)', 'monthly_energy_consumption (833.3 kWh/day * 30 days)', 'monthly_cost (25000 kWh * 0.8 yuan/kWh)'], 'intent': 'calculate_monthly_electricity_cost', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [75, 90, 10, 30, 0.8], 'units': {'power': 'kilowatts (kW)', 'efficiency': 'percent (%)', 'time': 'hours per day and days per month', 'cost': 'yuan per kilowatt-hour (kWh)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA mathematical logic question is as follows:\nAssuming a water pump has a flow rate of 300 cubic meters per hour, a head of 50 meters, a power of 75 kilowatts, a voltage of 400 volts, a current of 120 amperes, and an efficiency of 90%. If the pump operates for 10 hours a day and the cost per kilowatt-hour is 0.8 yuan, what is the pump's monthly electricity cost?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Power AS Theoretical_Output_Power, (Flow_Rate * Head * 9.81) / 3600 AS Actual_Output_Power, Efficiency FROM pump_specifications WHERE Flow_Rate = 10000 AND Head = 1000 AND Power = 1000 AND Voltage = 10000 AND Current = 1000 AND Efficiency = 200;",
        "db_id": "waterPump"
    },
    {
        "id": 29,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 200 m³/h', 'head 30 meters', 'power 50 kW', 'voltage 220V', 'current 200A', 'efficiency 80%', 'farmland area 10 hectares'], 'relations': ['pump_to_specifications', 'flow_rate_to_head (200 m³/h @ 30m head)', 'power_to_efficiency (50 kW × 80% effective power)', 'area_to_water_requirement (10 hectares irrigation capacity)'], 'intent': 'assess_suitability_of_pump_for_irrigation', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [200, 30, 50, 220, 200, 80, 10], 'units': {'flow_rate': 'cubic meters per hour (m³/h)', 'head': 'meters (m)', 'power': 'kilowatts (kW)', 'voltage': 'volts (V)', 'current': 'amperes (A)', 'efficiency': 'percent (%)', 'area': 'hectares (ha)', 'conversion': '1 hectare ≈ 10,000 m² (for water distribution calculations)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}], 'waterPump.pumps': [{'column': 'Status', 'type': 'ENUM', 'primary_key': False, 'comment': '水泵状态', 'examples': ['active', 'inactive', 'under_maintenance']}]}}\nA common sense reasoning question is as follows:\nIf a water pump has a flow rate of 200 cubic meters per hour, a head of 30 meters, a power of 50 kilowatts, a voltage of 220 volts, a current of 200 amperes, and an efficiency of 80%, is this pump suitable for irrigating a farmland area of 10 hectares?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Power * Efficiency / 100 AS Actual_Output_Power FROM pump_specifications WHERE Flow_Rate = 500 AND Head = 80 AND Power = 100 AND Voltage = 380 AND Current = 150 AND Efficiency = 85;",
        "db_id": "waterPump"
    },
    {
        "id": 30,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump with Flow_Rate 10,000 m³/h', 'Head 1,000 m', 'Power 5,000 kW', 'Efficiency 95%', 'Yangtze River volume 100 billion m³', 'Mount Everest height 8,848 m'], 'relations': ['pump_specifications_to_pumps (Spec_ID → Pump_ID)', 'required_flow_rate (100 billion m³/h)', 'required_head (8,848 m)', 'pump_power_to_efficiency (5,000 kW × 95%)'], 'intent': 'calculate_number_of_pumps_required', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [10000, 1000, 5000, 95, 100000000000, 8848], 'units': {'flow_rate': 'cubic meters per hour (m³/h)', 'head': 'meters (m)', 'power': 'kilowatts (kW)', 'volume': 'cubic meters (m³)', 'efficiency': 'percent (%)', 'target_head': 'meters (m)', 'time': 'hour (h)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}], 'waterPump.pumps': [{'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '主键，水泵的唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a water pump has a flow rate of 10,000 cubic meters per hour, a head of 1,000 meters, a power of 5,000 kilowatts, a voltage of 10,000 volts, a current of 500 amperes, and an efficiency of 95%. If this pump needs to lift the entire volume of water in the Yangtze River (approximately 100 billion cubic meters) to the height of Mount Everest (8,848 meters) within one hour, how many such pumps would need to work simultaneously?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Power * (Usage_Hours * 30) * 0.8) AS monthly_electricity_cost FROM pump_specifications JOIN usage_records ON pump_specifications.Pump_ID = usage_records.pump_ID WHERE Flow_Rate = 300 AND Head = 50 AND Power = 75 AND Voltage = 400 AND Current = 120 AND Efficiency = 90 AND Usage_Hours = 10;",
        "db_id": "waterPump"
    },
    {
        "id": 31,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA physical knowledge question is as follows:\nIf a water pump has a flow rate of 100 cubic meters per hour, a head of 50 meters, a power of 10 kilowatts, a voltage of 220 volts, a current of 45 amperes, and an efficiency of 85%, what is the actual output power of the pump?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT p.Pump_ID, p.Model_Number, p.Manufacturer FROM pumps p JOIN pump_specifications ps ON p.Pump_ID = ps.Pump_ID WHERE ps.Flow_Rate >= 200 AND ps.Head >= 30 AND ps.Power >= 50 AND ps.Voltage = 220 AND ps.Current = 200 AND ps.Efficiency >= 80 AND p.Status = 'active';",
        "db_id": "waterPump"
    },
    {
        "id": 32,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'warranty period 36 months', 'purchase date 2020-01-01', 'target date 2023-06-01'], 'relations': ['pump_to_warranty (pump → warranty_period)', 'date_comparison (warranty_end_date vs target_date)'], 'intent': 'check_warranty_status_and_duration', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [36, 2020, 1, 1, 2023, 6, 1], 'units': {'warranty_period': 'months', 'date_difference': 'days'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': {'waterPump.Pumps': [{'column': 'Purchase_Date'}, {'column': 'Warranty_Period'}]}}\nA mathematical logic question is as follows:\nIf a water pump has a warranty period of 36 months and was purchased on January 1, 2020, is the pump still under warranty on June 1, 2023? If not, how many days has it been out of warranty?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CEIL(100000000000 / (Flow_Rate * 3600)) AS required_pumps FROM pump_specifications WHERE Flow_Rate = 10000 AND Head = 1000 AND Power = 5000 AND Voltage = 10000 AND Current = 500 AND Efficiency = 95;",
        "db_id": "waterPump"
    },
    {
        "id": 33,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'maintenance record January 1, 2023', 'part replacement', 'cost 5,000 yuan'], 'relations': ['pump_to_maintenance (water pump → maintenance_records)', 'maintenance_type_to_cost (part replacement → 5,000 yuan)'], 'intent': 'predict_future_maintenance_requirement', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5000], 'units': {'cost': 'yuan', 'time_interval': 'months (implied by query context)'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.maintenance_records': [{'column': 'Maintenance_Date', 'type': 'DATE', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-12-15']}, {'column': 'Maintenance_Type', 'type': 'VARCHAR(100) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '维护类型（如：清洁、更换零件等）', 'examples': ['Emergency', 'Routine', '紧急维修', '紧急检修', '预防性维护']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护成本', 'examples': ['500.0', '200.0', '800.0', '600.0', '750.0']}], 'waterPump.pumps': [{'column': 'Purchase_Date', 'type': 'DATE', 'primary_key': False, 'comment': '购买日期', 'examples': ['2023-01-15']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['12', '24', '18', '6', '36']}]}}\nA common sense reasoning question is as follows:\nIf the maintenance record of a water pump shows that the last maintenance was performed on January 1, 2023, with the maintenance type being part replacement and a cost of 5,000 yuan, then based on common sense, would this water pump require maintenance again in the coming months? If so, what would the likely maintenance type be?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Power * Efficiency / 100) AS Actual_Output_Power FROM pump_specifications WHERE Flow_Rate = 100 AND Head = 50 AND Power = 10 AND Voltage = 220 AND Current = 45 AND Efficiency = 85;",
        "db_id": "waterPump"
    },
    {
        "id": 34,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 10,000 m³/h', 'head 1,000 m', 'power 1,000 kW', 'voltage 10,000 V', 'current 1,000 A', 'efficiency 200%'], 'relations': ['pump_to_specifications (water pump → pump_specifications)', 'efficiency_impossibility (200% efficiency violates physical laws)'], 'intent': 'calculate_actual_output_power_and_assess_reality', 'reasoning_type': 'physical knowledge reasoning AND common sense understanding reasoning', 'numerical_values': [10000, 1000, 1000, 10000, 1000, 200], 'units': {'flow_rate': 'm³/h (cubic meters per hour)', 'head': 'm (meters)', 'power': 'kW (kilowatts)', 'voltage': 'V (volts)', 'current': 'A (amperes)', 'efficiency': '% (percent)', 'impossibility_note': 'Efficiency >100% violates energy conservation laws'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Voltage', 'type': 'DOUBLE', 'primary_key': False, 'comment': '电压（伏特）', 'examples': ['220.0', '380.0', '1000000.0', '500000.0', '10000.0']}, {'column': 'Current', 'type': 'DOUBLE', 'primary_key': False, 'comment': '电流（安培）', 'examples': ['25.0', '27.0', '20.0', '22.0', '30.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a water pump has a flow rate of 10,000 cubic meters/hour, a head of 1,000 meters, a power of 1,000 kilowatts, a voltage of 10,000 volts, a current of 1,000 amperes, and an efficiency of 200%, what is the actual output power of this pump? Is this scenario possible in reality?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Pump_ID, Purchase_date, Warranty_Period, CASE WHEN DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH) >= '2023-06-01' THEN '在保修期内' ELSE '不在保修期内' END AS Warranty_Status, CASE WHEN DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH) < '2023-06-01' THEN DATEDIFF('2023-06-01', DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH)) ELSE 0 END AS Days_Out_of_Warranty FROM pumps WHERE Purchase_date = '2020-01-01' AND Warranty_Period = 36;",
        "db_id": "waterPump"
    },
    {
        "id": 35,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [\"pump\", \"power 10 kilowatts\", \"efficiency 85%\", \"voltage 220 volts\", \"current 45 amperes\", \"time 1 hour\"],\n  \"relations\": [\"pump_to_power (pump → power 10 kW)\", \"power_to_energy (power × time → energy)\", \"efficiency_correction (input_energy = output_energy / efficiency)\"],\n  \"intent\": \"calculate_electrical_energy_consumed\",\n  \"reasoning_type\": \"physical knowledge reasoning\",\n  \"numerical_values\": [10, 0.85, 220, 45, 1],\n  \"units\": {\n    \"power\": \"kilowatts (kW)\",\n    \"voltage\": \"volts (V)\",\n    \"current\": \"amperes (A)\",\n    \"efficiency\": \"dimensionless (85%)\",\n    \"time\": \"hours (\nA physical knowledge question is as follows:\nIf a pump has a flow rate of 100 cubic meters per hour, a head of 50 meters, a power of 10 kilowatts, a voltage of 220 volts, a current of 45 amperes, and an efficiency of 85%, then how much electrical energy is actually consumed after the pump runs for 1 hour?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Pump_ID, Maintenance_Date, Maintenance_Type, Cost FROM maintenance_records WHERE Pump_ID = (SELECT Pump_ID FROM maintenance_records WHERE Maintenance_Date = '2023-01-01' AND Maintenance_Type = '更换零件' AND Cost = 5000) ORDER BY Maintenance_Date DESC LIMIT 1;",
        "db_id": "waterPump"
    },
    {
        "id": 36,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 120 m³/h', 'head 60 m', 'power output 12 kW', 'voltage 220 V', 'current 50 A', 'efficiency 90%', '8 hours/day', '30 days'], 'relations': ['pump_to_specifications (water pump → pump_specifications)', 'power_adjustment (12 kW / 0.9 = 13.33 kW input power)', 'time_calculation (8 hours/day × 30 days = 240 hours)'], 'intent': 'calculate_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [12, 90, 8, 30], 'units': {'power': 'kW (kilowatts)', 'efficiency': '% (percentage)', 'time': 'hours', 'energy': 'kWh (kilowatt-hour)', 'conversion': 'Input Power (kW) = Output Power (kW) / Efficiency (%)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA mathematical logic question is as follows:\nAssuming a water pump has a flow rate of 120 cubic meters per hour, a head of 60 meters, a power output of 12 kilowatts, a voltage of 220 volts, a current of 50 amperes, and an efficiency of 90%. If the pump operates for 8 hours each day continuously for 30 days, how much total electrical energy will the pump consume during these 30 days?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Power * (Efficiency / 100) AS Actual_Output_Power FROM pump_specifications WHERE Flow_Rate = 10000 AND Head = 1000 AND Power = 1000 AND Voltage = 10000 AND Current = 1000 AND Efficiency = 200;",
        "db_id": "waterPump"
    },
    {
        "id": 37,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 1000 cubic meters per hour', 'head 1000 meters', 'power 1000 kilowatts', 'voltage 1000 volts', 'current 1000 amperes', 'efficiency 100%', 'operation time 1000 hours'], 'relations': ['pump_to_specifications (water pump → pump_specifications)', 'power_time_energy (power 1000 kW × time 1000 hours → energy consumption)'], 'intent': 'calculate_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 1000], 'units': {'power': 'kW (kilowatts)', 'time': 'hours', 'energy': 'kWh (kilowatt-hours)', 'conversion': 'Energy (kWh) = Power (kW) × Time (hours)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a water pump has a flow rate of 1000 cubic meters per hour, a head of 1000 meters, a power of 1000 kilowatts, a voltage of 1000 volts, a current of 1000 amperes, and an efficiency of 100%. If this water pump operates continuously for 1000 hours, how much total electrical energy does the pump consume during these 1000 hours?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Power * 1000 * Usage_Hours) / Efficiency AS Actual_Energy_Consumption FROM pump_specifications JOIN usage_records ON pump_specifications.Pump_ID = usage_records.pump_ID WHERE Flow_Rate = 100 AND Head = 50 AND Power = 10 AND Voltage = 220 AND Current = 45 AND Efficiency = 85 AND Usage_Hours = 1;",
        "db_id": "waterPump"
    },
    {
        "id": 38,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'flow rate 100 m³/h', 'head 50 m', 'power 10 kW', 'efficiency 80%'], 'relations': ['pump_to_specifications (water pump → pump_specifications)', 'input_power_to_output_power (10 kW × 80% efficiency)'], 'intent': 'calculate_actual_output_power', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 80], 'units': {'power': 'kW (kilowatts)', 'efficiency': '% (percentage)', 'calculation': 'actual_output_power = input_power × (efficiency/100) = 8 kW'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}]}}\nA physical knowledge question is as follows:\nIf a water pump has a flow rate of 100 cubic meters per hour, a head of 50 meters, a power of 10 kilowatts, and an efficiency of 80%, what is the actual output power of this water pump?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Power * 8 * 30) AS Total_Energy_Consumed FROM pump_specifications WHERE Flow_Rate = 120 AND Head = 60 AND Power = 12 AND Voltage = 220 AND Current = 50 AND Efficiency = 90;",
        "db_id": "waterPump"
    },
    {
        "id": 39,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA mathematical logic question is as follows:\nIf a water pump operates for 8 hours every day within a year, with a flow rate of 150 cubic meters per hour, a head of 60 meters, a power of 15 kilowatts, and an efficiency of 85%, what is the total annual energy consumption of the pump?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Power * 1000 AS Total_Energy_Consumed FROM pump_specifications WHERE Flow_Rate = 1000 AND Head = 1000 AND Power = 1000 AND Voltage = 1000 AND Current = 1000 AND Efficiency = 100;",
        "db_id": "waterPump"
    },
    {
        "id": 40,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'warranty period of 24 months', 'purchase date January 1, 2022', 'failure date June 1, 2023'], 'relations': ['pump_to_warranty (water pump → warranty duration)', 'warranty_start_to_end (January 1, 2022 → December 31, 2023)', 'failure_date_to_warranty_range (June 1, 2023 ⊆ warranty period)'], 'intent': 'check_warranty_coverage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [24, 2022, 2023], 'units': {'warranty_duration': 'months', 'dates': 'YYYY-MM-DD (ISO format)'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}, {'pk_table': 'pumps', 'pk_column': 'Pump_ID'}], 'tableinfo': {'waterPump.pumps': [{'column': 'Purchase_Date', 'type': 'DATE', 'primary_key': False, 'comment': '购买日期', 'examples': ['2023-01-15']}, {'column': 'Warranty_Period', 'type': 'INTEGER', 'primary_key': False, 'comment': '保修期（月）', 'examples': ['12', '24', '18', '6', '36']}], 'waterPump.maintenance_records': [{'column': 'Maintenance_Date', 'type': 'DATE', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-12-15']}]}}\nA common sense reasoning question is as follows:\nIf a water pump has a warranty period of 24 months and the purchase date is January 1, 2022, when does the warranty period end? If the water pump fails on June 1, 2023, is it still within the warranty period?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Flow_Rate * Head * 9.81 * Efficiency / 100) / 3600 AS Actual_Output_Power FROM pump_specifications WHERE Flow_Rate = 100 AND Head = 50 AND Power = 10 AND Efficiency = 80;",
        "db_id": "waterPump"
    },
    {
        "id": 41,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['water pump', 'pump_specifications', 'flow rate 1000 m³/h', 'head 1000 m', 'power 1000 kW', 'efficiency 100%'], 'relations': ['pump_to_specifications', 'hydraulic_power_formula (flow_rate × head × density × gravity / 1000)'], 'intent': 'calculate_actual_output_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 1000, 1000, 100, 1000, 9.81], 'units': {'flow_rate': 'm³/h (cubic meters per hour)', 'head': 'm (meters)', 'power': 'kW (kilowatts)', 'efficiency': '% (percent)', 'density': 'kg/m³ (kilograms per cubic meter)', 'gravity': 'm/s² (meters per second squared)', 'output_power': 'kW (calculated via P = (Q × H × ρ × g)/1000)'}, 'foreign_keys': [{'fk_table': 'pump_specifications', 'fk_column': 'Pump_ID', 'ref_table': 'pumps', 'ref_column': 'Pump_ID'}], 'primary_keys': [{'pk_table': 'pump_specifications', 'pk_column': 'Spec_ID'}], 'tableinfo': {'waterPump.pump_specifications': [{'column': 'Flow_Rate', 'type': 'DOUBLE', 'primary_key': False, 'comment': '流量（立方米/小时）', 'examples': ['50.0', '55.0', '60.0', '65.0', '70.0']}, {'column': 'Head', 'type': 'DOUBLE', 'primary_key': False, 'comment': '扬程（米）', 'examples': ['30.0', '32.0', '35.0', '38.0', '40.0']}, {'column': 'Efficiency', 'type': 'DOUBLE', 'primary_key': False, 'comment': '效率（百分比）', 'examples': ['85.0', '86.0', '88.0', '89.0', '90.0']}, {'column': 'Power', 'type': 'DOUBLE', 'primary_key': False, 'comment': '功率（千瓦）', 'examples': ['5.0', '6.0', '7.0', '8.0', '9.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a water pump has a flow rate of 1000 cubic meters per hour, a head of 1000 meters, a power of 1000 kilowatts, and an efficiency of 100%, what is the actual output power of the pump? Assume water density is 1000 kg/m³ and gravitational acceleration is 9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (15 * 8 * 365) / 0.85 AS total_energy_consumption FROM pump_specifications WHERE Flow_Rate = 150 AND Head = 60 AND Power = 15 AND Efficiency = 85;",
        "db_id": "waterPump"
    },
    {
        "id": 42,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance_records', 'usage_records', 'water pump'], 'relations': ['ratio_relationship (average_maintenance_cost_per_instance / average_operational_duration_after_maintenance)', 'correlation_analysis (maintenance_costs ↔ operational_duration)'], 'intent': 'calculate_ratio_and_analyze_correlation', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'cost': 'currency (e.g., USD) from maintenance_records.Cost', 'operational_duration': 'hours from usage_records.Usage_Hours', 'ratio_unit': 'USD/hour (derived from cost/duration)'}, 'foreign_keys': [{'fk_table': 'maintenance_records', 'fk_column': 'Pump_ID', 'ref_table': 'pump_specifications', 'ref_column': 'Pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'pump_ID', 'ref_table': 'pumps', 'ref_column': 'pump_ID'}, {'fk_table': 'usage_records', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'maintenance_records', 'pk_column': 'Record_ID'}, {'pk_table': 'usage_records', 'pk_column': 'Ssage_ID'}], 'tableinfo': {'waterPump.maintenance_records': [{'column': 'Pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['11', '34', '35', '37', '39']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护成本', 'examples': ['500.0', '200.0', '800.0', '600.0', '750.0']}], 'waterPump.usage_records': [{'column': 'Usage_Hours', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用时长（小时）', 'examples': ['4.0', '8.0', '8760.0', '2000.0', '4000.0']}, {'column': 'pump_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '关联的水泵ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nWhat is the ratio between the average maintenance cost per instance and the average operational duration after maintenance for this water pump? Also, analyze the relationship between maintenance costs and operational duration.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Pump_ID, Model_Number, Purchase_date, Warranty_Period, DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH) AS Warranty_End_Date, CASE WHEN '2023-06-01' <= DATE_ADD(Purchase_date, INTERVAL Warranty_Period MONTH) THEN 'Yes' ELSE 'No' END AS Is_Under_Warranty FROM pumps WHERE Purchase_date = '2022-01-01' AND Warranty_Period = 24;",
        "db_id": "waterPump"
    },
    {
        "id": 43,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [], 'relations': [], 'intent': 'calculate_kinetic_energy_and_rank_entities', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'speed': 'Not defined in database', 'mass': 'Not defined in database', 'energy': 'Not defined in database'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each yacht at its maximum speed, and identify the top 5 yachts with the highest kinetic energy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Flow_Rate * Head * 1000 * 9.81) / 3600000 AS Actual_Output_Power FROM pump_specifications WHERE Flow_Rate = 1000 AND Head = 1000 AND Power = 1000 AND Efficiency = 100;",
        "db_id": "waterPump"
    },
    {
        "id": 44,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{\n  \"entities\": [],\n  \"relations\": [],\n  \"intent\": \"calculate_ratio_of_fuel_efficiency_to_sailing_distance_and_rank_yachts\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [],\n  \"units\": {},\n  \"required_tables\": [],\n  \"required_fields\": []\n}\n``` \n\n**Explanation:** The database schema provided (waterPump, maintenance_records, pump_specifications, pumps, usage_records, users) does not contain any tables, columns, or relationships related to **yachts**, **fuel efficiency**, or **sailing distance**. The question requires yacht-specific data (e.g., tables like `yachts`, `fuel_efficiency_metrics`, `sailing_records`), which are absent. Thus, the query cannot be fulfilled with the available database structure.\nA mathematical logic question is as follows:\nCalculate the ratio of fuel efficiency to sailing distance for each yacht, and identify the top 10 yachts with the lowest ratios.\nyour response just have a SQL without anything.\n",
        "solution": "WITH MaintenanceCosts AS (SELECT AVG(Cost) AS AvgCost FROM maintenance_records), UsageHours AS (SELECT AVG(Usage_Hours) AS AvgHours FROM usage_records) SELECT AvgCost / AvgHours AS CostToUsageRatio FROM MaintenanceCosts, UsageHours;",
        "db_id": "waterPump"
    },
    {
        "id": 45,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht model', 'wind speed >30 knots', 'wave height >2 meters'], 'relations': ['voyage_to_weather_conditions (Voyage → Wind_Speed/Wave_Height)', 'yacht_to_voyage (Yacht → Voyage)'], 'intent': 'find_most_used_yacht_model_under_specific_weather_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30, 2], 'units': {'wind_speed': 'knots', 'wave_height': 'meters'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Voyage_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '航行记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Wind_Speed', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '风速（节）', 'examples': ['10.0', '12.0', '11.0', '15.0', '18.0']}, {'column': 'Wave_Height', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '波浪高度（米）', 'examples': ['1.5', '2.0', '1.8', '2.5', '3.0']}], 'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}]}}\nA common sense reasoning question is as follows:\nFind the yacht model with the most voyages under specific weather conditions (such as wind speed greater than 30 knots and wave height greater than 2 meters).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Model, COUNT(v.Voyage_ID) AS Voyage_Count FROM voyages v JOIN yachts y ON v.Yacht_ID = y.Yacht_ID WHERE v.Wind_Speed > 30 AND v.Wave_Height > 2 GROUP BY y.Model ORDER BY Voyage_Count DESC LIMIT 1;",
        "db_id": "yacht"
    },
    {
        "id": 46,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'fuel capacity 1 million liters', 'maximum speed', 'navigation time 1000 hours'], 'relations': ['yacht_to_performance (Yacht_ID → performance_metrics)', 'fuel_efficiency_relation (Fuel_Capacity / Fuel_Efficiency → Duration)', 'speed_efficiency_relation (Max_Speed × Fuel_Efficiency → Hourly_Consumption)'], 'intent': 'calculate_navigation_duration_and_filter_yachts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 1000], 'units': {'fuel_capacity': 'liters (1,000,000 L)', 'time': 'hours (h)', 'fuel_efficiency': 'liters per kilometer (from performance_metrics.Fuel_Efficiency)', 'speed': 'kilometers per hour (from yachts.Max_Speed)', 'conversion': 'Duration = Fuel_Capacity / (Fuel_Efficiency × Max_Speed)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA hypothetical reasoning question is as follows:\nThe fuel capacity of a yacht is increased to 1 million liters. Calculate the duration of continuous navigation at maximum speed and identify which yachts have a navigation time exceeding 1000 hours.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Yacht_ID, y.Model, 1000000 / (p.Fuel_Efficiency * y.Max_Speed) AS Sailing_Time FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID WHERE 1000000 / (p.Fuel_Efficiency * y.Max_Speed) > 1000;",
        "db_id": "yacht"
    },
    {
        "id": 47,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'buoyancy force', 'gravity force', 'maximum speed'], 'relations': ['yacht_to_buoyancy (yacht → buoyancy_force)', 'yacht_to_gravity (yacht → gravity_force)'], 'intent': 'calculate_buoyancy_to_gravity_ratio_at_max_speed_and_rank_top_yachts', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1], 'units': {'buoyancy_force': 'N (Newtons)', 'gravity_force': 'N (Newtons)', 'ratio': 'dimensionless (buoyancy/gravity)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Buoyancy_Force', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '浮力（牛顿）', 'examples': ['500000.0', '480000.0', '470000.0', '520000.0', '1500000.0']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of buoyancy to gravity for each yacht at its maximum speed, and identify the top 5 yachts with a ratio greater than 1.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, (Displacement * 9.81) / (Weight * 9.81) AS Buoyancy_Gravity_Ratio FROM yachts WHERE (Displacement * 9.81) / (Weight * 9.81) > 1 ORDER BY Buoyancy_Gravity_Ratio DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 48,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel consumption', 'sailing distance'], 'relations': ['voyage_to_yacht (Voyage_ID → Yacht_ID)', 'product_calculation (Fuel_Consumed × Distance)'], 'intent': 'calculate_product_sort_top_yachts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_consumption': 'liters (implied by Fuel_Consumed column)', 'distance': 'nautical miles (implied by Distance column)', 'product': 'liter-nautical miles (Fuel_Consumed × Distance)'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA mathematical logic question is as follows:\nCalculate the product of fuel consumption and sailing distance for each yacht, sort in descending order, and identify the top 10 yachts with the largest products.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT v.Yacht_ID, y.Model, v.Fuel_Consumed * v.Distance AS Fuel_Distance_Product FROM voyages v JOIN yachts y ON v.Yacht_ID = y.Yacht_ID ORDER BY Fuel_Distance_Product DESC LIMIT 10;",
        "db_id": "yacht"
    },
    {
        "id": 49,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', '2015', 'diesel engine'], 'relations': ['produced_after (Year > 2015)', \"has_engine_type (Engine_Type = 'diesel')\"], 'intent': 'retrieve_yachts_with_filters_and_sorting', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2015], 'units': {'year': 'year', 'engine_type': 'diesel', 'price': 'monetary unit (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Engine_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '发动机类型', 'examples': ['Inboard', 'Outboard']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA common sense reasoning question is as follows:\nFind all yachts produced after 2015 with diesel engine type, sorted in descending order by price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, Year, Engine_Type, Price FROM yachts WHERE Year > 2015 AND Engine_Type = '柴油' ORDER BY Price DESC;",
        "db_id": "yacht"
    },
    {
        "id": 50,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['5 million liters', '10,000 nautical miles', 'maximum speed'], 'relations': ['yacht_to_fuel_capacity (Yacht → Fuel_Capacity)', 'yacht_to_fuel_efficiency (Yacht → Fuel_Efficiency)', 'distance_threshold (10,000 nautical miles)'], 'intent': 'calculate_continuous_sailing_distance_and_filter_yachts', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5000000, 10000], 'units': {'fuel_capacity': 'liters', 'distance': 'nautical miles', 'fuel_efficiency': 'liters/nautical mile (implied by context)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA hypothetical reasoning question is as follows:\nThe fuel capacity of a yacht has been increased to 5 million liters. Calculate the continuous sailing distance at maximum speed and identify which yachts have a sailing distance exceeding 10,000 nautical miles.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, (5000000 / Fuel_Efficiency) AS Max_Distance FROM yachts WHERE (5000000 / Fuel_Efficiency) > 10000;",
        "db_id": "yacht"
    },
    {
        "id": 51,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'kinetic energy', 'maximum speed'], 'relations': ['yacht_to_weight (yachts → Weight)', 'yacht_to_max_speed (yachts → Max_Speed)', 'kinetic_energy_formula (KE = 0.5 * Weight * Max_Speed²)'], 'intent': 'calculate_kinetic_energy_and_identify_top_5', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'mass': 'kg (as stored in yachts.Weight)', 'speed': 'm/s (as stored in yachts.Max_Speed)', 'kinetic_energy': 'Joules (calculated using KE = 0.5 * mass * speed²)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each yacht at its maximum speed and identify the top 5 yachts with the highest kinetic energy.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, 0.5 * (Weight * 1000) * POWER(Max_Speed * 0.514444, 2) AS Kinetic_Energy FROM yachts ORDER BY Kinetic_Energy DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 52,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel efficiency', 'sailing distance', 'ratio', 'sorted list'], 'relations': ['yacht_to_fuel_efficiency (performance_metrics.Fuel_Efficiency)', 'yacht_to_sailing_distance (voyages.Distance)', 'ratio_definition (Fuel_Efficiency / Distance)', 'sorting_order (ascending)'], 'intent': 'calculate_and_sort_fuel_efficiency_to_distance_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_efficiency': 'units from performance_metrics (e.g., km/L or L/nm)', 'distance': 'units from voyages.Distance (e.g., nautical miles or kilometers)', 'ratio': 'derived unit (e.g., km/L / km = 1/L or L/km)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.performance_metrics': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}], 'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of fuel efficiency to sailing distance for each yacht, sort them in ascending order, and identify the 10 yachts with the smallest ratios.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, (5000000 / Fuel_Capacity) AS Max_Distance FROM yachts WHERE (5000000 / Fuel_Capacity) > 10000;",
        "db_id": "yacht"
    },
    {
        "id": 53,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'fiberglass hull material', 'production year before 2010'], 'relations': ['yacht_to_production_year (yachts.Year)', 'yacht_to_hull_material (yachts.Hull_Material)'], 'intent': 'retrieve_yachts_by_hull_material_and_year', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2010], 'units': {'production_year': 'year', 'hull_material': 'material_type'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}]}}\nA common sense reasoning question is as follows:\nFind all yachts produced before 2010 with fiberglass hull material, sorted by production year in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, Year, Hull_Material FROM yachts WHERE Year < 2010 AND Hull_Material = '玻璃钢' ORDER BY Year ASC;",
        "db_id": "yacht"
    },
    {
        "id": 54,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel capacity 1 million liters', 'maximum speed', 'sailing time', '1000 hours'], 'relations': ['yacht_to_fuel_capacity (yacht → fuel_capacity)', 'sailing_time_formula (fuel_capacity / fuel_consumption_rate)', 'threshold_filter (sailing_time > 1000 hours)'], 'intent': 'calculate_sailing_time_and_filter_yachts', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 1000], 'units': {'fuel_capacity': 'liters', 'sailing_time': 'hours', 'conversion': 'fuel_efficiency (km/liter) + max_speed (km/hour) → time = (capacity * efficiency) / speed'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA hypothetical reasoning question is as follows:\nThe fuel capacity of a yacht is increased to 1 million liters. Calculate the continuous sailing time at its maximum speed and find out which yachts have a sailing time exceeding 1000 hours.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID,  (1000000 / (Fuel_Efficiency / `Range`)) AS Sailing_Time_Hours FROM performance_metrics WHERE (1000000 / (Fuel_Efficiency / `Range`)) > 1000 ORDER BY Sailing_Time_Hours DESC;",
        "db_id": "yacht"
    },
    {
        "id": 55,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'maximum speed', 'drag power'], 'relations': ['yacht_to_drag_coefficient (yacht → Drag_Coefficient)', 'yacht_to_speed (yacht → Max_Speed)'], 'intent': 'calculate_and_rank_drag_power', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['Max_Speed', 'Drag_Coefficient'], 'units': {'speed': 'knots or km/h (dependent on database storage)', 'drag_coefficient': 'unitless', 'power': 'watts or horsepower (implied by calculation formula)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Drag_Coefficient', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '阻力系数', 'examples': ['0.45', '0.47', '0.46', '0.44', '0.5']}]}}\nA physical knowledge question is as follows:\nCalculate the drag power of each yacht at maximum speed and identify the top 5 yachts with the highest drag power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, 0.5 * 1025 * Drag_Coefficient * (Length * Width) * POWER(Max_Speed * 0.514444, 3) AS Drag_Power FROM yachts ORDER BY Drag_Power DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 56,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'voyages', 'energy consumption', 'sailing distance'], 'relations': ['voyages.Yacht_ID to yachts.Yacht_ID', 'energy_to_distance_ratio (Total_Energy_Consumed / Distance)'], 'intent': 'calculate_energy_to_distance_ratio_and_sort_top_10', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy': 'unit of Total_Energy_Consumed (implied by database schema)', 'distance': 'unit of Distance (implied by database schema)', 'ratio': 'energy unit / distance unit'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Total_Energy_Consumed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '总能量消耗（焦耳）', 'examples': ['120000.0', '140000.0', '160000.0', '170000.0', '150000.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total energy consumption to sailing distance for each yacht, and sort them in descending order to find the top 10 yachts with the highest ratios.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, (1000000 / Fuel_Efficiency) AS Max_Sailing_Time FROM performance_metrics WHERE (1000000 / Fuel_Efficiency) > 1000;",
        "db_id": "yacht"
    },
    {
        "id": 57,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts produced after 2015', 'diesel engine type', 'fuel efficiency'], 'relations': ['yacht_production_year (Year > 2015)', \"engine_type_filter (Engine_Type = 'diesel')\", 'fuel_efficiency_sort_order'], 'intent': 'retrieve_filtered_yachts_sorted_by_efficiency', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2015], 'units': {'year': 'YYYY', 'engine_type': 'string (diesel)', 'fuel_efficiency': 'unit defined in performance_metrics table'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Engine_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '发动机类型', 'examples': ['Inboard', 'Outboard']}], 'yacht.performance_metrics': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA common sense reasoning question is as follows:\nFind all yachts produced after 2015 with diesel engine type, sorted by fuel efficiency in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, Year, Engine_Type, Fuel_Efficiency FROM yachts WHERE Year > 2015 AND Engine_Type = '柴油' ORDER BY Fuel_Efficiency ASC;",
        "db_id": "yacht"
    },
    {
        "id": 58,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel capacity 10 million liters', 'travel distance', '50,000 nautical miles'], 'relations': ['yacht_to_fuel_capacity (yacht → Fuel_Capacity)', 'yacht_to_fuel_efficiency (yacht → Fuel_Efficiency)', 'distance_calculation (Fuel_Capacity / Fuel_Efficiency → Distance)'], 'intent': 'calculate_travel_distance_with_hypothetical_fuel_capacity_and_filter_yachts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000, 50000], 'units': {'fuel_capacity': 'liters', 'distance': 'nautical miles', 'fuel_efficiency': 'liters per nautical mile (inferred from context)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA hypothetical reasoning question is as follows:\nIf a yacht's fuel capacity is increased to 10 million liters, calculate the distance it can travel continuously at maximum speed, and identify which yachts have a travel distance exceeding 50,000 nautical miles.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, (10000000 / Fuel_Efficiency) AS Max_Distance FROM performance_metrics WHERE (10000000 / Fuel_Efficiency) > 50000;",
        "db_id": "yacht"
    },
    {
        "id": 59,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'displacement 500 tons', 'hull length 30 meters', 'width 10 meters'], 'relations': ['displacement_to_yacht (500 tons → yacht)', 'length_to_yacht (30 meters → yacht)', 'width_to_yacht (10 meters → yacht)'], 'intent': 'calculate_draft', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [500, 30, 10], 'units': {'displacement': 'tons (metric tons, 1 ton = 1000 kg)', 'length': 'meters', 'width': 'meters', 'draft': 'meters (calculated via displacement = length × width × draft × water_density × block_coefficient)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Width', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '宽度（米）', 'examples': ['5.8', '5.5', '5.3', '5.6', '8.0']}], 'yacht.performance_metrics': [{'column': 'Draft', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '吃水深度（米）', 'examples': ['2.2', '2.0', '2.5', '2.1', '1.9']}]}}\nA physical knowledge question is as follows:\nIf a yacht has a displacement of 500 tons, a hull length of 30 meters, and a width of 10 meters, calculate the yacht's draft in the water.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, Year, Engine_Type, Fuel_Capacity FROM yachts WHERE Year > 2015 AND Engine_Type = '柴油' ORDER BY Fuel_Capacity ASC;",
        "db_id": "yacht"
    },
    {
        "id": 60,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'maximum speed 30 knots', 'engine power 1000 horsepower', 'fuel efficiency 50 liters/hour'], 'relations': ['yacht_to_performance_metrics (yacht → performance_metrics.Fuel_Efficiency)', 'speed_to_fuel_consumption (speed → hourly fuel consumption)'], 'intent': 'calculate_hourly_fuel_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30, 1000, 50], 'units': {'speed': 'knots (nautical miles/hour)', 'power': 'horsepower', 'fuel_efficiency': 'liters/hour', 'conversion': '1 knot = 1.852 km/h (conversion for speed not required in this case)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Engine_Power', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '发动机功率（HP）', 'examples': ['1500.0', '1400.0', '1450.0', '1550.0', '3000.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA mathematical logic question is as follows:\nA yacht has a maximum speed of 30 knots, an engine power of 1000 horsepower, and a fuel efficiency of 50 liters/hour. If the yacht sails at maximum speed, calculate its hourly fuel consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, (10000000 / Fuel_Efficiency) AS Max_Distance FROM performance_metrics WHERE (10000000 / Fuel_Efficiency) > 50000;",
        "db_id": "yacht"
    },
    {
        "id": 61,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel capacity 5000 liters', 'fuel consumption rate 50 liters per hour', 'voyage distance 1000 nautical miles'], 'relations': ['yacht.Max_Speed → time (ΔT = 1000 / Max_Speed)', 'fuel_consumption_rate * time = required_fuel (50 * ΔT)', 'required_fuel ≤ fuel_capacity'], 'intent': 'determine_fuel_sufficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 50, 1000], 'units': {'fuel_capacity': 'liters', 'fuel_consumption_rate': 'liters/hour', 'distance': 'nautical miles', 'speed': 'knots (nautical miles/hour)', 'time': 'hours', 'conversion': '1 knot = 1 nautical mile/hour'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA common sense reasoning question is as follows:\nA yacht has a fuel capacity of 5000 liters and a fuel consumption rate of 50 liters per hour. If this yacht needs to sail for 1000 nautical miles, determine whether its fuel supply is sufficient.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Fuel_Capacity, (1000 / Fuel_Efficiency) AS Required_Fuel FROM yachts WHERE Yacht_ID = '特定游艇ID';",
        "db_id": "yacht"
    },
    {
        "id": 62,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel efficiency', 'range'], 'relations': ['fuel_efficiency_to_range_ratio (Fuel Efficiency / Range)', 'yacht_to_ratio'], 'intent': 'calculate_fuel_efficiency_ratio_and_rank_top_5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_efficiency': 'implied by database schema (e.g., km/l or mpg)', 'range': 'implied by database schema (e.g., km or nautical miles)', 'ratio': 'unitless (efficiency/range)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.performance_metrics': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}, {'column': 'Range', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '续航里程（海里）', 'examples': ['500.0', '450.0', '550.0', '480.0', '470.0']}], 'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the ratio of fuel efficiency to range for each yacht and identify the top 5 yachts with the highest fuel efficiency ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Model, (Fuel_Efficiency / `Range`) AS Efficiency_Ratio FROM performance_metrics ORDER BY Efficiency_Ratio DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 63,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'length > 30 meters', 'max speed > 20 knots'], 'relations': ['yacht_to_attributes (model/year/length/speed/price)', 'filter_condition (length > 30m ∧ max_speed > 20knots)'], 'intent': 'retrieve_filtered_yacht_data_with_sorting', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [30, 20], 'units': {'length': 'meters', 'speed': 'knots'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA physical knowledge question is as follows:\nRetrieve the model, production year, length, maximum speed, and price of all yachts with a length exceeding 30 meters and a maximum speed over 20 knots, sorted by price in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Year, Length, Max_Speed, Price FROM yachts WHERE Length > 30 AND Max_Speed > 20 ORDER BY Price DESC;",
        "db_id": "yacht"
    },
    {
        "id": 64,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel consumption rate', 'top 10 yachts', 'nautical mile'], 'relations': ['yacht_to_voyage (Yacht_ID → voyages)', 'fuel_to_distance (Fuel_Consumed / Distance → fuel consumption rate)'], 'intent': 'calculate_fuel_consumption_rate_and_rank_yachts_by_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'fuel_consumption_rate': 'liters per nautical mile (L/NM)', 'distance': 'nautical miles (from voyages.Distance)', 'fuel_consumed': 'liters (from voyages.Fuel_Consumed)'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}]}}\nA mathematical logic question is as follows:\nCalculate the fuel consumption rate (liters per nautical mile) for each yacht and list the top 10 yachts with the highest fuel efficiency based on this rate, sorted from lowest to highest.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Yacht_ID, y.Model, p.Fuel_Efficiency / y.Max_Speed AS Fuel_Consumption_Rate FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID ORDER BY Fuel_Consumption_Rate ASC LIMIT 10;",
        "db_id": "yacht"
    },
    {
        "id": 65,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel capacity', 'fuel efficiency', 'cruising range'], 'relations': ['yacht_to_fuel_capacity (Yacht → Fuel_Capacity)', 'yacht_to_fuel_efficiency (Yacht → Fuel_Efficiency)', 'range_calculation (Fuel_Capacity / Fuel_Efficiency)'], 'intent': 'calculate_max_cruising_range_and_rank_top_3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_capacity': 'gallons (assumed unit from marine context)', 'fuel_efficiency': 'nautical miles per gallon (implied unit)', 'range': 'nautical miles (target unit)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}], 'yacht.performance_metrics': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA common sense reasoning question is as follows:\nCalculate the maximum cruising range (in nautical miles) for each yacht based on its fuel capacity and fuel efficiency, and list the top 3 yachts with the longest cruising range.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Yacht_ID, y.Model, y.Fuel_Capacity / p.Fuel_Efficiency * y.Max_Speed AS Max_Range FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID ORDER BY Max_Range DESC LIMIT 3;",
        "db_id": "yacht"
    },
    {
        "id": 66,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht displacement 100,000 tons', 'hull length 500 meters', 'width 50 meters', 'draft depth threshold 50 meters'], 'relations': ['displacement_to_draft (displacement → draft depth calculation)', 'dimensional_ratio (length:width ratio)', 'buoyancy_limit (threshold comparison)'], 'intent': 'calculate_draft_depth_and_buoyancy_status', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000, 500, 50, 50], 'units': {'displacement': 'tons (metric)', 'length/width/draft': 'meters', 'density': '1000 kg/m³ (standard seawater density)', 'conversion': '1 ton = 1000 kg'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Width', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '宽度（米）', 'examples': ['5.8', '5.5', '5.3', '5.6', '8.0']}, {'column': 'Buoyancy_Force', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '浮力（牛顿）', 'examples': ['500000.0', '480000.0', '470000.0', '520000.0', '1500000.0']}], 'yacht.performance_metrics': [{'column': 'Draft', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '吃水深度（米）', 'examples': ['2.2', '2.0', '2.5', '2.1', '1.9']}]}}\nA hypothetical reasoning question is as follows:\nA yacht has a displacement of 100,000 tons, a hull length of 500 meters, and a width of 50 meters. Calculate its draft depth and determine whether the yacht can float normally. If the draft depth exceeds 50 meters, what will happen?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 100000 / (500 * 50 * 1) AS Draft, CASE WHEN 100000 / (500 * 50 * 1) > 50 THEN '无法正常浮起' ELSE '可以正常浮起' END AS Status;",
        "db_id": "yacht"
    },
    {
        "id": 67,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'displacement', 'length', 'width', 'hull material', 'draft depth'], 'relations': ['yacht_to_displacement (yacht → displacement)', 'yacht_to_length (yacht → length)', 'yacht_to_width (yacht → width)', 'yacht_to_hull_material (yacht → hull_material)', 'displacement_length_width_to_draft (displacement/length/width → draft_depth)', 'hull_material_to_draft_groups (hull_material → [draft_depth])'], 'intent': 'calculate_draft_depth_and_average_by_hull_material', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'displacement': 'cubic meters (m³) or metric tons (assumed based on maritime standards)', 'length': 'meters (m)', 'width': 'meters (m)', 'draft_depth': 'meters (m)', 'conversion': 'draft_depth = displacement / (length * width)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Width', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '宽度（米）', 'examples': ['5.8', '5.5', '5.3', '5.6', '8.0']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}]}}\nA physical knowledge question is as follows:\nBased on the displacement, length, and width of the yachts, calculate the draft depth of each yacht, group them by hull material, and list the average draft depth for each hull material type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Hull_Material, AVG(Displacement / (Length * Width * 1)) AS Avg_Draft FROM yachts GROUP BY Hull_Material;",
        "db_id": "yacht"
    },
    {
        "id": 68,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'engine type', 'fuel consumption rate', 'voyage data'], 'relations': ['voyages_to_yachts (Yacht_ID)', 'yachts_to_engine_type (Engine_Type)', 'fuel_consumption_rate (Fuel_Consumed / Distance)'], 'intent': 'calculate_group_average_fuel_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_consumption_rate': 'liters per nautical mile', 'distance': 'nautical miles (from voyages.Distance)', 'fuel_consumed': 'liters (from voyages.Fuel_Consumed)'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}], 'yacht.yachts': [{'column': 'Engine_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '发动机类型', 'examples': ['Inboard', 'Outboard']}]}}\nA mathematical logic question is as follows:\nCalculate the fuel consumption rate (liters per nautical mile) for each yacht, group them by engine type, and list the average fuel consumption rate for each engine type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Engine_Type, AVG(p.Fuel_Efficiency / y.Max_Speed) AS Avg_Fuel_Consumption_Rate FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID GROUP BY y.Engine_Type;",
        "db_id": "yacht"
    },
    {
        "id": 69,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'manufacturer', 'fuel capacity', 'fuel efficiency', 'maximum range'], 'relations': ['yacht_to_performance_metrics (Yacht_ID)', 'yacht_to_manufacturer (Manufacturer_ID)', 'fuel_capacity_to_range (Fuel_Capacity / Fuel_Efficiency = Range)', 'average_range_by_manufacturer'], 'intent': 'calculate_max_range_and_average_by_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_capacity': 'liters (or gallons, depends on database)', 'fuel_efficiency': 'nautical miles per unit volume', 'range': 'nautical miles'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}], 'yacht.performance_metrics': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA common sense reasoning question is as follows:\nBased on the yacht's fuel capacity and fuel efficiency, calculate the maximum range (nautical miles) for each yacht, grouped by manufacturer ID, and list the average maximum range for yachts produced by each manufacturer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Manufacturer_ID, AVG(Fuel_Capacity / Fuel_Efficiency * Max_Speed) AS Avg_Max_Range FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID GROUP BY Manufacturer_ID;",
        "db_id": "yacht"
    },
    {
        "id": 70,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht displacement 1,000,000 tons', 'hull length 1,000 meters', 'width 100 meters', 'draft depth threshold 100 meters'], 'relations': ['displacement_to_draft (displacement → draft depth calculation)', 'dimension_to_hydrostatics (length, width → submerged volume)', 'threshold_exceedance (draft > 100m → risk assessment)'], 'intent': 'calculate_draft_depth_and_analyze_by_hull_material', 'reasoning_type': 'physical knowledge reasoning + common sense understanding reasoning', 'numerical_values': [1000000, 1000, 100, 100], 'units': {'displacement': 'tons (metric)', 'dimensions': 'meters', 'draft': 'meters (calculated via hydrostatic formula)', 'conversion': '1 ton = 1 m³ seawater volume (approximate)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Width', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '宽度（米）', 'examples': ['5.8', '5.5', '5.3', '5.6', '8.0']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}], 'yacht.performance_metrics': [{'column': 'Draft', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '吃水深度（米）', 'examples': ['2.2', '2.0', '2.5', '2.1', '1.9']}]}}\nA hypothetical reasoning question is as follows:\nA yacht has a displacement of 1,000,000 tons, a hull length of 1,000 meters, and a width of 100 meters. Calculate its draft depth, group it by hull material, and list the average draft depth for each hull material. If the draft depth exceeds 100 meters, what would happen?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Hull_Material, AVG(1000000 / (1000 * 100 * 1)) AS Avg_Draft FROM yachts GROUP BY Hull_Material;",
        "db_id": "yacht"
    },
    {
        "id": 71,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['voyages', 'yachts', 'fuel consumption', 'sailing distance', 'fuel efficiency'], 'relations': ['voyages_to_yachts (Yacht_ID)', 'fuel_efficiency_calculation (Fuel_Consumed / Distance)'], 'intent': 'calculate_average_fuel_efficiency_per_yacht_and_list_lowest_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'distance': 'nautical miles', 'fuel_consumption': 'liters', 'fuel_efficiency': 'liters/nautical mile'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}]}}\nA physical knowledge question is as follows:\nBased on the sailing distance and fuel consumption in the sailing records table, calculate the average fuel efficiency (liters/nautical mile) for each yacht, and list the 5 sailing records with the lowest fuel efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Voyage_ID, Yacht_ID, Fuel_Consumed / Distance AS Fuel_Efficiency FROM voyages ORDER BY Fuel_Efficiency DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 72,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'voyage', 'fuel efficiency'], 'relations': ['yacht_to_voyages (Yacht_ID → Voyage records)', 'distance_aggregation (Total sailing distance per yacht)', 'fuel_consumption_aggregation (Total fuel consumed per yacht)', 'fuel_efficiency_calculation (Fuel_Consumed / Distance)'], 'intent': 'calculate_total_distance_and_fuel_consumption_with_efficiency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'distance': 'nautical miles', 'fuel_consumption': 'liters', 'fuel_efficiency': 'liters per nautical mile (L/nmi)'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total sailing distance and total fuel consumption for each yacht, grouped by yacht ID, and list the average fuel efficiency (liters per nautical mile) for each yacht.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, SUM(Fuel_Consumed) / SUM(Distance) AS Avg_Fuel_Efficiency FROM voyages GROUP BY Yacht_ID;",
        "db_id": "yacht"
    },
    {
        "id": 73,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['crew role', 'sailing distance', 'average sailing distance'], 'relations': ['crew_role_to_voyages (Role → Voyage records via crew-yacht-voyage relationship)', 'average_distance_per_role (Role → AVG(Distance))', 'max_average_distance (MAX(AVG(Distance)))'], 'intent': 'calculate_average_sailing_distance_by_role_and_identify_longest', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'distance': 'Distance unit (as per voyages.Distance column in database schema, likely nautical miles or kilometers)', 'conversion': 'AVG(Distance) aggregation'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Crew_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '船员唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Role', 'type': 'ENUM', 'primary_key': False, 'comment': '船员角色', 'examples': ['Captain', 'Chef', 'First Mate', 'Engineer', 'Deckhand']}], 'yacht.voyages': [{'column': 'Captain_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA common sense reasoning question is as follows:\nBased on the crew roles in the crew table and the sailing distances in the voyage records table, calculate the average sailing distance for each crew role and list the crew role with the longest average sailing distance.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Role, AVG(v.Distance) AS Avg_Distance FROM crew c JOIN voyages v ON c.Yacht_ID = v.Yacht_ID GROUP BY c.Role ORDER BY Avg_Distance DESC LIMIT 1;",
        "db_id": "yacht"
    },
    {
        "id": 74,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht voyage', '1,000,000 liters of fuel', '1,000,000 nautical miles', '0.01 liters/nautical mile threshold'], 'relations': ['fuel_consumption_to_distance (Fuel_Efficiency = 1,000,000 liters / 1,000,000 nautical miles)', 'efficiency_comparison_threshold (0.01 liters/nautical mile)'], 'intent': 'calculate_fuel_efficiency_and_evaluate_reasonableness', 'reasoning_type': 'mathematical_logic_reasoning', 'numerical_values': [1000000, 1000000, 0.01], 'units': {'fuel_consumption': 'liters', 'distance': 'nautical miles', 'fuel_efficiency': 'liters/nautical mile', 'threshold': 'liters/nautical mile'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.5', '3.0', '2.8', '3.2', '2.0']}]}}\nA hypothetical reasoning question is as follows:\nA yacht consumed 1,000,000 liters of fuel during a voyage, sailing 1,000,000 nautical miles. Calculate its fuel efficiency (liters/nautical mile) and determine whether this fuel efficiency is reasonable. What would happen if the fuel efficiency were below 0.01 liters/nautical mile?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 / 1000000 AS Fuel_Efficiency, CASE WHEN 1000000 / 1000000 < 0.01 THEN '异常数据' ELSE '合理数据' END AS Status;",
        "db_id": "yacht"
    },
    {
        "id": 75,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'displacement', 'buoyancy force'], 'relations': ['yacht_to_displacement (Yacht_ID → Displacement)', 'yacht_to_buoyancy (Yacht_ID → Buoyancy_Force)', 'ratio_calculation (Buoyancy_Force / Displacement)'], 'intent': 'calculate_buoyancy_to_displacement_ratio_and_rank_yachts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Displacement', 'Buoyancy_Force'], 'units': {'displacement': 'unknown (as per database schema)', 'buoyancy_force': 'unknown (as per database schema)', 'ratio': 'unitless (Buoyancy_Force / Displacement)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Buoyancy_Force', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '浮力（牛顿）', 'examples': ['500000.0', '480000.0', '470000.0', '520000.0', '1500000.0']}]}}\nA physical knowledge question is as follows:\nBased on the displacement and hull length of the yachts, calculate the ratio of buoyancy to displacement for each yacht and list the top 5 yachts with the highest ratios.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, Buoyancy_Force / Displacement AS Buoyancy_Ratio FROM yachts ORDER BY Buoyancy_Ratio DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 76,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'total energy consumption', 'total sailing distance', 'average energy efficiency'], 'relations': ['yacht_to_voyages (Yacht_ID → voyages)', 'energy_to_distance_ratio (Total_Energy_Consumed / Distance)'], 'intent': 'calculate_energy_efficiency_ratio_by_yacht', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Total_Energy_Consumed', 'Distance'], 'units': {'energy': 'joules', 'distance': 'nautical miles', 'efficiency': 'joules per nautical mile'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Total_Energy_Consumed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '总能量消耗（焦耳）', 'examples': ['120000.0', '140000.0', '160000.0', '170000.0', '150000.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total energy consumption to total sailing distance for each yacht, grouped by yacht ID, and list the average energy efficiency (joules per nautical mile) for each yacht.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, SUM(Total_Energy_Consumed) / SUM(Distance) AS Avg_Energy_Efficiency FROM voyages GROUP BY Yacht_ID;",
        "db_id": "yacht"
    },
    {
        "id": 77,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['crew role', 'sailing distance', 'severe weather conditions'], 'relations': ['crew_role_to_voyage (crew.Role → voyages via Yacht_ID)', 'weather_condition_filter (strong winds/heavy waves)'], 'intent': 'calculate_role_average_distance_with_weather_filter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'distance': 'nautical miles/kilometers (implied by Distance field)', 'weather_conditions': 'textual severity classification (strong winds/heavy waves)'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Role', 'type': 'ENUM', 'primary_key': False, 'comment': '船员角色', 'examples': ['Captain', 'Chef', 'First Mate', 'Engineer', 'Deckhand']}], 'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Weather_Conditions', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '天气状况', 'examples': ['Clear', 'Partly Cloudy', 'Sunny', 'Overcast', 'Rainy']}]}}\nA common sense reasoning question is as follows:\nBased on the crew roles in the crew table and the weather conditions in the voyage records table, calculate the average sailing distance for each crew role during severe weather conditions (such as strong winds and heavy waves), and list the crew role with the longest average sailing distance.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Role, AVG(v.Distance) AS Avg_Distance FROM crew c JOIN voyages v ON c.Yacht_ID = v.Yacht_ID WHERE v.Weather_Conditions IN ('大风', '大浪') GROUP BY c.Role ORDER BY Avg_Distance DESC LIMIT 1;",
        "db_id": "yacht"
    },
    {
        "id": 78,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'energy_consumed 1,000,000 joules', 'distance 1,000,000 nautical miles', 'energy_efficiency_threshold 0.01 joules/nautical mile'], 'relations': ['energy_to_distance_ratio (energy_efficiency = 1,000,000 joules / 1,000,000 nautical miles)', 'efficiency_comparison (calculated_efficiency vs threshold)'], 'intent': 'calculate_energy_efficiency_and_assess_reasonableness', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 0.01], 'units': {'energy': 'joules', 'distance': 'nautical miles', 'energy_efficiency': 'joules/nautical mile', 'threshold': '0.01 joules/nautical mile'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Total_Energy_Consumed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '总能量消耗（焦耳）', 'examples': ['120000.0', '140000.0', '160000.0', '170000.0', '150000.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA hypothetical reasoning question is as follows:\nA yacht consumes 1,000,000 joules of energy during a voyage, sailing for 1,000,000 nautical miles. Calculate its energy efficiency (joules/nautical mile) and determine whether this energy efficiency is reasonable. If the energy efficiency is below 0.01 joules/nautical mile, what would happen?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 / 1000000 AS Energy_Efficiency, CASE WHEN 1000000 / 1000000 < 0.01 THEN '异常数据' ELSE '合理数据' END AS Status;",
        "db_id": "yacht"
    },
    {
        "id": 79,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'voyage', 'fuel efficiency', 'lease type'], 'relations': ['yacht_to_voyages (Yacht_ID → Voyage_ID)', 'voyage_to_fuel_efficiency (Distance & Fuel_Consumed → Fuel_Efficiency)', 'yacht_to_charters (Yacht_ID → Charter_Type)'], 'intent': 'calculate_average_fuel_efficiency_per_yacht_grouped_by_lease_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Distance', 'Fuel_Consumed'], 'units': {'distance': 'nautical miles', 'fuel_consumption': 'liters', 'fuel_efficiency': 'liters/nautical mile (Fuel_Consumed / Distance)'}, 'foreign_keys': [{'fk_table': 'charters', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'charters', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'charters', 'pk_column': 'Charter_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}], 'yacht.charters': [{'column': 'Charter_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '租赁类型', 'examples': ['Weekly', 'Daily', 'Monthly']}]}}\nA physical knowledge question is as follows:\nBased on the sailing distance and fuel consumption recorded in the voyage log, calculate the average fuel efficiency (liters/nautical mile) per yacht, group by lease type, and list the average fuel efficiency for each lease type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Charter_Type, AVG(v.Fuel_Consumed / v.Distance) AS Avg_Fuel_Efficiency FROM voyages v JOIN charters c ON v.Yacht_ID = c.Yacht_ID GROUP BY c.Charter_Type;",
        "db_id": "yacht"
    },
    {
        "id": 80,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'charter', 'voyage'], 'relations': ['yacht_to_charters (Yacht_ID)', 'yacht_to_voyages (Yacht_ID)', 'cost_to_distance (Total_Cost / Distance)'], 'intent': 'calculate_rental_cost_efficiency_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Total_Cost', 'Distance'], 'units': {'cost': 'USD', 'distance': 'nautical miles', 'efficiency': 'USD/nautical mile'}, 'foreign_keys': [{'fk_table': 'charters', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'charters', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'charters', 'pk_column': 'Charter_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.charters': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Total_Cost', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '总费用（美元）', 'examples': ['15000.0', '12000.0', '20000.0', '18000.0', '9000.0']}], 'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total rental cost to total sailing distance for each yacht, grouped by yacht ID, and list the average rental cost efficiency (USD/nautical mile) for each yacht.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT v.Yacht_ID, SUM(c.Total_Cost) / SUM(v.Distance) AS Avg_Charter_Cost_Efficiency FROM voyages v JOIN charters c ON v.Yacht_ID = c.Yacht_ID GROUP BY v.Yacht_ID;",
        "db_id": "yacht"
    },
    {
        "id": 81,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lease type (Charter_Type)', 'sailing distance (Distance)'], 'relations': ['charter_to_voyage (via Yacht_ID foreign key)', 'lease_type_to_distance (aggregation relationship)'], 'intent': 'calculate_average_sailing_distance_by_lease_type_and_find_max', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'distance': 'unit not explicitly stated (requires verification from schema)', 'aggregation': 'average (mean) calculation'}, 'foreign_keys': [{'fk_table': 'charters', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'charters', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'charters', 'pk_column': 'Charter_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.charters': [{'column': 'Charter_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '租赁类型', 'examples': ['Weekly', 'Daily', 'Monthly']}, {'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}], 'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA common sense reasoning question is as follows:\nBased on the lease type in the lease records table and the sailing distance in the voyage records table, calculate the average sailing distance for each lease type and list the lease type with the longest average sailing distance.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Charter_Type, AVG(v.Distance) AS Avg_Distance FROM charters c JOIN voyages v ON c.Yacht_ID = v.Yacht_ID GROUP BY c.Charter_Type ORDER BY Avg_Distance DESC LIMIT 1;",
        "db_id": "yacht"
    },
    {
        "id": 82,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['leasing cost $1,000,000', 'sailed distance 1,000,000 nautical miles', 'leasing cost efficiency $/nautical mile', 'threshold $0.01/nautical mile'], 'relations': ['cost_to_charter (Total_Cost → charters)', 'distance_to_voyage (Distance → voyages)', 'efficiency_calculation (Total_Cost / Distance)', 'threshold_comparison (efficiency vs $0.01)'], 'intent': 'calculate_leasing_cost_efficiency_and_evaluate_threshold', 'reasoning_type': 'mathematical logic reasoning, common sense understanding reasoning', 'numerical_values': [1000000, 1000000, 0.01], 'units': {'cost': '$ (USD)', 'distance': 'nautical miles', 'efficiency': '$/nautical mile', 'threshold': '$0.01/nautical mile'}, 'foreign_keys': [{'fk_table': 'charters', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'charters', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'charters', 'pk_column': 'Charter_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}], 'tableinfo': {'yacht.charters': [{'column': 'Total_Cost', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '总费用（美元）', 'examples': ['15000.0', '12000.0', '20000.0', '18000.0', '9000.0']}], 'yacht.voyages': [{'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}]}}\nA hypothetical reasoning question is as follows:\nA yacht paid $1,000,000 in one lease and sailed 1,000,000 nautical miles. Calculate its leasing cost efficiency ($/nautical mile) and determine whether this leasing cost efficiency is reasonable. What would happen if the leasing cost efficiency falls below $0.01/nautical mile?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 / 1000000 AS Charter_Cost_Efficiency, CASE WHEN 1000000 / 1000000 < 0.01 THEN '异常数据' ELSE '合理数据' END AS Status;",
        "db_id": "yacht"
    },
    {
        "id": 83,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'crew member'], 'relations': ['yacht_to_crew (Yacht_ID → Crew relationship)', 'salary_to_experience_ratio (calculated metric)'], 'intent': 'calculate_crew_salary_efficiency_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Crew.Salary', 'Crew.Experience_Years'], 'units': {'salary': 'USD (United States Dollars)', 'experience': 'years', 'efficiency_ratio': 'USD/year (implied by calculation)'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Salary', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '薪资（美元/月）', 'examples': ['8000.0', '5000.0', '7000.0', '7500.0', '4000.0']}, {'column': 'Experience_Years', 'type': 'INTEGER', 'primary_key': False, 'comment': '工作经验（年）', 'examples': ['20', '10', '15', '12', '5']}], 'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA physical knowledge question is as follows:\nBased on the crew's salary and work experience, calculate the ratio of the average salary to the average work experience for each yacht, grouped by yacht ID, and list the crew salary efficiency (USD/year) for each yacht.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, AVG(Salary) / AVG(Experience_Years) AS Salary_Efficiency FROM crew GROUP BY Yacht_ID;",
        "db_id": "yacht"
    },
    {
        "id": 84,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Yacht_ID', 'Crew_Salary', 'Work_Experience_Years'], 'relations': ['yacht_to_crew (Yacht_ID → crew members)', 'salary_to_experience_ratio (Total_Salary / Total_Experience)'], 'intent': 'calculate_crew_salary_efficiency_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Total_Crew_Salary', 'Total_Work_Experience'], 'units': {'salary': 'USD (United States Dollar)', 'experience': 'years', 'efficiency_ratio': 'USD/year'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Salary', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '薪资（美元/月）', 'examples': ['8000.0', '5000.0', '7000.0', '7500.0', '4000.0']}, {'column': 'Experience_Years', 'type': 'INTEGER', 'primary_key': False, 'comment': '工作经验（年）', 'examples': ['20', '10', '15', '12', '5']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total crew salary to total work experience for each yacht, grouped by yacht ID, and list the crew salary efficiency (USD/year) for each yacht.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, SUM(Salary) / SUM(Experience_Years) AS Salary_Efficiency FROM crew GROUP BY Yacht_ID;",
        "db_id": "yacht"
    },
    {
        "id": 85,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['crew roles', 'salaries', 'average salary', 'highest average salary'], 'relations': ['role_to_salary (mapping crew roles to their respective salaries)', 'average_calculation (computing average per role)', 'max_comparison (comparing averages across roles)'], 'intent': 'calculate_average_salary_per_role_and_identify_highest', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'salary': 'currency unit (implied by database schema)', 'average_salary': 'currency unit per role'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Role', 'type': 'ENUM', 'primary_key': False, 'comment': '船员角色', 'examples': ['Captain', 'Chef', 'First Mate', 'Engineer', 'Deckhand']}, {'column': 'Salary', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '薪资（美元/月）', 'examples': ['8000.0', '5000.0', '7000.0', '7500.0', '4000.0']}]}}\nA common sense reasoning question is as follows:\nBased on the crew roles and salaries in the crew table, calculate the average salary for each crew role and list the crew role with the highest average salary.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Role, AVG(Salary) AS Avg_Salary FROM crew GROUP BY Role ORDER BY Avg_Salary DESC LIMIT 1;",
        "db_id": "yacht"
    },
    {
        "id": 86,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['crew member', 'salary $1,000,000/month', 'experience 100 years', 'salary efficiency threshold $1,000/year'], 'relations': ['salary_to_experience ($1,000,000/month → 100 years)', 'efficiency_threshold_comparison'], 'intent': 'calculate_salary_efficiency_and_evaluate_reasonableness', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000, 100, 1000], 'units': {'salary': '$/month (convert to $/year via ×12)', 'efficiency': '$/year (salary_per_year / experience_years)', 'threshold': '$1,000/year'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Salary', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '薪资（美元/月）', 'examples': ['8000.0', '5000.0', '7000.0', '7500.0', '4000.0']}, {'column': 'Experience_Years', 'type': 'INTEGER', 'primary_key': False, 'comment': '工作经验（年）', 'examples': ['20', '10', '15', '12', '5']}]}}\nA hypothetical reasoning question is as follows:\nA crew member's salary is $1,000,000 per month with 100 years of work experience. Calculate their salary efficiency ($/year) and determine whether this salary efficiency is reasonable. If the salary efficiency is below $1,000/year, what would happen?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000000 * 12 / 100 AS Salary_Efficiency, CASE WHEN 1000000 * 12 / 100 < 1000 THEN '异常数据' ELSE '合理数据' END AS Status;",
        "db_id": "yacht"
    },
    {
        "id": 87,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'weight', 'max speed'], 'relations': ['yacht_id_to_weight (Yacht_ID → Weight)', 'yacht_id_to_max_speed (Yacht_ID → Max_Speed)'], 'intent': 'calculate_kinetic_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.5], 'units': {'weight': 'kg (assumed standard unit for mass)', 'max_speed': 'm/s (assumed standard unit for velocity)', 'kinetic_energy': 'J (joules = kg·m²/s²)', 'conversion': 'KE = 0.5 * mass * velocity²'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy (in joules) of each yacht based on its weight and maximum speed, group the results by yacht ID, and list the kinetic energy for each yacht.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, 0.5 * Weight * 1000 * POWER(Max_Speed * 0.5144, 2) AS Kinetic_Energy FROM yachts;",
        "db_id": "yacht"
    },
    {
        "id": 88,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total crew salary', 'yacht price', 'yacht ID'], 'relations': ['yacht_to_crew (Yacht_ID → crew members)', 'salary_to_yacht_price (total_crew_salary / yacht_price)'], 'intent': 'calculate_salary_to_price_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['total_crew_salary', 'yacht_price'], 'units': {'salary': 'monetary unit (e.g., USD)', 'price': 'monetary unit (e.g., USD)', 'ratio': 'unitless (percentage)'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Salary', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '薪资（美元/月）', 'examples': ['8000.0', '5000.0', '7000.0', '7500.0', '4000.0']}], 'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of the total crew salary to the yacht price for each yacht, grouped by yacht ID, and list the crew salary percentage for each yacht.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Yacht_ID, (SUM(c.Salary) / y.Price) * 100 AS Crew_Salary_Ratio FROM crew c JOIN yachts y ON c.Yacht_ID = y.Yacht_ID GROUP BY c.Yacht_ID;",
        "db_id": "yacht"
    },
    {
        "id": 89,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['crew roles', 'yacht passenger capacity'], 'relations': ['crew_to_yacht (Crew.Yacht_ID → Yachts.Yacht_ID)'], 'intent': 'calculate_average_passengers_per_crew_role_and_identify_highest', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'passenger_capacity': 'unitless (count of passengers)', 'average_passengers': 'unitless (derived value)'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.crew': [{'column': 'Role', 'type': 'ENUM', 'primary_key': False, 'comment': '船员角色', 'examples': ['Captain', 'Chef', 'First Mate', 'Engineer', 'Deckhand']}], 'yacht.yachts': [{'column': 'Passenger_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客容量', 'examples': ['12', '10', '14', '20', '18']}]}}\nA common sense reasoning question is as follows:\nBased on the crew roles in the crew table and the passenger capacity in the yacht table, calculate the average number of passengers served by each crew role, and list the crew role with the highest average number of passengers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.Role, AVG(y.Passenger_Capacity) AS Avg_Passenger_Per_Role FROM crew c JOIN yachts y ON c.Yacht_ID = y.Yacht_ID GROUP BY c.Role ORDER BY Avg_Passenger_Per_Role DESC LIMIT 1;",
        "db_id": "yacht"
    },
    {
        "id": 90,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'weight 1,000,000 tons', 'maximum speed 1,000 knots', 'threshold 10^12 joules'], 'relations': ['mass_to_velocity (mass and velocity for KE calculation)', 'ke_compared_to_threshold (calculated KE vs 10^12 J threshold)'], 'intent': 'calculate_kinetic_energy_and_assess_reasonableness', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 1000, 1000000000000.0], 'units': {'mass': 'tons (converted to kg: 1,000,000 tons = 1e9 kg)', 'velocity': 'knots (converted to m/s: 1,000 knots ≈ 514.44 m/s)', 'energy': 'joules (kg·m²/s²)', 'conversion': '1 knot ≈ 0.514444 m/s; 1 ton = 1000 kg'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}], 'yacht.performance_metrics': [{'column': 'Kinetic_Energy', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动能（焦耳）', 'examples': ['150000.0', '140000.0', '160000.0', '145000.0', '135000.0']}]}}\nA hypothetical reasoning question is as follows:\nA yacht weighs 1,000,000 tons and has a maximum speed of 1,000 knots. Calculate its kinetic energy (in joules) and determine whether this kinetic energy is reasonable. If the kinetic energy exceeds 10^12 joules, what would happen?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * 1000000 * 1000 * POWER(1000 * 0.5144, 2) AS Kinetic_Energy, CASE WHEN 0.5 * 1000000 * 1000 * POWER(1000 * 0.5144, 2) > 1e12 THEN '异常数据' ELSE '合理数据' END AS Status;",
        "db_id": "yacht"
    },
    {
        "id": 91,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht with displacement 500 tons', 'buoyancy force 4,905,000 N', 'water density 1,000 kg/m³', 'gravitational acceleration 9.81 m/s²'], 'relations': ['yacht_to_performance_metrics (Yacht_ID → Performance_ID)', 'displacement_to_buoyancy (500 tons → 4,905,000 N)'], 'intent': 'retrieve_draft_depth_from_database', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [500, 4905000, 1000, 9.81], 'units': {'displacement': 'tons (1 ton = 1000 kg)', 'buoyancy': 'Newtons (N)', 'density': 'kg/m³', 'acceleration': 'm/s²', 'draft': 'meters (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Buoyancy_Force', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '浮力（牛顿）', 'examples': ['500000.0', '480000.0', '470000.0', '520000.0', '1500000.0']}], 'yacht.performance_metrics': [{'column': 'Draft', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '吃水深度（米）', 'examples': ['2.2', '2.0', '2.5', '2.1', '1.9']}]}}\nA physical knowledge question is as follows:\nIf a yacht has a displacement of 500 tons and a buoyancy of 4,905,000 Newtons, find the draft depth of the yacht in water. The density of water is given as 1,000 kg/m³, and the gravitational acceleration is 9.81 m/s².\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Displacement, Buoyancy_Force FROM yachts WHERE Yacht_ID = ?;",
        "db_id": "yacht"
    },
    {
        "id": 92,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'maximum speed 30 knots', 'engine power 2000 horsepower', 'fuel efficiency 50 liters/hour', 'duration 24 hours', 'energy content 34.2 megajoules/liter'], 'relations': ['speed_to_fuel_efficiency (30 knots → 50 L/h)', 'fuel_consumption (50 L/h × 24 h = 1200 liters)', 'energy_consumption (1200 liters × 34.2 MJ/L = 41,040 MJ)'], 'intent': 'calculate_fuel_and_energy_consumption', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30, 2000, 50, 24, 34.2], 'units': {'speed': 'knots', 'power': 'horsepower (HP) and watts (conversion provided)', 'fuel_efficiency': 'liters per hour (L/h)', 'time': 'hours', 'energy_content': 'megajoules per liter (MJ/L)', 'conversion': '1 HP = 745.7 W, 1 liter fuel = 34.2 MJ'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}], 'yacht.yachts': [{'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Engine_Power', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '发动机功率（HP）', 'examples': ['1500.0', '1400.0', '1450.0', '1550.0', '3000.0']}]}}\nA mathematical logic question is as follows:\nA yacht has a maximum speed of 30 knots, an engine power of 2000 horsepower, and a fuel efficiency of 50 liters per hour. If the yacht sails continuously at maximum speed for 24 hours, calculate its total fuel consumption and total energy consumption. Given: 1 horsepower = 745.7 watts, and the energy content of 1 liter of fuel is 34.2 megajoules.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Max_Speed, Engine_Power, Fuel_Efficiency FROM yachts WHERE Yacht_ID = ?;",
        "db_id": "yacht"
    },
    {
        "id": 93,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht models', 'carbon fiber hull material', 'passenger capacity > 10'], 'relations': ['yacht_to_attributes (Yacht_ID → Model/Year/Hull_Material/Passenger_Capacity/Price)'], 'intent': 'retrieve_yacht_models_with_filters', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [10], 'units': {'passenger_capacity': 'people', 'production_year': 'year'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}, {'column': 'Passenger_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客容量', 'examples': ['12', '10', '14', '20', '18']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA common sense reasoning question is as follows:\nQuery all yacht models with hull material as \"carbon fiber\" and passenger capacity exceeding 10 people, including the model name, production year, hull material, passenger capacity, and price, sorted by production year in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Year, Hull_Material, Passenger_Capacity, Price FROM yachts WHERE Hull_Material = '碳纤维' AND Passenger_Capacity > 10 ORDER BY Year ASC;",
        "db_id": "yacht"
    },
    {
        "id": 94,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht models', 'engine power', 'fuel capacity', 'maximum speed'], 'relations': ['engine_power_threshold (500 horsepower)', 'fuel_capacity_threshold (5000 liters)'], 'intent': 'filter_and_sort_yachts_by_performance_specifications', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [500, 5000], 'units': {'engine_power': 'horsepower (hp)', 'fuel_capacity': 'liters (L)', 'max_speed': 'knots (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Engine_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '发动机类型', 'examples': ['Inboard', 'Outboard']}, {'column': 'Engine_Power', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '发动机功率（HP）', 'examples': ['1500.0', '1400.0', '1450.0', '1550.0', '3000.0']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA hypothetical reasoning question is as follows:\nQuery all yacht models with engine power exceeding 500 horsepower and fuel capacity exceeding 5000 liters, including their engine type, engine power, fuel capacity, and maximum speed, sorted in descending order by maximum speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Engine_Type, Engine_Power, Fuel_Capacity, Max_Speed FROM yachts WHERE Engine_Power > 500 AND Fuel_Capacity > 5000 ORDER BY Max_Speed DESC;",
        "db_id": "yacht"
    },
    {
        "id": 95,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'production year', 'price', 'hull material'], 'relations': ['yacht_production_year >= 2018', 'yacht_price < 1000000 USD'], 'intent': 'filter_and_sort_yachts', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2018, 1000000], 'units': {'price': 'USD (US Dollars)', 'year': 'Calendar Year'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}]}}\nA physical knowledge question is as follows:\nThe query returns yacht models, production years, prices, and hull materials by filtering for yachts produced in 2018 or later with prices under 1 million US dollars, sorted in ascending order by price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Year, Price, Hull_Material FROM yachts WHERE Year >= 2018 AND Price < 1000000 ORDER BY Price ASC;",
        "db_id": "yacht"
    },
    {
        "id": 96,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'max speed', 'fuel consumption rate'], 'relations': ['yacht_to_performance_metrics (Yacht_ID)', 'speed_to_fuel_efficiency (Max_Speed → Fuel_Efficiency)'], 'intent': 'calculate_fuel_consumption_rate_at_max_speed_and_rank_yachts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'speed': 'knots (from yachts.Max_Speed)', 'fuel_consumption_rate': 'units not explicitly defined - inferred from performance_metrics.Fuel_Efficiency (possibly L/h or gal/h)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}], 'yacht.performance_metrics': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA mathematical logic question is as follows:\nCalculate the fuel consumption rate of each yacht at maximum speed and identify the top 3 yachts with the lowest fuel consumption rates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, (Fuel_Efficiency / `Range`) AS Fuel_Consumption_Rate FROM performance_metrics ORDER BY Fuel_Consumption_Rate ASC LIMIT 3;",
        "db_id": "yacht"
    },
    {
        "id": 97,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'maximum speed', '100 hours', 'fuel consumption'], 'relations': ['yacht_to_max_speed (Yacht_ID → Max_Speed)', 'yacht_to_fuel_efficiency (Yacht_ID → Fuel_Efficiency)', 'time_duration (100 hours)'], 'intent': 'calculate_hypothetical_total_fuel_consumption_and_rank_top_5_yachts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'time': 'hours', 'speed': 'unit from database (e.g., knots or km/h)', 'fuel_efficiency': 'unit from database (e.g., km/l or nautical miles/gallon)', 'fuel_consumption': 'unit derived from (speed * time) / fuel_efficiency (e.g., liters)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA common sense reasoning question is as follows:\nCalculate the total fuel consumption for each yacht, assuming each yacht sails continuously at maximum speed for 100 hours, and identify the top 5 yachts with the highest total fuel consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID, (Fuel_Efficiency / `Range`) * 100 AS Total_Fuel_Consumption FROM performance_metrics ORDER BY Total_Fuel_Consumption DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 98,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel consumption', 'distance'], 'relations': ['yacht_to_voyage (Yacht_ID → voyages)', 'fuel_per_km (Fuel_Consumed / Distance)'], 'intent': 'calculate_fuel_consumption_per_kilometer_and_identify_top_3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Fuel_Consumed', 'Distance'], 'units': {'Fuel_Consumed': 'liters (assumed unit)', 'Distance': 'kilometers (assumed unit)', 'fuel_per_km': 'liters/km (derived unit)'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}], 'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the fuel consumption per kilometer for each yacht, and identify the top 3 yachts with the lowest fuel consumption per kilometer.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Yacht_ID,  (Fuel_Efficiency / `Range`) AS Fuel_Consumption_per_Kilometer FROM performance_metrics ORDER BY Fuel_Consumption_per_Kilometer ASC LIMIT 3;",
        "db_id": "yacht"
    },
    {
        "id": 99,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht at maximum speed', 'maximum speed 30 knots', 'displacement'], 'relations': ['yacht_to_displacement', 'yacht_to_speed', 'kinetic_energy_calculation'], 'intent': 'calculate_kinetic_energy', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30], 'units': {'speed': 'knots → m/s (1 knot = 0.514444 m/s)', 'displacement': 'Newtons (N, kg·m/s²)', 'kinetic_energy': 'Joules (J, kg·m²/s²)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}]}}\nA physical knowledge question is as follows:\nA yacht has a maximum speed of 30 knots, an engine power of 1,200 horsepower, a drag coefficient of 0.8, a hull length of 25 meters, and a beam of 6 meters. Calculate the kinetic energy of the yacht at its maximum speed.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Passenger_Capacity, Water_Capacity FROM yachts WHERE Yacht_ID = 1;",
        "db_id": "yacht"
    },
    {
        "id": 100,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel efficiency 50 liters/hour', 'fuel capacity 5,000 liters', 'designed cruising range 1,000 nautical miles', 'average speed 20 knots'], 'relations': ['fuel_efficiency_to_range (50 L/h → time endurance calculation)', 'speed_to_distance (20 knots * time endurance → actual range)', 'actual_vs_designed (1,000 nmi vs calculated range)'], 'intent': 'verify_actual_cruising_range_against_design', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50, 5000, 1000, 20], 'units': {'fuel_efficiency': 'liters/hour', 'fuel_capacity': 'liters', 'cruising_range': 'nautical miles', 'speed': 'knots (nautical miles/hour)', 'time_endurance': 'hours'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}, {'column': 'Range', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '续航里程（海里）', 'examples': ['500.0', '450.0', '550.0', '480.0', '470.0']}], 'yacht.yachts': [{'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}]}}\nA mathematical logic question is as follows:\nThe yacht has a fuel efficiency of 50 liters per hour and a fuel capacity of 5,000 liters, with a designed cruising range of 1,000 nautical miles. If the yacht sails at an average speed of 20 knots, determine whether its actual cruising range meets the designed cruising range.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Engine_Power, Fuel_Efficiency, Fuel_Capacity FROM yachts WHERE Yacht_ID = 2;",
        "db_id": "yacht"
    },
    {
        "id": 101,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'freshwater capacity 2000 liters', '10 passengers', '50 liters/person/day', '7-day voyage'], 'relations': ['passenger_to_water_consumption (10 × 50 = 500 liters/day)', 'total_consumption_over_time (500 × 7 = 3500 liters)', 'capacity_comparison (2000 < 3500)'], 'intent': 'determine_freshwater_sufficiency_for_voyage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2000, 10, 50, 7], 'units': {'water_capacity': 'liters', 'consumption_rate': 'liters/person/day', 'time': 'days'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Water_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '淡水容量（升）', 'examples': ['1000.0', '950.0', '980.0', '1020.0', '2500.0']}]}}\nA common sense reasoning question is as follows:\nA yacht has a freshwater capacity of 2000 liters and can accommodate 10 passengers. If each person consumes 50 liters of fresh water per day, can the yacht's freshwater supply support a 7-day voyage?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 0.5 * (Displacement * 1000) * POWER((Max_Speed * 0.5144), 2) AS Kinetic_Energy FROM yachts WHERE Yacht_ID = 1;",
        "db_id": "yacht"
    },
    {
        "id": 102,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht with engine power 5000 HP', 'fuel capacity 100000 liters', 'maximum speed 50 knots', 'fuel consumption rate 1000 liters/hour', 'transpacific voyage 8000 nautical miles'], 'relations': ['yacht_to_engine_specs (engine_power → 5000 HP)', 'yacht_to_fuel_specs (fuel_capacity → 100000 liters)', 'speed_to_distance (50 knots over 8000 nautical miles)', 'fuel_consumption_to_time (1000 liters/hour × voyage duration)'], 'intent': 'determine_fuel_sufficiency_for_voyage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000, 100000, 50, 1000, 8000], 'units': {'engine_power': 'horsepower (HP)', 'fuel_capacity': 'liters (L)', 'speed': 'knots (nautical miles/hour)', 'distance': 'nautical miles (NM)', 'conversion': '1 knot = 1 nautical mile/hour; 8000 NM / 50 knots = 160 hours'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Engine_Power', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '发动机功率（HP）', 'examples': ['1500.0', '1400.0', '1450.0', '1550.0', '3000.0']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA hypothetical reasoning question is as follows:\nA yacht has an engine power of 5000 horsepower and a fuel capacity of 100,000 liters. If it sails at maximum speed of 50 knots with a fuel consumption rate of 1000 liters per hour, determine whether the yacht can complete a transpacific voyage (approximately 8000 nautical miles) before running out of fuel.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Fuel_Capacity / Fuel_Efficiency) AS Actual_Range, `Range` AS Designed_Range FROM yachts JOIN performance_metrics ON yachts.Yacht_ID = performance_metrics.Yacht_ID WHERE yachts.Yacht_ID = 1;",
        "db_id": "yacht"
    },
    {
        "id": 103,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['hull length 30 meters', 'width 7 meters', 'draft depth 2 meters', 'yacht displacement volume'], 'relations': ['length_to_displacement (30m → volume calculation)', 'width_to_displacement (7m → volume calculation)', 'draft_to_displacement (2m → volume calculation)'], 'intent': 'calculate_displacement_volume', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [30, 7, 2], 'units': {'length': 'meters', 'volume': 'cubic meters (m³)', 'conversion': 'Displacement volume ≈ Length × Width × Draft × Block Coefficient (assumed 0.6 for typical yachts)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Width', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '宽度（米）', 'examples': ['5.8', '5.5', '5.3', '5.6', '8.0']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}], 'yacht.performance_metrics': [{'column': 'Draft', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '吃水深度（米）', 'examples': ['2.2', '2.0', '2.5', '2.1', '1.9']}]}}\nA physical knowledge question is as follows:\nA yacht has a hull length of 30 meters, a width of 7 meters, and a draft depth of 2 meters. What is the displacement volume of the yacht in water?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Water_Capacity, Passenger_Capacity * 50 * 7 AS Total_Water_Needed FROM yachts WHERE Yacht_ID = 1;",
        "db_id": "yacht"
    },
    {
        "id": 104,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'voyage', 'fuel efficiency 60 L/h', 'fuel capacity 8000 L', 'average speed 25 knots', 'distance 3000 nautical miles'], 'relations': ['yacht_to_performance_metrics (Fuel_Efficiency)', 'voyage_to_distance (Distance=3000 nautical miles)', 'voyage_to_speed (Average_Speed=25 knots)'], 'intent': 'calculate_fuel_required_for_voyage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 8000, 25, 3000], 'units': {'fuel_efficiency': 'liters per hour (L/h)', 'distance': 'nautical miles (nmi)', 'speed': 'knots (nmi/h)', 'time': 'hours (h)', 'fuel_capacity': 'liters (L)', 'conversion': ['Time = Distance / Speed = 3000 / 25 = 120 hours', 'Fuel_Required = Fuel_Efficiency * Time = 60 * 120 = 7200 liters']}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}], 'yacht.voyages': [{'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Average_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '平均速度（节）', 'examples': ['30.0', '25.0', '27.5', '28.0', '26.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA mathematical logic question is as follows:\nA yacht has a fuel efficiency of 60 liters per hour and a fuel capacity of 8000 liters. If it sails at an average speed of 25 knots, how much fuel is required to complete a 3000-nautical-mile voyage?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Fuel_Capacity / 1000) * 50 AS Possible_Distance, 8000 AS Required_Distance FROM yachts WHERE Yacht_ID = 1;",
        "db_id": "yacht"
    },
    {
        "id": 105,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Hull_Material', 'Price'], 'relations': ['hull_material_to_price (grouping by Hull_Material to calculate average Price)'], 'intent': 'calculate_average_price_per_hull_material', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'Price': 'currency (assumed USD based on typical database schema for pricing)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA common sense reasoning question is as follows:\n?Calculate the average price for each hull material\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Hull_Material, AVG(Price) AS Avg_Price FROM yachts GROUP BY Hull_Material;",
        "db_id": "yacht"
    },
    {
        "id": 106,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'length', 'maximum speed'], 'relations': ['yacht_to_attributes (Yacht_ID → Model, Length, Max_Speed)'], 'intent': 'list_yacht_specifications', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [30], 'units': {'length': 'meters', 'speed': 'knots (assumed unit for Max_Speed in yachts table)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA hypothetical reasoning question is as follows:\nList the model, length, and maximum speed of all yachts exceeding 30 meters in length.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Length, Max_Speed FROM yachts WHERE Length > 30;",
        "db_id": "yacht"
    },
    {
        "id": 107,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'Fiberglass'], 'relations': ['yacht_to_hull_material (yachts → Hull_Material=Fiberglass)'], 'intent': 'retrieve_yacht_specifications_by_hull_material', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'length': 'meters (assumed standard unit)', 'width': 'meters (assumed standard unit)', 'hull_material': 'material type (dimensionless)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Width', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '宽度（米）', 'examples': ['5.8', '5.5', '5.3', '5.6', '8.0']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}]}}\nA physical knowledge question is as follows:\nList the model, length, and width of all yachts that use \"Fiberglass\" as their hull material.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Length, Width FROM yachts WHERE Hull_Material = 'Fiberglass';",
        "db_id": "yacht"
    },
    {
        "id": 108,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'production year', 'model', 'hull material'], 'relations': ['yacht_production_year_condition (Year > 2020)'], 'intent': 'retrieve_yacht_specifications', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2020], 'units': {'production_year': 'year (YYYY format)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}]}}\nA mathematical logic question is as follows:\nFind the model, production year, and hull material of all yachts with a production year after 2020.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Year, Hull_Material FROM yachts WHERE Year > 2020;",
        "db_id": "yacht"
    },
    {
        "id": 109,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['charter records', 'yacht passenger capacity'], 'relations': ['charter_to_yacht (Charters.Yacht_ID → Yachts.Yacht_ID)', 'passenger_count_vs_capacity (Passenger_Count > Passenger_Capacity)'], 'intent': 'identify_invalid_rental_records_with_overcapacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Passenger_Count', 'Passenger_Capacity'], 'units': {'passenger_count': 'unitless (count)', 'capacity_comparison': 'boolean condition (Passenger_Count > Passenger_Capacity)'}, 'foreign_keys': [{'fk_table': 'charters', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'charters', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'charters', 'pk_column': 'Charter_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.charters': [{'column': 'Charter_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '租赁记录唯一标识', 'examples': ['1', '11', '12', '13', '2']}, {'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '客户ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Start_Date', 'type': 'DATE', 'primary_key': False, 'comment': '租赁开始日期', 'examples': ['2023-10-01']}, {'column': 'End_Date', 'type': 'DATE', 'primary_key': False, 'comment': '租赁结束日期', 'examples': ['2023-10-07']}, {'column': 'Passenger_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客数量', 'examples': ['8', '6', '10', '12', '4']}], 'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Passenger_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客容量', 'examples': ['12', '10', '14', '20', '18']}]}}\nA common sense reasoning question is as follows:\nRetrieve all rental records where the number of passengers exceeds the yacht's passenger capacity, and return the detailed information of these records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.* FROM charters c JOIN yachts y ON c.Yacht_ID = y.Yacht_ID WHERE c.Passenger_Count > y.Passenger_Capacity;",
        "db_id": "yacht"
    },
    {
        "id": 110,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel capacity', 'fuel consumption rate', 'fuel consumption time', '1000 hours'], 'relations': ['yacht_to_performance_metrics (Yacht_ID)', 'fuel_consumption_time_calculation (Fuel_Capacity / Fuel_Efficiency)', 'threshold_exceedance (Fuel_Consumption_Time > 1000)'], 'intent': 'calculate_fuel_consumption_time_and_filter_yachts', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'fuel_capacity': 'unit (e.g., liters, gallons) from yachts.Fuel_Capacity', 'fuel_consumption_rate': 'unit/hour (from performance_metrics.Fuel_Efficiency)', 'time': 'hours (Fuel_Capacity / Fuel_Efficiency)', 'threshold': '1000 hours'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}], 'yacht.performance_metrics': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the fuel consumption time of yachts at maximum speed (fuel capacity / fuel consumption rate), and return information on yachts with fuel consumption time exceeding 1000 hours. The fuel consumption rate is taken as the maximum value from the performance metrics table.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.*, y.Fuel_Capacity / (SELECT MAX(p.Fuel_Efficiency) FROM performance_metrics p WHERE p.Yacht_ID = y.Yacht_ID) AS Fuel_Consumption_Time FROM yachts y WHERE y.Fuel_Capacity / (SELECT MAX(p.Fuel_Efficiency) FROM performance_metrics p WHERE p.Yacht_ID = y.Yacht_ID) > 1000;",
        "db_id": "yacht"
    },
    {
        "id": 111,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'displacement', 'max_speed', 'kinetic_energy'], 'relations': ['yacht_to_displacement (Yacht → Displacement)', 'yacht_to_max_speed (Yacht → Max_Speed)', 'kinetic_energy_formula (mass*velocity²*0.5)'], 'intent': 'calculate_kinetic_energy_and_rank_top_yachts', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [0.5, 1000, 0.514444], 'units': {'mass': 'kg (Displacement * 1000)', 'velocity': 'm/s (knots → 1 knot = 0.514444 m/s)', 'kinetic_energy': 'joules (kg·m²/s²)', 'conversion_factors': {'displacement_to_mass': '×1000', 'knots_to_mps': '×0.514444'}}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each yacht and return the information of the top 5 yachts with the highest kinetic energy. The kinetic energy formula is 0.5 * mass * velocity², where mass is estimated by displacement (displacement * 1000), and velocity is the maximum speed (converted from knots to meters/second).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.*, 0.5 * (y.Displacement * 1000) * POWER((y.Max_Speed * 0.5144), 2) AS Kinetic_Energy FROM yachts y ORDER BY Kinetic_Energy DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 112,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'fuel consumption rate', 'voyage data'], 'relations': ['yacht_to_voyages (Yacht_ID → Voyage records)', 'fuel_consumption_rate_calculation (Fuel_Consumed / Distance)'], 'intent': 'calculate_and_sort_fuel_consumption_rates', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'fuel_consumption': 'liters', 'distance': 'nautical miles', 'fuel_consumption_rate': 'liters/nautical mile'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Fuel_Consumed', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃油消耗（升）', 'examples': ['150.0', '180.0', '200.0', '220.0', '210.0']}, {'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}], 'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Manufacturer_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '制造商ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Engine_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '发动机类型', 'examples': ['Inboard', 'Outboard']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}]}}\nA mathematical logic question is as follows:\nCalculate the fuel consumption rate (liters/nautical mile) for each yacht, group them by fuel consumption rate from low to high, and return the information of the yacht with the lowest fuel consumption rate in each group. The fuel consumption rate is derived by dividing the fuel consumption (liters) by the sailing distance (nautical miles).\nyour response just have a SQL without anything.\n",
        "solution": "WITH Fuel_Rate AS (SELECT y.Yacht_ID, y.Model, v.Fuel_Consumed / v.Distance AS Fuel_Consumption_Rate FROM yachts y JOIN voyages v ON y.Yacht_ID = v.Yacht_ID) SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY Yacht_ID ORDER BY Fuel_Consumption_Rate ASC) AS rn FROM Fuel_Rate) WHERE rn = 1;",
        "db_id": "yacht"
    },
    {
        "id": 113,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['charters', 'yachts', 'Passenger_Count', 'Passenger_Capacity', 'Charter_Type', 'Total_Cost'], 'relations': ['charters_to_yachts (charters.Yacht_ID → yachts.Yacht_ID)', 'passenger_exceed_condition (Passenger_Count > Passenger_Capacity)'], 'intent': 'identify_overcapacity_rentals_grouped_by_type_with_max_fee', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'passenger_count': 'unitless (integer count)', 'cost': 'currency (implied by Total_Cost field)'}, 'foreign_keys': [{'fk_table': 'charters', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'charters', 'fk_column': 'Customer_ID', 'ref_table': 'customers', 'ref_column': 'Customer_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'charters', 'pk_column': 'Charter_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.charters': [{'column': 'Passenger_Count', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客数量', 'examples': ['8', '6', '10', '12', '4']}, {'column': 'Charter_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '租赁类型', 'examples': ['Weekly', 'Daily', 'Monthly']}, {'column': 'Total_Cost', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '总费用（美元）', 'examples': ['15000.0', '12000.0', '20000.0', '18000.0', '9000.0']}, {'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}], 'yacht.yachts': [{'column': 'Passenger_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客容量', 'examples': ['12', '10', '14', '20', '18']}]}}\nA common sense reasoning question is as follows:\nQuery all rental records where the number of passengers exceeds the yacht's passenger capacity, group them by rental type, and return the record with the highest rental fee in each group.\nyour response just have a SQL without anything.\n",
        "solution": "WITH Overloaded_Charters AS (SELECT c.* FROM charters c JOIN yachts y ON c.Yacht_ID = y.Yacht_ID WHERE c.Passenger_Count > y.Passenger_Capacity) SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY Charter_Type ORDER BY Total_Cost DESC) AS rn FROM Overloaded_Charters) WHERE rn = 1;",
        "db_id": "yacht"
    },
    {
        "id": 114,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'price over $5 million'], 'relations': ['yacht_to_attributes (Yacht_ID → Model, Price, Max_Speed)', 'price_filter (Price > 5,000,000)'], 'intent': 'retrieve_yacht_specifications_by_price', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000], 'units': {'price': 'USD ($)', 'speed': 'knots (implied by Max_Speed field in yachts table)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA hypothetical reasoning question is as follows:\nFind the model, price, and maximum speed of all yachts priced over $5 million.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Price, Max_Speed FROM yachts WHERE Price > 5000000;",
        "db_id": "yacht"
    },
    {
        "id": 115,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'Inboard engine type'], 'relations': ['yacht_to_engine_type (Yacht → Engine_Type)', 'engine_type_filter (Inboard → Model/Engine_Power/Fuel_Capacity)'], 'intent': 'list_yacht_specifications_by_engine_type', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'engine_power': 'HP (Horsepower, assumed standard unit)', 'fuel_capacity': 'gallons (assumed standard unit)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Engine_Power', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '发动机功率（HP）', 'examples': ['1500.0', '1400.0', '1450.0', '1550.0', '3000.0']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}]}}\nA physical knowledge question is as follows:\nList the model, engine power, and fuel capacity of all yachts that use the \"Inboard\" engine type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Engine_Power, Fuel_Capacity FROM yachts WHERE Engine_Type = 'Inboard';",
        "db_id": "yacht"
    },
    {
        "id": 116,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht passenger capacity of 20', '5 crew members', '10 customers', '80% maximum capacity rule'], 'relations': ['total_passengers_and_crew (5 crew + 10 customers = 15)', 'max_capacity_rule (80% of 20 = 16)', 'comparison (15 ≤ 16 = meets requirement)'], 'intent': 'verify_voyage_passenger_capacity_compliance', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 5, 10, 80], 'units': {'capacity': 'people', 'percentage': '%'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'customers', 'pk_column': 'Customer_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Passenger_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客容量', 'examples': ['12', '10', '14', '20', '18']}], 'yacht.crew': [{'column': 'Crew_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '船员唯一标识', 'examples': ['1', '2', '3', '4', '5']}], 'yacht.customers': [{'column': 'Customer_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '客户唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nA yacht has a passenger capacity of 20 people. There are 5 crew members in the crew table and 10 customers in the customer table. If each voyage can accommodate a maximum of 80% of the total number of passengers and crew, can this yacht meet the requirements for one voyage?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Yacht_ID, y.Model, y.Passenger_Capacity, COUNT(c.Customer_ID) AS Customer_Count, COUNT(cr.Crew_ID) AS Crew_Count FROM yachts y JOIN charters ch ON y.Yacht_ID = ch.Yacht_ID JOIN customers c ON ch.Customer_ID = c.Customer_ID JOIN crew cr ON y.Yacht_ID = cr.Yacht_ID GROUP BY y.Yacht_ID HAVING (COUNT(c.Customer_ID) + COUNT(cr.Crew_ID)) <= y.Passenger_Capacity * 0.8;",
        "db_id": "yacht"
    },
    {
        "id": 117,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'voyage', 'performance_metrics', 'fuel capacity 10,000 liters', 'fuel efficiency 200 L/h', 'distance 500 nautical miles', 'average speed 20 knots'], 'relations': ['yacht_to_performance (yacht.Yacht_ID → performance_metrics.Yacht_ID)', 'yacht_to_voyage (yacht.Yacht_ID → voyages.Yacht_ID)', 'time_calculation (distance / average speed = 25 hours)', 'fuel_required (time * fuel efficiency = 5000 liters)'], 'intent': 'determine_fuel_sufficiency_for_voyage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 200, 500, 20], 'units': {'fuel_capacity': 'liters', 'fuel_efficiency': 'liters/hour', 'distance': 'nautical miles', 'speed': 'knots (nautical miles/hour)', 'time': 'hours (calculated as distance/speed)', 'required_fuel': 'liters (calculated as time * fuel_efficiency)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}], 'yacht.voyages': [{'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Average_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '平均速度（节）', 'examples': ['30.0', '25.0', '27.5', '28.0', '26.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA common sense reasoning question is as follows:\nIf a yacht has a fuel capacity of 10,000 liters, a fuel efficiency of 200 liters per hour, a sailing distance of 500 nautical miles, and an average speed of 20 knots, can the yacht complete this voyage without refueling midway?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Yacht_ID, y.Model, y.Fuel_Capacity, p.Fuel_Efficiency, v.Distance, v.Average_Speed FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID JOIN voyages v ON y.Yacht_ID = v.Yacht_ID WHERE y.Fuel_Capacity >= p.Fuel_Efficiency * (v.Distance / v.Average_Speed);",
        "db_id": "yacht"
    },
    {
        "id": 118,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht with engine power 100,000 horsepower', 'fuel capacity 1,000,000 liters', 'fuel consumption rate 500 liters/hour', 'voyage distance 10,000 nautical miles', 'average speed 50 knots'], 'relations': ['fuel_capacity_to_consumption_rate (1,000,000L / 500L/h = 2000h)', 'distance_to_speed (10,000nm / 50kt = 200h)'], 'intent': 'determine_fuel_sufficiency_for_voyage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000, 1000000, 500, 10000, 50], 'units': {'power': 'horsepower', 'fuel': 'liters', 'consumption_rate': 'liters/hour', 'distance': 'nautical miles', 'speed': 'knots', 'time': 'hours', 'conversion': '1 knot = 1 nautical mile/hour'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Engine_Power', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '发动机功率（HP）', 'examples': ['1500.0', '1400.0', '1450.0', '1550.0', '3000.0']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}], 'yacht.voyages': [{'column': 'Distance', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '航行距离（海里）', 'examples': ['180.0', '200.0', '220.0', '250.0', '230.0']}, {'column': 'Average_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '平均速度（节）', 'examples': ['30.0', '25.0', '27.5', '28.0', '26.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a yacht has an engine power of 100,000 horsepower, a fuel capacity of 1,000,000 liters, a fuel consumption rate of 500 liters/hour, a voyage distance of 10,000 nautical miles, and an average speed of 50 knots, can this yacht complete the journey without the need for mid-voyage refueling while running at full power?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Yacht_ID, y.Model, y.Fuel_Capacity, p.Fuel_Efficiency, v.Distance, v.Average_Speed FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID JOIN voyages v ON y.Yacht_ID = v.Yacht_ID WHERE y.Fuel_Capacity >= p.Fuel_Efficiency * (v.Distance / v.Average_Speed) AND y.Engine_Power = 100000;",
        "db_id": "yacht"
    },
    {
        "id": 119,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht displacement 150 tons', 'hull length 25 meters', 'hull width 4 meters', 'aluminum alloy hull', 'fresh water'], 'relations': ['displacement_to_volume (Δ = ρ•V)', 'hull_dimension_to_draft (T = V/(L•B))'], 'intent': 'calculate_draft_depth_in_fresh_water', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [150, 25, 4], 'units': {'displacement': 'metric tons (convert to kg: 150,000 kg)', 'water_density': '1000 kg/m³ (fresh water standard)', 'length': 'meters', 'width': 'meters', 'draft': 'meters'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Width', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '宽度（米）', 'examples': ['5.8', '5.5', '5.3', '5.6', '8.0']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}]}}\nA physical knowledge question is as follows:\nA yacht has a displacement of 150 tons, a hull length of 25 meters, a width of 4 meters, and the hull material is aluminum alloy. If the yacht is sailing in fresh water, what is its draft depth?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Displacement / (Length * Width * 1) AS Draft FROM yachts WHERE Yacht_ID = '特定游艇ID';",
        "db_id": "yacht"
    },
    {
        "id": 120,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA mathematical logic question is as follows:\nA customer chartered multiple yachts in 2023 with a total rental cost of $200,000, of which additional service fees accounted for 20% of the total cost. If the customer opted for weekly rentals and received a 15% discount, what is the actual amount the customer paid for the rental?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Total_Cost * 0.8 * 0.85) + (Total_Cost * 0.2) AS Actual_Payment FROM charters WHERE Customer_ID = '特定客户ID' AND YEAR(Start_Date) = 2023;",
        "db_id": "yacht"
    },
    {
        "id": 121,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"yacht's maximum speed 25 knots\", \"voyage's average speed 30 knots\"], 'relations': ['max_speed_to_voyage_speed (impossible relationship where average speed exceeds maximum)'], 'intent': 'validate_physical_impossibility_and_investigate_causes', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [25, 30], 'units': {'speed': 'knots (nautical miles per hour)'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}], 'yacht.voyages': [{'column': 'Average_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '平均速度（节）', 'examples': ['30.0', '25.0', '27.5', '28.0', '26.0']}, {'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}]}}\nA common sense reasoning question is as follows:\nA yacht has a maximum speed of 25 knots, but the navigation record shows an average speed of 30 knots during a particular voyage. Is this situation possible? If not, what could be the possible reason?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Voyage_ID, Yacht_ID, Average_Speed FROM voyages WHERE Average_Speed > (SELECT Max_Speed FROM yachts WHERE yachts.Yacht_ID = voyages.Yacht_ID);",
        "db_id": "yacht"
    },
    {
        "id": 122,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht fuel capacity 2,000,000 liters', 'fuel efficiency 2000 liters/hour', 'engine power 200,000 horsepower'], 'relations': ['capacity_to_efficiency (Fuel_Capacity ÷ Fuel_Efficiency = 1000 hours)', 'hours_to_years (1000 hours ÷ 8760 hours/year = ~0.114 years)'], 'intent': 'calculate_continuous_sailing_duration_in_years', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2000000, 2000, 8760], 'units': {'fuel_capacity': 'liters', 'fuel_efficiency': 'liters/hour', 'time_conversion': '8760 hours/year (24*365)', 'result': 'years'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}]}}\nA hypothetical reasoning question is as follows:\nIf a yacht has a fuel capacity of 2,000,000 liters, a fuel efficiency of 2000 liters/hour, and an engine power of 200,000 horsepower, how many years of continuous sailing can the fuel support at full load operation?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Fuel_Capacity / Fuel_Efficiency) / (24 * 365) AS Fuel_Support_Years FROM yachts WHERE Yacht_ID = '特定游艇ID';",
        "db_id": "yacht"
    },
    {
        "id": 123,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'maximum speed', 'kinetic energy', '100,000,000 joules'], 'relations': ['yacht_to_specs (Weight, Max_Speed)', 'ke_formula (0.5 * mass * velocity²)', 'threshold_check (KE > 100,000,000 J)'], 'intent': 'calculate_kinetic_energy_and_filter', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [100000000], 'units': {'mass': 'kg (assumed unit for yachts.Weight)', 'speed': 'm/s (assumed unit for yachts.Max_Speed)', 'energy': 'joules (J)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of yachts at their maximum speed, and identify the yacht models with kinetic energy exceeding 100,000,000 joules.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, 0.5 * (Weight * 1000) * POWER((Max_Speed * 0.514444), 2) AS Kinetic_Energy FROM yachts WHERE 0.5 * (Weight * 1000) * POWER((Max_Speed * 0.514444), 2) > 100000000;",
        "db_id": "yacht"
    },
    {
        "id": 124,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'length 20 meters', 'length 30 meters'], 'relations': ['yacht_to_model (Yacht_ID → Model)', 'yacht_to_length (Yacht_ID → Length)', 'yacht_to_year (Yacht_ID → Year)', 'length_range (20-30 meters)'], 'intent': 'retrieve_yacht_characteristics_in_length_range', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 30], 'units': {'length': 'meters (m)', 'year': 'calendar year'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}]}}\nA mathematical logic question is as follows:\nFind the model, length, and production year of all yachts with lengths between 20 meters and 30 meters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Length, Year FROM yachts WHERE Length BETWEEN 20 AND 30;",
        "db_id": "yacht"
    },
    {
        "id": 125,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['severe weather conditions', 'wave height > 3 meters', 'wind speed > 30 knots', 'hull material', 'engine type'], 'relations': ['voyage_to_weather_conditions (Wave_Height, Wind_Speed)', 'yacht_to_voyage (Yacht_ID)', 'yacht_to_material_and_engine (Hull_Material, Engine_Type)'], 'intent': 'retrieve_yachts_under_severe_weather_conditions', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [3, 30], 'units': {'wave_height': 'meters (m)', 'wind_speed': 'knots (kn)', 'conversion': '3 meters = 9.84 feet (for imperial conversion reference)'}, 'foreign_keys': [{'fk_table': 'voyages', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}, {'fk_table': 'voyages', 'fk_column': 'Captain_ID', 'ref_table': 'crew', 'ref_column': 'Captain_ID'}], 'primary_keys': [{'pk_table': 'voyages', 'pk_column': 'Voyage_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.voyages': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '游艇ID', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Wave_Height', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '波浪高度（米）', 'examples': ['1.5', '2.0', '1.8', '2.5', '3.0']}, {'column': 'Wind_Speed', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '风速（节）', 'examples': ['10.0', '12.0', '11.0', '15.0', '18.0']}], 'yacht.yachts': [{'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}, {'column': 'Engine_Type', 'type': 'ENUM', 'primary_key': False, 'comment': '发动机类型', 'examples': ['Inboard', 'Outboard']}]}}\nA common sense reasoning question is as follows:\nRetrieve yachts sailing under severe weather conditions (wave height greater than 3 meters, wind speed exceeding 30 knots) and list their hull material and engine type.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Model, y.Hull_Material, y.Engine_Type FROM yachts y JOIN voyages v ON y.Yacht_ID = v.Yacht_ID WHERE v.Wave_Height > 3 AND v.Wind_Speed > 30;",
        "db_id": "yacht"
    },
    {
        "id": 126,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht fuel capacity 1,000,000 liters', 'target range 1,000,000 nautical miles'], 'relations': ['yacht_model_to_fuel_efficiency (Yacht → Fuel_Efficiency)', 'range_calculation (New_Range = 1,000,000 liters / Fuel_Efficiency)'], 'intent': 'calculate_new_range_and_filter_models', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000000, 1000000], 'units': {'fuel_capacity': 'liters', 'range': 'nautical miles', 'fuel_efficiency': 'liters per nautical mile (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}], 'yacht.performance_metrics': [{'column': 'Fuel_Efficiency', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '燃油效率（升/小时）', 'examples': ['12.5', '11.0', '13.0', '12.0', '11.5']}, {'column': 'Range', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '续航里程（海里）', 'examples': ['500.0', '450.0', '550.0', '480.0', '470.0']}]}}\nA hypothetical reasoning question is as follows:\nIf a yacht's fuel capacity is increased to 1,000,000 liters, calculate its range and identify the yacht models with a range exceeding 1,000,000 nautical miles.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT y.Model, (1000000 / p.Fuel_Efficiency) * v.Average_Speed * 0.514444 / 1.852 AS Range FROM yachts y JOIN performance_metrics p ON y.Yacht_ID = p.Yacht_ID JOIN voyages v ON y.Yacht_ID = v.Yacht_ID WHERE (1000000 / p.Fuel_Efficiency) * v.Average_Speed * 0.514444 / 1.852 > 1000000;",
        "db_id": "yacht"
    },
    {
        "id": 127,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht model', 'hull material', 'maximum speed', 'yacht weight', 'kinetic energy'], 'relations': ['yacht_to_hull_material (yacht → hull_material)', 'kinetic_energy_calculation (KE = 0.5 * mass * velocity²)'], 'intent': 'calculate_and_compare_kinetic_energy_by_hull_material', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': ['yachts.Max_Speed', 'yachts.Weight'], 'units': {'speed': 'knots (implied by yacht specifications)', 'mass': 'kg (implied by yacht specifications)', 'kinetic_energy': 'joules (calculated as 0.5 * kg * (knots²))'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}]}}\nA physical knowledge question is as follows:\nCalculate the kinetic energy of each yacht at maximum speed, grouped by hull material, and identify the yacht model with the highest kinetic energy for each type of hull material.\nyour response just have a SQL without anything.\n",
        "solution": "WITH KineticEnergy AS (SELECT Model, Hull_Material, 0.5 * (Weight * 1000) * POWER((Max_Speed * 0.514444), 2) AS Kinetic_Energy FROM yachts) SELECT Hull_Material, Model, MAX(Kinetic_Energy) AS Max_Kinetic_Energy FROM KineticEnergy GROUP BY Hull_Material;",
        "db_id": "yacht"
    },
    {
        "id": 128,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'maximum speed', 'price', '35 knots'], 'relations': ['yacht_to_specifications (yacht → model, max_speed, price)', 'speed_threshold (max_speed > 35 knots)'], 'intent': 'retrieve_yacht_specifications_by_speed_filter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [35], 'units': {'speed': 'knots (nautical miles per hour)', 'price': 'currency (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA mathematical logic question is as follows:\nList the model, maximum speed, and price of all yachts with a maximum speed exceeding 35 knots.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Max_Speed, Price FROM yachts WHERE Max_Speed > 35;",
        "db_id": "yacht"
    },
    {
        "id": 129,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'fuel capacity > 1000 liters'], 'relations': ['yacht_to_fuel_capacity (Yacht_ID → Fuel_Capacity)', 'filter_condition (Fuel_Capacity > 1000)'], 'intent': 'retrieve_yacht_specifications_with_capacity_filter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'fuel_capacity': 'liters', 'conversion': 'threshold = 1000 liters'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}]}}\nA common sense reasoning question is as follows:\nFind the model, fuel capacity, and hull material of all yachts with a fuel capacity exceeding 1000 liters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Fuel_Capacity, Hull_Material FROM yachts WHERE Fuel_Capacity > 1000;",
        "db_id": "yacht"
    },
    {
        "id": 130,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'passenger capacity', 'price'], 'relations': ['passenger_capacity_filter (Passenger_Capacity > 12)'], 'intent': 'list_yacht_details_by_capacity', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [12], 'units': {'passenger_capacity': 'passengers', 'price': 'currency (e.g., USD, EUR)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Passenger_Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '乘客容量', 'examples': ['12', '10', '14', '20', '18']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA hypothetical reasoning question is as follows:\nList the model, passenger capacity, and price of all yachts that can accommodate more than 12 passengers.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Passenger_Capacity, Price FROM yachts WHERE Passenger_Capacity > 12;",
        "db_id": "yacht"
    },
    {
        "id": 131,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'hull material', 'buoyancy force', 'gravity', 'yacht model'], 'relations': ['yacht_to_hull_material (Yacht_ID → Hull_Material)', 'yacht_to_buoyancy (Yacht_ID → Buoyancy_Force)', 'yacht_to_gravity (Yacht_ID → Weight)'], 'intent': 'calculate_buoyancy_gravity_ratio_group_by_material_and_find_minimum_ratio_per_material', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'buoyancy': \"Newtons (implied by field name 'Buoyancy_Force')\", 'gravity': 'Newtons (Weight field represents gravitational force)', 'ratio': 'unitless (Buoyancy_Force / Weight)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Buoyancy_Force', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '浮力（牛顿）', 'examples': ['500000.0', '480000.0', '470000.0', '520000.0', '1500000.0']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of buoyancy to gravity for each yacht, group them by hull material, and identify the yacht model with the lowest ratio for each hull material.\nyour response just have a SQL without anything.\n",
        "solution": "WITH BuoyancyRatio AS (SELECT Model, Hull_Material, Buoyancy_Force / (Weight * 1000 * 9.81) AS Buoyancy_Ratio FROM yachts) SELECT Hull_Material, Model, MIN(Buoyancy_Ratio) AS Min_Buoyancy_Ratio FROM BuoyancyRatio GROUP BY Hull_Material;",
        "db_id": "yacht"
    },
    {
        "id": 132,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'displacement', 'maximum speed', 'model'], 'relations': ['yacht_to_displacement (Yacht_ID → Displacement)', 'yacht_to_model (Yacht_ID → Model)', 'yacht_to_max_speed (Yacht_ID → Max_Speed)'], 'intent': 'retrieve_yacht_specifications', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'displacement': 'tons (metric)', 'max_speed': 'unit_not_specified (from database schema field: Max_Speed)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA mathematical logic question is as follows:\nTranslate the original question into English:  \n\nFind the model, displacement, and maximum speed of all yachts with a displacement exceeding 50 tons.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Displacement, Max_Speed FROM yachts WHERE Displacement > 50;",
        "db_id": "yacht"
    },
    {
        "id": 133,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"yachts\", \"buoyancy force\", \"center of gravity\", \"100,000 newtons\"],\n  \"relations\": [\n    \"yacht_to_buoyancy (yachts → buoyancy_force)\",\n    \"yacht_to_center_of_gravity (yachts → center_of_gravity)\",\n    \"buoyancy_threshold (yachts.buoyancy_force > 100000)\"\n  ],\n  \"intent\": \"filter_yachts_by_buoyancy_and_retrieve_specs\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [100000],\n  \"units\": {\n    \"force\": \"newtons (N)\",\n    \"position\": \"meters (implied for center of gravity)\"\n  },\n  \"required_tables\": [\"yachts\"],\n  \"required_fields\": [\n    \"yachts.Model\",\n    \"yachts.Buoyancy_Force\",\n    \"yachts.Center_of_Gravity\"\n  ]\n}\n```\nA common sense reasoning question is as follows:\nList the model, buoyancy, and center of gravity position for all yachts with a buoyancy exceeding 100,000 newtons.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Buoyancy_Force, Center_of_Gravity FROM yachts WHERE Buoyancy_Force > 100000;",
        "db_id": "yacht"
    },
    {
        "id": 134,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'drag_coefficient', 'hull_speed'], 'relations': ['drag_coefficient < 0.5', 'yacht_to_model', 'yacht_to_hull_speed'], 'intent': 'retrieve_yacht_specifications', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [0.5], 'units': {'drag_coefficient': 'dimensionless (unitless)', 'hull_speed': 'knots (implied by yacht hydrodynamics terminology)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Drag_Coefficient', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '阻力系数', 'examples': ['0.45', '0.47', '0.46', '0.44', '0.5']}, {'column': 'Hull_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '船体速度（节）', 'examples': ['30.0', '29.0', '28.0', '31.0', '20.0']}]}}\nA hypothetical reasoning question is as follows:\nFind the model, drag coefficient, and hull speed of all yachts with a drag coefficient less than 0.5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Drag_Coefficient, Hull_Speed FROM yachts WHERE Drag_Coefficient < 0.5;",
        "db_id": "yacht"
    },
    {
        "id": 135,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'hull material', 'kinetic energy', 'average crew salary'], 'relations': ['yacht_to_performance (Yacht_ID → Kinetic_Energy)', 'yacht_to_crew (Yacht_ID → Salary)', 'hull_material_to_yacht (Hull_Material → Yacht)'], 'intent': 'calculate_kinetic_energy_to_salary_ratio_and_identify_max_per_hull_material', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'kinetic_energy': 'Joules (implied by column name)', 'salary': 'Currency (implied by column name)', 'ratio': 'unitless (Kinetic_Energy/Salary)'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}], 'yacht.performance_metrics': [{'column': 'Kinetic_Energy', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动能（焦耳）', 'examples': ['150000.0', '140000.0', '160000.0', '145000.0', '135000.0']}], 'yacht.crew': [{'column': 'Salary', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '薪资（美元/月）', 'examples': ['8000.0', '5000.0', '7000.0', '7500.0', '4000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of the kinetic energy to the average crew salary for each yacht, group them by hull material, and find the yacht model with the highest ratio for each type of hull material.\nyour response just have a SQL without anything.\n",
        "solution": "WITH KineticEnergy AS (SELECT y.Model, y.Hull_Material, 0.5 * (y.Weight * 1000) * POWER((y.Max_Speed * 0.514444), 2) AS Kinetic_Energy, AVG(c.Salary) AS Avg_Salary FROM yachts y JOIN crew c ON y.Yacht_ID = c.Yacht_ID GROUP BY y.Model, y.Hull_Material) SELECT Hull_Material, Model, MAX(Kinetic_Energy / Avg_Salary) AS Max_Ratio FROM KineticEnergy GROUP BY Hull_Material;",
        "db_id": "yacht"
    },
    {
        "id": 136,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer ID 1', 'yachts'], 'relations': ['manufacturer_to_yachts (Manufacturer_ID 1 → yachts)'], 'intent': 'retrieve_yacht_details_by_manufacturer', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1], 'units': {}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA mathematical logic question is as follows:\nList the model, production year, and price of all yachts with manufacturer ID 1.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Year, Price FROM yachts WHERE Manufacturer_ID = 1;",
        "db_id": "yacht"
    },
    {
        "id": 137,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht', 'hull speed 25 knots'], 'relations': ['yacht_to_hull_speed (Yacht → Hull_Speed)', 'hull_speed_filter (Hull_Speed > 25 knots)'], 'intent': 'retrieve_yacht_performance_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [25], 'units': {'speed': 'knots (nautical miles per hour)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Hull_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '船体速度（节）', 'examples': ['30.0', '29.0', '28.0', '31.0', '20.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}]}}\nA common sense reasoning question is as follows:\nFind the model, hull speed, and maximum speed of all yachts with a hull speed exceeding 25 knots.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Hull_Speed, Max_Speed FROM yachts WHERE Hull_Speed > 25;",
        "db_id": "yacht"
    },
    {
        "id": 138,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'weight', 'model', 'displacement', '100 tons'], 'relations': ['yacht_to_attributes (yachts → model, weight, displacement)', 'weight_filter (weight > 100 tons)'], 'intent': 'retrieve_yacht_specifications_with_weight_filter', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [100], 'units': {'weight': 'tons (metric/imperial - assumed based on context)', 'displacement': 'tons (assumed consistent unit with weight)', 'conversion': 'no unit conversion required (filter uses same unit)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Weight', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '重量（吨）', 'examples': ['45.0', '42.0', '40.0', '44.0', '120.0']}, {'column': 'Displacement', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '排水量（吨）', 'examples': ['50.0', '48.0', '47.0', '52.0', '150.0']}]}}\nA hypothetical reasoning question is as follows:\nList the model, weight, and displacement of all yachts that weigh over 100 tons.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Weight, Displacement FROM yachts WHERE Weight > 100;",
        "db_id": "yacht"
    },
    {
        "id": 139,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yacht models', 'kinetic energy', 'average crew salary'], 'relations': ['yacht_to_performance_metrics (Yacht_ID)', 'yacht_to_crew (Yacht_ID)'], 'intent': 'calculate_kinetic_energy_to_salary_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['Kinetic_Energy', 'Salary'], 'units': {'kinetic_energy': 'Joules (assuming standard unit from performance_metrics)', 'salary': 'Currency units (e.g., USD) from crew.Salary column', 'ratio': 'Dimensionless (Kinetic_Energy/Salary)'}, 'foreign_keys': [{'fk_table': 'crew', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'performance_metrics', 'fk_column': 'Yacht_ID', 'ref_table': 'yachts', 'ref_column': 'Yacht_ID'}, {'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'crew', 'pk_column': 'Crew_ID'}, {'pk_table': 'performance_metrics', 'pk_column': 'Performance_ID'}, {'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}], 'yacht.performance_metrics': [{'column': 'Kinetic_Energy', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '动能（焦耳）', 'examples': ['150000.0', '140000.0', '160000.0', '145000.0', '135000.0']}], 'yacht.crew': [{'column': 'Salary', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '薪资（美元/月）', 'examples': ['8000.0', '5000.0', '7000.0', '7500.0', '4000.0']}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of kinetic energy to average crew salary for each yacht, and sort them in descending order by this ratio. List the top 5 yacht models along with their respective ratios.\nyour response just have a SQL without anything.\n",
        "solution": "WITH KineticEnergy AS (SELECT y.Model, 0.5 * (y.Weight * 1000) * POWER((y.Max_Speed * 0.514444), 2) AS Kinetic_Energy, AVG(c.Salary) AS Avg_Salary FROM yachts y JOIN crew c ON y.Yacht_ID = c.Yacht_ID GROUP BY y.Model) SELECT Model, Kinetic_Energy / Avg_Salary AS Ratio FROM KineticEnergy ORDER BY Ratio DESC LIMIT 5;",
        "db_id": "yacht"
    },
    {
        "id": 140,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'freshwater capacity', 'fuel capacity', '500 liters'], 'relations': ['yacht_to_specs (yachts → Model/Water_Capacity/Fuel_Capacity)', 'capacity_comparison (Water_Capacity > 500 liters)'], 'intent': 'retrieve_yacht_specifications_with_capacity_filter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500], 'units': {'capacity': 'liters (L)', 'conversion': 'threshold value = 500 liters'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Water_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '淡水容量（升）', 'examples': ['1000.0', '950.0', '980.0', '1020.0', '2500.0']}, {'column': 'Fuel_Capacity', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '燃料容量（升）', 'examples': ['5000.0', '4800.0', '4900.0', '5100.0', '12000.0']}]}}\nA mathematical logic question is as follows:\nFind the model, freshwater capacity, and fuel capacity of all yachts with a freshwater capacity exceeding 500 liters.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Water_Capacity, Fuel_Capacity FROM yachts WHERE Water_Capacity > 500;",
        "db_id": "yacht"
    },
    {
        "id": 141,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts'], 'relations': ['length > 30 meters', 'max_speed > 35 knots'], 'intent': 'retrieve_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [30, 35], 'units': {'length': 'meters', 'max_speed': 'knots'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Length', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '长度（米）', 'examples': ['22.86', '21.5', '20.8', '22.0', '37.0']}, {'column': 'Max_Speed', 'type': 'DECIMAL(6, 2)', 'primary_key': False, 'comment': '最大速度（节）', 'examples': ['35.0', '34.0', '33.0', '36.0', '25.0']}, {'column': 'Price', 'type': 'DECIMAL(15, 2)', 'primary_key': False, 'comment': '价格（美元）', 'examples': ['2500000.0', '2300000.0', '2400000.0', '2600000.0', '8000000.0']}]}}\nA common sense reasoning question is as follows:\nFind the model, length, maximum speed, and price of all yachts with a length exceeding 30 meters and a maximum speed exceeding 35 knots, sorted in descending order by price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Length, Max_Speed, Price FROM yachts WHERE Length > 30 AND Max_Speed > 35 ORDER BY Price DESC;",
        "db_id": "yacht"
    },
    {
        "id": 142,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['yachts', 'production year after 2020', 'hull material Fiberglass', 'engine power'], 'relations': ['yachts_to_hull_material (Fiberglass filter)', 'yachts_to_production_year (year > 2020)'], 'intent': 'retrieve_yacht_specifications_with_filters_and_sorting', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2020], 'units': {'production_year': 'years', 'engine_power': 'implied unit (e.g., horsepower/kW from database field)'}, 'foreign_keys': [{'fk_table': 'yachts', 'fk_column': 'Manufacturer_ID', 'ref_table': 'manufacturers', 'ref_column': 'Manufacturer_ID'}], 'primary_keys': [{'pk_table': 'yachts', 'pk_column': 'Yacht_ID'}], 'tableinfo': {'yacht.yachts': [{'column': 'Yacht_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '游艇唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Model', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '型号', 'examples': ['Sunseeker 75', 'Azimut 70', 'Princess 68', 'Ferretti 720', 'Benetti Classic 121']}, {'column': 'Year', 'type': 'YEAR', 'primary_key': False, 'comment': '生产年份', 'examples': ['2020', '2019', '2021', '2022', '2018']}, {'column': 'Hull_Material', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '船体材质', 'examples': ['Fiberglass', 'Steel', 'Aluminum', '碳纤维', 'Carbon']}, {'column': 'Engine_Power', 'type': 'DECIMAL(8, 2)', 'primary_key': False, 'comment': '发动机功率（HP）', 'examples': ['1500.0', '1400.0', '1450.0', '1550.0', '3000.0']}]}}\nA hypothetical reasoning question is as follows:\nList the model, production year, hull material, and engine power of all yachts produced after 2020 that use \"Fiberglass\" as the hull material, sorted by engine power in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Model, Year, Hull_Material, Engine_Power FROM yachts WHERE Year > 2020 AND Hull_Material = 'Fiberglass' ORDER BY Engine_Power ASC;",
        "db_id": "yacht"
    },
    {
        "id": 143,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bike', 'motor power 400W', 'battery voltage 48V', 'battery capacity 20Ah', 'weight 50kg'], 'relations': ['battery_energy (Wh) = voltage × capacity (48V × 20Ah = 960Wh)', 'endurance_time = battery_energy / motor_power (960Wh / 400W = 2.4h)'], 'intent': 'calculate_endurance_time', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [50, 400, 48, 20], 'units': {'voltage': 'V (Volts)', 'capacity': 'Ah (Ampere-hours)', 'power': 'W (Watts)', 'energy': 'Wh (Watt-hours)', 'time': 'hours', 'conversion': 'Energy = Voltage × Capacity (960Wh); Endurance = Energy / Power (2.4 hours)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'Motors', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}, {'pk_table': 'Motors', 'pk_column': 'Motor_ID'}], 'tableinfo': {'electric_scooter.Motors': [{'column': 'Power', 'type': 'INTEGER', 'primary_key': False, 'comment': '功率 (W)', 'examples': ['400', '350', '500', '800', '250']}], 'electric_scooter.Batteries': [{'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}]}}\nA physical knowledge question is as follows:\nThe weight of an electric bike is 50kg, the motor power is 400W, the battery voltage is 48V, and the capacity is 20Ah. What is the theoretical endurance time of this electric bike when traveling at a constant speed on flat ground?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (b.Voltage * b.Capacity) / m.Power AS Theoretical_Range_Time FROM Batteries b JOIN ElectricBikes eb ON eb.Bike_ID = b.Bike_ID JOIN Motors m ON eb.Bike_ID = m.Bike_ID WHERE eb.Weight = 50 AND m.Power = 400 AND b.Voltage = 48 AND b.Capacity = 20;",
        "db_id": "electric_scooter"
    },
    {
        "id": 144,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 15Ah', 'voltage 36V', 'energy consumption 0.05 kWh/km'], 'relations': ['battery_energy (36V × 15Ah = 540Wh = 0.54kWh)', 'theoretical_range (0.54kWh ÷ 0.05kWh/km = 10.8km)'], 'intent': 'calculate_theoretical_range', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [15, 36, 0.05], 'units': {'capacity': 'Ah (Ampere-hour)', 'voltage': 'V (Volts)', 'energy': 'kWh (Voltage × Capacity in Ah / 1000)', 'consumption_rate': 'kWh/km', 'distance': 'km (Theoretical Range)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}]}}\nA mathematical logic question is as follows:\nAn electric scooter has a battery capacity of 15Ah, a voltage of 36V, a motor power of 250W, and a wheel diameter of 12 inches. If the user rides at an average speed of 20 km/h and consumes 0.05 kWh of energy per kilometer, what is the theoretical range of this electric scooter?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (b.Voltage * b.Capacity) / 0.05 AS Distance FROM ElectricBikes eb JOIN Batteries b ON eb.Bike_ID = b.Bike_ID JOIN Motors m ON eb.Bike_ID = m.Bike_ID JOIN BodyDimensions bd ON eb.Bike_ID = bd.Bike_ID WHERE b.Capacity = 15 AND b.Voltage = 36 AND m.Power = 250 AND bd.Wheel_Size = 12;",
        "db_id": "electric_scooter"
    },
    {
        "id": 145,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Battery Type', 'Voltage (48V)', 'Capacity (>50Ah)'], 'relations': ['voltage_filter (Voltage = 48V)', 'capacity_filter (Capacity > 50Ah)'], 'intent': 'retrieve_filtered_battery_data', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [48, 50], 'units': {'voltage': 'V (Volts)', 'capacity': 'Ah (Ampere-hours)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '电池类型（铅酸、锂电池、镍氢等）', 'examples': ['锂电池', '铅酸电池', 'Lithium-ion', '实验型锂电池', '实验型超级电池']}, {'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}]}}\nA common sense reasoning question is as follows:\nFind all types, voltages, and capacities where the voltage is 48V and the capacity is greater than 50Ah, sorted by capacity in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, Voltage, Capacity FROM Batteries WHERE Voltage = 48 AND Capacity > 50 AND Type = '锂电池' ORDER BY Capacity DESC;",
        "db_id": "electric_scooter"
    },
    {
        "id": 146,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Battery', 'Voltage (60V)', 'Voltage (72V)'], 'relations': ['battery_to_voltage (Battery → Voltage)', 'battery_to_capacity (Battery → Capacity)'], 'intent': 'list_batteries_and_calculate_total_capacity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [60, 72], 'units': {'voltage': 'V (Volts)', 'capacity': 'Ah (Ampere-hours) (implied by column name)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '电池类型（铅酸、锂电池、镍氢等）', 'examples': ['锂电池', '铅酸电池', 'Lithium-ion', '实验型锂电池', '实验型超级电池']}, {'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}]}}\nA hypothetical reasoning question is as follows:\nList all battery types, voltages, and capacities for those with 60V or 72V voltage, and calculate their total capacity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT  Type, Voltage, Capacity, SUM(Capacity) OVER () AS Total_Capacity FROM Batteries WHERE Voltage IN (60, 72);",
        "db_id": "electric_scooter"
    },
    {
        "id": 147,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lithium batteries', 'voltage 72V', 'capacity 90Ah'], 'relations': [\"battery_type (Type = 'lithium')\", 'voltage_filter (Voltage = 72V)', 'capacity_filter (Capacity > 90Ah)', 'aggregation (Total Capacity = Σ Capacity)'], 'intent': 'filter_and_summarize_battery_specs', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [72, 90], 'units': {'voltage': 'V (Volts)', 'capacity': 'Ah (Ampere-hours)', 'total_capacity': 'Ah (Ampere-hours)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Type', 'type': 'VARCHAR(50) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '电池类型（铅酸、锂电池、镍氢等）', 'examples': ['锂电池', '铅酸电池', 'Lithium-ion', '实验型锂电池', '实验型超级电池']}, {'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}]}}\nA physical knowledge question is as follows:\nFind all lithium batteries with a voltage of 72V and capacity greater than 90Ah, list their type, voltage, and capacity, and calculate their total capacity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Type, Voltage, Capacity, SUM(Capacity) OVER () AS Total_Capacity FROM Batteries WHERE Voltage = 72 AND Capacity > 90 AND Type = '锂电池';",
        "db_id": "electric_scooter"
    },
    {
        "id": 148,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter', 'parking space'], 'relations': ['scooter_dimensions_to_parking_space_dimensions'], 'intent': 'check_spatial_fit', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2000, 750, 1100, 16, 2.5, 1, 1.5], 'units': {'scooter_length': '2000 mm = 2 meters', 'scooter_width': '750 mm = 0.75 meters', 'scooter_height': '1100 mm = 1.1 meters', 'wheel_diameter': '16 inches = 0.4064 meters', 'parking_length': '2.5 meters', 'parking_width': '1 meter', 'parking_height': '1.5 meters'}, 'foreign_keys': [{'fk_table': 'BodyDimensions', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'BodyDimensions', 'pk_column': 'Dimension_ID'}, {'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}], 'tableinfo': {'electric_scooter.BodyDimensions': [{'column': 'Length', 'type': 'INTEGER', 'primary_key': False, 'comment': '长度 (mm)', 'examples': ['1700', '1650', '1750', '1600', '1800']}, {'column': 'Width', 'type': 'INTEGER', 'primary_key': False, 'comment': '宽度', 'examples': ['650', '630', '670', '620', '700']}, {'column': 'Height', 'type': 'INTEGER', 'primary_key': False, 'comment': '高度 (mm)', 'examples': ['1100', '1080', '1120', '1050', '1150']}, {'column': 'Wheel_Size', 'type': 'INTEGER', 'primary_key': False, 'comment': '车轮直径 (寸)', 'examples': ['20', '22', '26', '30', '16']}], 'electric_scooter.ElectricBikes': [{'column': 'Bike_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '电瓶车唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nA electric scooter has a body length of 2000 mm, a width of 750 mm, a height of 1100 mm, and wheel diameter of 16 inches. If the user needs to park this electric scooter in a parking space that is 2.5 meters in length, 1 meter in width, and 1.5 meters in height, can this electric scooter be parked successfully?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (b.Voltage * b.Capacity) / 1 AS Distance, CASE WHEN b.Voltage = 1000 AND b.Capacity = 1000 AND m.Power = 10000 THEN '理论可行，实际不可行' ELSE '配置异常' END AS Feasibility FROM ElectricBikes eb JOIN Batteries b ON eb.Bike_ID = b.Bike_ID JOIN Motors m ON eb.Bike_ID = m.Bike_ID WHERE b.Voltage = 1000 AND b.Capacity = 1000 AND m.Power = 10000 LIMIT 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 149,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter body height 1200mm', 'wheel diameter 14 inches', 'tunnel height restriction 1.5 meters'], 'relations': ['height_conversion (1200mm → 1.2 meters)', 'wheel_conversion (14 inches → 0.3556 meters diameter)', 'total_clearance (1.2m + 0.1778m = 1.3778m)'], 'intent': 'determine_tunnel_passability', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1200, 14, 1.5], 'units': {'body_height': 'mm → meters (1.2m)', 'wheel_diameter': 'inches → meters (0.3556m)', 'tunnel_restriction': 'meters', 'radius_calculation': 'diameter/2 = 0.1778m'}, 'foreign_keys': [{'fk_table': 'BodyDimensions', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'BodyDimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'electric_scooter.BodyDimensions': [{'column': 'Height', 'type': 'INTEGER', 'primary_key': False, 'comment': '高度 (mm)', 'examples': ['1100', '1080', '1120', '1050', '1150']}, {'column': 'Wheel_Size', 'type': 'INTEGER', 'primary_key': False, 'comment': '车轮直径 (寸)', 'examples': ['20', '22', '26', '30', '16']}]}}\nA common sense reasoning question is as follows:\nAn electric scooter has a body height of 1200mm, wheel diameter of 14 inches, and the user frequently needs to pass through tunnels with a height restriction of 1.5 meters. Can this electric scooter pass through the tunnel?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (bd.Length * bd.Width * bd.Height) AS Body_Volume FROM ElectricBikes eb JOIN BodyDimensions bd ON eb.Bike_ID = bd.Bike_ID WHERE bd.Length = 1800 AND bd.Width = 700 AND bd.Height = 1200 AND bd.Wheel_Size = 14;",
        "db_id": "electric_scooter"
    },
    {
        "id": 150,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric vehicle body length 5000mm', 'electric vehicle width 2000mm', 'electric vehicle height 2500mm', 'electric vehicle wheel diameter 30 inches', 'parking space length 6m', 'parking space width 2.5m', 'parking space height 3m'], 'relations': ['vehicle_dim_to_parking_dim (length: 5000mm vs 6000mm)', 'vehicle_dim_to_parking_dim (width: 2000mm vs 2500mm)', 'vehicle_dim_to_parking_dim (height: 2500mm vs 3000mm)', 'wheel_size_to_height (30 inches wheel diameter vs 2500mm vehicle height)'], 'intent': 'verify_parking_feasibility_and_realism_of_dimensions', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5000, 2000, 2500, 30, 6, 2.5, 3], 'units': {'vehicle_length': 'mm (millimeters) → converted to meters (5m)', 'parking_length': 'meters (6m)', 'vehicle_width': 'mm (millimeters) → converted to meters (2m)', 'parking_width': 'meters (2.5m)', 'vehicle_height': 'mm (millimeters) → converted to meters (2.5m)', 'parking_height': 'meters (3m)', 'wheel_diameter': 'inches (30 inches) → converted to mm (762mm)', 'conversion': '1 meter = 1000mm; 1 inch = 25.4mm'}, 'foreign_keys': [{'fk_table': 'BodyDimensions', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'BodyDimensions', 'pk_column': 'Dimension_ID'}], 'tableinfo': {'electric_scooter.BodyDimensions': [{'column': 'Length', 'type': 'INTEGER', 'primary_key': False, 'comment': '长度 (mm)', 'examples': ['1700', '1650', '1750', '1600', '1800']}, {'column': 'Width', 'type': 'INTEGER', 'primary_key': False, 'comment': '宽度', 'examples': ['650', '630', '670', '620', '700']}, {'column': 'Height', 'type': 'INTEGER', 'primary_key': False, 'comment': '高度 (mm)', 'examples': ['1100', '1080', '1120', '1050', '1150']}, {'column': 'Wheel_Size', 'type': 'INTEGER', 'primary_key': False, 'comment': '车轮直径 (寸)', 'examples': ['20', '22', '26', '30', '16']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the dimensions of an electric vehicle are: body length 5000mm, width 2000mm, height 2500mm, and wheel diameter 30 inches. If the user needs to park this electric vehicle in a parking space measuring 6 meters in length, 2.5 meters in width, and 3 meters in height, can this electric vehicle be parked successfully? Are these dimensions practical for an electric vehicle in reality?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN bd.Length <= 2500 AND bd.Width <= 1000 AND bd.Height <= 1500 THEN '可以停放' ELSE '无法停放' END AS Parking_Feasibility FROM ElectricBikes eb JOIN BodyDimensions bd ON eb.Bike_ID = bd.Bike_ID WHERE bd.Length = 2000 AND bd.Width = 750 AND bd.Height = 1100 AND bd.Wheel_Size = 16 LIMIT 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 151,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter', '2kWh', '220V'], 'relations': ['energy_to_voltage_relation (Energy = Voltage × Current × Time)', 'power_equation (P = V × I)'], 'intent': 'calculate_current_during_charging', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 220], 'units': {'energy': 'kWh', 'voltage': 'V (Volts)', 'current': 'A (Amperes)', 'time': 'hour (implied for kWh conversion)'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}], 'tableinfo': {'electric_scooter.ChargingRecords': [{'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}, {'column': 'StartTime', 'type': 'DATETIME', 'primary_key': False, 'comment': '充电开始时间', 'examples': ['2023-10-01 10:00:00']}, {'column': 'EndTime', 'type': 'DATETIME', 'primary_key': False, 'comment': '充电结束时间', 'examples': ['2023-10-01 12:00:00']}]}}\nA physical knowledge question is as follows:\nAn electric scooter used 2kWh of electricity during a single charge, with a charging voltage of 220V. What was the current during this charging?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT DISTINCT CASE WHEN bd.Height <= 1500 THEN '可以通过' ELSE '无法通过' END AS Tunnel_Feasibility FROM ElectricBikes eb JOIN BodyDimensions bd ON eb.Bike_ID = bd.Bike_ID WHERE bd.Height = 1200 AND bd.Wheel_Size = 14;",
        "db_id": "electric_scooter"
    },
    {
        "id": 152,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['User 3', 'charging session 1', 'charging session 2', 'charging session 3'], 'relations': ['user_to_charging_records (User 3 → ChargingRecords.Record_ID)', 'session_cost_aggregation (sum of 1.2 + 1.8 + 2.5 yuan)'], 'intent': 'calculate_total_charging_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.2, 1.8, 2.5], 'units': {'energy': 'kWh (explicit in question)', 'cost': 'yuan (explicit in question)', 'aggregation': 'total_cost = 5.5 yuan'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}, {'pk_table': 'users', 'pk_column': 'User_ID'}], 'tableinfo': {'electric_scooter.ChargingRecords': [{'column': 'User_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '充电费用', 'examples': ['5.0', '6.0', '5.6', '6.4', '5.4']}], 'electric_scooter.users': [{'column': 'User_ID'}]}}\nA mathematical logic question is as follows:\nUser 3 charged his electric scooter 3 times in a single day, with each charging session consuming 1.5kWh, 2kWh, and 2.5kWh of electricity respectively, and costing 1.2 yuan, 1.8 yuan, and 2.5 yuan. So, what is the total charging cost for this user on that day?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT CASE WHEN bd.Length <= 6000 AND bd.Width <= 2500 AND bd.Height <= 3000 THEN '可以停放' ELSE '无法停放' END AS Parking_Feasibility, CASE WHEN bd.Length = 5000 AND bd.Width = 2000 AND bd.Height = 2500 AND bd.Wheel_Size = 30 THEN '理论可行，实际不可行' ELSE '配置异常' END AS Feasibility FROM ElectricBikes eb JOIN BodyDimensions bd ON eb.Bike_ID = bd.Bike_ID WHERE bd.Length = 5000 AND bd.Width = 2000 AND bd.Height = 2500 AND bd.Wheel_Size = 30;",
        "db_id": "electric_scooter"
    },
    {
        "id": 153,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter', '3 kWh', '90% charging station efficiency', 'actual electricity consumed from grid'], 'relations': ['scooter_energy_usage (3 kWh → scooter consumption)', 'efficiency_ratio (90% → energy loss factor)', 'grid_consumption (3 kWh / 0.9 = 3.333... kWh)'], 'intent': 'calculate_actual_grid_electricity_consumption_with_charging_efficiency', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [3, 0.9], 'units': {'energy': 'kWh (kilowatt-hour)', 'efficiency': '% (percentage)', 'conversion': 'Actual consumption = Energy used by scooter / Charging efficiency (3 kWh / 0.9)'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}, {'pk_table': 'ChargingStations', 'pk_column': 'Station_ID'}], 'tableinfo': {'electric_scooter.ChargingRecords': [{'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}], 'electric_scooter.ChargingStations': [{'column': 'Station_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '充电站唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA common sense reasoning question is as follows:\nAn electric scooter uses 3 kWh of electricity in one charge, and the charging station's efficiency is 90%. What is the actual amount of electricity consumed from the grid?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (cr.Energy_Used * 1000) / (220 * ((HOUR(TIMEDIFF(cr.EndTime, cr.StartTime)) * 3600) + (MINUTE(TIMEDIFF(cr.EndTime, cr.StartTime)) * 60) + SECOND(TIMEDIFF(cr.EndTime, cr.StartTime)))) AS Charging_Current FROM ChargingRecords cr WHERE cr.Energy_Used = 2;",
        "db_id": "electric_scooter"
    },
    {
        "id": 154,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter', 'charging voltage 1000V', 'charging time 1 hour', 'electricity usage 1000 kWh', 'charging station efficiency 50%'], 'relations': ['voltage_to_current (1000V → current calculation)', 'efficiency_to_energy_loss (50% → 2000 kWh input energy)', 'time_to_energy_relation (1 hour duration for charging process)'], 'intent': 'calculate_actual_current_and_feasibility', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [1000, 1000, 1, 50], 'units': {'energy': 'kWh', 'voltage': 'V', 'time': 'hour', 'current': 'A (amperes)', 'efficiency': '% (percentage)', 'conversion': ['Energy_used = Voltage × Current × Time', 'Actual_energy_input = Energy_used / Efficiency', 'Current = Actual_energy_input / (Voltage × Time)']}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}, {'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}], 'electric_scooter.ChargingRecords': [{'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}, {'column': 'Record_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an electric scooter uses 1000 kWh of electricity in a single charge, with a charging voltage of 1000V and a charging time of 1 hour. If the charging station has an efficiency of 50%, what is the actual current during this charging process? Is this charging scenario feasible in practice?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM( Cost) AS Total_Charging_Cost FROM ChargingRecords WHERE User_ID = 3 AND DATE(StartTime) = '2023-10-01';",
        "db_id": "electric_scooter"
    },
    {
        "id": 155,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Battery Voltage 48V', 'Battery Capacity 20Ah'], 'relations': ['voltage_to_capacity (48V × 20Ah → 960Wh)'], 'intent': 'calculate_electrical_energy_stored', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [48, 20], 'units': {'voltage': 'V (Volts)', 'capacity': 'Ah (Ampere-hours)', 'energy': 'Wh (Watt-hours)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}]}}\nA physical knowledge question is as follows:\nThe voltage of an electric bicycle's battery is 48V, and its capacity is 20Ah. How much electrical energy is stored in this battery?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Energy_Used / 0.9 AS Actual_Energy_Consumed FROM ChargingRecords WHERE Energy_Used = 3 Limit 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 156,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter', 'motor power 500W', 'weight 30kg'], 'relations': ['scooter_to_power (scooter → 500W)', 'scooter_to_weight (scooter → 30kg)'], 'intent': 'calculate_power_to_weight_ratio', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500, 30], 'units': {'power': 'W (Watts)', 'weight': 'kg (kilograms)', 'ratio': 'W/kg (calculated as Power/Weight)'}, 'foreign_keys': [{'fk_table': 'Motors', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}, {'pk_table': 'Motors', 'pk_column': 'Motor_ID'}], 'tableinfo': {'electric_scooter.Motors': [{'column': 'Power', 'type': 'INTEGER', 'primary_key': False, 'comment': '功率 (W)', 'examples': ['400', '350', '500', '800', '250']}], 'electric_scooter.ElectricBikes': [{'column': 'Weight', 'type': 'DOUBLE', 'primary_key': False, 'comment': '重量 (kg)', 'examples': ['50.0', '58.0', '52.0', '60.0', '62.0']}]}}\nA mathematical logic question is as follows:\nAn electric scooter weighs 30kg, has a motor power of 500W, a battery capacity of 20Ah, and a voltage of 48V. What is the power-to-weight ratio of this electric scooter?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 1000 / (1000 * 1 * 0.5) AS Actual_Current;",
        "db_id": "electric_scooter"
    },
    {
        "id": 157,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter', 'range 60km', 'battery capacity 20Ah', 'voltage 48V'], 'relations': ['battery_energy (Wh = Voltage × Capacity)', 'energy_per_km (Wh/km = Battery_Energy / Range)'], 'intent': 'calculate_energy_consumption_per_kilometer', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [60, 20, 48], 'units': {'voltage': 'V (Volts)', 'capacity': 'Ah (Ampere-hours)', 'range': 'km (kilometers)', 'energy_consumption': 'kWh/km', 'conversion': 'Energy (Wh) = Voltage (48V) × Capacity (20Ah) = 960Wh; 960Wh / 60km = 16Wh/km = 0.016kWh/km'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}, {'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}, {'column': 'Distance', 'type': 'INTEGER', 'primary_key': False, 'comment': '续航里程 (km)', 'examples': ['60', '36', '70', '100', '40']}], 'electric_scooter.ElectricBikes': [{'column': 'Bike_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '电瓶车唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA common sense reasoning question is as follows:\nAn electric scooter has a range of 60km, a battery capacity of 20Ah, and a voltage of 48V. What is the energy consumption per kilometer?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Voltage * Capacity AS Energy FROM Batteries WHERE Voltage = 48 AND Capacity = 20 LIMIT 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 158,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 1000Ah', 'voltage 1000V', 'motor power 10000W', 'vehicle weight 1000kg'], 'relations': ['battery_energy (Capacity × Voltage = 1000Ah × 1000V = 1,000,000Wh)', 'operating_time (Battery Energy / Motor Power = 1,000,000Wh / 10000W = 100h)', 'power_to_weight_ratio (Motor Power / Vehicle Weight = 10000W / 1000kg = 10W/kg)'], 'intent': 'calculate_electric_vehicle_runtime_and_power_to_weight_ratio', 'reasoning_type': 'physical knowledge reasoning & mathematical logic reasoning', 'numerical_values': [1000, 1000, 10000, 1000], 'units': {'capacity': 'Ah (Ampere-hour)', 'voltage': 'V (Volt)', 'power': 'W (Watt)', 'weight': 'kg (kilogram)', 'energy': 'Wh (Watt-hour) = Ah × V', 'time': 'h (hour) = Wh / W', 'ratio': 'W/kg = W / kg'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'Motors', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}, {'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}, {'pk_table': 'Motors', 'pk_column': 'Motor_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}, {'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}], 'electric_scooter.Motors': [{'column': 'Power', 'type': 'INTEGER', 'primary_key': False, 'comment': '功率 (W)', 'examples': ['400', '350', '500', '800', '250']}], 'electric_scooter.ElectricBikes': [{'column': 'Weight', 'type': 'DOUBLE', 'primary_key': False, 'comment': '重量 (kg)', 'examples': ['50.0', '58.0', '52.0', '60.0', '62.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an electric vehicle has a battery capacity of 1000Ah, a voltage of 1000V, and a motor power of 10000W, how long can this electric vehicle operate at full power? If the weight of this electric vehicle is 1000kg, what is its power-to-weight ratio?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.Power / e.Weight AS PowerToWeightRatio FROM ElectricBikes e JOIN Motors m ON e.Bike_ID = m.Bike_ID JOIN Batteries b ON e.Bike_ID = b.Bike_ID WHERE e.Weight = 30 AND m.Power = 500 AND b.Capacity = 20 AND b.Voltage = 48;",
        "db_id": "electric_scooter"
    },
    {
        "id": 159,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electricity usage 2kWh', 'charging time 2 hours'], 'relations': ['energy_to_power (2kWh and 2 hours → average charging power)'], 'intent': 'calculate_average_charging_power', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 2], 'units': {'energy': 'kWh (kilowatt-hour)', 'time': 'hours', 'power': 'kW (kilowatt)', 'conversion': 'Power(kW) = Energy(kWh) / Time(hour)'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}], 'tableinfo': {'electric_scooter.ChargingRecords': [{'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}, {'column': 'StartTime', 'type': 'DATETIME', 'primary_key': False, 'comment': '充电开始时间', 'examples': ['2023-10-01 10:00:00']}, {'column': 'EndTime', 'type': 'DATETIME', 'primary_key': False, 'comment': '充电结束时间', 'examples': ['2023-10-01 12:00:00']}]}}\nA physical knowledge question is as follows:\nA charging record shows the electricity usage is 2kWh with a charging time of 2 hours, so what is the average charging power?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (b.Voltage * b.Capacity) / b.Distance AS EnergyPerKm FROM Batteries b WHERE b.Distance = 60 AND b.Capacity = 20 AND b.Voltage = 48 LIMIT 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 160,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['user', 'charging records', 'electricity consumption'], 'relations': ['user_to_records (User_ID → ChargingRecords)', 'record_to_energy (ChargingRecords → Energy_Used)'], 'intent': 'calculate_total_and_average_electricity_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 'units': {'electricity_consumption': 'kWh (kilowatt-hour)', 'average_per_session': 'kWh/session'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}], 'tableinfo': {'electric_scooter.ChargingRecords': [{'column': 'Record_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'User_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}]}}\nA mathematical logic question is as follows:\nA user has 10 charging records in one month, with the electricity used in each record being 2kWh, 3kWh, 4kWh, 5kWh, 6kWh, 7kWh, 8kWh, 9kWh, 10kWh, and 11kWh. What is the total electricity consumption for this user in that month, and what is the average electricity consumed per charging session?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (b.Voltage * b.Capacity) / m.Power AS WorkingTime, m.Power / e.Weight AS PowerToWeightRatio FROM ElectricBikes e JOIN Motors m ON e.Bike_ID = m.Bike_ID JOIN Batteries b ON e.Bike_ID = b.Bike_ID WHERE b.Capacity = 1000 AND b.Voltage = 1000 AND m.Power = 10000 AND e.Weight = 1000;",
        "db_id": "electric_scooter"
    },
    {
        "id": 161,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['charging cost 10 yuan', 'electricity used 5kWh'], 'relations': ['cost_to_energy (10 yuan / 5 kWh)'], 'intent': 'calculate_cost_per_kwh', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 5], 'units': {'cost': 'yuan', 'energy': 'kWh', 'cost_per_energy': 'yuan/kWh'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}], 'tableinfo': {'electric_scooter.ChargingRecords': [{'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '充电费用', 'examples': ['5.0', '6.0', '5.6', '6.4', '5.4']}, {'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}]}}\nA common sense reasoning question is as follows:\nA charging record shows that the charging cost is 10 yuan, and the electricity used is 5kWh. What is the cost per kWh?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Energy_Used / ((UNIX_TIMESTAMP(EndTime) - UNIX_TIMESTAMP(StartTime)) / 3600) AS AveragePower FROM ChargingRecords WHERE Energy_Used = 2 AND (UNIX_TIMESTAMP(EndTime) - UNIX_TIMESTAMP(StartTime)) = 7200;",
        "db_id": "electric_scooter"
    },
    {
        "id": 162,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['user', 'charging records', '1,000 records', '100 kWh per record', '100 yuan per record', '1 yuan per kWh'], 'relations': ['user_to_charging_records (User_ID)', 'charging_records_aggregation (sum of 1,000 records)', 'cost validation (1 yuan/kWh vs. 100 yuan per 100 kWh)'], 'intent': 'calculate_total_electricity_consumption, calculate_total_charging_cost, validate_bill_reasonableness', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 100, 100, 1], 'units': {'electricity_consumption': 'kWh', 'charging_cost': 'yuan', 'cost_rate': 'yuan/kWh'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}, {'pk_table': 'users', 'pk_column': 'User_ID'}], 'tableinfo': {'electric_scooter.ChargingRecords': [{'column': 'Record_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '记录唯一标识', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'User_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '充电费用', 'examples': ['5.0', '6.0', '5.6', '6.4', '5.4']}], 'electric_scooter.users': [{'column': 'User_ID'}]}}\nA hypothetical reasoning question is as follows:\nAssuming a user has 1,000 charging records in a month, each record uses 100 kWh of electricity with a charging cost of 100 yuan. What is the user's total electricity consumption for this month? What is the total charging cost? If the cost per kWh is 1 yuan, is the user's electricity bill reasonable for this month?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Energy_Used) AS TotalEnergyUsed, AVG(Energy_Used) AS AverageEnergyPerCharge FROM ChargingRecords WHERE User_ID = 101 AND StartTime >= '2023-10-01 00:00:00' AND StartTime <= '2023-10-31 23:59:59';",
        "db_id": "electric_scooter"
    },
    {
        "id": 163,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance record', 'battery replacement', '500 yuan'], 'relations': ['record_to_cost (maintenance record → 500 yuan)', 'record_to_description (maintenance record → battery replacement)'], 'intent': 'calculate_average_cost_per_battery_replacement', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500], 'units': {'cost': 'yuan', 'calculation': 'average = total cost / count of battery replacement records'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'electric_scooter.MaintenanceRecords': [{'column': 'Description', 'type': 'TEXT COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '维护描述', 'examples': ['更换电池', '更换轮胎', '检查电机', '更换刹车片', '更换控制器']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护费用', 'examples': ['300.0', '150.0', '200.0', '100.0', '250.0']}]}}\nA physical knowledge question is as follows:\nThe maintenance record for an e-bike shows a maintenance cost of 500 yuan with the description stating \"battery replacement\". What is the average cost per battery replacement?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Cost / Energy_Used AS CostPerKWh FROM ChargingRecords WHERE Cost = 10 AND Energy_Used = 5;",
        "db_id": "electric_scooter"
    },
    {
        "id": 164,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric bicycle', '12 maintenance records', 'individual maintenance costs (100-1200 yuan)'], 'relations': ['bicycle_to_maintenance_records (ElectricBikes.Bike_ID → MaintenanceRecords.Bike_ID)', 'cost_aggregation (maintenance costs → total/average)'], 'intent': 'calculate_total_and_average_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200], 'units': {'currency': 'yuan (RMB)', 'calculation': 'sum_and_average_operations'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'electric_scooter.MaintenanceRecords': [{'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护费用', 'examples': ['300.0', '150.0', '200.0', '100.0', '250.0']}], 'electric_scooter.ElectricBikes': [{'column': 'Bike_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '电瓶车唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nAn electric bicycle has 12 maintenance records in a year, with maintenance costs of 100 yuan, 200 yuan, 300 yuan, 400 yuan, 500 yuan, 600 yuan, 700 yuan, 800 yuan, 900 yuan, 1000 yuan, 1100 yuan, and 1200 yuan for each instance respectively. What is the total annual maintenance cost for this electric bicycle? And what is the average cost per maintenance?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Energy_Used) AS TotalEnergyUsed, SUM(Cost) AS TotalCost, CASE WHEN SUM(Cost) = SUM(Energy_Used) * 1 THEN '合理' ELSE '不合理' END AS IsReasonable FROM ChargingRecords WHERE User_ID = 101 AND StartTime >= '2023-10-01 00:00:00' AND StartTime <= '2023-10-31 23:59:59';",
        "db_id": "electric_scooter"
    },
    {
        "id": 165,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Master Zhang', 'electric vehicle'], 'relations': ['repair_technician (Master Zhang → MaintenanceRecords.Technician)', 'vehicle_repair_record (electric vehicle → MaintenanceRecords.Bike_ID)'], 'intent': 'retrieve_repair_date', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'electric_scooter.MaintenanceRecords': [{'column': 'Maintenance_Date', 'type': 'DATETIME', 'primary_key': False, 'comment': '维护日期', 'examples': ['2023-10-01 00:00:00']}, {'column': 'Technician', 'type': 'VARCHAR(100) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '技术人员', 'examples': ['张师傅', '李师傅', '王师傅', '赵师傅', '孙师傅']}], 'electric_scooter.ElectricBikes': [{'column': 'Bike_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '电瓶车唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA common sense reasoning question is as follows:\nThe electric vehicle was repaired by Master Zhang, may I ask when it was repaired?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(Cost) AS AverageCost FROM MaintenanceRecords WHERE Description = '更换电池' AND Bike_ID = 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 166,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['electric scooter', 'maintenance records', 'battery replacement', '1000 maintenance records', '1000 yuan', '500 yuan'], 'relations': ['scooter_to_maintenance_records (electric scooter → MaintenanceRecords)', 'maintenance_to_cost (maintenance record → cost)', 'cost_comparison (recorded cost vs actual cost)'], 'intent': 'calculate_total_maintenance_cost_and_evaluate_reasonableness', 'reasoning_type': 'mathematical logic reasoning (for cost calculation) + common sense understanding reasoning (for reasonableness evaluation)', 'numerical_values': [1000, 1000, 500], 'units': {'cost': 'yuan (RMB)', 'count': 'unitless (maintenance instances)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'Maintenance_ID'}], 'tableinfo': {'electric_scooter.MaintenanceRecords': [{'column': 'Bike_ID', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '5']}, {'column': 'Description', 'type': 'TEXT COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '维护描述', 'examples': ['更换电池', '更换轮胎', '检查电机', '更换刹车片', '更换控制器']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '维护费用', 'examples': ['300.0', '150.0', '200.0', '100.0', '250.0']}], 'electric_scooter.ElectricBikes': [{'column': 'Model', 'type': 'VARCHAR(100) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '型号', 'examples': ['小牛NQi', '雅迪DE2', '九号C80', '爱玛极客X100', '新日MIKU Super']}]}}\nA hypothetical reasoning question is as follows:\nAssuming an electric scooter has 1,000 maintenance records in a year, with each maintenance costing 1,000 yuan and the maintenance description being battery replacement each time, what is the total maintenance cost for the electric scooter in that year? If the average cost of each battery replacement is 500 yuan, is the maintenance cost for this electric scooter reasonable?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Cost) AS TotalMaintenanceCost, AVG(Cost) AS AverageCostPerMaintenance FROM MaintenanceRecords WHERE Bike_ID = 1 AND Maintenance_Date >= '2023-01-01' AND Maintenance_Date <= '2023-12-31';",
        "db_id": "electric_scooter"
    },
    {
        "id": 167,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['charging station', '10 available charging slots', '7kW per slot'], 'relations': ['slots_to_power (10 slots × 7kW = 70kW)'], 'intent': 'calculate_total_power_of_charging_station', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 7], 'units': {'power_per_slot': 'kW (kilowatts)', 'total_power': 'kW (kilowatts)', 'calculation': '7kW/slot × 10 slots = 70kW'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'ChargingStations', 'pk_column': 'Station_ID'}], 'tableinfo': {'electric_scooter.ChargingStations': [{'column': 'Available_Slots', 'type': 'INTEGER', 'primary_key': False, 'comment': '可用充电槽数量', 'examples': ['10', '8', '12', '15', '6']}]}}\nA physical knowledge question is as follows:\nIf a charging station has 10 available charging slots with each slot having a power of 7kW, what is the total power of the charging station?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Maintenance_Date FROM MaintenanceRecords WHERE Technician = '张师傅';",
        "db_id": "electric_scooter"
    },
    {
        "id": 168,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['10 charging slots', '7kW power per slot', '8 hours daily operation'], 'relations': ['slots_to_power (10 slots × 7kW = 70kW total power)', 'power_to_energy (70kW × 8h = 560kWh daily consumption)'], 'intent': 'calculate_daily_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 7, 8], 'units': {'power': 'kW (kilowatts)', 'time': 'hours', 'energy': 'kWh (kilowatt-hours)', 'conversion': 'Energy (kWh) = Power (kW) × Time (h)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'ChargingStations', 'pk_column': 'Station_ID'}], 'tableinfo': {'electric_scooter.ChargingStations': [{'column': 'Available_Slots', 'type': 'INTEGER', 'primary_key': False, 'comment': '可用充电槽数量', 'examples': ['10', '8', '12', '15', '6']}]}}\nA mathematical logic question is as follows:\nAssuming a charging station has 10 available charging slots, each with a power of 7kW, and if each charging slot operates for 8 hours a day, what is the total daily energy consumption of the charging station?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(Cost) AS TotalMaintenanceCost, CASE WHEN SUM(Cost) = 500 * COUNT(*) THEN '合理' ELSE '不合理' END AS IsReasonable FROM MaintenanceRecords WHERE Description = '更换电池' AND Bike_ID = 201 AND Maintenance_Date >= '2023-01-01' AND Maintenance_Date <= '2023-12-31';",
        "db_id": "electric_scooter"
    },
    {
        "id": 169,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['charging station', '10 available charging slots', '7 kW per slot', '10 electric vehicles'], 'relations': ['slots_to_power (10 slots × 7 kW per slot → total power)', 'vehicles_to_slots (10 vehicles = 10 slots)'], 'intent': 'calculate_average_charging_power_per_vehicle', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 7], 'units': {'power_per_slot': 'kW', 'total_power': 'kW', 'average_power_per_vehicle': 'kW'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'ChargingStations', 'pk_column': 'Station_ID'}], 'tableinfo': {'electric_scooter.ChargingStations': [{'column': 'Available_Slots', 'type': 'INTEGER', 'primary_key': False, 'comment': '可用充电槽数量', 'examples': ['10', '8', '12', '15', '6']}]}}\nA common sense reasoning question is as follows:\nIf a charging station has 10 available charging slots, each with a power of 7kW, what is the average charging power per electric vehicle when the station simultaneously charges 10 electric vehicles?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT 7 * Available_Slots AS TotalPower FROM ChargingStations WHERE Available_Slots = 10 LIMIT 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 170,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['charging station', '1,000 available charging slots', '1,000 kW power output per slot', '24 hours operation'], 'relations': ['slots_to_power (slots * power → energy calculation)', 'time_factor (24 hours → daily consumption)'], 'intent': 'calculate_total_daily_energy_consumption_and_electricity_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 1000, 24], 'units': {'power': 'kW (kilowatts)', 'time': 'hours/day', 'energy': 'kWh (kilowatt-hour = kW * hours)', 'cost': 'currency (requires price per kWh)'}, 'foreign_keys': [{'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Bike_ID', 'ref_table': 'users', 'ref_column': 'Bike_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'Station_ID', 'ref_table': 'ChargingStations', 'ref_column': 'Station_ID'}, {'fk_table': 'ChargingRecords', 'fk_column': 'User_ID', 'ref_table': 'users', 'ref_column': 'User_ID'}], 'primary_keys': [{'pk_table': 'ChargingRecords', 'pk_column': 'Record_ID'}, {'pk_table': 'ChargingStations', 'pk_column': 'Station_ID'}], 'tableinfo': {'electric_scooter.ChargingStations': [{'column': 'Available_Slots', 'type': 'INTEGER', 'primary_key': False, 'comment': '可用充电槽数量', 'examples': ['10', '8', '12', '15', '6']}], 'electric_scooter.ChargingRecords': [{'column': 'Energy_Used', 'type': 'DOUBLE', 'primary_key': False, 'comment': '使用的电量 (kWh)', 'examples': ['2.0', '3.0', '2.8', '3.2', '2.7']}, {'column': 'Cost', 'type': 'DOUBLE', 'primary_key': False, 'comment': '充电费用', 'examples': ['5.0', '6.0', '5.6', '6.4', '5.4']}]}}\nA hypothetical reasoning question is as follows:\nIf a charging station has 1,000 available charging slots, each with a power output of 1,000 kW, and each charging slot operates 24 hours a day, what is the total daily energy consumption of the charging station? How much is the daily electricity cost for the charging station?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (7 * 8) * Available_Slots AS TotalEnergyConsumption FROM ChargingStations WHERE Available_Slots = 10 LIMIT 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 171,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['users registered in October 2023'], 'relations': ['date_filter (CreatedAt → October 2023)'], 'intent': 'count_registered_users', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'count': 'number of users'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'users', 'pk_column': 'User_ID'}], 'tableinfo': {'electric_scooter.users': [{'column': 'CreatedAt'}]}}\nA physical knowledge question is as follows:\nHow many users registered in October 2023?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (7 * Available_Slots) / Available_Slots AS AverageChargingPower FROM ChargingStations WHERE Available_Slots = 10 LIMIT 1;",
        "db_id": "electric_scooter"
    },
    {
        "id": 172,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['users', 'registration time difference of 1 day'], 'relations': ['user_to_registration_time (users → CreatedAt)', 'registration_time_difference (ΔT ≤ 24 hours)'], 'intent': 'count_users_with_registration_time_difference_within_one_day', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1], 'units': {'time_difference': 'day (converted to 24 hours for calculation)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'users', 'pk_column': 'User_ID'}], 'tableinfo': {'electric_scooter.users': [{'column': 'CreatedAt'}]}}\nA mathematical logic question is as follows:\nHow many users have a registration time difference within one day?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (1000 * 24) * Available_Slots AS TotalEnergyConsumption, SUM(Cost) AS TotalCost FROM ChargingStations cs JOIN ChargingRecords cr ON cs.Station_ID = cr.Station_ID WHERE cs.Available_Slots = 1000 AND DATE(cr.StartTime) = '2023-10-01';",
        "db_id": "electric_scooter"
    },
    {
        "id": 173,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['users', 'regions (Address field)'], 'relations': ['user_to_region (Address field in users table defines regional grouping)'], 'intent': 'count_users_by_region', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': ['COUNT(User_ID)'], 'units': {'count': 'number of users (no unit conversion required)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'users', 'pk_column': 'User_ID'}], 'tableinfo': {'electric_scooter.users': [{'column': 'User_ID'}, {'column': 'Address'}]}}\nA common sense reasoning question is as follows:\nHow many users are from different regions?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS UserCount FROM users WHERE DATE(CreatedAt) >= '2023-10-01' AND DATE(CreatedAt) <= '2023-10-31';",
        "db_id": "electric_scooter"
    },
    {
        "id": 174,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Zhang San', 'Chaoyang District, Beijing'], 'relations': ['user_to_address (Zhang San → Chaoyang District, Beijing)', 'same_district_as (Zhang San ↔ other users)'], 'intent': 'count_users_in_same_district', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'count': 'Number of users'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'users', 'pk_column': 'User_ID'}], 'tableinfo': {'electric_scooter.users': [{'column': 'Username'}, {'column': 'Address'}]}}\nA hypothetical reasoning question is as follows:\nIf there is a user named Zhang San in Chaoyang District, Beijing, how many users are in the same district as him?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(DISTINCT u1.User_ID) AS UserCount FROM users u1 JOIN users u2 ON ABS(TIMESTAMPDIFF(DAY, u1.CreatedAt, u2.CreatedAt)) <= 1 AND u1.User_ID != u2.User_ID;",
        "db_id": "electric_scooter"
    },
    {
        "id": 175,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Battery with Voltage 48V', 'Battery with Capacity 20Ah'], 'relations': ['voltage_to_capacity (V × Ah → Energy)'], 'intent': 'calculate_energy_stored_in_battery', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [48, 20], 'units': {'voltage': 'V (Volts)', 'capacity': 'Ah (Ampere-hours)', 'energy': 'Wh (Watt-hours, calculated as V × Ah)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}]}}\nA physical knowledge question is as follows:\nA battery has a voltage of 48V and a capacity of 20Ah. How much electrical energy is stored in this battery?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(DISTINCT Address) AS DistinctRegionCount FROM users;",
        "db_id": "electric_scooter"
    },
    {
        "id": 176,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery capacity 20Ah', 'voltage 48V', 'range 60km'], 'relations': ['capacity_to_voltage (Ah × V → Wh)', 'energy_to_distance (Wh ÷ km → Wh/km)'], 'intent': 'calculate_energy_consumption_per_kilometer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 48, 60], 'units': {'capacity': 'Ah (Ampere-hour)', 'voltage': 'V (Volt)', 'distance': 'km (kilometer)', 'energy_consumption': 'Wh/km (calculated as (Ah × V) ÷ km)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}, {'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}, {'column': 'Distance', 'type': 'INTEGER', 'primary_key': False, 'comment': '续航里程 (km)', 'examples': ['60', '36', '70', '100', '40']}]}}\nA mathematical logic question is as follows:\nAn electric scooter has a battery capacity of 20Ah with a voltage of 48V and a range of 60km. What is the energy consumption per kilometer?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT COUNT(*) AS SameRegionUserCount FROM users WHERE Address = (SELECT Address FROM users WHERE Username = '张三');",
        "db_id": "electric_scooter"
    },
    {
        "id": 177,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Battery with 20Ah capacity', 'Battery with 48V voltage', '500W motor'], 'relations': ['battery_energy_capacity (Voltage × Capacity = 960Wh)', 'motor_power_consumption_rate (500W)', 'operation_time (Energy ÷ Power = 1.92 hours)'], 'intent': 'calculate_operation_time_of_motor', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20, 48, 500], 'units': {'capacity': 'Ah (Ampere-hour)', 'voltage': 'V (Volt)', 'power': 'W (Watt)', 'energy_conversion': 'Wh = V × Ah (48V × 20Ah = 960Wh)', 'time': 'hours = Wh ÷ W (960Wh ÷ 500W)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'Motors', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}, {'pk_table': 'Motors', 'pk_column': 'Motor_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}, {'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}], 'electric_scooter.Motors': [{'column': 'Power', 'type': 'INTEGER', 'primary_key': False, 'comment': '功率 (W)', 'examples': ['400', '350', '500', '800', '250']}]}}\nA common sense reasoning question is as follows:\nA battery has a capacity of 20Ah and a voltage of 48V. How many hours can this fully charged battery support the operation of a 500W motor?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Voltage * Capacity AS Energy FROM Batteries WHERE Voltage = 48 AND Capacity = 20;",
        "db_id": "electric_scooter"
    },
    {
        "id": 178,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['battery_capacity_1000Ah', 'battery_voltage_1000V', 'motor_power_10000W'], 'relations': ['battery_specs_to_energy (E = V × Q)', 'energy_to_runtime (t = E ÷ P)'], 'intent': 'calculate_battery_energy_storage_and_motor_runtime', 'reasoning_type': 'physical knowledge reasoning (for energy) + mathematical logic reasoning (for runtime)', 'numerical_values': [1000, 1000, 10000], 'units': {'capacity': 'Ah (Ampere-hour)', 'voltage': 'V (Volt)', 'energy': 'Wh (Watt-hour) 1000V × 1000Ah = 1,000,000Wh', 'power': 'W (Watt)', 'time': 'hours (1,000,000Wh ÷ 10,000W = 100 hours)'}, 'foreign_keys': [{'fk_table': 'Batteries', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}, {'fk_table': 'Motors', 'fk_column': 'Bike_ID', 'ref_table': 'ElectricBikes', 'ref_column': 'Bike_ID'}], 'primary_keys': [{'pk_table': 'Batteries', 'pk_column': 'Battery_ID'}, {'pk_table': 'Motors', 'pk_column': 'Motor_ID'}], 'tableinfo': {'electric_scooter.Batteries': [{'column': 'Capacity', 'type': 'INTEGER', 'primary_key': False, 'comment': '容量 (Ah)', 'examples': ['20', '12', '32', '15', '60']}, {'column': 'Voltage', 'type': 'INTEGER', 'primary_key': False, 'comment': '电压 (V)', 'examples': ['48', '60', '72', '36', '1000']}], 'electric_scooter.Motors': [{'column': 'Power', 'type': 'INTEGER', 'primary_key': False, 'comment': '功率 (W)', 'examples': ['400', '350', '500', '800', '250']}]}}\nA hypothetical reasoning question is as follows:\nAssuming a battery has a capacity of 1000Ah and a voltage of 1000V, how much electrical energy does this battery store? If this battery is used to power a 10000W motor, how long can it support the motor?\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Voltage * Capacity) / Distance AS EnergyPerKm FROM Batteries WHERE Capacity = 20 AND Voltage = 48 AND Distance = 60;",
        "db_id": "electric_scooter"
    },
    {
        "id": 179,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['items', 'validity period'], 'relations': ['item_to_validity_period (unknown mapping due to missing schema)'], 'intent': 'calculate_remaining_days_and_sort', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'time': 'days'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': 'This sql query does not need table and columns information as it is about mathematical calculations.'}\nA physical knowledge question is as follows:\nCalculate the remaining days for items within their validity period, and sort them in ascending order by the remaining days.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT (Voltage * Capacity) / 500 AS RunTime FROM Batteries WHERE Capacity = 20 AND Voltage = 48;",
        "db_id": "electric_scooter"
    },
    {
        "id": 180,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['supplier (Manufacturer)', 'items (ElectricBikes)'], 'relations': ['manufacturer_to_electric_bike (Manufacturer → Bike_ID count)'], 'intent': 'calculate_and_rank_item_counts_by_supplier', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'item_count': 'number of items (Bike_ID instances)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'ElectricBikes', 'pk_column': 'Bike_ID'}], 'tableinfo': {'electric_scooter.ElectricBikes': [{'column': 'Manufacturer', 'type': 'VARCHAR(100) COLLATE \"utf8mb3_general_ci\"', 'primary_key': False, 'comment': '制造商', 'examples': ['小牛电动', '雅迪科技', '九号公司', '爱玛科技', '新日股份']}, {'column': 'Bike_ID', 'type': 'INTEGER', 'primary_key': True, 'comment': '电瓶车唯一标识', 'examples': ['1', '2', '3', '4', '5']}]}}\nA mathematical logic question is as follows:\nCalculate the number of items provided by each supplier, sorted in descending order by item count, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Voltage * Capacity AS Energy, (Voltage * Capacity) / 10000 AS RunTime FROM Batteries WHERE Capacity = 1000 AND Voltage = 1000;",
        "db_id": "electric_scooter"
    },
    {
        "id": 181,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific area'], 'relations': ['device_to_place (placeId)', 'area_specification (country = specific area)'], 'intent': 'list_items_in_area', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Places', 'pk_column': 'placeId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'itemName'}, {'column': 'specifications'}, {'column': 'storageLocation'}], 'PhysicsLabDB.Places': [{'column': 'country', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': []}]}}\nA common sense reasoning question is as follows:\nFind all items in a specific area and list their item names, specifications, and storage locations.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT Devices.deviceId AS itemId, Devices.deviceName AS itemName, Devices.deviceType AS specification, Labs.location AS storageLocation FROM Devices JOIN Labs ON Devices.labId = Labs.labId WHERE Labs.location = '特定区域';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 182,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption', 'EnergyEfficiency', 'EnergyDevices', 'Device Efficiency Metrics'], 'relations': ['device_to_efficiency (EnergyDevices.deviceId → EnergyEfficiency.deviceId)', 'average_efficiency (per device)', 'ranking (lowest efficiency)'], 'intent': 'calculate_average_efficiency_and_rank_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'efficiency': 'unitless (assumed from EnergyEfficiency.efficiency field)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'efficiency'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA hypothetical reasoning question is as follows:\nCalculate the average energy consumption efficiency for each device and identify the 5 devices with the lowest efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, (SUM(energyConsumed) / (SUM(powerUsage) * (MAX(julianday(timestamp)) - MIN(julianday(timestamp))) * 24) * 100 AS efficiency FROM EnergyConsumption GROUP BY deviceId ORDER BY efficiency ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 183,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy consumption data', 'fluctuation rate', 'device'], 'relations': ['device_to_consumption_data (deviceId → EnergyConsumption)', 'fluctuation_rate_calculation (statistical variance/standard deviation of energyConsumed over time)'], 'intent': 'calculate_energy_consumption_fluctuation_rate_and_rank_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed)', 'fluctuation_rate': 'unitless ratio (standard deviation/mean) or percentage variation', 'ranking': 'top 10 devices (ordered by fluctuation magnitude)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'timestamp'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA physical knowledge question is as follows:\nCalculate the energy consumption fluctuation rate for each device and identify the top 10 devices with the highest fluctuation rates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, (STDDEV(energyConsumed) / AVG(energyConsumed) * 100 AS fluctuationRate FROM EnergyConsumption GROUP BY deviceId ORDER BY fluctuationRate DESC LIMIT 10;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 184,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['region', 'item_count'], 'relations': ['region_to_device_count (region → device_count)'], 'intent': 'calculate_item_count_per_region', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'item_count': 'unitless (number of items)', 'sorting': 'ascending order by item_count'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Sun City, USA', 'Wind Town, Canada', 'Energy City, UK', '测试地点', 'Test Location']}], 'EnergyManagementDB.COUNT(EnergyDevices': [{'column': 'deviceId)'}]}}\nA mathematical logic question is as follows:\nCalculate the number of items in each region, sorted in ascending order by item count, and take the last 5 entries.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT location, COUNT(*) AS itemCount FROM EnergyManagementDB.EnergyDevices GROUP BY location ORDER BY itemCount ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 185,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'Suppliers', 'Under Maintenance'], 'relations': ['Devices_to_Suppliers (supplierId)'], 'intent': 'retrieve_items_under_maintenance', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'itemName'}, {'column': 'specifications'}], 'PhysicsLabDB.Suppliers': [{'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}]}}\nA common sense reasoning question is as follows:\nFind all items with a status of 'Under Maintenance' and list their item names, specifications, and supplier names.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.deviceType, l.labName FROM Devices d JOIN Labs l ON d.labId = l.labId WHERE d.status = '维护中';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 186,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['supplier', 'device'], 'relations': ['supplier_to_devices (supplierId → devices)'], 'intent': 'calculate_total_extended_warranty_days_per_supplier_and_rank_top_3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10, 365, 3], 'units': {'warranty_extension': 'years', 'conversion': '10 years = 3650 days (10 * 365 days/year)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'supplierId'}, {'column': 'deviceId'}], 'PhysicsLabDB.Suppliers': [{'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the warranty period for all items is extended by 10 years, calculate the total extended warranty days for each supplier, then sort in descending order by total extended days and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceType, COUNT(d.deviceId) * 10 * 365 AS totalWarrantyExtensionDays FROM Devices d GROUP BY d.deviceType ORDER BY totalWarrantyExtensionDays DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 187,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'MaintenanceRecords'], 'relations': ['device_to_maintenance_records (deviceId → deviceId)'], 'intent': 'calculate_days_between_last_and_next_maintenance_dates_and_sort', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'interval': 'days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}], 'PhysicsLabDB.MaintenanceRecords': [{'column': 'maintenanceDate'}]}}\nA physical knowledge question is as follows:\nCalculate the number of days between the last maintenance date and the next maintenance date for items, and sort them in ascending order by the interval days.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.deviceType, s.supplierName FROM Devices d JOIN Suppliers s ON d.supplierId = s.supplierId WHERE d.status = '故障' ORDER BY DATEDIFF(NOW(), d.calibrationDate) ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 188,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['suppliers', 'item specifications'], 'relations': ['supplier_to_specifications (supplierId → devices.specifications)'], 'intent': 'count_and_rank_specifications_by_supplier', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'count': 'specifications_count'}, 'foreign_keys': [], 'primary_keys': [], 'tableinfo': {'PhysicsLabDB.suppliers': [{'column': 'supplierId'}, {'column': 'supplierName'}], 'PhysicsLabDB.devices': [{'column': 'specifications'}]}}\nA mathematical logic question is as follows:\nCalculate the number of item specifications provided by each supplier, sort them in descending order by the count of specifications, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.supplierName, COUNT(DISTINCT d.deviceType) AS specificationCount FROM Devices d JOIN Suppliers s ON d.supplierId = s.supplierId GROUP BY s.supplierName ORDER BY specificationCount DESC LIMIT 5;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 189,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['items under warranty', 'device'], 'relations': ['device_to_warranty (deviceId → warrantyEndDate)', 'item_to_device (itemId → itemName)'], 'intent': 'retrieve_items_under_warranty', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'date': 'YYYY-MM-DD (default date format)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'itemName'}, {'column': 'specifications'}, {'column': 'warrantyEndDate'}]}}\nA common sense reasoning question is as follows:\nFind all items that are under warranty and list their item name, specifications, and warranty expiration date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, warrantyEndDate FROM Devices WHERE warrantyEndDate >= CURDATE();",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 190,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device maintenance cost', 'supplier', 'maintenance cost multiplier (1000x)'], 'relations': ['device_to_supplier (Devices.supplierId → Suppliers.supplierId)', 'device_to_maintenance_cost (Devices.deviceType → DeviceTypes.maintenanceCost)', 'cost_multiplication (×1000)'], 'intent': 'calculate_and_rank_total_maintenance_cost_by_supplier', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'maintenance_cost': 'currency (implied by database schema)', 'multiplier': 'dimensionless (×1000)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'DeviceTypes', 'pk_column': 'deviceType'}, {'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'supplierId'}, {'column': 'deviceType'}], 'PhysicsLabDB.DeviceTypes': [{'column': 'maintenanceCost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1000.0', '800.0', '300.0', '500.0']}], 'PhysicsLabDB.Suppliers': [{'column': 'supplierId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '501', '502']}, {'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance cost of all items increases by 1000 times, calculate the total maintenance cost for each supplier, then sort them in descending order by total maintenance cost and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.supplierId, COUNT(d.deviceType) * 1000 AS totalMaintenanceCost FROM Devices d JOIN Suppliers s ON d.supplierId = s.supplierId GROUP BY s.supplierId ORDER BY totalMaintenanceCost DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 191,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['purchase date', 'warranty expiration date'], 'relations': ['device_to_purchase_date', 'device_to_warranty_expiry_date'], 'intent': 'calculate_warranty_period_in_days', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'duration': 'days (calculated from date difference)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'purchaseDate'}, {'column': 'warrantyEndDate'}]}}\nA physical knowledge question is as follows:\nCalculate the total warranty days for items from the purchase date to the warranty expiration date, and sort them in descending order by total warranty days.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, DATEDIFF(warrantyEndDate, purchaseDate) AS totalWarrantyDays FROM Devices ORDER BY totalWarrantyDays DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 192,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['country', 'EnergyDevices', 'Manufacturers'], 'relations': ['device_to_manufacturer (EnergyDevices.manufacturerId → Manufacturers.manufacturerId)', 'manufacturer_to_country (Manufacturers.country)'], 'intent': 'count_and_sort_countries_by_item_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'item_count': 'number (count of devices)', 'sort_order': 'ascending', 'limit': 'bottom 5 entries'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}], 'EnergyManagementDB.Manufacturers': [{'column': 'country'}]}}\nA mathematical logic question is as follows:\nCalculate the number of items for each country and sort them in ascending order by item count, then take the bottom 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.country, COUNT(e.deviceId) AS deviceCount FROM EnergyDevices e JOIN Manufacturers m ON e.manufacturerId = m.manufacturerId GROUP BY m.country ORDER BY deviceCount ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 193,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"items with status 'Disabled'\"], 'relations': [\"item_status_filter (status='Disabled')\", 'item_attribute_mapping (itemName, specifications, storageLocation)'], 'intent': 'retrieve_disabled_items', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'itemName'}, {'column': 'specifications'}, {'column': 'storageLocation'}]}}\nA common sense reasoning question is as follows:\nFind all items with the status 'Disabled', and list their item name, specifications, and storage location.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT itemName, specifications, storageLocation FROM Devices WHERE status = '停用';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 194,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['suppliers', 'maintenance cost reduction', 'total maintenance cost'], 'relations': ['supplier_to_device (suppliers → devices)', 'device_to_cost (device type → maintenance cost)', 'cost_reduction (90% reduction applied)'], 'intent': 'calculate_total_maintenance_cost_by_supplier_with_reduction_sort_and_select_top3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.1], 'units': {'cost': 'currency (implied by DeviceTypes.maintenanceCost column)', 'reduction': '90% reduction factor (0.1x multiplier)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'DeviceTypes', 'pk_column': 'deviceType'}, {'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Suppliers': [{'column': 'supplierId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '501', '502']}, {'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}], 'PhysicsLabDB.Devices': [{'column': 'supplierId'}, {'column': 'deviceType'}], 'PhysicsLabDB.DeviceTypes': [{'column': 'deviceType', 'type': 'VARCHAR(255)', 'primary_key': True, 'comment': '', 'examples': ['光设备', '光谱仪', '其他', '示波器']}, {'column': 'maintenanceCost', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['1000.0', '800.0', '300.0', '500.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance cost of all items is reduced by 90%, calculate the total maintenance cost for each supplier, sort them in ascending order by total maintenance cost, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.supplierId, SUM(dt.maintenanceCost) * 0.1 AS totalMaintenanceCost FROM Devices d JOIN DeviceTypes dt ON d.deviceType = dt.deviceType GROUP BY d.supplierId ORDER BY totalMaintenanceCost ASC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 195,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'last maintenance date', 'current date'], 'relations': ['date_difference (days_without_maintenance)'], 'intent': 'calculate_days_since_last_maintenance_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'time_interval': 'days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'lastMaintenanceDate'}]}}\nA physical knowledge question is as follows:\nCalculate the number of days the items have gone without maintenance from the last maintenance date to the current date, and sort them in descending order by the number of days without maintenance.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, DATEDIFF(CURDATE(), d.calibrationDate) AS unmaintainedDays FROM Devices d WHERE d.status = '停用' ORDER BY unmaintainedDays DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 196,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturers', 'EnergyDevices'], 'relations': ['manufacturer_to_devices (manufacturerId → deviceId)'], 'intent': 'count_and_sort_devices_per_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'count': 'unitless (number of devices)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}], 'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerId'}, {'column': 'manufacturerName'}]}}\nA mathematical logic question is as follows:\nCalculate the number of serial numbers of items provided by each supplier, sort them in descending order by the number of serial numbers, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT m.manufacturerName, COUNT(e.deviceId) AS deviceCount FROM EnergyDevices e JOIN Manufacturers m ON e.manufacturerId = m.manufacturerId GROUP BY m.manufacturerName ORDER BY deviceCount DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 197,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['specific supplier', 'items (devices)'], 'relations': ['supplier_to_devices (Suppliers.supplierId = Devices.supplierId)'], 'intent': 'retrieve_items_provided_by_supplier', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Suppliers': [{'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}], 'PhysicsLabDB.Devices': [{'column': 'itemName'}, {'column': 'specifications'}, {'column': 'purchaseDate'}]}}\nA common sense reasoning question is as follows:\nFind all items provided by a specific supplier (such as 'a certain supplier') and list their item names, specifications, and purchase dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.itemName, d.purchaseDate FROM Devices d JOIN Suppliers s ON d.supplierId = s.supplierId WHERE s.supplierName = '某供应商';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 198,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['warranty period', 'suppliers', 'shortened days'], 'relations': ['supplier_to_items (suppliers → devices)', 'warranty_reduction (50%)', 'aggregation_by_supplier'], 'intent': 'calculate_total_shortened_days_per_supplier_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5], 'units': {'warranty_period': 'days', 'conversion': 'shortened_days = warranty_period * 0.5'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'supplierId'}, {'column': 'warrantyPeriod'}], 'PhysicsLabDB.Suppliers': [{'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the warranty period for all items is shortened by 50%, calculate the total number of days shortened for each supplier's items, then sort them in descending order by total shortened days and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.supplierId, SUM(DATEDIFF(d.warrantyEndDate, d.purchaseDate) * 0.5) AS totalWarrantyReduction FROM Devices d GROUP BY d.supplierId ORDER BY totalWarrantyReduction DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 199,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['daily average energy consumption', 'devices'], 'relations': ['device_to_energy_consumption (deviceId → EnergyConsumption)'], 'intent': 'calculate_average_energy_consumption_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (kilowatt-hours)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyConsumption', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}, {'column': 'consumptionDate'}], 'PhysicsLabDB.Devices': [{'column': 'deviceName'}]}}\nA physical knowledge question is as follows:\nCalculate the daily average energy consumption (in kilowatt-hours) for all devices, and sort the results in descending order by energy consumption value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT i.itemName, i.purchaseDate, i.energyConsumption FROM Devices i ORDER BY i.energyConsumption DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 200,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device types', 'total energy consumption values'], 'relations': ['aggregation (deviceType → sum of energyConsumed)', 'ranking (ascending order of total energy consumption)'], 'intent': 'calculate_total_energy_consumption_per_device_type_and_rank_top_3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'energy_consumption': 'unit inferred from EnergyConsumption.energyConsumed column (e.g., kWh)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyConsumption', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'PhysicsLabDB.Devices': [{'column': 'deviceType'}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption for each device type, ranked in ascending order of total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT s.supplierName, SUM((i.warrantyPeriod * 0.5)) AS totalShortenedDays FROM Devices i JOIN Suppliers s ON i.supplierId = s.supplierId GROUP BY s.supplierName ORDER BY totalShortenedDays DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 201,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['power rating', 'devices'], 'relations': ['device_power_filter (powerRating > 100W)'], 'intent': 'list_devices_with_high_power_rating', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'power': 'watts'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA common sense reasoning question is as follows:\nFind all devices with a power rating greater than 100 watts and list their device name, device type, and rated power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, powerRating FROM EnergyDevices WHERE powerRating > 100 ORDER BY powerRating DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 202,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'rated power increase tenfold', 'total energy consumption'], 'relations': ['device_type_to_energy_consumption', 'rated_power_increase'], 'intent': 'calculate_energy_consumption_after_scaling_power', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'energy_consumption': 'kWh (implied by database schema)', 'scaling_factor': '10× increase'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the rated power of all devices increases tenfold, calculate the total energy consumption for each device type, sorted in descending order by total energy consumption, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 203,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['all_devices'], 'relations': ['device_power_values', 'total_power = sum of device_power_values'], 'intent': 'calculate_total_real_time_power', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'W (watts)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'power'}]}}\nA physical knowledge question is as follows:\nCalculate the total real-time power (in watts) for all devices, sorted in descending order by power value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, power FROM Devices WHERE power > 100 ORDER BY power DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 204,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturers (suppliers)', 'Devices'], 'relations': ['device_to_manufacturer (Devices.supplierId → Suppliers.supplierId)'], 'intent': 'count_devices_per_manufacturer_sort_and_top_5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'count': 'unitless (number of devices)', 'limit': 'top 5'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'supplierId'}], 'PhysicsLabDB.Suppliers': [{'column': 'supplierId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '501', '502']}, {'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}]}}\nA mathematical logic question is as follows:\nCount the number of devices for each manufacturer, sort in descending order by device count, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT supplierId, COUNT(*) AS deviceCount FROM Devices GROUP BY supplierId ORDER BY deviceCount DESC LIMIT 5;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 205,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'fault status'], 'relations': [\"device_to_status (device.status = 'fault')\"], 'intent': 'retrieve_devices_with_fault_status', 'reasoning_type': 'common_sense_understanding', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'deviceType'}, {'column': 'installationDate'}, {'column': 'status'}]}}\nA common sense reasoning question is as follows:\nFind all devices with a status of 'fault' and list their device names, device types, and installation dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, installationDate FROM Devices WHERE status = '故障';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 206,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'energy consumption value', '100x multiplier', 'total energy consumption'], 'relations': ['device_to_type (Devices.deviceType → DeviceTypes.deviceType)', 'device_to_energy (Devices.deviceId → EnergyConsumption.deviceId)', 'scaling_factor (100x multiplication)'], 'intent': 'calculate_scaled_total_energy_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'energy': 'original unit (e.g., kWh) multiplied by 100', 'scaling': 'x100 (unit-preserving multiplication)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'DeviceTypes', 'pk_column': 'deviceType'}, {'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyConsumption', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceType'}], 'PhysicsLabDB.EnergyConsumption': [{'column': 'energyConsumed'}], 'PhysicsLabDB.DeviceTypes': [{'column': 'deviceType', 'type': 'VARCHAR(255)', 'primary_key': True, 'comment': '', 'examples': ['光设备', '光谱仪', '其他', '示波器']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the energy consumption value of all devices is increased by 100 times, calculate the total energy consumption for each device type, sort by total energy consumption in descending order, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(power * 100) AS totalEnergyConsumed FROM Devices GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 207,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['current value'], 'relations': ['device_to_current (device → current)'], 'intent': 'retrieve_and_sort_current_values', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'current': 'A (amperes)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'current'}]}}\nA physical knowledge question is as follows:\nCalculate the total real-time current (in amperes) for all devices, sorted in descending order by current value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, SUM(current) AS totalCurrent FROM Devices GROUP BY deviceName, deviceType ORDER BY totalCurrent DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 208,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'average energy consumption', 'last 5 entries'], 'relations': ['deviceType_to_energyConsumed (EnergyDevices.deviceType → EnergyConsumption.energyConsumed)'], 'intent': 'aggregate_and_rank_average_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'energy_consumption': \"kWh (implied by column name 'energyConsumed')\", 'count': '5 entries'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}, {'column': 'deviceId'}]}}\nA mathematical logic question is as follows:\nCalculate the average energy consumption for each device type, sort them in ascending order by average energy consumption, and take the last 5 entries.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, AVG(energyConsumed) AS avgEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY avgEnergyConsumed ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 209,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'installation date'], 'relations': ['equipment_to_installation_date (equipment → installationDate)', 'age_comparison (installationDate < 5 years ago)'], 'intent': 'retrieve_equipment_older_than_5_years', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'duration': 'years', 'date_comparison': 'calculated as current_date - 5 years'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'deviceType'}, {'column': 'installationDate'}]}}\nA common sense reasoning question is as follows:\nFind all equipment installed for more than 5 years and list their equipment name, equipment type, and installation date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, installationDate FROM Devices WHERE DATEDIFF(CURRENT_DATE, installationDate) > 5 * 365;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 210,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time voltage increase', 'device types', 'energy consumption calculation'], 'relations': ['voltage_multiplication_factor (5×)', 'device_type_to_energy_consumption (aggregation)', 'energy_consumption_sort_order (descending)'], 'intent': 'calculate_hypothetical_energy_consumption_by_device_type', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5], 'units': {'voltage': 'V (volts)', 'energy_consumption': 'kWh (implied by database schema)', 'scaling': 'voltage × 5 (direct multiplication)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}, {'column': 'voltage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the real-time voltage of all devices increases by five times, calculate the total energy consumption for each device type, sorted in descending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed * 5) AS totalEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 211,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'power factor 0.8'], 'relations': ['device_to_power_factor (all devices → 0.8)'], 'intent': 'apply_assumed_power_factor_and_sort', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [0.8], 'units': {'power_factor': 'unitless (dimensionless quantity)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}, {'column': 'power'}]}}\nA physical knowledge question is as follows:\nCalculate the real-time power factor for all devices (assuming a power factor of 0.8) and sort them in ascending order by power factor value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, 0.8 AS powerFactor FROM Devices ORDER BY powerFactor ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 212,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'maintenance cost'], 'relations': ['device_type_to_maintenance_cost (deviceType → cost)'], 'intent': 'calculate_and_rank_total_maintenance_cost_per_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'cost': \"currency (assumed from 'cost' column in MaintenanceRecords)\", 'ranking': 'top 5 (count)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}]}}\nA mathematical logic question is as follows:\nCalculate the total maintenance cost for each device type, sorted in descending order of maintenance cost, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(cost) AS totalMaintenanceCost FROM MaintenanceRecords JOIN EnergyDevices ON MaintenanceRecords.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalMaintenanceCost DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 213,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'temperature sensor data', 'abnormal readings'], 'relations': ['device_to_sensor_data (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'abnormality_detection (dataQuality flag)'], 'intent': 'identify_devices_with_anomalous_temperature_readings', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'temperature': '°C/°F (contextual, database schema implies recorded values)', 'abnormality_threshold': 'undefined (assumed via dataQuality flag)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'temperature'}, {'column': 'dataQuality'}]}}\nA common sense reasoning question is as follows:\nFind all devices with abnormal temperature sensor data, and list their device names, device types, and sensor data values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, temperature FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId WHERE temperature > 50 OR temperature < -20 ORDER BY temperature;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 214,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['deviceType', 'maintenance cost', 'scaling factor 1000'], 'relations': ['deviceType_to_maintenance_cost (EnergyDevices.deviceType → MaintenanceRecords.cost)', 'cost_scaling (original_cost × 1000)'], 'intent': 'calculate_scaled_total_maintenance_cost_per_device_type_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'original_cost': 'currency unit (from MaintenanceRecords.cost)', 'scaled_cost': 'currency unit × 1000 (e.g., $ → $, value scaled)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance cost of all devices increases by a factor of 1000, calculate the total maintenance cost for each device type, then sort them in descending order by total maintenance cost and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(cost * 1000) AS totalMaintenanceCost FROM MaintenanceRecords JOIN EnergyDevices ON MaintenanceRecords.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalMaintenanceCost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 215,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'device'], 'relations': ['device_to_power_rating (deviceId → powerRating)', 'device_to_real_time_power (deviceId → powerUsage)'], 'intent': 'calculate_power_ratio_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'watts (implied by database schema)', 'ratio': 'unitless (power_ratio = real-time power / rated power)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of real-time power to rated power for all devices, and sort them in descending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, (powerUsage / powerRating) AS powerRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 216,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturer', 'Energy Consumption'], 'relations': ['manufacturer_to_device (manufacturerId links Manufacturers and EnergyDevices)', 'device_to_energy_consumption (deviceId links EnergyDevices and EnergyConsumption)', 'group_by_manufacturer_and_average_energy'], 'intent': 'calculate_average_energy_consumption_per_manufacturer_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy': 'kWh (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'manufacturerId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '10', '20']}], 'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}]}}\nA mathematical logic question is as follows:\nCalculate the average energy consumption of devices per manufacturer, sort them in ascending order by average energy consumption, and take the bottom 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturerId, AVG(energyConsumed) AS avgEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY manufacturerId ORDER BY avgEnergyConsumed ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 217,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity sensor data', 'devices', 'abnormal values'], 'relations': ['device_to_humidity_data (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'abnormal_threshold (undefined, requires domain knowledge)'], 'intent': 'identify_devices_with_anomalous_humidity_readings', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'humidity': '% (percentage)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'humidity'}]}}\nA common sense reasoning question is as follows:\nFind all devices with abnormal humidity sensor data, and list their device names, device types, and sensor data values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, humidity FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId WHERE humidity < 0 OR humidity > 100 ORDER BY humidity DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 218,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyDevices', 'EnergyConsumption', 'deviceType', 'powerRating', 'energyConsumed'], 'relations': ['deviceId_to_EnergyConsumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'powerRating_adjustment (reduced by 90%)', 'energyConsumption_aggregation (by deviceType)'], 'intent': 'calculate_and_rank_adjusted_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.1], 'units': {'power': 'Watts (assumed from powerRating field)', 'energy': 'kWh (implied by energyConsumed field)', 'adjustment_factor': '90% reduction (0.1 multiplier)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the rated power of all devices is reduced by 90%, calculate the total energy consumption for each device type, then sort them in descending order of total energy consumption and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed * 0.1) AS totalEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 219,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'device'], 'relations': ['device_to_real_time_power (deviceId → EnergyConsumption.powerUsage)', 'device_to_rated_power (deviceId → EnergyDevices.powerRating)', 'power_difference (real_time_power - rated_power)'], 'intent': 'calculate_power_difference_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'Watts (assumed unit consistency between powerUsage and powerRating)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA physical knowledge question is as follows:\nCalculate the difference between the real-time power and the rated power for all devices, and sort the results in descending order by the difference.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, (powerUsage - powerRating) AS powerDifference FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerDifference DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 220,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords', 'Devices', 'DeviceTypes'], 'relations': ['deviceId_to_deviceType (MaintenanceRecords.deviceId → Devices.deviceId → Devices.deviceType)'], 'intent': 'aggregate_maintenance_counts_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'maintenance_count': 'occurrences (unitless)', 'top_n': 'ordinal ranking (unitless)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'PhysicsLabDB.MaintenanceRecords': [{'column': 'deviceId'}], 'PhysicsLabDB.Devices': [{'column': 'deviceType'}]}}\nA mathematical logic question is as follows:\nCalculate the total number of maintenance occurrences for each device type, sorted in descending order by maintenance count, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, COUNT(deviceId) AS maintenanceCount FROM Devices WHERE status IN ('维护中', '故障') GROUP BY deviceType ORDER BY maintenanceCount DESC LIMIT 5;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 221,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'last maintenance date', 'one year period'], 'relations': ['equipment_to_maintenance_date (device → lastMaintenanceDate)', 'date_comparison (lastMaintenanceDate < CURRENT_DATE - 1 YEAR)'], 'intent': 'identify_equipment_with_overdue_maintenance', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1], 'units': {'time_period': 'year', 'date_calculation': 'CURRENT_DATE - 1 YEAR (system-defined temporal reference)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'lastMaintenanceDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-06-15 14:00:00']}]}}\nA common sense reasoning question is as follows:\nFind all equipment whose last maintenance date exceeds one year, and list their equipment name, equipment type, and last maintenance date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, lastMaintenanceDate FROM EnergyDevices JOIN MaintenanceRecords ON EnergyDevices.deviceId = MaintenanceRecords.deviceId WHERE DATEDIFF(CURRENT_DATE, lastMaintenanceDate) > 365 ORDER BY lastMaintenanceDate DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 222,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'maintenance count multiplier 100x'], 'relations': ['device_type_to_maintenance_count', 'multiplier_to_total_maintenance (100x)'], 'intent': 'calculate_top_3_device_types_by_scaled_maintenance_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'maintenance_count': 'count (unitless)', 'multiplier': 'x100 (scaling factor)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance count for all devices is increased by 100 times, calculate the total maintenance count for each device type, sort in descending order of total maintenance count, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, COUNT(maintenanceId) * 100 AS totalMaintenanceCount FROM MaintenanceRecords JOIN EnergyDevices ON MaintenanceRecords.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalMaintenanceCount DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 223,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'devices'], 'relations': ['device_to_real_time_power (EnergyConsumption.powerUsage)', 'device_to_rated_power (EnergyDevices.powerRating)'], 'intent': 'calculate_percentage_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'power': 'Watts (W)', 'percentage': 'Percentage (%)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA physical knowledge question is as follows:\nCalculate the percentage of real-time power to rated power for all devices, and sort them in descending order by percentage.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.deviceType, (ec.powerUsage / d.powerRating) * 100 AS powerPercentage FROM EnergyConsumption ec JOIN EnergyDevices d ON ec.deviceId = d.deviceId ORDER BY powerPercentage DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 224,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device_type', 'total_energy_consumption', 'total_maintenance_cost', 'ratio_energy_to_cost'], 'relations': ['device_type_to_energy_consumption (aggregated)', 'device_type_to_maintenance_cost (aggregated)', 'ratio_definition (total_energy_consumption / total_maintenance_cost)'], 'intent': 'calculate_ratio_of_total_energy_to_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'energy_consumption': 'kWh (inferred from typical energy metrics)', 'maintenance_cost': 'USD (standard currency unit for cost fields)', 'ratio_unit': 'kWh_per_USD (energy_consumption / maintenance_cost)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total energy consumption to total maintenance cost for each device type, sort them in ascending order by the ratio, and select the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceType, SUM(ec.energyConsumed) / SUM(mr.cost) AS energyToCostRatio FROM EnergyConsumption ec JOIN EnergyDevices d ON ec.deviceId = d.deviceId JOIN MaintenanceRecords mr ON mr.deviceId = d.deviceId GROUP BY d.deviceType ORDER BY energyToCostRatio ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 225,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'temperature > 30°C'], 'relations': ['device_to_temperature (deviceId → temperature)', 'temperature_comparison (> 30°C)'], 'intent': 'retrieve_devices_exceeding_temperature_threshold', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [30], 'units': {'temperature': '°C (Celsius)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'temperature'}]}}\nA common sense reasoning question is as follows:\nFind all devices with temperatures higher than 30°C, and list their device names, device types, and temperature values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.deviceType, ec.temperature FROM EnergyConsumption ec JOIN EnergyDevices d ON ec.deviceId = d.deviceId WHERE ec.temperature > 30 ORDER BY ec.temperature DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 226,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'energy consumption', 'temperature increase (50°C)'], 'relations': ['device_to_energy_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'temperature_adjustment (ΔT=50°C) → energy_consumption_relation', 'deviceType_to_totalEnergy (aggregation)'], 'intent': 'calculate_adjusted_energy_consumption_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'temperature': '°C (Celsius)', 'energy_consumption': 'dependent on EnergyConsumption.energyConsumed unit (assumed kWh)', 'conversion': 'ΔT = 50°C (temperature adjustment)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'temperature'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the temperature values of all devices are increased by 50°C, calculate the total energy consumption for each device type, sort them in descending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceType, SUM(ec.energyConsumed) AS totalEnergyConsumed FROM EnergyConsumption ec JOIN EnergyDevices d ON ec.deviceId = d.deviceId GROUP BY d.deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 227,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'devices'], 'relations': ['real_time_power_to_device (powerUsage → EnergyDevices)', 'rated_power_to_device (powerRating → EnergyDevices)'], 'intent': 'calculate_squared_ratio_and_sort_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'W (watts) or kW (kilowatts) (implied by database schema)', 'ratio': 'dimensionless (squared ratio)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}, {'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA physical knowledge question is as follows:\nCalculate the squared ratio of the real-time power to the rated power for all devices, and sort the results in descending order by the squared ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, POWER(powerUsage / powerRating, 2) AS powerSquareRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerSquareRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 228,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'total energy consumption', 'total maintenance count'], 'relations': ['device_type_to_energy_consumption (aggregation)', 'device_type_to_maintenance_count (aggregation)'], 'intent': 'calculate_ratio_sort_and_select_top_n', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (implied by EnergyConsumption.energyConsumed column)', 'maintenance_count': 'unitless (count of maintenance records)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the ratio of total energy consumption to total maintenance count for each device type, sort in ascending order by the ratio, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceType, SUM(ec.energyConsumed) / COUNT(mr.maintenanceId) AS energyMaintenanceRatio FROM EnergyConsumption ec JOIN EnergyDevices d ON ec.deviceId = d.deviceId JOIN MaintenanceRecords mr ON ec.deviceId = mr.deviceId GROUP BY d.deviceType ORDER BY energyMaintenanceRatio ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 229,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'humidity values'], 'relations': ['device_to_humidity (humidity < 20%)', 'device_to_attributes (deviceName, deviceType, humidity)'], 'intent': 'filter_devices_by_humidity_and_list_attributes', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20], 'units': {'humidity': '% (percentage)', 'threshold': '20%'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'humidity', 'type': 'FLOAT', 'primary_key': False, 'comment': '', 'examples': ['10.0']}]}}\nA common sense reasoning question is as follows:\nFind all devices with humidity below 20% and list their device names, device types, and humidity values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.deviceType, d.humidity FROM EnergyDevices d WHERE d.humidity < 20 ORDER BY d.humidity ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 230,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['humidity increased by 80%', 'device types'], 'relations': ['device_to_humidity (EnergyConsumption.humidity)', 'device_to_type (EnergyDevices.deviceType)'], 'intent': 'calculate_adjusted_energy_consumption_by_device_type', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [80], 'units': {'humidity': '% (percentage)', 'energy_consumption': 'dependent on EnergyConsumption.energyConsumed unit (e.g., kWh)', 'adjustment_formula': 'adjusted_humidity = original_humidity * 1.8'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'humidity'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the humidity values of all devices increased by 80%, calculate the total energy consumption for each device type, sort them in descending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed * (1 + 0.8)) AS totalEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 231,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'cubic ratio', 'devices'], 'relations': ['device_to_realtime_power', 'device_to_rated_power', 'cubic_ratio_definition'], 'intent': 'calculate_cubic_ratio_and_sort_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'power': 'watts (W)', 'cubic_ratio': 'dimensionless (unitless ratio cubed)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'powerUsage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA physical knowledge question is as follows:\nCalculate the cubic ratio between the real-time power and rated power of all devices, and sort them in descending order by the cubic ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, POWER(powerUsage / powerRating, 3) AS powerCubicRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerCubicRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 232,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['deviceType', 'total_energy_consumption', 'total_maintenance_cost', 'square_ratio'], 'relations': ['deviceType_to_energyConsumption', 'deviceType_to_maintenanceCost', 'square_ratio_calculation (energy²/cost)'], 'intent': 'calculate_square_ratio_of_energy_to_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh', 'maintenance_cost': 'USD', 'square_ratio': '(kWh²)/(USD)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the square ratio of the total energy consumption to the total maintenance cost for each device type, sort the results in ascending order by the square ratio, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed * 1.8) / POWER(SUM(cost), 2) AS energyMaintenanceRatioSquare FROM EnergyConsumption JOIN MaintenanceRecords ON EnergyConsumption.deviceId = MaintenanceRecords.deviceId JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY energyMaintenanceRatioSquare ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 233,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'voltage values'], 'relations': ['device_to_voltage (device → voltage)', 'voltage_comparison (voltage < 200V)'], 'intent': 'filter_devices_by_voltage', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [200], 'units': {'voltage': 'V (Volts)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'voltage', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0']}]}}\nA common sense reasoning question is as follows:\nFind all devices with voltage below 200V, and list their device names, device types, and voltage values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, voltage FROM EnergyDevices WHERE voltage < 200 ORDER BY voltage DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 234,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['deviceType', 'voltage increase 500V'], 'relations': ['deviceType_to_devices', 'voltage_adjustment (ΔV=500V)'], 'intent': 'calculate_total_energy_consumption_by_device_type_with_hypothetical_voltage_increase', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500], 'units': {'voltage': 'V (volts)', 'energy': 'implied unit (e.g., kWh) from EnergyConsumption.energyConsumed', 'conversion': 'ΔV = 500V (voltage adjustment)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'voltage'}, {'column': 'energyConsumed'}, {'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the voltage value of all devices is increased by 500V, calculate the total energy consumption for each device type, sort in descending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed * 500) AS totalEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 235,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption', 'EnergyDevices'], 'relations': ['EnergyConsumption.deviceId → EnergyDevices.deviceId'], 'intent': 'calculate_fourth_power_ratio_of_real-time_power_to_rated_power_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [4], 'units': {'real_time_power': 'watts (via EnergyConsumption.powerUsage)', 'rated_power': 'watts (via EnergyDevices.powerRating)', 'ratio': 'unitless (fourth power of the ratio)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'powerUsage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA physical knowledge question is as follows:\nCalculate the fourth power ratio of the real-time power to the rated power for all devices, and sort them in descending order by the fourth power ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, POWER(powerUsage / powerRating, 4) AS powerFourthRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerFourthRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 236,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'total energy consumption', 'total maintenance times', 'cube ratio'], 'relations': ['device_type_to_energy_consumption (EnergyConsumption.deviceId → EnergyDevices.deviceId)', 'device_type_to_maintenance_count (MaintenanceRecords.deviceId → EnergyDevices.deviceId)'], 'intent': 'calculate_cube_ratio_and_rank_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (implied by context)', 'maintenance_count': 'unitless (number of events)', 'cube_ratio': '(kWh)^3 (unit derived from energy consumption cubed)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'maintenanceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the cube ratio of total energy consumption to total maintenance times for each device type, sorted in ascending order by the cube ratio, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, (SUM(energyConsumed) / POW(COUNT(maintenanceId), 3)) AS energyMaintenanceCubeRatio FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId JOIN MaintenanceRecords ON EnergyDevices.deviceId = MaintenanceRecords.deviceId GROUP BY deviceType ORDER BY energyMaintenanceCubeRatio ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 237,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices with current > 10A', 'device name', 'device type', 'current value'], 'relations': ['device_to_consumption (deviceId → current value)', 'device_to_attributes (deviceId → deviceName/deviceType)'], 'intent': 'retrieve_devices_with_high_current', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'current': 'A (Ampere)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'current'}]}}\nA common sense reasoning question is as follows:\nFind all devices with current above 10A and list their device name, device type, and current value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, current FROM EnergyDevices WHERE current > 10 ORDER BY current DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 238,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['50A increase', 'deviceType', 'energy consumption'], 'relations': ['device_to_type_mapping (deviceId → deviceType)', 'adjusted_current (original_current + 50A)'], 'intent': 'calculate_adjusted_energy_consumption_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'current': 'A (Amperes)', 'voltage': 'V (Volts)', 'power': 'W (Watts) (implied: power = voltage × current)', 'energy_consumption': 'kWh (implied by aggregation over time)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'current'}, {'column': 'voltage'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the current value of all devices increases by 50A, calculate the total energy consumption for each device type, sort them in descending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, POWER(SUM(energyConsumed) / COUNT(maintenanceId), 3) AS energyMaintenanceCubicRatio FROM EnergyConsumption JOIN MaintenanceRecords ON EnergyConsumption.deviceId = MaintenanceRecords.deviceId JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY energyMaintenanceCubicRatio DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 239,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\nthere is nothing I can give you about this question.\nA physical knowledge question is as follows:\nCalculate the daily average energy consumption (in kilowatt-hours) for all devices, sorted in descending order by energy consumption value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, SUM(energyConsumed) / DATEDIFF(CURRENT_DATE, installationDate) AS dailyAvgEnergyConsumed FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId GROUP BY deviceId, deviceName ORDER BY dailyAvgEnergyConsumed DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 240,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'total energy consumption'], 'relations': ['device_type_to_energy_consumption (aggregation)', 'sorting_by_energy_consumption', 'top_3_selection'], 'intent': 'aggregate_and_rank_energy_consumption_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'energy_consumption': 'kWh (assumed unit from energyConsumed column)', 'count': '3 (top devices)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nCalculate the total energy consumption for each device type, sort in ascending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(current * 5 * voltage * 24 / 1000) AS totalEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed ASC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 241,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', '100 watts'], 'relations': ['device_to_power_rating (devices → powerRating)', 'power_comparison (powerRating > 100)'], 'intent': 'filter_and_list_devices_by_power', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'power': 'watts', 'comparison': 'greater than 100 watts'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA common sense reasoning question is as follows:\nFind all devices with a power greater than 100 watts, and list their device name, device type, and rated power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT EnergyDevices.deviceId, EnergyDevices.deviceName, SUM(EnergyConsumption.energyConsumed) / DATEDIFF(CURRENT_DATE, EnergyDevices.installationDate) AS dailyAvgEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY EnergyDevices.deviceId, EnergyDevices.deviceName ORDER BY dailyAvgEnergyConsumed DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 242,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'total energy consumption', 'top 5 device types'], 'relations': ['device_type_to_energy_consumption (aggregation)', 'energy_consumption_scaling (10x)'], 'intent': 'calculate_hypothetical_total_energy_consumption_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10], 'units': {'power': 'Watts (original powerRating in EnergyDevices)', 'energy': 'kWh (assumed unit for energyConsumed in EnergyConsumption)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the rated power of all devices is increased by 10 times, calculate the total energy consumption for each device type, sort them in descending order by total energy consumption, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceType, SUM(ec.energyConsumed * (ed.powerRating * 10) / ed.powerRating) AS totalEnergyConsumed FROM EnergyConsumption AS ec JOIN EnergyDevices AS ed ON ec.deviceId = ed.deviceId GROUP BY ed.deviceType ORDER BY totalEnergyConsumed DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 243,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'real-time power in watts'], 'relations': ['device_to_power (device → power)'], 'intent': 'retrieve_and_sort_real_time_power', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'power': 'watts'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}, {'column': 'power'}]}}\nA physical knowledge question is as follows:\nCalculate the total real-time power (in watts) for all devices and sort them in descending order by power value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ed.measurementValue) AS totalPower FROM Devices d JOIN ExperimentData ed ON d.deviceId = ed.deviceId WHERE ed.unit = '瓦特';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 244,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturer', 'device'], 'relations': ['manufacturer_to_devices (suppliers.supplierId → devices.supplierId)'], 'intent': 'aggregate_device_count_per_manufacturer', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'supplierId'}, {'column': 'deviceId'}], 'PhysicsLabDB.Suppliers': [{'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}]}}\nA mathematical logic question is as follows:\nCount the number of devices for each manufacturer, sort them in descending order by device count, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, COUNT(*) AS deviceCount FROM Devices GROUP BY deviceType ORDER BY deviceCount DESC LIMIT 5;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 245,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"devices with status 'Fault'\"], 'relations': ['device_to_attributes (device → deviceName, deviceType, installationDate)'], 'intent': 'retrieve_devices_with_fault_status', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'deviceType'}, {'column': 'installationDate'}]}}\nA common sense reasoning question is as follows:\nFind all devices with a status of 'Fault', and list their device names, device types, and installation dates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, installationDate FROM Devices WHERE status = '故障';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 246,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['DeviceTypes', 'Devices', 'EnergyConsumption', 'TotalEnergyConsumption'], 'relations': ['device_to_type (Devices.deviceType → DeviceTypes.deviceType)', 'device_to_energy (Devices.deviceId → EnergyConsumption.deviceId)', 'energy_scaling (×100 factor)', 'aggregation_by_type'], 'intent': 'aggregate_scaled_energy_consumption_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 3], 'units': {'energy_consumption': 'original unit (from EnergyConsumption.energyConsumed)', 'scaled_energy': 'unit × 100 (implied by scaling factor)', 'aggregation': 'sum_per_device_type'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyConsumption', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceType'}], 'PhysicsLabDB.EnergyConsumption': [{'column': 'energyConsumed'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the energy consumption value of all devices is increased by 100 times, calculate the total energy consumption per device type, sort it in descending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, COUNT(*) * 100 AS totalEnergyConsumed FROM Devices GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 247,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['all devices', 'real-time current'], 'relations': ['device_to_current (device → current value)'], 'intent': 'retrieve_and_sort_current_values', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [], 'units': {'current': 'A (amperes)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}, {'column': 'current'}]}}\nA physical knowledge question is as follows:\nCalculate the total real-time current (in amperes) for all devices, and sort in descending order by current value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, COUNT(*) * 10 AS totalCurrent FROM Devices GROUP BY deviceType ORDER BY totalCurrent DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 248,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'energy consumption'], 'relations': ['deviceType_to_device (EnergyDevices.deviceType → EnergyDevices.deviceId)', 'device_to_energyConsumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)'], 'intent': 'calculate_average_energy_consumption_by_device_type_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'unit implied by EnergyConsumption.energyConsumed field (e.g., kWh, J)', 'aggregation': 'average (mean)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}]}}\nA mathematical logic question is as follows:\nCompute the average energy consumption for each device type, sort in ascending order by average energy consumption, and take the last 5 entries.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, AVG(energyConsumed) AS averageEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY averageEnergyConsumed ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 249,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'installation date', '5 years'], 'relations': ['equipment_to_installation_date (equipment → installation date)', 'installation_date_comparison (installation date < current date - 5 years)'], 'intent': 'retrieve_equipment_with_exceeded_installation_age', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [5], 'units': {'duration': 'years'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'deviceType'}, {'column': 'installationDate'}]}}\nA common sense reasoning question is as follows:\nFind all equipment with an installation date exceeding 5 years, and list their equipment name, equipment type, and installation date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, installationDate FROM Devices WHERE DATEDIFF(CURRENT_DATE, installationDate) > 5 * 365;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 250,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'real-time voltage increase (5x)', 'total energy consumption', 'top 3 ranking'], 'relations': ['deviceType_to_device (EnergyDevices.deviceType → EnergyConsumption.deviceId)', 'voltage_adjustment (original_voltage × 5 → new_voltage)', 'energy_consumption_to_ranking (total_energy_per_type → ordered_rank)'], 'intent': 'calculate_and_rank_energy_consumption_with_voltage_adjustment', 'reasoning_type': 'physical knowledge reasoning', 'numerical_values': [5], 'units': {'voltage': 'V (volts)', 'current': 'A (amperes)', 'energy_consumption': 'kWh (kilowatt-hours, derived from power × time)', 'adjustment_formula': 'adjusted_power = voltage × 5 × current'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'voltage'}, {'column': 'current'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the real-time voltage of all devices has increased by 5 times, calculate the total energy consumption for each device type, and rank the top 3 in descending order of total energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed * 5) AS totalEnergyConsumed FROM EnergyConsumption JOIN EnergyDevices ON EnergyConsumption.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 251,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'power factor 0.8'], 'relations': ['device_to_power_factor (all devices → 0.8)'], 'intent': 'calculate_and_sort_power_factors', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.8], 'units': {'power_factor': 'unitless (ratio)', 'value': '0.8'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}, {'column': 'power'}, {'column': 'powerRating'}]}}\nA physical knowledge question is as follows:\nCalculate the real-time power factor for all devices (assuming the power factor is 0.8), and sort the results in ascending order by power factor value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, deviceType, 0.8 AS powerFactor FROM Devices ORDER BY powerFactor ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 252,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device type', 'maintenance cost', 'top 5 ranking'], 'relations': ['device_type_to_maintenance_cost (EnergyDevices.deviceType → MaintenanceRecords.cost)', 'aggregation_by_summation (SUM(maintenanceRecords.cost))', 'ranking_by_total_cost_descending', 'top_n_filtering (LIMIT 5)'], 'intent': 'aggregate_and_rank_maintenance_costs', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'cost': 'USD (assumed)', 'ranking': 'descending order', 'top_n': '5'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}]}}\nA mathematical logic question is as follows:\nCalculate the total maintenance cost for each device type, ranked by maintenance cost in descending order, and take the top 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(cost) AS totalMaintenanceCost FROM MaintenanceRecords JOIN EnergyDevices ON MaintenanceRecords.deviceId = EnergyDevices.deviceId GROUP BY deviceType ORDER BY totalMaintenanceCost DESC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 253,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'temperature sensor data', 'abnormal temperature readings'], 'relations': ['device_to_temperature_data (deviceId → EnergyConsumption.temperature)', 'device_to_attributes (deviceId → EnergyDevices.deviceName/deviceType)'], 'intent': 'retrieve_devices_with_abnormal_temperature_sensor_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'temperature': '°C (Celsius)', 'data_quality': 'assessed via EnergyConsumption.dataQuality'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'temperature'}, {'column': 'dataQuality'}, {'column': 'timestamp'}]}}\nA common sense reasoning question is as follows:\nFind all devices with abnormal temperature sensor data, and list their device names, device types, and sensor data values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ed.measurementValue) AS totalPower FROM PhysicsLabDB.Devices d JOIN PhysicsLabDB.ExperimentData ed ON d.deviceId = ed.deviceId WHERE ed.unit = '瓦特';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 254,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device_type', 'maintenance_cost', 'scaling_factor_1000'], 'relations': ['device_type_to_cost (aggregation)', 'maintenance_cost_scaling (cost × 1000)'], 'intent': 'calculate_scaled_maintenance_cost_grouped_by_device_type_and_rank_top_3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'scaling_factor': 'dimensionless multiplier', 'cost': 'currency unit (implied by MaintenanceRecords.cost column)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'cost'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance cost of all devices increased by 1000 times, calculate the total maintenance cost for each device type, sort them in descending order of total maintenance cost, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(cost) * 1000 AS totalMaintenanceCost FROM EnergyManagementDB.MaintenanceRecords JOIN PhysicsLabDB.Devices ON MaintenanceRecords.deviceId = Devices.deviceId GROUP BY deviceType ORDER BY totalMaintenanceCost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 255,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'device'], 'relations': ['device_to_real_time_power (deviceId → powerUsage)', 'device_to_rated_power (deviceId → powerRating)'], 'intent': 'calculate_power_ratio_and_sort_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'Watts (assumed unit for both powerUsage and powerRating)', 'ratio': 'dimensionless (unitless ratio)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'powerUsage'}, {'column': 'timestamp'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of the real-time power to the rated power for all devices, and sort them in descending order by the ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, (powerUsage / powerRating) AS powerRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 256,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'equipment', 'average energy consumption'], 'relations': ['manufacturer_to_equipment (manufacturerId → deviceId)', 'equipment_to_energy_consumption (deviceId → energyConsumed)'], 'intent': 'calculate_average_energy_consumption_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'energy_consumption': 'kWh (from EnergyConsumption.energyConsumed column)', 'count': '5 (number of manufacturers to return)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerId'}, {'column': 'manufacturerName'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'energyConsumed'}]}}\nA mathematical logic question is as follows:\nCalculate the average energy consumption for each manufacturer's equipment, sort in ascending order by average energy consumption, and take the bottom 5.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, AVG(energyConsumption) AS avgEnergyConsumption FROM EnergyManagementDB.MaintenanceRecords JOIN PhysicsLabDB.Devices ON MaintenanceRecords.deviceId = Devices.deviceId GROUP BY deviceType ORDER BY avgEnergyConsumption ASC LIMIT 5;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 257,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'humidity sensor data'], 'relations': ['device_to_consumption_data (deviceId → EnergyConsumption)', 'device_to_device_info (deviceId → EnergyDevices)'], 'intent': 'identify_devices_with_abnormal_sensor_data', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'humidity': '% (percentage)', 'data_quality': \"quality metrics (e.g., 0-1 scale or flags like 'abnormal')\"}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'humidity'}, {'column': 'dataQuality'}]}}\nA common sense reasoning question is as follows:\nFind all devices with abnormal humidity sensor data and list their device names, device types, and sensor data values.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(ed.measurementValue) AS totalPower FROM PhysicsLabDB.Devices d JOIN PhysicsLabDB.ExperimentData ed ON d.deviceId = ed.deviceId WHERE ed.unit = '瓦特';",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 258,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['devices', 'device types', 'rated power reduced by 90%'], 'relations': ['device_to_type (deviceId → deviceType)', 'power_adjustment (90% reduction)'], 'intent': 'calculate_adjusted_energy_consumption_by_device_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.1], 'units': {'power_rating': 'Watts (W)', 'energy_consumption': 'Watt-hours (Wh) (assuming standardized time unit)', 'conversion': 'adjusted_power = original_power × 0.1'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the rated power of all devices is reduced by 90%, calculate the total energy consumption for each device type, sort in descending order by total energy consumption, and take the top 3.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, SUM(energyConsumed * 0.1) AS totalEnergyConsumed FROM EnergyManagementDB.EnergyConsumption JOIN PhysicsLabDB.Devices ON EnergyConsumption.deviceId = Devices.deviceId GROUP BY deviceType ORDER BY totalEnergyConsumed DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 259,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"real-time power\", \"rated power\", \"devices\"],\n  \"relations\": [\n    \"device_to_consumption (deviceId → EnergyConsumption.powerUsage)\",\n    \"device_to_specifications (deviceId → EnergyDevices.powerRating)\"\n  ],\n  \"intent\": \"calculate_difference_and_sort\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"power\": \"W (implied by context of power measurements)\",\n    \"difference\": \"W (same unit as power)\"\n  },\n  \"required_tables\": [\"EnergyConsumption\", \"EnergyDevices\"],\n  \"required_fields\": [\n    \"EnergyConsumption.deviceId\",\n    \"EnergyConsumption.powerUsage\",\n    \"EnergyDevices.powerRating\"\n  ]\n}\n```\nA physical knowledge question is as follows:\nCalculate the difference between the real-time power and the rated power for all devices, and sort the results in descending order of the difference.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, (powerUsage - powerRating) AS powerDifference FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerDifference DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 260,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['data analyst', 'in progress'], 'relations': ['experiment_to_researcher (Experiments.researcherId → Researchers.researcherId)', 'experiment_to_lab (Experiments.labId → Labs.labId)', 'experiment_to_device_count (ExperimentData.experimentId → COUNT(DISTINCT Devices.deviceId))'], 'intent': 'retrieve_experiment_details_with_filters', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'ExperimentData', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'ExperimentData', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}, {'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'ExperimentData', 'pk_column': 'dataId'}, {'pk_table': 'Experiments', 'pk_column': 'experimentId'}, {'pk_table': 'Labs', 'pk_column': 'labId'}, {'pk_table': 'Researchers', 'pk_column': 'researcherId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}, {'column': 'description', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['研究光的波动性', '研究量子纠缠现象', '研究电磁感应现象', '研究热传导规律']}, {'column': 'startDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-01 10:00:00']}], 'PhysicsLabDB.Researchers': [{'column': 'researcherName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['张三', '李四', '王五', '赵六', '王研究员']}, {'column': 'role', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['实验员', '数据分析师']}], 'PhysicsLabDB.Labs': [{'column': 'labName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学实验室', '量子物理实验室', '电磁学实验室', '热力学实验室', '高级物理实验室']}], 'PhysicsLabDB.ExperimentData': [{'column': 'experimentId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '1002']}], 'PhysicsLabDB.COUNT(DISTINCT ExperimentData': [{'column': 'deviceId) AS numberOfDevices'}]}}\nA mathematical logic question is as follows:\nFind the experiment name, experiment description, researcher name, laboratory name, and number of devices for all experiments with the \"data analyst\" role researchers in charge and a status of \"in progress,\" sorted in ascending order by experiment start time.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.experimentName, e.description, r.researcherName, l.labName, l.equipmentCount FROM Experiments eJOIN Researchers r ON e.researcherId = r.researcherIdJOIN Labs l ON e.labId = l.labIdWHERE r.role = '数据分析师' AND e.status = '进行中'ORDER BY e.startDate ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 261,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Solar', 'In Operation'], 'relations': ['filter_by_device_type', 'filter_by_status'], 'intent': 'retrieve_and_sort_device_information', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'power_rating': \"W (Watts, implied by column name 'powerRating')\"}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Sun City, USA', 'Wind Town, Canada', 'Energy City, UK', '测试地点', 'Test Location']}]}}\nA common sense reasoning question is as follows:\nList the device name, rated power, and device location of all devices with a device type of \"Solar\" and a status of \"In Operation,\" sorted by rated power in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, powerRating, location FROM EnergyDevices WHERE deviceType = '太阳能' AND status = '运行中' ORDER BY powerRating DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 262,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'annual turnover 10 million yuan'], 'relations': ['manufacturer_to_revenue (manufacturer → revenue)'], 'intent': 'retrieve_manufacturer_contact_info_with_turnover_filter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000], 'units': {'currency': 'yuan (CNY)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}, {'column': 'contactPerson'}, {'column': 'contactEmail'}, {'column': 'contactPhone'}, {'column': 'city'}, {'column': 'revenue'}]}}\nA hypothetical reasoning question is as follows:\nRetrieve the names, contacts, and cities of all manufacturers with annual turnover exceeding 10 million yuan, sorted in descending order by turnover.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturerName, contactPerson, city FROM Manufacturers WHERE revenue > 1000 ORDER BY revenue DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 263,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy consumption records', '500 kilowatt-hours'], 'relations': ['record_to_device (energy consumption record → device ID)', 'energy_value_filter (energyConsumed > 500 kWh)'], 'intent': 'retrieve_filtered_energy_consumption_records_with_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500], 'units': {'energy': 'kWh (kilowatt-hours)', 'timestamp': 'chronological order (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}, {'column': 'timestamp'}]}}\nA physical knowledge question is as follows:\nList all energy consumption records with energy values greater than 500 kilowatt-hours, including the device ID, energy consumption value, and timestamp, sorted in ascending order by timestamp.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, energyConsumed, timestamp FROM EnergyConsumption WHERE energyConsumed > 500 ORDER BY timestamp ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 264,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnvironmentalImpact', 'carbonFootprint > 1000 kg CO2', 'energySource'], 'relations': ['EnvironmentalImpact.deviceId → EnergyDevices.deviceId (implicit join context)'], 'intent': 'retrieve_environmental_impact_data_with_filter_and_sort', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1000], 'units': {'carbon_footprint': 'kg CO2', 'sorting': 'descending_order'}, 'foreign_keys': [{'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnvironmentalImpact': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '123']}, {'column': 'carbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '200.0', '10000.0', '8500000.0', '9000000.0']}, {'column': 'energySource', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA mathematical logic question is as follows:\nFind the device ID, carbon footprint, and energy source for all environmental impact records with a carbon footprint greater than 1000 kg CO2, sorted in descending order by carbon footprint.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, carbonFootprint, energySource FROM EnvironmentalImpact WHERE carbonFootprint > 1000 ORDER BY carbonFootprint DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 265,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Energy efficiency records', 'Equipment efficiency > 90%', 'Energy saved'], 'relations': ['efficiency_to_energy_saved (efficiency → energySaved)'], 'intent': 'list_energy_efficiency_metrics', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [90], 'units': {'efficiency': '% (percentage)', 'energy_saved': 'unit unspecified in schema (assumed kWh or similar)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'efficiency'}, {'column': 'energySaved'}]}}\nA common sense reasoning question is as follows:\nList the equipment ID, efficiency value, and energy saved for all energy efficiency records where the equipment efficiency is greater than 90%, sorted in descending order by energy saved.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, efficiency, energySaved FROM EnergyEfficiency WHERE efficiency > 90 ORDER BY energySaved DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 266,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Emergency Repair', 'MaintenanceRecords'], 'relations': [\"maintenance_type_filter ('Emergency Repair')\", 'record_sorting_desc (maintenanceDate)'], 'intent': 'retrieve_and_sort_maintenance_records', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'currency': 'implied unit (cost column)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'maintenanceDate'}, {'column': 'cost'}]}}\nA hypothetical reasoning question is as follows:\nFind all maintenance records with the maintenance type \"Emergency Repair,\" displaying the equipment ID, maintenance date, and maintenance cost, then sort them in descending order by maintenance date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, maintenanceDate, cost FROM MaintenanceRecords WHERE maintenanceType = '紧急维修' ORDER BY maintenanceDate DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 267,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'devices'], 'relations': ['device_to_power_usage (EnergyDevices.deviceId → EnergyConsumption.powerUsage)', 'device_to_rated_power (EnergyDevices.deviceId → EnergyDevices.powerRating)'], 'intent': 'calculate_squared_ratio_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power': 'Watts (W)', 'ratio': 'unitless (squared ratio)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}, {'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA physical knowledge question is as follows:\nCalculate the squared ratio of the real-time power to the rated power for all devices, and sort them in descending order by the squared ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, POWER(powerUsage / powerRating, 2) AS powerSquareRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerSquareRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 268,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['prediction type', 'confidence level', 'Energy Consumption Forecast', 95], 'relations': ['forecastType_to_records (Energy Consumption Forecast → filtered records)', 'confidenceLevel_threshold (confidenceLevel > 95%)'], 'intent': 'retrieve_predictive_records_with_conditions', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [95], 'units': {'confidence_level': '% (percentage)'}, 'foreign_keys': [{'fk_table': 'EnergyForecasts', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyForecasts', 'pk_column': 'forecastId'}], 'tableinfo': {'EnergyManagementDB.EnergyForecasts': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'forecastType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['能耗预测', '发电量预测']}, {'column': 'forecastValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['55.0', '550.0', '600.0', '56.0']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 08:00:00']}, {'column': 'confidenceLevel', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '90.0', '85.0', '99.0']}]}}\nA mathematical logic question is as follows:\nList all predictive records with a prediction type of \"Energy Consumption Forecast\" and a confidence level greater than 95%, including the device ID, predicted value, and prediction timestamp, sorted in descending order by the predicted value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, forecastValue, timestamp FROM EnergyForecasts WHERE forecastType = '能耗预测' AND confidenceLevel > 95 ORDER BY forecastValue DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 269,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy policies', 'target efficiency', 'target carbon footprint'], 'relations': ['policy_to_efficiency (policy → targetEfficiency)', 'efficiency_condition (>85%)'], 'intent': 'retrieve_policy_efficiency_carbon', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [85], 'units': {'targetEfficiency': '% (percentage)', 'targetCarbonFootprint': 'metric tons CO₂/year (implied by database schema)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'EnergyPolicies', 'pk_column': 'policyId'}], 'tableinfo': {'EnergyManagementDB.EnergyPolicies': [{'column': 'policyName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['绿色能源政策', '碳排放限制政策']}, {'column': 'targetEfficiency', 'type': 'DECIMAL(5, 2)', 'primary_key': False, 'comment': '', 'examples': ['95.0', '85.0']}, {'column': 'targetCarbonFootprint', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '100.0']}]}}\nA common sense reasoning question is as follows:\nFind the policy name, target efficiency, and target carbon footprint for all energy policies with a target efficiency greater than 85%, sorted in descending order by target efficiency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT policyName, targetEfficiency, targetCarbonFootprint FROM EnergyPolicies WHERE targetEfficiency > 85 ORDER BY targetEfficiency DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 270,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyAudits', 'non-compliant audit result'], 'relations': [\"filter_by_audit_result (EnergyAudits.auditResult = 'non-compliant')\", 'select_columns (deviceId, auditDate, recommendations)'], 'intent': 'retrieve_noncompliant_audit_records', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'EnergyAudits', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyAudits', 'pk_column': 'auditId'}], 'tableinfo': {'EnergyManagementDB.EnergyAudits': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'auditDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 08:00:00']}, {'column': 'recommendations', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['继续保持高效运行', '定期检查叶片', '减少碳排放']}, {'column': 'auditResult', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['合规', '不合规']}]}}\nA hypothetical reasoning question is as follows:\nList the device ID, audit date, and improvement recommendations for all energy audit records with an audit result of \"non-compliant,\" sorted by audit date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, auditDate, recommendations FROM EnergyAudits WHERE auditResult = '不合规' ORDER BY auditDate ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 271,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time power', 'rated power', 'EnergyDevices', 'EnergyConsumption'], 'relations': ['device_power_rating (EnergyDevices.powerRating)', 'device_realtime_power (EnergyConsumption.powerUsage)', 'device_relationship (deviceId)'], 'intent': 'calculate_cubic_ratio_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'ratio': 'unitless (powerUsage/powerRating)', 'cubic_operation': 'x³ (exponentiation)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}, {'column': 'timestamp'}]}}\nA physical knowledge question is as follows:\nCalculate the cubic ratio of real-time power to rated power for all devices, and sort them in descending order by the cubic ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, POWER(powerUsage / powerRating, 3) AS powerCubicRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerCubicRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 272,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption records', 'device temperature > 50°C'], 'relations': ['filter_by_temperature (temperature > 50°C)', 'sort_by_temperature_desc'], 'intent': 'retrieve_energy_consumption_records_with_high_temperature', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'temperature': '°C (Celsius)', 'energy_consumption': 'implied by EnergyConsumption.energyConsumed column'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'temperature'}, {'column': 'energyConsumed'}]}}\nA mathematical logic question is as follows:\nFind the device ID, temperature value, and energy consumption value for all energy consumption records where the device temperature is higher than 50 degrees Celsius, and sort them in descending order by temperature value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, temperature, energyConsumed FROM EnergyConsumption WHERE temperature > 50 ORDER BY temperature DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 273,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Wind Energy devices', 'installation date after 2020'], 'relations': ['deviceType_to_devices (Wind Energy → EnergyDevices)', 'installationDate_filter (>2020)'], 'intent': 'retrieve_device_information', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2020], 'units': {'date': 'YYYY format (year comparison)'}, 'foreign_keys': [{'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}, {'column': 'installationDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-01-15 10:00:00']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['运行中', '维修中']}, {'column': 'deviceType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA common sense reasoning question is as follows:\nList the device name, installation date, and device status for all devices of type \"Wind Energy\" installed after 2020, sorted by installation date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, installationDate, status FROM EnergyDevices WHERE deviceType = '风能' AND installationDate > '2020-01-01' ORDER BY installationDate ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 274,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Manufacturers', 'annual profits exceeding 5 million yuan', 'countries'], 'relations': ['manufacturer_to_profit (manufacturers.profit > 5000000)', 'manufacturer_to_country (manufacturers.country)'], 'intent': 'retrieve_manufacturer_profit_info', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000000], 'units': {'currency': 'yuan (CNY)', 'profit_threshold': '5,000,000 yuan'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}, {'column': 'profit'}, {'column': 'country'}]}}\nA hypothetical reasoning question is as follows:\nFind the names, annual profits, and countries of all manufacturers with annual profits exceeding 5 million yuan, sorted in descending order by profit.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturerName, profit, country FROM Manufacturers WHERE profit > 500 ORDER BY profit DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 275,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'real-time power', 'rated power', 'power ratio'], 'relations': ['device_to_powerRating (EnergyDevices.powerRating)', 'device_to_powerUsage (EnergyConsumption.powerUsage)', 'power_ratio_formula (real_time_power / rated_power)^4'], 'intent': 'calculate_power_ratio_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [4], 'units': {'power': 'watts (W) from EnergyConsumption.powerUsage and EnergyDevices.powerRating', 'ratio': 'unitless (dimensionless quantity from (W/W)^4)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '500.0', '1000.0', '1000000.0', '600.0']}], 'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}]}}\nA physical knowledge question is as follows:\nCalculate the ratio of the real-time power to the rated power to the fourth power for all devices, and sort them in descending order by this ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, deviceName, POWER(powerUsage / powerRating, 4) AS powerFourthRatio FROM EnergyConsumption JOIN Devices ON EnergyConsumption.deviceId = Devices.deviceId ORDER BY powerFourthRatio DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 276,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy consumption records', 'energy consumption value (1000 kWh)', 'data quality (high)'], 'relations': ['record_to_device (EnergyConsumption.deviceId → EnergyDevices.deviceId)', 'filter_by_value (energyConsumed > 1000)', \"filter_by_quality (dataQuality = 'high')\"], 'intent': 'retrieve_filtered_energy_consumption_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'energy_consumption': 'kWh (kilowatt-hour)', 'data_quality': \"string category ('high')\"}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}, {'column': 'timestamp'}, {'column': 'dataQuality'}]}}\nA mathematical logic question is as follows:\nList all energy consumption records where the energy consumption value is greater than 1000 kWh and the data quality is \"high,\" displaying the device ID, energy consumption value, and timestamp, then sort them in descending order by energy consumption value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, energyConsumed, timestamp FROM EnergyConsumption WHERE energyConsumed > 1000 AND dataQuality = '高' ORDER BY energyConsumed DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 277,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['pollution level 50 µg/m³', 'EnvironmentalImpact records', 'device ID', 'pollution level', 'energy source'], 'relations': ['pollutionLevel > 50', 'record_to_device (impactId → deviceId)'], 'intent': 'retrieve_environmental_impact_records', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [50], 'units': {'pollution_level': 'µg/m³ (micrograms per cubic meter)', 'threshold_conversion': '50 µg/m³ (air quality benchmark)'}, 'foreign_keys': [{'fk_table': 'EnvironmentalImpact', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnvironmentalImpact', 'pk_column': 'impactId'}], 'tableinfo': {'EnergyManagementDB.EnvironmentalImpact': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '123']}, {'column': 'pollutionLevel', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0', '50.0', '60.0', '55.0', '10.0']}, {'column': 'energySource', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['太阳能', '风能', '化石燃料']}]}}\nA common sense reasoning question is as follows:\nFind all environmental impact records with pollution levels greater than 50 micrograms per cubic meter, displaying the device ID, pollution level, and energy source, sorted by pollution level in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, pollutionLevel, energySource FROM EnvironmentalImpact WHERE pollutionLevel > 50 ORDER BY pollutionLevel DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 278,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy efficiency records', 'equipment ID', 'saved cost (costSavings) > 1000 yuan', 'saved energy (energySaved)'], 'relations': ['filter_by_saved_cost_threshold (costSavings > 1000)', 'sort_by_saved_cost_desc (descending order)'], 'intent': 'retrieve_energy_efficiency_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'cost': 'yuan (CNY)', 'energy_saved': 'implied unit from database schema (e.g., kWh)'}, 'foreign_keys': [{'fk_table': 'EnergyEfficiency', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyEfficiency', 'pk_column': 'efficiencyId'}], 'tableinfo': {'EnergyManagementDB.EnergyEfficiency': [{'column': 'deviceId'}, {'column': 'costSavings'}, {'column': 'energySaved'}]}}\nA hypothetical reasoning question is as follows:\nList all energy efficiency records where the saved cost is greater than 1000 yuan, including the equipment ID, saved cost, and saved energy, sorted in descending order by the saved cost.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, costSavings, energySaved FROM EnergyEfficiency WHERE costSavings > 1000 ORDER BY costSavings DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 279,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices table', 'warranty period'], 'relations': ['device_to_warranty_period (deviceId → warrantyPeriod)'], 'intent': 'calculate_average_warranty_period_and_find_longest', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'warranty_period': 'days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'warrantyPeriod'}]}}\nA physical knowledge question is as follows:\nCalculate the average warranty period length (in days) of all devices in the Devices table, and find the device with the longest warranty period.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(julianday(warrantyExpiryDate) - julianday(purchaseDate)) AS avg_warranty, deviceId, deviceName FROM Devices GROUP BY deviceId, deviceName ORDER BY avg_warranty DESC LIMIT 1;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 280,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'maintenance cost'], 'relations': ['device_to_total_cost (deviceId → total maintenance cost)'], 'intent': 'calculate_total_maintenance_cost', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'cost': 'currency unit (e.g., USD)', 'aggregation': 'sum of costs'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}]}}\nA mathematical logic question is as follows:\nCalculate the total maintenance cost for each device in the MaintenanceRecords table, sort them in descending order by cost, and identify the top 3 devices with the highest maintenance costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, maintenanceDate, maintenanceType FROM MaintenanceRecords WHERE cost > 5000 ORDER BY cost DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 281,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Researchers', 'role: Data Analyst'], 'relations': [\"Researchers.role = 'Data Analyst'\"], 'intent': 'list_researchers_with_filter_and_sort', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'joinDate': 'date format (YYYY-MM-DD)'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Researchers', 'pk_column': 'researcherId'}], 'tableinfo': {'PhysicsLabDB.Researchers': [{'column': 'researcherName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['张三', '李四', '王五', '赵六', '王研究员']}, {'column': 'email', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': []}, {'column': 'joinDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-01-01 08:00:00']}, {'column': 'role', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['实验员', '数据分析师']}]}}\nA common sense reasoning question is as follows:\nList the names, email addresses, and joining dates of all researchers whose role is \"Data Analyst,\" sorted in ascending order by joining date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT researcherName, email, joinDate FROM Researchers WHERE role = '数据分析师' ORDER BY joinDate ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 282,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices table', '100 years warranty period', 'average warranty period', 'longest warranty period device'], 'relations': ['device_to_warranty_period (each device → 100 years)', 'average_warranty_period (aggregate calculation)', 'max_warranty_period (device with highest 100 years)'], 'intent': 'calculate_average_warranty_period_and_identify_longest', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 365], 'units': {'warranty_period': 'years (converted to days)', 'conversion': '1 year = 365 days', 'result_unit': 'days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'warrantyPeriod'}]}}\nA hypothetical reasoning question is as follows:\nAssuming that the warranty period for all devices in the Devices table is suddenly extended to 100 years, calculate the average warranty period length for all devices (in days), and identify the device with the longest warranty period.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(julianday(datetime(purchaseDate, '+100 years')) - julianday(purchaseDate)) AS avg_warranty, deviceId, deviceName FROM Devices GROUP BY deviceId, deviceName ORDER BY avg_warranty DESC LIMIT 1;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 283,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['laboratories', 'capacity', 'status', 'equipment'], 'relations': ['lab_capacity_requirement (capacity > 20)', \"lab_status_filter (status = 'open')\", 'equipment_count_relation (equipmentCount field)'], 'intent': 'retrieve_laboratory_info_with_conditions', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [20], 'units': {'capacity': 'people', 'equipment_count': 'unitless count'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Labs', 'pk_column': 'labId'}], 'tableinfo': {'PhysicsLabDB.Labs': [{'column': 'labName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学实验室', '量子物理实验室', '电磁学实验室', '热力学实验室', '高级物理实验室']}, {'column': 'location', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['物理楼101', '物理楼202', '物理楼303', '物理楼404', '科学楼5层']}, {'column': 'equipmentCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['15', '8', '12', '10', '100']}]}}\nA physical knowledge question is as follows:\nFind the names, locations, and number of equipment for all laboratories with a capacity greater than 20 people and a status of \"open\", sorted in descending order by the number of equipment.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT labName, location, equipmentCount FROM Labs WHERE capacity > 20 AND status = '开放' ORDER BY equipmentCount DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 284,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiments', \"status 'In Progress'\"], 'relations': [\"experiment_status_filter (status='In Progress')\", 'sort_by_start_date (ascending_order)'], 'intent': 'retrieve_experiment_metadata_with_status_filter', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'date_format': 'YYYY-MM-DD (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}, {'column': 'startDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-01 10:00:00']}, {'column': 'endDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-15 18:00:00']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['已完成', '进行中']}]}}\nA mathematical logic question is as follows:\nList the names, start dates, and end dates of all experiments with a status of \"In Progress,\" sorted by start date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT experimentName, startDate, endDate FROM Experiments WHERE status = '进行中' ORDER BY startDate ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 285,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'Malfunction', 'Lighting'], 'relations': ['Devices.deviceType_to_DeviceTypes.deviceType (implicit schema relationship)', \"Devices.status_filter ('Malfunction')\", \"Devices.type_filter ('Lighting')\"], 'intent': 'retrieve_devices_with_specific_status_and_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'status'}, {'column': 'deviceType'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the status is 'Malfunction' and the device type is 'Lighting', sorted by device name in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE status = '故障' AND deviceType = '照明' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 286,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['lighting devices', 'online devices', 'energy consumption'], 'relations': ['device_to_energy (Devices.deviceId → EnergyConsumption.deviceId)', 'device_type_filter (deviceType=lighting)', 'status_filter (status=online)'], 'intent': 'retrieve_and_calculate_total_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'power_rating': 'W (Watts)', 'energy_consumed': 'kWh (kilowatt-hours)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}, {'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'SmartHomeDB.Devices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Smart Bulb 1', 'Smart Plug 1', 'Smart Thermostat 1']}, {'column': 'powerRating', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.5', '15.0', '5.0']}, {'column': 'installationDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-01-15 10:00:00']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'deviceType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['照明', '插座', '温控']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['在线', '故障']}], 'SmartHomeDB.EnergyConsumption': [{'column': 'energyConsumed', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['2.5', '3.0', '1.0']}]}}\nA hypothetical reasoning question is as follows:\nFind the device name, rated power, and installation date of all devices with the device type \"lighting\" and status \"online,\" and calculate their total energy consumption values, sorted in descending order by total energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.powerRating, d.installationDate, SUM(e.energyConsumed) AS totalEnergyConsumed FROM Devices d JOIN EnergyConsumption e ON d.deviceId = e.deviceId WHERE d.deviceType = '照明' AND d.status = '在线' GROUP BY d.deviceName, d.powerRating, d.installationDate ORDER BY totalEnergyConsumed DESC;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 287,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'weight column', 'top 3 products'], 'relations': ['total_weight (sum of all weight values)', 'weight_ranking (ordered descending by weight)'], 'intent': 'calculate_total_weight_and_top_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'weight': 'kg (kilograms)', 'count': '3 (top products)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'weight'}]}}\nA physical knowledge question is as follows:\nCalculate the total weight (in kilograms) of all products in the Products table and identify the top 3 products with the highest weight.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(weight) AS total_weight, productId, productName FROM Products GROUP BY productId, productName ORDER BY total_weight DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 288,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders', 'Users'], 'relations': ['user_to_orders (Orders.userId → Users.userId)'], 'intent': 'calculate_total_spending_per_user_and_rank_top_5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'currency': \"implied by 'amount' in Orders.totalAmount\"}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'userId'}, {'column': 'totalAmount'}]}}\nA mathematical logic question is as follows:\nCalculate the total order amount for each user in the Orders table, sort it in descending order by amount, and find the top 5 users with the highest spending.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT userId, SUM(totalAmount) AS total_spent FROM Orders GROUP BY userId ORDER BY total_spent DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 289,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders table', \"order status 'Completed'\", \"payment method 'Alipay'\"], 'relations': [\"order_status_filter (Orders.orderStatus = 'Completed')\", \"payment_method_filter (Orders.paymentMethod = 'Alipay')\", 'sort_by_order_date (Orders.orderDate ASC)'], 'intent': 'query_orders_with_filters_and_sort', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderStatus'}, {'column': 'paymentMethod'}, {'column': 'orderDate'}]}}\nA common sense reasoning question is as follows:\nFind all orders in the Orders table where the order status is 'Completed' and the payment method is 'Alipay', and sort them by order date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已完成' AND paymentMethod = '支付宝' ORDER BY orderDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 290,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', '1000 kilograms'], 'relations': ['product_weight_assignment (all products → 1000 kg)', 'total_weight_calculation (Σ1000 kg per product)'], 'intent': 'calculate_total_weight_and_top_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'weight': 'kilograms', 'total_weight': 'kilograms'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'weight'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the weight of all products in the Products table suddenly increases to 1000 kilograms, calculate the total weight of all products (in kilograms) and identify the top 3 products with the highest weight.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(1000) AS total_weight, productId, productName FROM Products GROUP BY productId, productName ORDER BY total_weight DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 291,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords', 'total cost', 'top 3 maintenance records'], 'relations': ['aggregation (sum of all cost values)', 'ranking (sorted by cost in descending order with limit 3)'], 'intent': 'calculate_total_cost_and_identify_top_records', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [3], 'units': {'cost': \"yuan (as specified in the user's question)\"}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'cost'}]}}\nA physical knowledge question is as follows:\nCalculate the total cost (in yuan) for all maintenance records in the MaintenanceRecords table, and identify the top 3 records with the highest costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(cost) AS total_cost, maintenanceId FROM MaintenanceRecords GROUP BY maintenanceId ORDER BY total_cost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 292,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'Suppliers'], 'relations': ['Devices.supplierId → Suppliers.supplierId'], 'intent': 'count_devices_by_manufacturer_and_rank_top_3', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'count': 'number (discrete)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Suppliers', 'pk_column': 'supplierId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'supplierId'}], 'PhysicsLabDB.Suppliers': [{'column': 'supplierName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学设备公司', '华科仪器有限公司', '某供应商']}]}}\nA mathematical logic question is as follows:\nCount the number of devices for each manufacturer in the Devices table, sort them in descending order by quantity, and identify the top 3 manufacturers with the most devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturerId, COUNT(deviceId) AS device_count FROM Devices GROUP BY manufacturerId ORDER BY device_count DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 293,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords', 'emergency repair', '1000 yuan'], 'relations': [\"maintenanceType_to_records (maintenanceType 'emergency repair' → MaintenanceRecords)\", 'cost_threshold_greater_than_1000 (cost > 1000 → MaintenanceRecords)'], 'intent': 'retrieve_maintenance_records', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1000], 'units': {'currency': 'yuan'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'maintenanceType'}, {'column': 'cost'}, {'column': 'maintenanceDate'}]}}\nA common sense reasoning question is as follows:\nFind all records in the MaintenanceRecords table where the maintenance type is 'emergency repair' and the maintenance cost is greater than 1000 yuan, sorted by maintenance date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM MaintenanceRecords WHERE maintenanceType = '紧急维修' AND cost > 1000 ORDER BY maintenanceDate ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 294,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Oscilloscope', 'Normal status', 'calibration date', 'laboratory ID'], 'relations': ['device_to_type (Devices.deviceType → DeviceTypes.deviceType)', 'device_to_lab (Devices.labId → Labs.labId)'], 'intent': 'retrieve_device_calibration_info', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'calibration_date': 'date format (YYYY-MM-DD)', 'laboratory_id': 'string identifier'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'calibrationDate'}, {'column': 'labId'}, {'column': 'deviceType'}, {'column': 'status'}]}}\nA hypothetical reasoning question is as follows:\nFind the names, calibration dates, and laboratory IDs of all devices whose device type is \"Oscilloscope\" and status is \"Normal,\" sorted by calibration date in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceName, calibrationDate, labId FROM Devices WHERE deviceType = '示波器' AND status = '正常' ORDER BY calibrationDate DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 295,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption table', 'powerUsage', 'deviceId'], 'relations': ['device_to_powerUsage (deviceId → powerUsage)', 'average_power_calculation', 'top_consumers_selection'], 'intent': 'calculate_average_power_and_identify_top_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'power': 'watts (W)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'powerUsage'}]}}\nA physical knowledge question is as follows:\nCalculate the average real-time power (in watts) for all devices in the EnergyConsumption table, and identify the top 3 devices with the highest power consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(powerUsage) AS avg_power, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_power DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 296,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SensorData', 'dataQuality', 'sensorId'], 'relations': ['sensorId_to_dataQuality (sensorId → dataQuality)', 'group_by_sensorId', 'filter_by_dataQuality_high'], 'intent': 'count_high_quality_records_grouped_and_ranked', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'count': 'number of records', 'ranking': 'descending order by count'}, 'foreign_keys': [{'fk_table': 'SensorData', 'fk_column': 'sensorId', 'ref_table': 'Sensors', 'ref_column': 'sensorId'}], 'primary_keys': [{'pk_table': 'SensorData', 'pk_column': 'dataId'}], 'tableinfo': {'SmartHomeDB.SensorData': [{'column': 'sensorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中', '低']}]}}\nA mathematical logic question is as follows:\nCount the number of records with data quality (dataQuality) rated as 'high' for each sensor in the SensorData table, sort them in descending order by count, and identify the top 3 sensors with the highest data quality.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT sensorId, COUNT(dataId) AS high_quality_count FROM SensorData WHERE dataQuality = '高' GROUP BY sensorId ORDER BY high_quality_count DESC LIMIT 3;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 297,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Security', 'Online'], 'relations': ['device_type_filter(Security)', 'status_filter(Online)'], 'intent': 'query_devices_with_type_and_status', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'deviceType'}, {'column': 'status'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the device type is 'Security' and the status is 'Online', sorted by device name in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE deviceType = '安防' AND status = '在线' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 298,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption table', 'real-time power increase', '10000 watts', 'average real-time power', 'top 3 devices'], 'relations': ['hypothetical_power_change (EnergyConsumption.table → 10000 watts)', 'statistical_calculation (average_real-time_power)', 'ranking (top_3_devices_by_power)'], 'intent': 'calculate_average_and_top_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000, 3], 'units': {'power': 'watts'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'powerUsage'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the real-time power of all devices in the EnergyConsumption table suddenly increases to 10000 watts, calculate the average real-time power (in watts) of all devices and identify the top 3 devices with the highest power.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(10000) AS avg_power, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_power DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 299,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'product volume', 'cubic meters'], 'relations': ['product_to_volume (productId → volume)', 'volume_aggregation (SUM(volume))', 'volume_ranking (ORDER BY volume DESC)'], 'intent': 'calculate_total_volume_and_identify_top_3_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'volume': 'cubic meters (m³)', 'count': '3 (top products)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'volume'}, {'column': 'productId'}, {'column': 'productName'}]}}\nA physical knowledge question is as follows:\nCalculate the total volume (in cubic meters) of all products in the Products table, and find the top 3 products with the largest volume.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(volume) AS total_volume, productId, productName FROM Products GROUP BY productId, productName ORDER BY total_volume DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 300,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['product', 'sales volume'], 'relations': ['order_to_order_details (Orders.orderId → OrderDetails.orderId)', 'product_to_sales_volume (productId → total_quantity_sold)'], 'intent': 'calculate_total_sales_volume_and_rank_top_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'quantity': 'units_sold (count of individual units)', 'ranking': 'top 5 products'}, 'foreign_keys': [{'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}, {'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}, {'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}], 'ECommerce.OrderDetails': [{'column': 'orderId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1']}]}}\nA mathematical logic question is as follows:\nCalculate the total sales volume for each product in the Orders table, sort them in descending order by sales volume, and identify the top 5 products with the highest sales volume.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productId, SUM(quantity) AS total_sales FROM Orders GROUP BY productId ORDER BY total_sales DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 301,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders table', \"OrderStatus 'Shipped'\", \"ShippingMethod 'Express'\"], 'relations': ['Orders_to_Shipping (orderId → foreign key relationship)'], 'intent': 'filter_orders_with_status_and_shipping_method', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}, {'fk_table': 'Shipping', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Shipping', 'pk_column': 'shippingId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'orderStatus'}, {'column': 'orderDate'}], 'ECommerce.Shipping': [{'column': 'shippingMethod', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['快递', '物流']}]}}\nA common sense reasoning question is as follows:\nFind all orders in the Orders table where the order status is 'Shipped' and the shipping method is 'Express', sorted by order date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已发货' AND shippingMethod = '快递' ORDER BY orderDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 302,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Users', 'userRole', 'Administrator'], 'relations': [\"userRole_filter (userRole = 'Administrator')\", 'attribute_projection (userName, email, registrationDate)'], 'intent': 'retrieve_user_information_with_role_filter', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Users', 'pk_column': 'userId'}], 'tableinfo': {'ECommerce.Users': [{'column': 'userName'}, {'column': 'email'}, {'column': 'registrationDate'}, {'column': 'userRole'}]}}\nA hypothetical reasoning question is as follows:\nList the names, email addresses, and registration dates of all users whose role is \"Administrator,\" sorted by registration date in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT userName, email, registrationDate FROM Users WHERE userRole = '管理员' ORDER BY registrationDate DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 303,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products'], 'relations': ['stock_quantity_less_than_10', 'status_on-shelf', 'product_fields_selection'], 'intent': 'retrieve_product_information', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [10], 'units': {'stock_quantity': 'unitless (count)', 'price': 'currency (implied by column name)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productName'}, {'column': 'price'}, {'column': 'category'}, {'column': 'stock'}, {'column': 'status'}]}}\nA physical knowledge question is as follows:\nFind the names, prices, and categories of all products with stock quantities less than 10 and a status of \"on-shelf,\" sorted by price in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productName, price, category FROM Products WHERE stock < 10 AND status = '上架' ORDER BY price ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 304,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [], 'relations': [], 'intent': 'count_maintenance_records_per_technician', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'count': 'unitless'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'technicianName'}]}}\nA mathematical logic question is as follows:\nCount the number of maintenance records for each technician in the MaintenanceRecords table, sort them in descending order by quantity, and identify the top 3 technicians with the most maintenance records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT technicianName, COUNT(maintenanceId) AS maintenance_count FROM MaintenanceRecords GROUP BY technicianName ORDER BY maintenance_count DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 305,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiment', 'researcher', 'lab', 'equipment'], 'relations': ['experiment_to_researcher (Experiments.researcherId → Researchers.researcherId)', 'experiment_to_lab (Experiments.labId → Labs.labId)'], 'intent': 'retrieve_experiment_details_with_filters', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Experiments', 'pk_column': 'experimentId'}, {'pk_table': 'Labs', 'pk_column': 'labId'}, {'pk_table': 'Researchers', 'pk_column': 'researcherId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}, {'column': 'description', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['研究光的波动性', '研究量子纠缠现象', '研究电磁感应现象', '研究热传导规律']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['已完成', '进行中']}, {'column': 'startDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-01 10:00:00']}], 'PhysicsLabDB.Researchers': [{'column': 'researcherName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['张三', '李四', '王五', '赵六', '王研究员']}, {'column': 'role', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['实验员', '数据分析师']}], 'PhysicsLabDB.Labs': [{'column': 'labName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学实验室', '量子物理实验室', '电磁学实验室', '热力学实验室', '高级物理实验室']}, {'column': 'equipmentCount', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['15', '8', '12', '10', '100']}]}}\nA common sense reasoning question is as follows:\nFind the experiment names, descriptions, researcher names, lab names, and equipment count for all experiments in \"Ongoing\" status that are managed by researchers with the role \"Data Analyst,\" sorted by experiment start time in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.experimentName, e.description, r.researcherName, l.labName, l.equipmentCount FROM Experiments e JOIN Researchers r ON e.researcherId = r.researcherId JOIN Labs l ON e.labId = l.labId WHERE r.role = '数据分析师' AND e.status = '进行中' ORDER BY e.startDate ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 306,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices table', 'purchase date adjustment of 100 years', 'average lifespan in days', 'device with longest lifespan'], 'relations': ['purchaseDate_adjustment (100 years forward)', 'lifespan_calculation (warrantyEndDate - adjusted purchaseDate)', 'device_to_lifespan (device → lifespan duration)'], 'intent': 'calculate_average_lifespan_and_identify_longest_lifespan_device', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100, 365], 'units': {'time_adjustment': 'years', 'lifespan': 'days', 'conversion': '1 year = 365 days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'purchaseDate'}, {'column': 'warrantyEndDate'}, {'column': 'deviceName'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the purchase date of all devices in the Devices table is suddenly moved forward by 100 years, calculate the average lifespan (in days) of all devices and identify the device with the longest lifespan.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(julianday('now') - julianday(date('now', '-100 years'))) AS avg_lifetime, deviceId, deviceName FROM Devices GROUP BY deviceId, deviceName ORDER BY avg_lifetime DESC LIMIT 1;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 307,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['oscilloscope', 'calibration date after 2023', 'laboratory status'], 'relations': ['deviceType_to_Devices (oscilloscope → Devices.deviceType)', 'device_to_Labs (Devices.labId → Labs.labId)'], 'intent': 'retrieve_equipment_calibration_info', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2023], 'units': {'calibration_date': 'YYYY format (year comparison)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Labs', 'pk_column': 'labId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'calibrationDate'}, {'column': 'labId'}], 'PhysicsLabDB.Labs': [{'column': 'labName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学实验室', '量子物理实验室', '电磁学实验室', '热力学实验室', '高级物理实验室']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['开放', '关闭']}]}}\nA physical knowledge question is as follows:\nList the names, calibration dates, laboratory names, and laboratory statuses of all equipment with the type \"oscilloscope\" that have a calibration date after 2023, sorted by calibration date in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.calibrationDate, l.labName, l.status FROM Devices d JOIN Labs l ON d.labId = l.labId WHERE d.deviceType = '示波器' AND d.calibrationDate > '2023-01-01' ORDER BY d.calibrationDate DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 308,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiment data', 'high data quality', 'measured values > 100'], 'relations': ['experiment_data_to_experiments (ExperimentData.experimentId → Experiments.experimentId)', 'experiment_data_to_devices (ExperimentData.deviceId → Devices.deviceId)'], 'intent': 'retrieve_and_sort_experimental_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [100], 'units': {'measurement_value': 'unit (from ExperimentData.unit)', 'collection_time': 'timestamp (from ExperimentData.timestamp)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'ExperimentData', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'ExperimentData', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}, {'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'ExperimentData', 'pk_column': 'dataId'}, {'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}], 'PhysicsLabDB.ExperimentData': [{'column': 'measurementValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.34', '56.78', '0.45', '98.76', '1.75']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-02 10:30:00']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中', '低']}], 'PhysicsLabDB.Devices': [{'column': 'deviceName'}]}}\nA mathematical logic question is as follows:\nFind the experiment names, measured values, equipment names, and collection times from all experimental data where the data quality is \"high\" and the measured values are greater than 100, sorted in descending order by measured value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.experimentName, ed.measurementValue, d.deviceName, ed.timestamp FROM ExperimentData ed JOIN Experiments e ON ed.experimentId = e.experimentId JOIN Devices d ON ed.deviceId = d.deviceId WHERE ed.dataQuality = '高' AND ed.measurementValue > 100 ORDER BY ed.measurementValue DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 309,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', \"device type 'Entertainment'\", \"status 'Offline'\"], 'relations': [\"deviceType_filter ('Entertainment')\", \"status_filter ('Offline')\"], 'intent': 'retrieve_offline_entertainment_devices', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceType'}, {'column': 'status'}, {'column': 'deviceName'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the device type is 'Entertainment' and the status is 'Offline', sorted by device name in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE deviceType = '娱乐' AND status = '离线' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 310,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption table', 'real-time current', '1000 amperes'], 'relations': ['table_to_current (EnergyConsumption → current)', 'current_value (1000 A)'], 'intent': 'calculate_average_and_top_devices_by_current', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'current': 'amperes (A)', 'average': 'amperes (A)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'current'}, {'column': 'deviceId'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the real-time current of all devices in the EnergyConsumption table suddenly increases to 1000 amperes, calculate the average real-time current (in amperes) for all devices and identify the top 3 devices with the highest current.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(1000) AS avg_current, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_current DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 311,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'product value (price × stock)', 'top 3 products'], 'relations': ['product_to_value (productId → price×stock)', 'sum_of_values (total inventory value)', 'ranking_of_products (value-based ordering)'], 'intent': 'calculate_total_inventory_value_and_top_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'currency': 'yuan (CNY)', 'value_calculation': 'value = price × stock'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'price'}, {'column': 'stock'}]}}\nA physical knowledge question is as follows:\nCompute the total value (in yuan) of all products in the Products table, and identify the top 3 most valuable products.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(price) AS total_value, productId, productName FROM Products GROUP BY productId, productName ORDER BY total_value DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 312,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['product', 'discount amount'], 'relations': ['product_to_orderdetails (productId → OrderDetails)', 'product_to_discounts (productId → Discounts)'], 'intent': 'calculate_total_discount_amount_per_product_sort_and_top_n', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'discount_amount': 'currency (implied by OrderDetails.discount field)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}, {'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}, {'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.OrderDetails': [{'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'discount', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.0']}], 'ECommerce.Products': [{'column': 'productName'}]}}\nA mathematical logic question is as follows:\nCalculate the total discount amount for each product in the Orders table, sort them in descending order of discount amount, and find the top 5 products with the highest discount amounts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productId, SUM(discount) AS total_discount FROM Orders GROUP BY productId ORDER BY total_discount DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 313,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders table', \"order status 'Pending Payment'\", \"payment method 'Credit Card'\"], 'relations': [], 'intent': 'retrieve_orders_with_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'orderDate'}, {'column': 'paymentMethod'}, {'column': 'orderStatus'}]}}\nA common sense reasoning question is as follows:\nFind all orders in the Orders table where the order status is 'Pending Payment' and the payment method is 'Credit Card', sorted by order date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '待支付' AND paymentMethod = '信用卡' ORDER BY orderDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 314,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders', 'Shipped status', 'Order amount'], 'relations': [\"order_to_status (Orders → orderStatus = 'Shipped')\", 'order_to_amount (Orders → totalAmount)'], 'intent': 'retrieve_order_details_with_shipped_status', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'currency': 'default unit (no explicit conversion required)'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'totalAmount'}, {'column': 'shippingAddress'}, {'column': 'orderStatus'}]}}\nA hypothetical reasoning question is as follows:\nList the order ID, total order amount, and shipping address for all orders with a status of \"Shipped,\" sorted in descending order by the total order amount.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT orderId, totalAmount, shippingAddress FROM Orders WHERE orderStatus = '已发货' ORDER BY totalAmount DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 315,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords table', 'maintenance cost (yuan)'], 'relations': ['average_maintenance_cost', 'top_3_records_by_cost'], 'intent': 'calculate_average_and_top_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'cost': 'yuan (¥)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'cost'}]}}\nA physical knowledge question is as follows:\nCalculate the average maintenance cost (in yuan) for all maintenance records in the MaintenanceRecords table and identify the top 3 records with the highest costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(cost) AS avg_cost, maintenanceId FROM MaintenanceRecords GROUP BY maintenanceId ORDER BY avg_cost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 316,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'location'], 'relations': ['location_to_device_count'], 'intent': 'count_and_rank_locations_by_device_count', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'count': 'number of devices'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'locationId'}, {'column': 'deviceId'}]}}\nA mathematical logic question is as follows:\nCount the number of devices at each location in the Devices table, sort in descending order by quantity, and identify the top 3 locations with the highest number of devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT locationId, COUNT(deviceId) AS device_count FROM Devices GROUP BY locationId ORDER BY device_count DESC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 317,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['routine maintenance', '500 yuan'], 'relations': [\"maintenanceType = 'routine maintenance'\", 'cost < 500'], 'intent': 'filter_and_sort_maintenance_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [500], 'units': {'cost': 'yuan (Chinese Yuan)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'maintenanceId'}, {'column': 'maintenanceType'}, {'column': 'cost'}, {'column': 'maintenanceDate'}]}}\nA common sense reasoning question is as follows:\nFind all records in the MaintenanceRecords table where the maintenance type is 'routine maintenance' and the maintenance cost is less than 500 yuan, and sort them in ascending order by maintenance date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM MaintenanceRecords WHERE maintenanceType = '定期维护' AND cost < 500 ORDER BY maintenanceDate ASC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 318,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiment data', 'high data quality', 'measurement values > 100'], 'relations': ['experimentData_to_experiments (ExperimentData.experimentId → Experiments.experimentId)', 'experimentData_to_devices (ExperimentData.deviceId → Devices.deviceId)'], 'intent': 'retrieve_filtered_and_sorted_experimental_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [100], 'units': {'measurement_value': 'unit (from ExperimentData.unit column)', 'threshold': 'dimensionless comparison (measurementValue > 100)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'ExperimentData', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'ExperimentData', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}, {'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'ExperimentData', 'pk_column': 'dataId'}, {'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.ExperimentData': [{'column': 'experimentId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '1002']}, {'column': 'deviceId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '4', '100']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-02 10:30:00']}, {'column': 'measurementValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.34', '56.78', '0.45', '98.76', '1.75']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中', '低']}], 'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}], 'PhysicsLabDB.Devices': [{'column': 'deviceName'}]}}\nA hypothetical reasoning question is as follows:\nFind the experiment names, measurement values, equipment names, and collection times from all experimental data where the data quality is \"high\" and the measurement values are greater than 100, sorted by measurement value in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.experimentName, ed.measurementValue, d.deviceName, ed.timestamp FROM ExperimentData ed JOIN Experiments e ON ed.experimentId = e.experimentId JOIN Devices d ON ed.deviceId = d.deviceId WHERE ed.dataQuality = '高' AND ed.measurementValue > 100 ORDER BY ed.measurementValue DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 319,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption table', 'devices', 'voltage'], 'relations': ['device_to_voltage (deviceId → voltage readings)', 'statistical_aggregation (average voltage)', 'ranking (top 3 highest voltage devices)'], 'intent': 'calculate_average_voltage_and_rank_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'voltage': 'volts (V)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'voltage'}]}}\nA physical knowledge question is as follows:\nCalculate the average real-time voltage (in volts) for all devices in the EnergyConsumption table, and identify the top 3 devices with the highest voltage.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(voltage) AS avg_voltage, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_voltage DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 320,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['sensors', 'data collection frequency', 'top 3 sensors'], 'relations': ['sensor_to_data (sensorId → SensorData entries)', 'frequency_calculation (count of timestamps per sensor per day)'], 'intent': 'calculate_and_rank_sensor_data_frequency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'frequency': 'times per day', 'count': 'integer (implied by COUNT() function)'}, 'foreign_keys': [{'fk_table': 'SensorData', 'fk_column': 'sensorId', 'ref_table': 'Sensors', 'ref_column': 'sensorId'}, {'fk_table': 'Sensors', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'SensorData', 'pk_column': 'dataId'}, {'pk_table': 'Sensors', 'pk_column': 'sensorId'}], 'tableinfo': {'SmartHomeDB.SensorData': [{'column': 'sensorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 08:00:00']}], 'SmartHomeDB.Sensors': [{'column': 'sensorId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3']}]}}\nA mathematical logic question is as follows:\nCalculate the data collection frequency (in times per day) for each sensor in the SensorData table, sort them in descending order of frequency, and identify the top 3 sensors with the highest collection frequency.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT sensorId, COUNT(dataId) AS data_count FROM SensorData GROUP BY sensorId ORDER BY data_count DESC LIMIT 3;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 321,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'device_type_Lighting', 'status_Online'], 'relations': ['device_to_type (Devices → DeviceTypes)', 'device_to_status (Devices → status)'], 'intent': 'retrieve_devices_with_criteria', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceType'}, {'column': 'status'}, {'column': 'deviceName'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the device type is 'Lighting' and the status is 'Online', sorted by device name in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE deviceType = '照明' AND status = '在线' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 322,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['real-time voltage 1000 volts'], 'relations': ['average_voltage_calculation', 'top_devices_by_voltage'], 'intent': 'calculate_average_and_top_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000], 'units': {'voltage': 'volts'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}, {'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'voltage'}, {'column': 'deviceId'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the real-time voltage of all devices in the EnergyConsumption table suddenly increases to 1000 volts, calculate the average real-time voltage (in volts) for all devices and identify the top 3 devices with the highest voltage.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(1000) AS avg_voltage, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_voltage DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 323,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'weight column', 'average weight', 'top 3 heaviest products'], 'relations': ['products_to_weights (product → weight)'], 'intent': 'statistical_analysis', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'weight': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'weight'}]}}\nA physical knowledge question is as follows:\nCalculate the average weight (in kilograms) of all products in the Products table, and find the top 3 heaviest products.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(weight) AS avg_weight, productId, productName FROM Products GROUP BY productId, productName ORDER BY avg_weight DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 324,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['user', 'orders'], 'relations': ['user_to_orders (Orders.userId → Users.userId)'], 'intent': 'count_orders_per_user_sort_descending_top_5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'quantity': 'count (no unit conversion required)'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'userId'}, {'column': 'orderId'}]}}\nA mathematical logic question is as follows:\nCount the total number of orders for each user in the Orders table, sort them in descending order by quantity, and find the top 5 users with the highest number of orders.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT userId, COUNT(orderId) AS order_count FROM Orders GROUP BY userId ORDER BY order_count DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 325,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders', 'order_status_Completed', 'delivery_method_Logistics'], 'relations': ['Orders_to_Shipping (orderId)', 'filter_condition_orderStatus', 'filter_condition_shippingMethod'], 'intent': 'retrieve_orders_with_status_and_delivery_method', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}, {'fk_table': 'Shipping', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Shipping', 'pk_column': 'shippingId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'orderDate'}, {'column': 'orderStatus'}], 'ECommerce.Shipping': [{'column': 'shippingMethod', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['快递', '物流']}]}}\nA common sense reasoning question is as follows:\nFind all orders in the Orders table with the status 'Completed' and delivery method 'Logistics,' sorted by order date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已完成' AND shippingMethod = '物流' ORDER BY orderDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 326,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', '5000 kilograms'], 'relations': ['weight_increase (Products → weight=5000 kg)'], 'intent': 'calculate_new_average_weight_and_identify_top_3_heaviest_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000], 'units': {'weight': 'kg (kilograms)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'weight'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the weight of all products in the Products table suddenly increases to 5000 kilograms, calculate the average weight (in kilograms) of all products and identify the top 3 heaviest products.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(5000) AS avg_weight, productId, productName FROM Products GROUP BY productId, productName ORDER BY avg_weight DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 327,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['hypotheses', 'verification results', 'experiment names', 'researcher names'], 'relations': ['hypothesis_to_verification_result', 'hypothesis_to_experiment', 'researcher_to_hypothesis'], 'intent': 'retrieve_unverified_hypotheses_with_recent_dates', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2023], 'units': {'date': 'YYYY format for verification dates'}, 'notes': 'The provided database schema does not contain tables or fields related to hypotheses, experiments, verification results, or researcher names. The required entities exist in the query but cannot be mapped to the available ECommerce database structure.', 'foreign_keys': [], 'primary_keys': [], 'tableinfo': {'ECommerce.Hypotheses': [{'column': 'hypothesis_content'}], 'ECommerce.Experiments': [{'column': 'experiment_name'}], 'ECommerce.VerificationResults': [{'column': 'verification_date'}, {'column': 'verification_result'}], 'ECommerce.Researchers': [{'column': 'researcher_name'}]}}\nA physical knowledge question is as follows:\nList all hypotheses with verification results marked as \"false,\" verification dates after 2023, including their hypothesis content, experiment names, verification dates, and researcher names, sorted by verification date in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.hypothesisText, e.experimentName, h.verificationDate, r.researcherName FROM Hypotheses h JOIN Experiments e ON h.experimentId = e.experimentId JOIN Researchers r ON e.researcherId = r.researcherId WHERE h.verificationResult = '假' AND h.verificationDate > '2023-01-01' ORDER BY h.verificationDate DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 328,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device', 'maintenance occurrence'], 'relations': ['device_to_maintenance (deviceId → MaintenanceRecords)'], 'intent': 'calculate_and_rank_maintenance_frequency', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'frequency': 'count (unitless)', 'ranking': 'descending_order'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'maintenanceId'}]}}\nA mathematical logic question is as follows:\nCalculate the number of maintenance occurrences for each device in the MaintenanceRecords table, sort them in descending order by frequency, and identify the top 3 devices with the highest maintenance counts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, COUNT(maintenanceId) AS maintenance_count FROM MaintenanceRecords GROUP BY deviceId ORDER BY maintenance_count DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 329,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['variable', 'experiment', 'sensitivity_value', 'impact_level'], 'relations': ['sensitivityanalysis_to_variables (SensitivityAnalysis.variableId → Variables.variableId)', 'sensitivityanalysis_to_experiments (SensitivityAnalysis.experimentId → Experiments.experimentId)', 'sensitivity_filter (sensitivityValue > 0.5)', \"impact_filter (impact = 'high')\"], 'intent': 'retrieve_sensitivity_data', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0.5], 'units': {'sensitivity_value': 'dimensionless (unitless numerical value)', 'impact_level': 'categorical (high/medium/low)'}, 'foreign_keys': [{'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'SensitivityAnalysis', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'SensitivityAnalysis', 'fk_column': 'variableId', 'ref_table': 'Variables', 'ref_column': 'variableId'}, {'fk_table': 'Variables', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}], 'primary_keys': [{'pk_table': 'Experiments', 'pk_column': 'experimentId'}, {'pk_table': 'SensitivityAnalysis', 'pk_column': 'analysisId'}, {'pk_table': 'Variables', 'pk_column': 'variableId'}], 'tableinfo': {'PhysicsLabDB.Variables': [{'column': 'variableName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光强', '量子态', '磁场强度', '温差', 'A']}], 'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}], 'PhysicsLabDB.SensitivityAnalysis': [{'column': 'sensitivityValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['0.75', '0.25', '0.6', '0.4', '1000.0']}, {'column': 'impact', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中']}]}}\nA common sense reasoning question is as follows:\nFind all variable names, experiment names, sensitivity values, and impact levels in the sensitivity analysis where the impact level is \"high\" and the sensitivity value is greater than 0.5, sorted in descending order by sensitivity value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT v.variableName, e.experimentName, sa.sensitivityValue, sa.impact FROM SensitivityAnalysis sa JOIN Variables v ON sa.variableId = v.variableId JOIN Experiments e ON sa.experimentId = e.experimentId WHERE sa.impact = '高' AND sa.sensitivityValue > 0.5 ORDER BY sa.sensitivityValue DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 330,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'maintenance interval'], 'relations': ['device_to_interval (deviceId → maintenance interval)'], 'intent': 'calculate_average_maintenance_interval_and_identify_shortest', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1], 'units': {'maintenance_interval': 'days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}], 'PhysicsLabDB.MaintenanceRecords': [{'column': 'maintenanceDate'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance interval for all devices in the Devices table suddenly shortens to 1 day, calculate the average maintenance interval (in days) for all devices and identify the device with the shortest maintenance interval.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(1) AS avg_interval, deviceId FROM Devices GROUP BY deviceId ORDER BY avg_interval ASC LIMIT 1;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 331,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['constraint', 'experiment'], 'relations': ['constraint_to_experiment (Constraints.experimentId → Experiments.experimentId)'], 'intent': 'retrieve_filtered_constraint_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Constraints', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Constraints', 'pk_column': 'constraintId'}, {'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.Constraints': [{'column': 'constraintText', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['光强 >= 50 lux', '量子态总和 = 1', '磁场强度 <= 1 T', '温差 >= 5 °C']}, {'column': 'constraintType', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['不等式', '等式']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中']}], 'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}]}}\nA physical knowledge question is as follows:\nList all constraint contents, experiment names, and constraint types where the constraint type is \"inequality\" and the data quality is \"high\", sorted by constraint content in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT c.constraintText, e.experimentName, c.constraintType FROM Constraints c JOIN Experiments e ON c.experimentId = e.experimentId WHERE c.constraintType = '不等式' AND c.dataQuality = '高' ORDER BY c.constraintText ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 332,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['sensor', \"SensorData records with dataQuality='low'\"], 'relations': ['sensor_to_data (sensorId → SensorData grouping)', 'quality_filter (dataQuality=low)'], 'intent': 'identify_top_sensors_with_poor_data_quality', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'count': 'unitless (number of records)', 'data_quality': \"categorical value ('low')\"}, 'foreign_keys': [{'fk_table': 'SensorData', 'fk_column': 'sensorId', 'ref_table': 'Sensors', 'ref_column': 'sensorId'}], 'primary_keys': [{'pk_table': 'SensorData', 'pk_column': 'dataId'}], 'tableinfo': {'SmartHomeDB.SensorData': [{'column': 'sensorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中', '低']}]}}\nA mathematical logic question is as follows:\nCount the number of records with 'low' data quality (dataQuality) for each sensor in the SensorData table, sort them in descending order by the count, and identify the top 3 sensors with the poorest data quality.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT sensorId, COUNT(dataId) AS low_quality_count FROM SensorData WHERE dataQuality = '低' GROUP BY sensorId ORDER BY low_quality_count DESC LIMIT 3;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 333,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Security', 'Fault'], 'relations': ['device_type_filter (Security)', 'status_filter (Fault)'], 'intent': 'retrieve_devices_with_conditions', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}, {'column': 'deviceType'}, {'column': 'status'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the device type is 'Security' and the status is 'Fault', sorted in ascending order by device name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE deviceType = '安防' AND status = '故障' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 334,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption table', 'real-time temperature 1000°C', 'average real-time temperature', 'top 3 devices with highest temperature'], 'relations': ['table_to_temperature (EnergyConsumption → temperature)', 'temperature_to_average (1000°C → average_temperature)', 'temperature_to_ranking (1000°C → top_3_devices)'], 'intent': 'calculate_average_and_top_devices_under_hypothetical_temperature', 'reasoning_type': 'ideal hypothesis reasoning', 'numerical_values': [1000], 'units': {'temperature': '°C (degrees Celsius)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'temperature'}, {'column': 'deviceId'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the real-time temperature of all devices in the EnergyConsumption table suddenly increases to 1000 degrees Celsius, calculate the average real-time temperature (in degrees Celsius) of all devices, and identify the top 3 devices with the highest temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(1000) AS avg_temperature, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_temperature DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 335,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table'], 'relations': ['product_to_volume (Products.productId → Products.volume)'], 'intent': 'calculate_average_volume_and_top_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'volume': 'cubic meters (m³)', 'average': 'implied by volume column units'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'volume'}]}}\nA physical knowledge question is as follows:\nCalculate the average volume (in cubic meters) of all products in the Products table and identify the top 3 products with the largest volume.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(volume) AS avg_volume, productId, productName FROM Products GROUP BY productId, productName ORDER BY avg_volume DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 336,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['OrderDetails'], 'relations': [], 'intent': 'calculate_total_tax_per_product_and_rank_top5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'tax': 'currency (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}], 'tableinfo': {'ECommerce.OrderDetails': [{'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'tax', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['50.0', '75.0', '15.0']}]}}\nA mathematical logic question is as follows:\nCalculate the total tax amount for each product in the Orders table, sort them in descending order by tax amount, and find the top 5 products with the highest tax amounts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productId, SUM(tax) AS total_tax FROM Orders GROUP BY productId ORDER BY total_tax DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 337,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders', \"order status 'Shipped'\", \"payment method 'Alipay'\"], 'relations': ['Orders.orderStatus (column)', 'Orders.paymentMethod (column)'], 'intent': 'retrieve_orders_with_conditions', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'orderStatus'}, {'column': 'paymentMethod'}, {'column': 'orderDate'}]}}\nA common sense reasoning question is as follows:\nFind all orders in the Orders table where the order status is 'Shipped' and the payment method is 'Alipay', sorted by order date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已发货' AND paymentMethod = '支付宝' ORDER BY orderDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 338,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"logistics records with status 'Delivered'\"], 'relations': ['shipping_record_to_order (Shipping.orderId → Orders.orderId)'], 'intent': 'retrieve_delivery_records', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'shippingDate': 'date', 'actualDeliveryDate': 'date'}, 'foreign_keys': [{'fk_table': 'Shipping', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}], 'primary_keys': [{'pk_table': 'Shipping', 'pk_column': 'shippingId'}], 'tableinfo': {'ECommerce.Shipping': [{'column': 'orderId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '7', '1001']}, {'column': 'shippingDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 08:30:00']}, {'column': 'actualDeliveryDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-05 14:00:00']}]}}\nA hypothetical reasoning question is as follows:\nList the order ID, shipment date, and actual delivery date for all logistics records with a logistics status of \"Delivered,\" sorted by shipment date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT orderId, shippingDate, actualDeliveryDate FROM Shipping WHERE shippingStatus = '已签收' ORDER BY shippingDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 339,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total maintenance cost', 'number of devices', 'average purchase price'], 'relations': ['total_maintenance_cost (SUM(MaintenanceRecords.cost))', 'number_of_devices (COUNT(EnergyDevices.deviceId))', 'purchase_price_formula (total_maintenance_cost / number_of_devices)'], 'intent': 'calculate_average_purchase_price', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'currency': 'yuan (specified in question)', 'calculation': 'yuan/device (implied unit for average purchase price)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'cost'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA physical knowledge question is as follows:\nCalculate the average purchase price (in yuan) of all devices in the Devices table, assuming the purchase price is the total maintenance cost divided by the number of devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(cost) / COUNT(deviceId) AS avg_purchase_price FROM MaintenanceRecords;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 340,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords table', 'maintenance type', 'maintenance record count', 'top 3 maintenance types'], 'relations': ['record_count_per_type (maintenanceType → maintenanceId count)', 'sorted_by_quantity (count descending)', 'top_3_selection'], 'intent': 'analyze_maintenance_frequency_by_type', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'count': 'unitless integer (record count)', 'top_n': 'ordinal ranking (top 3)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'maintenanceType'}, {'column': 'maintenanceId'}]}}\nA mathematical logic question is as follows:\nCount the number of maintenance records for each maintenance type in the MaintenanceRecords table, sort them in descending order by quantity, and identify the top 3 maintenance types with the highest number of maintenance records.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT maintenanceType, COUNT(maintenanceId) AS maintenance_count FROM MaintenanceRecords GROUP BY maintenanceType ORDER BY maintenance_count DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 341,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', \"status 'disabled'\", \"location 'warehouse'\"], 'relations': ['device_to_status (Devices → status)', 'device_to_location (Devices → storageLocation)'], 'intent': 'retrieve_devices_with_status_and_location', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'status'}, {'column': 'storageLocation'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table with a status of 'disabled' and located in the 'warehouse', sorted in ascending order by device name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE status = '停用' AND locationId IN (SELECT locationId FROM Locations WHERE locationName = '仓库') ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 342,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total maintenance cost 1,000,000 yuan', 'average purchase price', 'device with highest purchase price'], 'relations': ['maintenance_cost_to_device_count', 'device_to_purchase_price'], 'intent': 'calculate_average_purchase_price_and_find_max_device', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000], 'units': {'cost': 'yuan', 'price': 'yuan'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'cost'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the total maintenance cost of all devices in the Devices table suddenly increases to 1,000,000 yuan, calculate the average purchase price (in yuan) of all devices and find the device with the highest purchase price.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(1000000) / COUNT(deviceId) AS avg_purchase_price, deviceId FROM MaintenanceRecords GROUP BY deviceId ORDER BY avg_purchase_price DESC LIMIT 1;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 343,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiment name', 'measured value', 'environmental temperature', 'collection time', '30 degrees Celsius'], 'relations': ['experiment_to_data (Experiments.experimentId → ExperimentData.experimentId)', 'temperature_filter (environmental temperature > 30°C)'], 'intent': 'retrieve_filtered_experimental_data', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [30], 'units': {'temperature': '°C (Celsius)'}, 'foreign_keys': [{'fk_table': 'ExperimentData', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'ExperimentData', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}, {'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'ExperimentData', 'pk_column': 'dataId'}, {'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}], 'PhysicsLabDB.ExperimentData': [{'column': 'measurementValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.34', '56.78', '0.45', '98.76', '1.75']}, {'column': 'environmentalConditions', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['温度: 25°C, 湿度: 50%', '温度: 22°C, 湿度: 45%', '温度: 20°C, 湿度: 40%', '温度: 23°C, 湿度: 55%', '温度25°C,湿度40%']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-02 10:30:00']}]}}\nA physical knowledge question is as follows:\nFind the experiment name, measured value, environmental temperature, and collection time for all experimental data where the environmental temperature is above 30 degrees Celsius, sorted in descending order of environmental temperature.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.experimentName, ed.measurementValue, ed.environmentalConditions, ed.timestamp FROM ExperimentData ed JOIN Experiments e ON ed.experimentId = e.experimentId WHERE ed.environmentalConditions LIKE '%温度:3%' ORDER BY ed.environmentalConditions DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 344,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SensorData', 'sensorId', 'dataStatus'], 'relations': [\"sensorId_to_abnormal_data (sensorId → dataStatus='abnormal')\", 'proportion_calculation_per_sensor', 'top_3_sensors_selection'], 'intent': 'calculate_abnormal_data_ratio_per_sensor', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': ['abnormal_count', 'total_count', 'proportion_ratio'], 'units': {'data_status': 'categorical (abnormal/normal)', 'proportion': 'unitless ratio (abnormal_count / total_count)'}, 'foreign_keys': [{'fk_table': 'SensorData', 'fk_column': 'sensorId', 'ref_table': 'Sensors', 'ref_column': 'sensorId'}], 'primary_keys': [{'pk_table': 'SensorData', 'pk_column': 'dataId'}], 'tableinfo': {'SmartHomeDB.SensorData': [{'column': 'sensorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'dataStatus', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['正常', '异常']}]}}\nA mathematical logic question is as follows:\nCalculate the proportion of abnormal data (where dataStatus is 'abnormal') for each sensor in the SensorData table, sort them in descending order by proportion, and identify the top 3 sensors with the highest abnormal data ratio.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT sensorId, COUNT(dataId) * 1.0 / (SELECT COUNT(dataId) FROM SensorData WHERE sensorId = s.sensorId) AS anomaly_ratio FROM SensorData s WHERE dataStatus = '异常' GROUP BY sensorId ORDER BY anomaly_ratio DESC LIMIT 3;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 345,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'Entertainment', 'Online'], 'relations': [], 'intent': 'retrieve_devices_with_criteria', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceType'}, {'column': 'status'}, {'column': 'deviceName'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the device type is 'Entertainment' and the status is 'Online', sorted by device name in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE deviceType = '娱乐' AND status = '在线' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 346,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption table', 'real-time humidity', 'average real-time humidity 100%', 'top 3 devices'], 'relations': ['device_to_humidity (EnergyConsumption → humidity)', 'humidity_increase (assumed to 100%)'], 'intent': 'calculate_average_and_top3_humidity', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100], 'units': {'humidity': '% (percentage)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'humidity'}, {'column': 'deviceId'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the real-time humidity of all devices in the EnergyConsumption table suddenly increases to 100%, calculate the average real-time humidity (in percentage) for all devices, and identify the top 3 devices with the highest humidity.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(100) AS avg_humidity, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_humidity DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 347,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'product price', 'average price', 'top 3 highest priced products'], 'relations': ['table_to_price_column (Products → price)', 'price_aggregation (average calculation)', 'price_ranking (top 3 selection)'], 'intent': 'calculate_average_price_and_find_top_priced_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'price': 'yuan (CNY)', 'ranking': 'top 3 (ordinal ranking)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'price'}]}}\nA physical knowledge question is as follows:\nCalculate the average price (in yuan) of all products in the Products table, and find the top 3 products with the highest prices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(price) AS avg_price, productId, productName FROM Products GROUP BY productId, productName ORDER BY avg_price DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 348,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['user', 'order discount', 'total discount amount'], 'relations': ['user_to_orders (userId → Orders)', 'order_discount_to_user (Orders.discount → user)'], 'intent': 'calculate_total_discount_per_user_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5], 'units': {'discount': 'currency unit (implied by Orders.discount field)', 'ranking': 'top 5 users'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Users', 'pk_column': 'userId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'userId'}, {'column': 'discount'}], 'ECommerce.Users': [{'column': 'userId'}]}}\nA mathematical logic question is as follows:\nCalculate the total discount amount for each user in the Orders table, sort by discount amount in descending order, and identify the top 5 users with the highest discount amounts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT userId, SUM(discount) AS total_discount FROM Orders GROUP BY userId ORDER BY total_discount DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 349,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders table', \"orderStatus 'Completed'\", \"paymentMethod 'Credit Card'\"], 'relations': [\"Orders.orderStatus = 'Completed'\", \"Orders.paymentMethod = 'Credit Card'\"], 'intent': 'retrieve_orders_with_criteria', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'orderDate': 'DATE (ascending sort)', 'orderStatus': 'VARCHAR(255)', 'paymentMethod': 'VARCHAR(255)'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'orderDate'}, {'column': 'orderStatus'}, {'column': 'paymentMethod'}]}}\nA common sense reasoning question is as follows:\nFind all orders in the Orders table where the order status is 'Completed' and the payment method is 'Credit Card', and sort them in ascending order by order date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已完成' AND paymentMethod = '信用卡' ORDER BY orderDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 350,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'price 100,000 yuan'], 'relations': ['product_price_uniform_value (all products share the same price)'], 'intent': 'calculate_average_price_and_top_3_most_expensive_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [100000], 'units': {'price': 'yuan (CNY)', 'average': 'yuan (CNY)', 'top_products': 'yuan (CNY)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'price'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the price of all products in the Products table suddenly increases to 100,000 yuan, calculate the average price of all products (in yuan) and identify the top 3 most expensive products.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(100000) AS avg_price, productId, productName FROM Products GROUP BY productId, productName ORDER BY avg_price DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 351,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyDevices', 'MaintenanceRecords', 'average_maintenance_cost', 'top_3_devices'], 'relations': ['EnergyDevices.deviceId → MaintenanceRecords.deviceId', 'device_to_maintenance_costs'], 'intent': 'calculate_average_maintenance_cost_and_top_3_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'cost': 'yuan', 'conversion': '1 yuan = 1 (no conversion required)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}, {'column': 'deviceName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['Solar Panel 1', 'Wind Turbine 1', 'Gas Generator 1', 'TestDevice6', 'TestWindTurbine']}], 'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}]}}\nA physical knowledge question is as follows:\nCalculate the average maintenance cost (in yuan) of all devices in the Devices table and identify the top 3 devices with the highest maintenance costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(cost) AS avg_cost, deviceId FROM MaintenanceRecords GROUP BY deviceId ORDER BY avg_cost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 352,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['technicianName', 'cost'], 'relations': ['technician_to_total_cost (aggregation of maintenance costs per technician)'], 'intent': 'calculate_and_rank_total_maintenance_costs', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'cost': \"USD (currency, assumed from 'cost' column in MaintenanceRecords)\"}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'technicianName'}, {'column': 'cost'}]}}\nA mathematical logic question is as follows:\nCalculate the total maintenance cost for each technician in the MaintenanceRecords table, sort them in descending order by cost, and identify the top 3 technicians with the highest maintenance costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT technicianName, SUM(cost) AS total_cost FROM MaintenanceRecords GROUP BY technicianName ORDER BY total_cost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 353,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', \"status 'under maintenance'\", \"location 'laboratory'\"], 'relations': ['Devices.labId → Labs.labId (join condition)', \"Devices.status = 'under maintenance'\", \"Labs.labName = 'laboratory'\"], 'intent': 'retrieve_devices_with_status_and_location', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Labs', 'pk_column': 'labId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}, {'column': 'status'}, {'column': 'labId'}], 'PhysicsLabDB.Labs': [{'column': 'labName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学实验室', '量子物理实验室', '电磁学实验室', '热力学实验室', '高级物理实验室']}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table with a status of 'under maintenance' and located in the 'laboratory', sorted in ascending order by device name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE status = '维修中' AND locationId IN (SELECT locationId FROM Locations WHERE locationName = '实验室') ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 354,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords', 'EnergyDevices', 'maintenance cost 1,000,000 yuan', 'average maintenance cost', 'top 3 devices'], 'relations': ['MaintenanceRecords_to_EnergyDevices (deviceId → foreign key)', 'cost_update (all records → 1,000,000 yuan)', 'device_cost_aggregation (deviceId → cost per device)', 'average_calculation (total_cost_sum / total_device_count)', 'top_devices_ranking (ordered by cost_sum DESC)'], 'intent': 'calculate_average_maintenance_cost_and_top_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000000], 'units': {'cost': 'yuan', 'average': 'yuan/device (implied by calculation)', 'ranking': 'descending order of cost_sum'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}, {'fk_table': 'EnergyDevices', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'EnergyDevices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}], 'EnergyManagementDB.EnergyDevices': [{'column': 'deviceId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '6', '10', '11', '20']}]}}\nA hypothetical reasoning question is as follows:\nAssuming the cost of all maintenance records in the MaintenanceRecords table suddenly increases to 1,000,000 yuan, calculate the average maintenance cost of all devices (unit: yuan), and find the top 3 devices with the highest maintenance cost.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(1000000) AS avg_cost, deviceId FROM MaintenanceRecords GROUP BY deviceId ORDER BY avg_cost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 355,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiments', 'calculation results', 'computational formulas', 'units'], 'relations': ['experiment_to_calculation (Experiments.experimentId → Calculations.experimentId)'], 'intent': 'filter_and_sort_calculation_results', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1000], 'units': {'calculation_result': 'various units stored in Calculations.unit column', 'threshold': '1000 (dimensionless comparison baseline)'}, 'foreign_keys': [{'fk_table': 'Calculations', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Calculations', 'pk_column': 'calculationId'}, {'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}], 'PhysicsLabDB.Calculations': [{'column': 'result', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.0', '0.0', '42000.0', '4.38', '49.05']}, {'column': 'formula', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['V = IR', 'E = hν', 'F = qvB', 'Q = mcΔT', '并联电阻公式: 1/Req = Σ(1/Ri)']}, {'column': 'unit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['V', 'J', 'N', 'Ω', 'W']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中']}]}}\nA physical knowledge question is as follows:\nList all experimental names, calculation results, computational formulas, and units of calculation for records where the calculation result is greater than 1000 and the data quality is \"high,\" sorted in descending order by the calculation result.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.experimentName, c.result, c.formula, c.unit FROM Calculations c JOIN Experiments e ON c.experimentId = e.experimentId WHERE c.result > 1000 AND c.dataQuality = '高' ORDER BY c.result DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 356,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['SensorData', 'sensor intervals', 'sensors'], 'relations': ['sensorId_to_data (sensorId → SensorData entries)', 'timestamp_difference (consecutive timestamps per sensor)'], 'intent': 'calculate_time_intervals_and_rank_sensors', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'time_interval': 'seconds', 'calculation_method': 'TIMESTAMPDIFF(SECOND, previous_timestamp, current_timestamp)'}, 'foreign_keys': [{'fk_table': 'SensorData', 'fk_column': 'sensorId', 'ref_table': 'Sensors', 'ref_column': 'sensorId'}], 'primary_keys': [{'pk_table': 'SensorData', 'pk_column': 'dataId'}], 'tableinfo': {'SmartHomeDB.SensorData': [{'column': 'sensorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 08:00:00']}]}}\nA mathematical logic question is as follows:\nCalculate the data collection time interval (in seconds) for each sensor in the SensorData table, sort them in ascending order, and identify the top 3 sensors with the shortest collection intervals.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT sensorId, (strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp))) AS time_interval FROM SensorData GROUP BY sensorId ORDER BY time_interval ASC LIMIT 3;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 357,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'Lighting', 'Offline', 'deviceName'], 'relations': ['filter_by_deviceType (Devices → Lighting)', 'filter_by_status (Devices → Offline)', 'sort_by (Devices.deviceName → ascending)'], 'intent': 'filter_and_sort_devices_by_type_and_status', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'deviceType'}, {'column': 'status'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the device type is 'Lighting' and the status is 'Offline', sorted in ascending order by device name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE deviceType = '照明' AND status = '离线' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 358,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['manufacturers', 'annual revenue exceeding 10 million yuan'], 'relations': ['manufacturer_to_revenue (filter_condition)', 'manufacturer_to_contact_info'], 'intent': 'retrieve_manufacturer_contact_info_with_revenue_filter', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [10000000], 'units': {'revenue': 'yuan', 'currency': 'CNY'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'SmartHomeDB.Manufacturers': [{'column': 'manufacturerName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['SmartHome Inc.', 'GadgetWorks', 'ElectroTech']}, {'column': 'contactPerson', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['John Doe', 'Jane Smith', 'Alice Johnson']}, {'column': 'contactEmail', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': []}, {'column': 'contactPhone', 'type': 'VARCHAR(20)', 'primary_key': False, 'comment': '', 'examples': ['+1234567890', '+0987654321', '+1122334455']}, {'column': 'city', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['Tech City', 'Gadget Town', 'Electro City']}, {'column': 'annualRevenue'}]}}\nA hypothetical reasoning question is as follows:\nFind the names, contacts, and cities of all manufacturers with annual revenue exceeding 10 million yuan, and sort them in descending order by revenue.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT manufacturerName, contactPerson, city FROM Manufacturers WHERE revenue > 1000 ORDER BY revenue DESC;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 359,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'OrderDetails table', 'inventory turnover rate'], 'relations': ['Products_to_OrderDetails (productId → sales data)', 'turnover_rate_per_product (sales/inventory)'], 'intent': 'calculate_average_turnover_rate_and_identify_top_3_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'sales': 'currency (from OrderDetails.totalPrice)', 'inventory': 'units (from Products.stock)', 'turnover_rate': 'unitless (sales per inventory unit)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}, {'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}, {'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.OrderDetails': [{'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'totalPrice', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['999.99', '1499.99', '299.99']}], 'ECommerce.Products': [{'column': 'productId'}, {'column': 'stock'}]}}\nA physical knowledge question is as follows:\nCalculate the average inventory turnover rate (assuming the turnover rate is sales divided by inventory) for all products in the Products table, and identify the top 3 products with the highest turnover rates.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productId, SUM(quantity) / stock AS turnover_rate FROM Orders GROUP BY productId ORDER BY turnover_rate DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 360,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['product', 'shipping cost', 'Orders table'], 'relations': ['product_to_shipping_cost (aggregation)', 'order_to_product (via OrderDetails)'], 'intent': 'calculate_total_shipping_cost_per_product_sort_and_rank', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'shipping_cost': 'currency (implied by database schema)', 'aggregation': 'sum_of_shipping_fees'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}, {'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}, {'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.OrderDetails': [{'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'shippingFee', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '15.0', '5.0']}], 'ECommerce.Products': [{'column': 'productName'}]}}\nA mathematical logic question is as follows:\nCalculate the total shipping cost for each product in the Orders table, sort them in descending order by shipping cost, and find the top 5 products with the highest shipping costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productId, SUM(shippingFee) AS total_shipping_fee FROM Orders GROUP BY productId ORDER BY total_shipping_fee DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 361,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Reviews table', 'Products table'], 'relations': ['Reviews.productId → Products.productId', 'rating > 4 filter'], 'intent': 'retrieve_reviews_with_high_rating', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [4], 'units': {'rating': 'scale of 1-5 (assumed based on typical review systems)'}, 'foreign_keys': [{'fk_table': 'Reviews', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}, {'fk_table': 'Reviews', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}], 'primary_keys': [{'pk_table': 'Reviews', 'pk_column': 'reviewId'}], 'tableinfo': {'ECommerce.Reviews': [{'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'rating', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['5', '4', '3']}, {'column': 'reviewText', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['Great phone with excellent features!', 'Good laptop, but a bit heavy.', 'Average smartwatch, battery life could be better.']}]}}\nA common sense reasoning question is as follows:\nFind the product ID, rating, and review content of all evaluation records with ratings greater than 4, and sort them in descending order by rating.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productId, rating, reviewText FROM Reviews WHERE rating > 4 ORDER BY rating DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 362,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Percentage Discount', 'Enabled', 'discount records'], 'relations': [\"discountType_filter (discountType = 'Percentage Discount')\", \"status_filter (status = 'Enabled')\"], 'intent': 'retrieve_discount_records_matching_criteria', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'discount_value': 'percentage (implied by discountType)'}, 'foreign_keys': [{'fk_table': 'Discounts', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}], 'primary_keys': [{'pk_table': 'Discounts', 'pk_column': 'discountId'}], 'tableinfo': {'ECommerce.Discounts': [{'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'discountValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['10.0', '100.0', '5.0', '50.0', '15.0']}, {'column': 'description', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['10% off on Smartphone X', '$100 off on Laptop Pro', '5% off on Smartwatch 3', '$50 off on Smartphone X', '15% off on Laptop Pro']}]}}\nA hypothetical reasoning question is as follows:\nList all discount records with a discount type of \"Percentage Discount\" and a discount status of \"Enabled,\" including the product ID, discount value, and discount description, sorted in descending order by the discount value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productId, discoutValue, description FROM Discounts WHERE discoutType = '百分比折扣' AND status = '启用' ORDER BY discoutValue DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 363,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders', 'total_amount', 'Alipay'], 'relations': ['order_to_amount (orderId → totalAmount)', 'order_to_payment_method (orderId → paymentMethod)'], 'intent': 'list_orders_with_conditions', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000], 'units': {'amount': 'yuan (CNY)', 'conversion': 'threshold comparison (5000 yuan)'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'totalAmount'}, {'column': 'paymentMethod'}]}}\nA physical knowledge question is as follows:\nList the order ID, total order amount, and payment method for all orders where the total amount exceeds 5,000 yuan and the payment method is \"Alipay,\" sorted in descending order by the total order amount.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT orderId, totalAmount, paymentMethod FROM Orders WHERE totalAmount > 5000 AND paymentMethod = '支付宝' ORDER BY totalAmount DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 364,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Electronics category', 'product weight < 1kg', 'listing date'], 'relations': ['product_to_category (category=Electronics)', 'product_weight_constraint (weight<1kg)'], 'intent': 'retrieve_product_details', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [1], 'units': {'weight': 'kg (kilograms)', 'listing_date': 'date format (YYYY-MM-DD)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productName'}, {'column': 'price'}, {'column': 'creationDate'}, {'column': 'category'}, {'column': 'weight'}]}}\nA mathematical logic question is as follows:\nRetrieve the names, prices, and listing dates of all products with the category \"Electronics\" that weigh less than 1 kilogram, sorted by listing date in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT productName, price, creationDate FROM Products WHERE category = '电子产品' AND weight < 1 ORDER BY creationDate DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 365,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['variables', 'experiments'], 'relations': ['variables_to_experiments (Variables.experimentId → Experiments.experimentId)'], 'intent': 'filter_and_sort_variables_with_high_data_quality', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [50], 'units': {'initial_value': 'value (generic)', 'threshold': '50 (numerical filter)', 'data_quality': 'high (categorical filter)'}, 'foreign_keys': [{'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Variables', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}], 'primary_keys': [{'pk_table': 'Experiments', 'pk_column': 'experimentId'}, {'pk_table': 'Variables', 'pk_column': 'variableId'}], 'tableinfo': {'PhysicsLabDB.Variables': [{'column': 'variableName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光强', '量子态', '磁场强度', '温差', 'A']}, {'column': 'initialValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['100.0', '0.5', '10.0', '20.0', '28750.0']}, {'column': 'unit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['lux', 'probability', 'T', '°C', '无量纲']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中']}], 'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}]}}\nA common sense reasoning question is as follows:\nFind the variable names, experiment names, initial values, and units for all variables where the initial value is greater than 50 and the data quality is \"high,\" sorted in descending order by initial value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT v.variableName, e.experimentName, v.initialValue, v.unit FROM Variables v JOIN Experiments e ON v.experimentId = e.experimentId WHERE v.initialValue > 50 AND v.dataQuality = '高' ORDER BY v.initialValue DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 366,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords', 'equipment ID', 'maintenance date', 'maintenance type', 'maintenance cost'], 'relations': ['filter_by_cost_threshold (cost > 5000 yuan)', 'sort_by_cost_descending'], 'intent': 'retrieve_filtered_maintenance_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [5000], 'units': {'cost': 'yuan (RMB)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'maintenanceDate'}, {'column': 'maintenanceType'}, {'column': 'cost'}]}}\nA hypothetical reasoning question is as follows:\nFind all maintenance records with a maintenance cost greater than 5,000 yuan, including the equipment ID, maintenance date, and maintenance type, sorted in descending order by maintenance cost.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, maintenanceDate, maintenanceType FROM MaintenanceRecords WHERE cost > 5000 ORDER BY cost DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 367,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices', 'Labs'], 'relations': ['Devices.labId → Labs.labId', 'Devices.status=fault', 'Labs.status=open'], 'intent': 'list_devices_with_fault_status_in_open_labs', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Labs', 'pk_column': 'labId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'status'}], 'PhysicsLabDB.Labs': [{'column': 'labName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学实验室', '量子物理实验室', '电磁学实验室', '热力学实验室', '高级物理实验室']}]}}\nA physical knowledge question is as follows:\nList the names of all devices with a status of \"fault\" located in labs with a status of \"open\", along with the lab names and device statuses, sorted in ascending order by device name.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, l.labName, d.status FROM Devices d JOIN Labs l ON d.labId = l.labId WHERE d.status = '故障' AND l.status = '开放' ORDER BY d.deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 368,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiments', 'objective', 'status'], 'relations': ['objective_contains_energy', 'status_is_completed'], 'intent': 'retrieve_experiments_with_energy_objective_and_completed_status', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}, {'column': 'objective', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['验证光的波动性', '验证量子纠缠', '验证法拉第定律', '验证傅里叶定律']}, {'column': 'startDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-01 10:00:00']}, {'column': 'endDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-15 18:00:00']}, {'column': 'status', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['已完成', '进行中']}]}}\nA mathematical logic question is as follows:\nFind the name, objective, start date, and end date of all experiments where the objective includes \"energy\" and the status is \"completed,\" sorted by end date in descending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT experimentName, objective, startDate, endDate FROM Experiments WHERE objective LIKE '%energy%' AND status = '已完成' ORDER BY endDate DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 369,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Security device type', 'Online status', 'Devices table'], 'relations': [\"device_type_filter (deviceType='Security')\", \"status_filter (status='Online')\"], 'intent': 'retrieve_devices_with_criteria', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceType'}, {'column': 'status'}, {'column': 'deviceName'}]}}\nA common sense reasoning question is as follows:\nFind all devices in the Devices table where the device type is 'Security' and the status is 'Online', sorted by device name in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE deviceType = '安防' AND status = '在线' ORDER BY deviceName ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 370,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['EnergyConsumption table devices', 'power factor 1.5'], 'relations': [\"device_power_factor (each device's power factor = 1.5)\"], 'intent': 'calculate_average_power_factor_and_top_3_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1.5], 'units': {'power_factor': 'unitless (PF)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'powerUsage'}, {'column': 'voltage'}, {'column': 'current'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the power factor of all devices in the EnergyConsumption table suddenly increases to 1.5, calculate the average power factor of all devices and identify the top 3 devices with the highest power factors.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(1.5) AS avg_power_factor, deviceId FROM EnergyConsumption GROUP BY deviceId ORDER BY avg_power_factor DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 371,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'delivery volume', 'cubic meters'], 'relations': ['Products_to_volume (productId → volume)'], 'intent': 'calculate_average_delivery_volume_and_top_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'volume': 'cubic meters (m³) as specified in the Products table'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'volume'}]}}\nA physical knowledge question is as follows:\nCalculate the average delivery volume (in cubic meters) of all products in the Products table, and identify the top 3 products with the largest delivery volumes.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(volume) AS avg_shipping_volume, productId, productName FROM Products GROUP BY productId, productName ORDER BY avg_shipping_volume DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 372,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['user', 'Orders table', 'tax amount'], 'relations': ['user_to_orders (user → Orders.userId)', 'tax_per_order (Orders.tax)'], 'intent': 'calculate_total_tax_per_user_and_rank_top_5', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'tax': 'currency unit (implied by database schema)'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'userId'}, {'column': 'tax'}]}}\nA mathematical logic question is as follows:\nCalculate the total tax amount for each user in the Orders table, sort them in descending order by tax amount, and identify the top 5 users with the highest tax amounts.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT userId, SUM(tax) AS total_tax FROM Orders GROUP BY userId ORDER BY total_tax DESC LIMIT 5;",
        "db_id": "ECommerce"
    },
    {
        "id": 373,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n```json\n{\n  \"entities\": [\"Orders table\", \"order status 'Completed'\", \"payment method 'Alipay'\"],\n  \"relations\": [\"Orders_to_Payments (orderId relationship)\", \"Orders_to_Users (userId relationship)\"],\n  \"intent\": \"filter_orders_by_status_and_payment_method\",\n  \"reasoning_type\": \"mathematical logic reasoning\",\n  \"numerical_values\": [],\n  \"units\": {\n    \"order_date\": \"date type (no conversion needed)\",\n    \"status_values\": \"text match ('Completed', 'Alipay')\"\n  },\n  \"required_tables\": [\"Orders\"],\n  \"required_fields\": [\n    \"Orders.orderId\",\n    \"Orders.orderDate\",\n    \"Orders.orderStatus\",\n    \"Orders.paymentMethod\"\n  ]\n}\n```\nA common sense reasoning question is as follows:\nFind all orders in the Orders table where the order status is 'Completed' and the payment method is 'Alipay', sorted by order date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已完成' AND paymentMethod = '支付宝' ORDER BY orderDate ASC;",
        "db_id": "ECommerce"
    },
    {
        "id": 374,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products table', 'delivery volume', '1000 cubic meters', 'average delivery volume', 'top 3 products'], 'relations': ['Products.delivery_volume_to_volume_column', 'delivery_volume_set_to_1000', 'average_computation', 'ranking_for_top_products'], 'intent': 'calculate_average_and_top_products', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [1000, 3], 'units': {'volume': 'cubic meters'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'productName'}, {'column': 'volume'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the delivery volume of all products in the Products table suddenly increases to 1000 cubic meters, calculate the average delivery volume (in cubic meters) of all products and identify the top 3 products with the largest delivery volume.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(1000) AS avg_shipping_volume, productId, productName FROM Products GROUP BY productId, productName ORDER BY avg_shipping_volume DESC LIMIT 3;",
        "db_id": "ECommerce"
    },
    {
        "id": 375,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Devices table', 'MaintenanceRecords table', 'average maintenance interval', 'top 3 shortest intervals'], 'relations': ['device_to_maintenance_records (deviceId → maintenance records)', 'interval_calculation (maintenanceDate differences)'], 'intent': 'calculate_average_maintenance_interval_and_top_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'interval': 'days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}], 'PhysicsLabDB.MaintenanceRecords': [{'column': 'maintenanceDate'}]}}\nA physical knowledge question is as follows:\nCalculate the average maintenance interval (in days) for all devices in the Devices table, and identify the top 3 devices with the shortest maintenance intervals.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(julianday(nextMaintenanceDate) - julianday(lastMaintenanceDate)) AS avg_interval, deviceId FROM Devices GROUP BY deviceId ORDER BY avg_interval ASC LIMIT 3;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 376,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords', 'device', 'maintenance cost'], 'relations': ['device_to_maintenance_records (deviceId → maintenanceId)', 'cost_aggregation (sum of cost per device)'], 'intent': 'calculate_total_maintenance_costs_and_rank_devices', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [3], 'units': {'cost': 'currency unit (from MaintenanceRecords.cost field)', 'ranking': 'top N selection (N=3)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'deviceId'}, {'column': 'cost'}]}}\nA mathematical logic question is as follows:\nCalculate the total maintenance cost for each device in the MaintenanceRecords table, sort them in descending order by cost, and identify the top 3 devices with the highest maintenance costs.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceId, SUM(cost) AS total_cost FROM MaintenanceRecords GROUP BY deviceId ORDER BY total_cost DESC LIMIT 3;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 377,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['spectrometer', 'calibration date after 2022'], 'relations': ['device_to_lab (Devices.labId → Labs.labId)', \"device_type_filter (Devices.deviceType = 'spectrometer')\", 'calibration_date_filter (calibrationDate > 2022)'], 'intent': 'retrieve_and_sort_device_calibration_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2022], 'units': {'calibrationDate': 'date format (YYYY-MM-DD, implied by database schema)', 'sorting': 'ascending order (chronological)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'Labs', 'pk_column': 'labId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceName'}, {'column': 'calibrationDate'}, {'column': 'status'}], 'PhysicsLabDB.Labs': [{'column': 'labName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['光学实验室', '量子物理实验室', '电磁学实验室', '热力学实验室', '高级物理实验室']}]}}\nA common sense reasoning question is as follows:\nList the name, calibration date, laboratory name, and status of all devices with the type \"spectrometer\" that were calibrated after 2022, sorted by calibration date in ascending order.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT d.deviceName, d.calibrationDate, l.labName, d.status FROM Devices d JOIN Labs l ON d.labId = l.labId WHERE d.deviceType = '光谱仪' AND d.calibrationDate > '2022-01-01' ORDER BY d.calibrationDate ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 378,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance interval 0 days'], 'relations': ['device_to_interval (deviceId → maintenance_interval)', 'average_interval (0 days)', 'shortest_interval (0 days)'], 'intent': 'calculate_average_maintenance_interval_and_identify_shortest_device', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [0], 'units': {'interval': 'days'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'lastMaintenanceDate'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the maintenance interval for all devices in the Devices table suddenly shortens to 0 days, calculate the average maintenance interval for all devices (in days) and identify the device with the shortest maintenance interval.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(0) AS avg_interval, deviceId FROM Devices GROUP BY deviceId ORDER BY avg_interval ASC LIMIT 1;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 379,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['experiment data', 'measurement value', 'equipment', 'data quality'], 'relations': ['ExperimentData_to_Experiments (experimentId)', 'ExperimentData_to_Devices (deviceId)', \"data_quality_filter (dataQuality = 'low')\", 'measurement_value_filter (measurementValue < 50)'], 'intent': 'retrieve_filtered_experimental_data', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [50], 'units': {'measurement': 'units defined in ExperimentData.unit', 'time': 'timestamp format from ExperimentData.timestamp'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'ExperimentData', 'fk_column': 'experimentId', 'ref_table': 'Experiments', 'ref_column': 'experimentId'}, {'fk_table': 'ExperimentData', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}, {'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'ExperimentData', 'pk_column': 'dataId'}, {'pk_table': 'Experiments', 'pk_column': 'experimentId'}], 'tableinfo': {'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}], 'PhysicsLabDB.ExperimentData': [{'column': 'measurementValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['12.34', '56.78', '0.45', '98.76', '1.75']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-02 10:30:00']}, {'column': 'dataQuality', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['高', '中', '低']}], 'PhysicsLabDB.Devices': [{'column': 'deviceName'}]}}\nA mathematical logic question is as follows:\nFind the experiment names, measurement values, equipment names, and collection times from all experimental data where the data quality is \"low\" and the measurement value is less than 50, sorted in ascending order by measurement value.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT e.experimentName, ed.measurementValue, d.deviceName, ed.timestamp FROM ExperimentData ed JOIN Experiments e ON ed.experimentId = e.experimentId JOIN Devices d ON ed.deviceId = d.deviceId WHERE ed.dataQuality = '低' AND ed.measurementValue < 50 ORDER BY ed.measurementValue ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 380,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'warranty period', 'current date', 'device status'], 'relations': ['device_to_warranty_end_date (Devices.warrantyEndDate)', 'device_to_status (Devices.status)', 'warranty_comparison (warrantyEndDate < current date)', \"usage_status_check (status = 'in use')\"], 'intent': 'identify_out_of_warranty_equipment_still_in_use', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': ['current_date (dynamic value)'], 'units': {'dates': 'YYYY-MM-DD (ISO format)', 'status_values': \"enumerated values like 'in use', 'decommissioned', etc.\"}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceId'}, {'column': 'deviceName'}, {'column': 'warrantyEndDate'}, {'column': 'status'}, {'column': 'purchaseDate'}]}}\nA common sense reasoning question is as follows:\nFind equipment that has passed the warranty period but is still in use.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE warrantyExpiryDate < DATE('now') AND status = '运行中';",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 381,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['assumption', 'experiment', 'validation_date', 'researcher'], 'relations': ['assumption_to_experiment (hypothesis_id → experiment_id)', 'experiment_to_researcher (experiment_id → researcher_id)'], 'intent': 'retrieve_validated_assumptions_with_criteria', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [2022], 'units': {'validation_date': 'YYYY-MM-DD (date format)', 'validation_result': \"boolean string ('true')\"}, 'foreign_keys': [{'fk_table': 'Experiments', 'fk_column': 'researcherId', 'ref_table': 'Researchers', 'ref_column': 'researcherId'}, {'fk_table': 'Experiments', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Hypotheses', 'fk_column': 'hypothesisId', 'ref_table': 'Experiments', 'ref_column': 'hypothesisId'}], 'primary_keys': [{'pk_table': 'Experiments', 'pk_column': 'experimentId'}, {'pk_table': 'Hypotheses', 'pk_column': 'hypothesisId'}, {'pk_table': 'Researchers', 'pk_column': 'researcherId'}], 'tableinfo': {'PhysicsLabDB.Hypotheses': [{'column': 'hypothesisText', 'type': 'TEXT', 'primary_key': False, 'comment': '', 'examples': ['光具有波动性', '量子纠缠存在', '电磁感应与磁场变化相关', '热传导速率与温差成正比', '温度超过30000K时材料会汽化']}, {'column': 'verificationDate', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-03-15 18:00:00']}], 'PhysicsLabDB.Experiments': [{'column': 'experimentName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['双缝实验', '量子纠缠实验', '电磁感应实验', '热传导实验', '极端条件模拟实验']}], 'PhysicsLabDB.Researchers': [{'column': 'researcherName', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['张三', '李四', '王五', '赵六', '王研究员']}]}}\nA hypothetical reasoning question is as follows:\nList all assumptions with a validation result of \"true\" and a validation date after 2022, including the assumption content, experiment name, validation date, and researcher name, sorted in ascending order by the validation date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT h.hypothesisText, e.experimentName, h.verificationDate, r.researcherName FROM Hypotheses h JOIN Experiments e ON h.experimentId = e.experimentId JOIN Researchers r ON e.researcherId = r.researcherId WHERE h.verificationResult = '真' AND h.verificationDate > '2022-01-01' ORDER BY h.verificationDate ASC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 382,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment type', 'average energy consumption'], 'relations': ['device_type_to_device (DeviceTypes → Devices)', 'device_to_energy_consumption (Devices → EnergyConsumption)'], 'intent': 'statistical_analysis_of_average_energy_consumption_by_type', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'energy_consumption': 'kWh (implied by EnergyConsumption table schema)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'DeviceTypes', 'pk_column': 'deviceType'}, {'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyConsumption', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.DeviceTypes': [{'column': 'deviceType', 'type': 'VARCHAR(255)', 'primary_key': True, 'comment': '', 'examples': ['光设备', '光谱仪', '其他', '示波器']}], 'PhysicsLabDB.Devices': [{'column': 'deviceId'}], 'PhysicsLabDB.EnergyConsumption': [{'column': 'energyConsumed'}]}}\nA mathematical logic question is as follows:\nStatistics on the average energy consumption of each type of equipment, sorted in descending order of energy consumption.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, AVG(measurementValue) AS Avg_Energy_Consumption FROM Devices JOIN ExperimentData ON Devices.deviceId = ExperimentData.deviceId GROUP BY deviceType ORDER BY Avg_Energy_Consumption DESC;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 383,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['temperature sensor data', 'threshold 50℃', 'threshold -20℃'], 'relations': ['sensor_data_to_type (SensorData → Sensors.sensorType)', 'value_comparison_threshold (dataValue > 50℃ OR dataValue < -20℃)'], 'intent': 'identify_abnormal_sensor_records', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [50, -20], 'units': {'temperature': '℃ (Celsius)', 'unit_validation': \"SensorData.dataUnit should match '℃'\"}, 'foreign_keys': [{'fk_table': 'SensorData', 'fk_column': 'sensorId', 'ref_table': 'Sensors', 'ref_column': 'sensorId'}, {'fk_table': 'Sensors', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'SensorData', 'pk_column': 'dataId'}, {'pk_table': 'Sensors', 'pk_column': 'sensorId'}], 'tableinfo': {'SmartHomeDB.SensorData': [{'column': 'dataId', 'type': 'INTEGER', 'primary_key': True, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'sensorId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'dataValue', 'type': 'DECIMAL(10, 2)', 'primary_key': False, 'comment': '', 'examples': ['25.0', '55.0', '60.0']}, {'column': 'dataUnit', 'type': 'VARCHAR(50)', 'primary_key': False, 'comment': '', 'examples': ['摄氏度', '百分比', 'Hz']}, {'column': 'timestamp', 'type': 'DATETIME', 'primary_key': False, 'comment': '', 'examples': ['2023-10-01 08:00:00']}, {'column': 'dataStatus', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['正常', '异常']}], 'SmartHomeDB.Sensors': [{'column': 'sensorType', 'type': 'VARCHAR(100)', 'primary_key': False, 'comment': '', 'examples': ['温度传感器', '湿度传感器', '震动传感器']}]}}\nA common sense reasoning question is as follows:\nFind abnormal records where the temperature sensor data exceeds 50℃ or falls below -20℃.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM SensorData WHERE dataValue > 50 OR dataValue < -20;",
        "db_id": "SmartHomeDB"
    },
    {
        "id": 384,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Energy consumption increase (20%)', 'Electricity cost calculation', 'All devices'], 'relations': ['device_to_energy_consumption (EnergyDevices.deviceId → EnergyConsumption.deviceId)', 'percentage_increase (20%)', 'total_annual_cost (sum over adjusted energy consumption)'], 'intent': 'calculate_total_annual_electricity_cost_after_increase', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20], 'units': {'percentage_increase': '%', 'energy_consumption': 'kWh (assumed from EnergyConsumption.energyConsumed)', 'cost': 'currency (implied by context, though not explicitly defined in schema)'}, 'foreign_keys': [{'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'EnergyConsumption', 'pk_column': 'consumptionId'}], 'tableinfo': {'EnergyManagementDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}, {'column': 'timestamp'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the energy consumption of all devices increases by 20%, calculate the total annual electricity cost.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT ed.deviceType, AVG(ec.energyConsumed) AS avg_energy_consumption FROM EnergyConsumption ec JOIN EnergyDevices ed ON ec.deviceId = ed.deviceId GROUP BY ed.deviceType ORDER BY avg_energy_consumption DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 385,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['total weight of goods', 'products', 'orders', 'shipping status'], 'relations': ['product_to_order_details (productId → OrderDetails)', 'order_to_shipping (orderId → Shipping)', 'weight_calculation (quantity × weight)'], 'intent': 'calculate_total_weight_of_shipped_goods', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'weight': 'kg (kilograms)', 'quantity': 'unit count'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}, {'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}, {'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}, {'fk_table': 'Shipping', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}, {'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Products', 'pk_column': 'productId'}, {'pk_table': 'Shipping', 'pk_column': 'shippingId'}], 'tableinfo': {'ECommerce.OrderDetails': [{'column': 'quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1']}, {'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'orderId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}], 'ECommerce.Products': [{'column': 'productId'}, {'column': 'weight'}], 'ECommerce.Orders': [{'column': 'orderId'}], 'ECommerce.Shipping': [{'column': 'orderId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '7', '1001']}, {'column': 'shippingStatus', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['已签收', '已发货']}]}}\nA physical knowledge question is as follows:\nCalculate the total weight of goods transported (unit: kilograms).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(weight) AS total_weight FROM Products;",
        "db_id": "ECommerce"
    },
    {
        "id": 386,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Users', 'Orders'], 'relations': ['Users.userId → Orders.userId'], 'intent': 'aggregate_total_spending_per_user_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'currency': 'implied by Orders.totalAmount (no explicit conversion required)'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Users', 'pk_column': 'userId'}], 'tableinfo': {'ECommerce.Users': [{'column': 'userId'}], 'ECommerce.Orders': [{'column': 'userId'}, {'column': 'totalAmount'}]}}\nA mathematical logic question is as follows:\nCount the total spending amount for each user and sort them in descending order by the amount.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT userId, SUM(totalAmount) AS total_spent FROM Orders GROUP BY userId ORDER BY total_spent DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 387,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': [\"order status 'completed'\", 'payment status not successful'], 'relations': ['order_to_payment (Orders.orderId → Payments.orderId)'], 'intent': 'find_inconsistent_order_payment_records', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}, {'fk_table': 'Payments', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Payments', 'pk_column': 'paymentId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'orderStatus'}], 'ECommerce.Payments': [{'column': 'paymentStatus', 'type': 'ENUM', 'primary_key': False, 'comment': '', 'examples': ['成功', '失败']}, {'column': 'orderId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '6']}]}}\nA common sense reasoning question is as follows:\nFind records where the order status is 'completed' but the payment was not successful.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已完成' AND paymentStatus != '成功';",
        "db_id": "ECommerce"
    },
    {
        "id": 388,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['weight of all goods', '50% increase', 'total shipping weight'], 'relations': ['weight_increase (original weight → 1.5× weight)', 'total_weight_calculation (sum of adjusted weights × stock)'], 'intent': 'calculate_total_shipping_weight_after_increase', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [50], 'units': {'weight': 'weight units (as defined in Products.weight)', 'percentage': 'percent (%)', 'quantity': 'unitless (stock count)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'weight'}, {'column': 'stock'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the weight of all goods increases by 50%, calculate the total shipping weight.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(weight * 1.5) AS total_weight FROM Products;",
        "db_id": "ECommerce"
    },
    {
        "id": 389,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['maintenance instances', 'device (product)'], 'relations': ['product_to_maintenance_orders (via OrderDetails.productId→Orders.orderId)'], 'intent': 'count_maintenance_instances_per_device_and_sort_desc', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'count': 'integer'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}, {'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}, {'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}, {'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'maintenanceDate'}], 'ECommerce.OrderDetails': [{'column': 'orderId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}], 'ECommerce.Products': [{'column': 'productId'}]}}\nA mathematical logic question is as follows:\nCount the number of maintenance instances for each device, and sort them in descending order by the count.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT o.orderId, o.orderStatus, p.paymentStatus FROM Orders o JOIN Payments p ON o.orderId = p.orderId WHERE o.orderStatus = '已完成' AND p.paymentStatus != '成功';",
        "db_id": "ECommerce"
    },
    {
        "id": 390,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['device records', 'purchase dates in the future'], 'relations': ['device_to_purchase_date (device record → purchaseDate)'], 'intent': 'retrieve_device_records_with_future_purchase_date', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'date': 'date format (YYYY-MM-DD, implied by context)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'purchaseDate'}]}}\nA common sense reasoning question is as follows:\nFind device records with purchase dates in the future.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE purchaseDate > DATE('now');",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 391,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['deviceType', 'status'], 'relations': ['deviceType_to_devices'], 'intent': 'statistics_status_distribution', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': ['count_of_devices_per_status'], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}], 'primary_keys': [{'pk_table': 'DeviceTypes', 'pk_column': 'deviceType'}, {'pk_table': 'Devices', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.Devices': [{'column': 'deviceType'}, {'column': 'status'}], 'PhysicsLabDB.DeviceTypes': [{'column': 'deviceType', 'type': 'VARCHAR(255)', 'primary_key': True, 'comment': '', 'examples': ['光设备', '光谱仪', '其他', '示波器']}]}}\nA mathematical logic question is as follows:\nStatistics on the status distribution (online, offline, malfunction) for each type of equipment.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT deviceType, status, COUNT(deviceId) AS device_count FROM Devices GROUP BY deviceType, status;",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 392,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['energy consumption records', 'offline devices'], 'relations': ['record_to_device (EnergyConsumption.deviceId → Devices.deviceId)', 'device_to_status (Devices.status field)'], 'intent': 'identify_data_contradictions_in_energy_consumption', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'EnergyConsumption', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'EnergyConsumption', 'pk_column': 'deviceId'}], 'tableinfo': {'PhysicsLabDB.EnergyConsumption': [{'column': 'deviceId'}, {'column': 'energyConsumed'}], 'PhysicsLabDB.Devices': [{'column': 'status'}]}}\nA common sense reasoning question is as follows:\nIdentify contradictory data in energy consumption records generated by offline devices.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Devices WHERE status = '故障' AND deviceId IN (SELECT deviceId FROM ExperimentData WHERE timestamp > DATE('now'));",
        "db_id": "PhysicsLabDB"
    },
    {
        "id": 393,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['goods transported', 'product volume', 'order quantity'], 'relations': ['product_to_order (productId → OrderDetails)', 'quantity_times_volume (calculation)'], 'intent': 'calculate_total_volume_of_shipments', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'volume': 'cubic meters (m³)', 'quantity': 'unitless (items per order)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}, {'fk_table': 'OrderDetails', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}, {'fk_table': 'OrderDetails', 'fk_column': 'productId', 'ref_table': 'Products', 'ref_column': 'productId'}], 'primary_keys': [{'pk_table': 'OrderDetails', 'pk_column': 'detailId'}, {'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'productId'}, {'column': 'volume'}], 'ECommerce.OrderDetails': [{'column': 'productId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3']}, {'column': 'quantity', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1']}]}}\nA physical knowledge question is as follows:\nCalculate the total volume of goods transported (unit: cubic meters).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT SUM(volume) AS total_volume FROM Products;",
        "db_id": "ECommerce"
    },
    {
        "id": 394,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['product', 'sales volume'], 'relations': ['product_to_sales_volume'], 'intent': 'statistical_aggregation_and_sorting', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'sales_volume': 'unit_not_defined_in_database'}, 'foreign_keys': [], 'primary_keys': [{'pk_table': 'Manufacturers', 'pk_column': 'manufacturerId'}], 'tableinfo': {'EnergyManagementDB.Manufacturers': [{'column': 'manufacturerName'}, {'column': 'revenue'}]}}\nA mathematical logic question is as follows:\nStatistics the total sales volume for each product and sort them in descending order by sales volume.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM EnergyConsumption WHERE deviceId IN (SELECT deviceId FROM EnergyDevices WHERE status = '离线') AND energyConsumed > 0;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 395,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Orders', 'Shipping', 'orderStatus', 'trackingNumber'], 'relations': ['Orders_to_Shipping (Orders.orderId → Shipping.orderId)', \"status_condition (orderStatus = 'shipped')\", \"missing_tracking (trackingNumber IS NULL OR trackingNumber = '')\"], 'intent': 'find_missing_tracking_numbers_for_shipped_orders', 'reasoning_type': 'common sense understanding reasoning', 'numerical_values': [], 'units': {'status': 'string (textual status)', 'tracking_number': 'string (alphanumeric identifier)'}, 'foreign_keys': [{'fk_table': 'Orders', 'fk_column': 'userId', 'ref_table': 'Users', 'ref_column': 'userId'}, {'fk_table': 'Shipping', 'fk_column': 'orderId', 'ref_table': 'Orders', 'ref_column': 'orderId'}], 'primary_keys': [{'pk_table': 'Orders', 'pk_column': 'orderId'}, {'pk_table': 'Shipping', 'pk_column': 'shippingId'}], 'tableinfo': {'ECommerce.Orders': [{'column': 'orderId'}, {'column': 'orderStatus'}], 'ECommerce.Shipping': [{'column': 'trackingNumber', 'type': 'VARCHAR(255)', 'primary_key': False, 'comment': '', 'examples': ['TRK123456', 'TRK654321', 'TRK987654', 'NULL']}, {'column': 'orderId', 'type': 'INTEGER', 'primary_key': False, 'comment': '', 'examples': ['1', '2', '3', '7', '1001']}]}}\nA common sense reasoning question is as follows:\nFind records where the order status is 'shipped' but the tracking number has not been filled in.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders WHERE orderStatus = '已发货' AND trackingNumber IS NULL;",
        "db_id": "ECommerce"
    },
    {
        "id": 396,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['Products', 'volume', '20% increase'], 'relations': [\"product_volume_increase (applied to each product's volume)\"], 'intent': 'calculate_total_shipping_volume_after_increase', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [20], 'units': {'volume': 'unit^3 (implied by database schema)', 'percentage': '% (percentage increase)'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'volume'}]}}\nA hypothetical reasoning question is as follows:\nAssuming the volume of all products increases by 20%, calculate the total shipping volume.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT od.productId, SUM(od.quantity) AS total_sales FROM OrderDetails od GROUP BY od.productId ORDER BY total_sales DESC;",
        "db_id": "ECommerce"
    },
    {
        "id": 397,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['equipment', 'purchase date'], 'relations': ['equipment_to_purchase_date (Products.creationDate)'], 'intent': 'calculate_average_lifespan', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'lifespan': 'days (implied by current_date - creationDate)', 'average': 'unit per equipment'}, 'foreign_keys': [{'fk_table': 'Products', 'fk_column': 'manufacturerId', 'ref_table': 'Manufacturers', 'ref_column': 'manufacturerId'}], 'primary_keys': [{'pk_table': 'Products', 'pk_column': 'productId'}], 'tableinfo': {'ECommerce.Products': [{'column': 'creationDate'}]}}\nA physical knowledge question is as follows:\nCalculate the average lifespan of the equipment (assuming the lifespan is the current date minus the purchase date).\nyour response just have a SQL without anything.\n",
        "solution": "SELECT * FROM Orders o JOIN Shipping s ON o.orderId = s.orderId WHERE o.orderStatus = '已发货' AND s.trackingNumber IS NULL;",
        "db_id": "ECommerce"
    },
    {
        "id": 398,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['technician', 'maintenance records'], 'relations': ['technician_to_maintenance_records (technicianName → maintenanceId)'], 'intent': 'count_maintenance_records_per_technician_and_sort', 'reasoning_type': 'mathematical logic reasoning', 'numerical_values': [], 'units': {'count': 'unitless (record count)'}, 'foreign_keys': [{'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'EnergyDevices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'EnergyManagementDB.MaintenanceRecords': [{'column': 'technicianName'}, {'column': 'maintenanceId'}]}}\nA mathematical logic question is as follows:\nCount the number of maintenance records for each technician and sort them in descending order by the count.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT technicianName, COUNT(maintenanceId) AS maintenance_count FROM MaintenanceRecords GROUP BY technicianName ORDER BY maintenance_count DESC;",
        "db_id": "EnergyManagementDB"
    },
    {
        "id": 399,
        "problem": "You are now an expert in SQL statements. I will give you information about a database and subsequently ask you a question. All questions involve 4 types of questions: physical knowledge, mathematical logic, common sense reasoning, and hypothetical reasoning. When I ask you a question, I will tell you the type of the question.Please response me an SQL statement for that question. The database information is as follows:\n{'entities': ['MaintenanceRecords', 'Devices'], 'relations': ['MaintenanceRecords.deviceId → Devices.deviceId', 'maintenanceDate < purchaseDate'], 'intent': 'identify_data_inconsistencies', 'reasoning_type': 'common_sense_understanding_reasoning', 'numerical_values': [], 'units': {'date': 'date_format (assumed consistent between tables)'}, 'foreign_keys': [{'fk_table': 'Devices', 'fk_column': 'labId', 'ref_table': 'Labs', 'ref_column': 'labId'}, {'fk_table': 'Devices', 'fk_column': 'supplierId', 'ref_table': 'Suppliers', 'ref_column': 'supplierId'}, {'fk_table': 'Devices', 'fk_column': 'placeId', 'ref_table': 'Places', 'ref_column': 'placeId'}, {'fk_table': 'MaintenanceRecords', 'fk_column': 'deviceId', 'ref_table': 'Devices', 'ref_column': 'deviceId'}], 'primary_keys': [{'pk_table': 'Devices', 'pk_column': 'deviceId'}, {'pk_table': 'MaintenanceRecords', 'pk_column': 'maintenanceId'}], 'tableinfo': {'PhysicsLabDB.MaintenanceRecords': [{'column': 'maintenanceDate'}, {'column': 'deviceId'}], 'PhysicsLabDB.Devices': [{'column': 'purchaseDate'}, {'column': 'deviceId'}]}}\nA common sense reasoning question is as follows:\nFind contradictory data in maintenance records where the maintenance date is earlier than the purchase date.\nyour response just have a SQL without anything.\n",
        "solution": "SELECT AVG(DATEDIFF(NOW(), purchaseDate)) AS avg_lifespan FROM Devices;",
        "db_id": "PhysicsLabDB"
    }
]